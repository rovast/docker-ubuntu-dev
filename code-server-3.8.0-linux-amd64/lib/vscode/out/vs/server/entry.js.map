{"version":3,"sources":["vs/server/fake","vs/server/vs/base/common/performance.js","vs/server/vs/base/node/languagePacks.js","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/assert.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/decorators.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/errors.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/arrays.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/functional.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/iterator.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/json.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/jsonFormatter.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/jsonEdit.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/lifecycle.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/linkedList.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/event.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/cancellation.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/async.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/platform.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/process.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/path.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/processes.ts","vs/server/vs/base/common/semver/semver.js","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/stream.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/strings.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/buffer.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/severity.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/types.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/extpath.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/objects.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/uri.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/amd.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/console.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/marshalling.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/network.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/map.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/glob.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/normalization.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/resources.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/labels.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/uriIpc.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/uuid.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/node/decoder.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/node/macAddress.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/node/id.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/node/paths.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/node/pfs.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/node/extpath.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/node/proxy_agent.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/node/watcher.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/parts/ipc/common/ipc.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/parts/ipc/common/ipc.net.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/parts/ipc/node/ipc.net.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/actions.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/date.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/errorMessage.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/jsonErrorMessages.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/node/processes.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/parts/ipc/node/ipc.cp.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/debug/common/extensionHostDebugIpc.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/extensionManagement/common/extensionManagementIpc.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/extensionManagement/common/extensionNls.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/extensions/common/extensionValidator.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/files/node/watcher/nsfw/watcherService.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/files/node/watcher/unix/watcherService.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/files/node/watcher/win32/csharpWatcherService.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/files/node/watcher/win32/watcherService.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/instantiation/common/descriptors.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/instantiation/common/graph.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/instantiation/common/instantiation.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/contextkey/common/contextkey.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/download/common/download.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/environment/common/environment.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/code/electron-browser/sharedProcess/contrib/logsDataCleaner.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/extensionManagement/common/extensionManagement.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/extensions/common/extensions.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/extensionManagement/common/extensionManagementUtil.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/extensionManagement/node/extensionsManifestCache.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/files/common/files.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/files/common/io.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/files/node/watcher/watcher.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/files/node/watcher/nodejs/watcherService.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/instantiation/common/serviceCollection.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/instantiation/common/instantiationService.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/label/common/label.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/localizations/common/localizations.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/log/common/log.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/extensionManagement/node/extensionDownloader.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/extensionManagement/node/extensionLifecycle.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/files/common/fileService.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/files/node/diskFileSystemProvider.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/localizations/node/localizations.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/log/common/bufferLog.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/log/common/fileLogService.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/log/common/logIpc.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/log/node/spdlogService.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/log/node/loggerService.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/notification/common/notification.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/product/common/product.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/environment/node/environmentService.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/product/common/productService.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/registry/common/platform.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/jsonschemas/common/jsonContributionRegistry.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/configuration/common/configurationRegistry.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/configuration/common/configuration.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/configuration/common/configurationModels.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/configuration/common/configurationService.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/remote/common/remoteAuthorityResolver.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/remote/common/remoteHosts.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/request/common/request.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/request/common/requestIpc.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/request/node/proxy.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/serviceMachineId/common/serviceMachineId.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/state/node/state.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/state/node/stateService.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/storage/common/storage.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/telemetry/common/errorTelemetry.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/telemetry/browser/errorTelemetry.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/telemetry/common/telemetry.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/extensionManagement/common/extensionGalleryService.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/telemetry/common/telemetryService.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/telemetry/common/telemetryUtils.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/telemetry/common/telemetryLogAppender.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/telemetry/node/appInsightsAppender.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/telemetry/node/commonProperties.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/telemetry/node/telemetry.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/workspaces/common/workspaces.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/workspace/common/workspace.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/server/common/nodeProxy.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/server/common/telemetry.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/server/node/insights.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/server/node/logger.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/server/node/nls.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/server/node/connection.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/server/node/protocol.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/server/node/util.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/workbench/common/editor.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/workbench/contrib/terminal/common/environmentVariable.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/workbench/contrib/terminal/common/environmentVariableCollection.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/workbench/contrib/terminal/common/environmentVariableShared.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/workbench/contrib/terminal/common/terminal.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/workbench/contrib/terminal/common/terminalDataBuffering.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/workbench/contrib/terminal/common/terminalEnvironment.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/workbench/contrib/terminal/node/terminal.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/workbench/contrib/terminal/node/terminalEnvironment.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/workbench/contrib/terminal/node/terminalProcess.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/workbench/services/configurationResolver/common/configurationResolver.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/workbench/services/configurationResolver/common/variableResolver.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/workbench/services/editor/common/editorService.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/workbench/contrib/terminal/common/remoteTerminalChannel.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/workbench/services/extensions/common/extensionPoints.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/workbench/services/extensions/node/extensionPoints.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/server/node/channel.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/workbench/services/remote/common/remoteAgentFileSystemChannel.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/workbench/services/remote/common/remoteAgentService.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/node/zip.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/extensionManagement/node/extensionManagementUtil.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/extensionManagement/node/extensionsScanner.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/extensionManagement/node/extensionManagementService.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/server/node/marketplace.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/request/node/requestService.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/code/node/cliProcessMain.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/server/node/server.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/server/entry.ts"],"names":["sharedObj","__m","__M","deps","result","i","len","length","_factory","MonacoPerformanceMarks","_dataLen","_timeStamp","console","timeStamp","bind","mark","name","push","Date","now","getEntries","entries","startTime","getDuration","from","to","target","endIndex","importEntries","splice","exportEntries","slice","factory","nodeRequire","path","fs","perf","exists","file","Promise","c","rimraf","location","e","lstat","err","stats","then","stat","isDirectory","isSymbolicLink","dir","readdir","files","children","all","map","child","join","rmdir","undefined","unlink","code","readFile","resolve","reject","data","writeFile","content","getNLSConfiguration","commit","userDataPath","metaDataFile","locale","availableLanguages","pseudo","process","env","initialLocale","defaultResult","configs","configFile","JSON","parse","readFileSync","getLanguagePackConfigurations","config","index","lastIndexOf","substring","error","resolveLanguagePackLocale","packConfig","mainPack","hash","translations","fileExists","packId","cacheRoot","coreLocation","translationsConfigFile","corruptedFile","*","_languagePackId","_translationsConfigFile","_cacheRoot","_resolvedLanguagePackCoreLocation","_corruptedFile","corrupted","toDelete","d","utimes","touch","catch","mkdir","recursive","mkdirp","values","metadata","packData","contents","bundles","Object","keys","writes","bundle","modules","create","module","defaultMessages","messages","targetStrings","elem","translatedMessage","key","replace","stringify","exports","ok","value","message","Error","createDecorator","mapFn","descriptor","fnKey","fn","get","memoizeId","createMemoizer","memoizeKeyPrefix","self","warn","memoizeKey","args","this","hasOwnProperty","defineProperty","configurable","enumerable","writable","apply","clear","getOwnPropertyNames","forEach","property","indexOf","memoize","debounce","delay","reducer","initialValueProvider","timerKey","resultKey","clearTimeout","setTimeout","throttle","lastRunKey","pendingKey","Number","MAX_VALUE","nextTime","ErrorHandler","[object Object]","listeners","unexpectedErrorHandler","stack","listener","_removeListener","newUnexpectedErrorHandler","emit","errorHandler","setUnexpectedErrorHandler","onUnexpectedError","isPromiseCanceledError","onUnexpectedExternalError","transformErrorForSerialization","$isError","stacktrace","canceledName","canceled","illegalArgument","illegalState","readonly","disposed","what","getErrorMessage","split","String","NotImplementedError","super","NotSupportedError","findFirstInSorted","array","p","low","high","mid","Math","floor","mergeSort","compare","_sort","a","lo","hi","aux","leftIdx","rightIdx","_merge","sortedDiff","before","after","pushSplice","start","deleteCount","toInsert","latest","beforeIdx","afterIdx","beforeElement","afterElement","n","topStep","m","element","pop","j","remove","tail","tail2","arr","equals","one","other","itemEquals","b","binarySearch","comparator","comp","quickSelect","nth","TypeError","pivotValue","random","lower","higher","pivots","val","groupBy","currentGroup","delta","splices","removed","added","top","sort","topAsync","batch","token","o","min","isCancellationRequested","errors_1","coalesce","filter","coalesceInPlace","move","isFalsyOrEmpty","obj","Array","isArray","isNonEmptyArray","distinct","keyFn","position","seen","distinctES6","Set","has","add","uniqueFilter","lastIndex","firstOrDefault","notFoundValue","commonPrefixLength","flatten","concat","range","arg","indexer","mapper","reduce","r","t","insert","arrayInsert","insertIndex","insertArr","shuffle","_seed","rand","seed","x","sin","temp","pushToStart","unshift","pushToEnd","mapArrayOrNot","items","asArray","getRandomElement","once","_this","didCall","arguments","Iterable","is","thing","Symbol","iterator","_empty","freeze","empty","single","iterable","first","next","some","predicate","iterables","consume","atMost","POSITIVE_INFINITY","consumed","done","ParseOptions","CharacterCodes","createScanner","text","ignoreTrivia","pos","tokenOffset","scanError","scanHexDigits","count","digits","hexValue","ch","charCodeAt","scanNext","isWhitespace","fromCharCode","isLineBreak","ch3","scanString","safeLength","commentClosed","isDigit","end","scanNumber","isUnknownContentCharacter","setPosition","newPosition","getPosition","scan","getToken","getTokenValue","getTokenOffset","getTokenLength","getTokenError","contains","node","offset","includeRightBound","visit","visitor","options","DEFAULT","_scanner","toNoArgVisit","visitFunction","toOneArgVisit","onObjectBegin","onObjectProperty","onObjectEnd","onArrayBegin","onArrayEnd","onLiteralValue","onSeparator","onComment","onError","disallowComments","allowTrailingComma","handleError","skipUntilAfter","skipUntil","parseString","isValue","parseValue","needsComma","parseArray","parseObject","parseLiteral","allowEmptyContent","getNodeType","ScanError","SyntaxKind","ParseErrorCode","getLocation","segments","earlyReturnException","previousNode","previousNodeInst","type","parent","isAtPropertyKey","setPreviousNode","colonOffset","sep","last","matches","pattern","k","errors","currentProperty","currentParent","previousParents","onValue","object","parseTree","ensurePropertyComplete","endOffset","valueNode","findNodeAtLocation","root","segment","found","propertyNode","getNodePath","getNodeValue","prop","findNodeAtOffset","item","stripComments","replaceCh","kind","parts","repeat","s","getEOL","charAt","eol","isEOL","format","documentText","initialIndentLevel","formatText","formatTextStart","rangeStart","rangeEnd","nChars","tabSize","computeIndentLevel","indentValue","lineBreak","indentLevel","insertSpaces","scanner","json_1","hasError","newLineAndIndent","editOperations","addEdit","startOffset","firstToken","firstTokenStart","firstTokenEnd","secondToken","replaceContent","setProperty","originalPath","formattingOptions","getInsertionIndex","lastSegment","existing","propertyIndex","removeBegin","removeEnd","previous","withFormatting","newProperty","edit","removalIndex","toRemove","newText","applyEdit","begin","jsonFormatter_1","edits","curr","max","removeProperty","applyEdits","sortedEdits","arrays_1","diff","lastModifiedOffset","TRACK_DISPOSABLES","__is_disposable_tracked__","markTracked","Disposable","None","_a","trackDisposable","log","MultiDisposeError","dispose","iterator_1","isDisposable","combinedDisposable","disposables","toDisposable","DisposableStore","_toDispose","_isDisposed","DISABLE_DISPOSED_WARNING","_store","MutableDisposable","_value","ReferenceCollection","references","Map","reference","counter","createReferencedObject","set","functional_1","destroyReferencedObject","delete","ImmortalReference","Node","Undefined","prev","LinkedList","_first","_last","_size","size","_insert","atTheEnd","newNode","oldLast","oldFirst","didRemove","_remove","res","anchor","Event","event","thisArgs","didFire","call","snapshot","each","merge","initial","output","emitter","Emitter","fire","leading","leakWarningThreshold","subscription","handle","numDebouncedCalls","cur","_output","latch","cache","firstCall","shouldEmit","lifecycle_1","signal","any","events","stopwatch","getTime","_","buffer","nextTick","_buffer","flush","ChainableEvent","chain","fromNodeEventEmitter","eventName","id","onFirstListenerAdd","on","onLastListenerRemove","removeListener","fromDOMEventEmitter","addEventListener","removeEventListener","fromPromise","promise","toPromise","_globalLeakWarningThreshold","setGlobalLeakWarningThreshold","oldValue","LeakageMonitor","customThreshold","toString","_warnCountdown","_stacks","listenerCount","threshold","topStack","topCount","_disposed","_options","_leakageMon","_event","_listeners","linkedList_1","firstListener","isEmpty","removeMonitor","onFirstListenerDidAdd","onListenerDidAdd","check","_noop","_deliveryQueue","shift","PauseableEmitter","_isPaused","_eventQueue","_mergeFn","toArray","AsyncEmitter","promiseJoin","_asyncDeliveryQueue","thenables","assign","waitUntil","isFrozen","EventMultiplexer","hasListeners","hook","unhook","idx","EventBufferer","buffers","Relay","listening","inputEvent","inputEventListener","input","shortcutEvent","callback","context","CancellationToken","isCancellationToken","Cancelled","MutableToken","onCancellationRequested","event_1","_isCancelled","_emitter","CancellationTokenSource","_token","_parentListener","cancel","isThenable","createCancelablePromise","source","cancellation_1","thenable","onfinally","finally","raceCancellation","defaultValue","race","raceCancellablePromises","async","cancellablePromises","resolvedPromiseIndex","promises","cancellablePromise","raceTimeout","timeout","onTimeout","promiseResolve","timer","asPromise","Throttler","activePromise","queuedPromise","queuedPromiseFactory","promiseFactory","onComplete","queue","Sequencer","current","promiseTask","SequencerByKey","promiseMap","newPromise","Delayer","defaultDelay","completionPromise","doResolve","doReject","task","cancelTimeout","ThrottledDelayer","delayer","throttler","trigger","isTriggered","millis","Barrier","_isOpen","_promise","_completePromise","disposableTimeout","handler","ignoreErrors","sequence","promiseFactories","results","thenHandler","shouldStop","loop","Limiter","maxDegreeOfParalellism","outstandingPromises","runningPromises","_onFinished","onFinished","iLimitedTask","Queue","ResourceQueue","queues","resource","TimeoutTimer","runner","setIfNotSet","IntervalTimer","clearInterval","interval","setInterval","RunOnceScheduler","timeoutToken","timeoutHandler","isScheduled","doRun","RunOnceWorker","units","unit","schedule","requestIdleCallback","cancelIdleCallback","dummyIdle","didTimeout","timeRemaining","runWhenIdle","IdleValue","executor","_didRun","_executor","_error","_handle","retry","retries","lastError","TaskSequentializer","taskId","_pending","pending","onCancel","donePending","triggerNext","_next","run","promiseReject","IntervalCounter","lastIncrementTime","global","define","_isWindows","_isMacintosh","_isLinux","_isNative","_isWeb","_isIOS","_locale","_language","_userAgent","_globals","nodeProcess","vscode","isElectronRenderer","versions","electron","navigator","platform","rawNlsConfig","nlsConfig","resolved","userAgent","maxTouchPoints","language","el","document","getElementById","getAttribute","Platform","PlatformToString","_platform","isWindows","isMacintosh","isLinux","isNative","isWeb","isIOS","isRootUser","getuid","Language","isDefaultVariant","isDefault","globals","setImmediate","postMessage","importScripts","vscodeSetImmediateId","candidate","lastId","myId","OperatingSystem","OS","_isLittleEndian","_isLittleEndianComputed","isLittleEndian","test","Uint8Array","view","Uint16Array","safeProcess","platform_1","cwd","CHAR_UPPERCASE_A","CHAR_LOWERCASE_A","CHAR_UPPERCASE_Z","CHAR_LOWERCASE_Z","CHAR_DOT","CHAR_FORWARD_SLASH","CHAR_BACKWARD_SLASH","ErrorInvalidArgType","expected","actual","determiner","msg","validateString","isPathSeparator","isPosixPathSeparator","isWindowsDeviceRoot","normalizeString","allowAboveRoot","separator","lastSegmentLength","lastSlash","dots","lastSlashIndex","_format","pathObject","base","ext","win32","pathSegments","resolvedDevice","resolvedTail","resolvedAbsolute","toLowerCase","rootEnd","device","isAbsolute","firstPart","paths","joined","needsReplace","slashCount","firstLen","normalize","fromOrig","toOrig","fromStart","fromEnd","fromLen","toStart","toEnd","toLen","lastCommonSep","fromCode","out","resolvedPath","matchedSlash","extIdx","firstNonSlashEnd","startDot","startPart","preDotState","ret","delimiter","posix","trailingSeparator","toNamespacedPath","hasRoot","relative","dirname","basename","extname","Source","TerminateResponseCode","sanitizeProcessEnvironment","preserve","keysToRemove","envKey","search","amd","l","toStringTag","__esModule","default","prototype","H","NODE_DEBUG","SEMVER_SPEC_VERSION","MAX_SAFE_INTEGER","re","src","u","f","h","v","w","g","y","E","T","$","S","R","I","O","A","M","RegExp","V","P","C","L","N","q","D","X","z","G","Z","B","U","F","loose","version","trim","match","raw","major","minor","patch","prerelease","build","valid","clean","SemVer","compareMain","comparePre","K","inc","isNaN","ee","compareIdentifiers","J","Q","W","Y","te","ne","oe","ie","semver","se","operator","rcompareIdentifiers","compareLoose","rcompare","rsort","gt","lt","eq","neq","gte","lte","cmp","Comparator","ae","parseRange","ue","ce","pe","fe","le","intersects","Range","every","toComparators","satisfies","maxSatisfying","minSatisfying","validRange","ltr","gtr","outside","coerce","fun","title","browser","argv","addListener","off","removeAllListeners","prependListener","prependOnceListener","binding","chdir","umask","isReadableStream","pause","resume","destroy","newWriteableStream","WriteableStreamImpl","isReadableBufferedStream","stream","ended","state","flowing","destroyed","pendingWritePromises","flowData","flowErrors","flowEnd","highWaterMark","write","fullDataBuffer","pendingWritePromise","consumeReadable","readable","chunks","chunk","read","peekReadable","maxChunks","lastReadChunk","consumeStream","peekStream","streamListeners","dataListener","errorListener","endListener","toStream","toReadable","transform","transformer","isFalsyOrWhitespace","str","_formatRegexp","escapeRegExpCharacters","ltrim","haystack","needle","needleLen","rtrim","haystackLen","compareSubstring","aStart","aEnd","bStart","bEnd","codeA","codeB","aLen","bLen","compareSubstringIgnoreCase","isUpperAsciiLetter","isLowerAsciiLetter","isAsciiLetter","doEqualsIgnoreCase","stopAt","abs","isHighSurrogate","charCode","isLowSurrogate","computeCodePoint","highSurrogate","lowSurrogate","getNextCodePoint","nextCharCode","getPrevCodePoint","prevCharCode","_getCharContainingOffset","graphemeBreakTree","GraphemeBreakTree","getInstance","initialOffset","initialCodePoint","initialGraphemeBreakType","getGraphemeBreakType","graphemeBreakType","nextCodePoint","nextGraphemeBreakType","breakBetweenGraphemeBreakType","prevCodePoint","prevGraphemeBreakType","group","parseInt","escape","html","character","convertSimple2RegExpPattern","stripWildcards","createRegExp","searchString","isRegex","wholeWord","modifiers","matchCase","multiline","unicode","regExpLeadsToEndlessLoop","regexp","exec","regExpContainsBackreference","regexpValue","regExpFlags","ignoreCase","firstNonWhitespaceIndex","chCode","getLeadingWhitespace","lastNonWhitespaceIndex","startIndex","compareIgnoreCase","equalsIgnoreCase","startsWithIgnoreCase","candidateLength","commonSuffixLength","aLastIndex","bLastIndex","nextCharLength","prevCharLength","getCharContainingOffset","encodeUTF8","strLen","neededSize","strOffset","codePoint","arrOffset","decodeUTF8","byteLength","v0","uPrime","w1","w2","CONTAINS_RTL","containsRTL","CONTAINS_EMOJI","containsEmoji","IS_BASIC_ASCII","isFullWidthCharacter","isBasicASCII","UNUSUAL_LINE_TERMINATORS","containsUnusualLineTerminators","containsFullWidthCharacter","isEmojiImprecise","lcut","EL","COLOR_START","COLOR_END","startsWithUTF8BOM","breakTypeA","breakTypeB","removeAnsiEscapeCodes","UTF8_BOM_CHARACTER","stripUTF8BOM","substr","fuzzyContains","query","queryLen","targetLower","containsUppercaseCharacter","ignoreEscapedChars","uppercaseFirstLetter","toUpperCase","getNLines","singleLetterHash","GraphemeBreakType","_data","_INSTANCE","nodeCount","nodeIndex","hasBuffer","Buffer","hasTextEncoder","TextEncoder","hasTextDecoder","TextDecoder","textEncoder","textDecoder","VSBuffer","allocUnsafe","isBuffer","byteOffset","encode","strings","totalLength","alloc","decode","subarray","readUInt32BE","writeUInt32BE","readUInt32LE","writeUInt32LE","readUInt8","writeUInt8","destination","streamToBuffer","streams","readUInt16LE","writeUInt16LE","readableToBuffer","bufferToReadable","bufferedStreamToBuffer","bufferedStream","bufferToStream","streamToBufferReadableStream","fromString","wrap","newWriteableBufferStream","Severity","_warning","_warn","_info","fromValue","Warning","Info","Ignore","isString","isObject","isUndefined","isUndefinedOrNull","isStringArray","isNumber","isBoolean","isDefined","assertType","condition","assertIsDefined","assertAllDefined","isFunction","validateConstraint","constraint","constructor","getAllPropertyNames","proto","getPrototypeOf","isEmptyObject","areFunctions","objects","validateConstraints","constraints","getAllMethodNames","methods","createProxyObject","methodNames","invoke","createProxyMethod","method","methodName","withNullAsUndefined","withUndefinedAsNull","NotImplementedProxy","Proxy","toSlashes","osPath","path_1","getRoot","firstLetter","isWindowsDriveLetter","isUNC","WINDOWS_INVALID_FILE_CHARS","UNIX_INVALID_FILE_CHARS","WINDOWS_FORBIDDEN_NAMES","char0","isValidBasename","isWindowsOS","invalidFileChars","isEqual","pathA","pathB","identityEquals","strings_1","isEqualOrParent","parentCandidate","sepOffset","sanitizeFilePath","endsWith","isRootOrDriveLetter","pathNormalized","indexOfPath","parseLineAndColumnAware","rawPath","line","column","segmentAsNumber","types_1","deepClone","deepFreeze","_hasOwnProperty","oneKeys","otherKeys","cloneAndChange","changer","_cloneAndChange","changed","r1","r2","i2","mixin","overwrite","safeStringify","getOrDefault","baseValue","targetValue","getCaseInsensitive","lowercaseKey","equivalentKey","find","_schemePattern","_singleSlashStart","_doubleSlashStart","_slash","_regexp","URI","schemeOrData","authority","fragment","_strict","scheme","_schemeFix","_referenceResolution","_validateUri","fsPath","with","uriToFsPath","change","Uri","percentDecode","components","uri","pathFragment","newPath","skipEncoding","_asFormatted","_formatted","external","_fsPath","_sep","_pathSepMarker","$mid","encodeTable","58","47","63","35","91","93","64","33","36","38","39","40","41","42","43","44","59","61","32","encodeURIComponentFast","uriComponent","allowSlash","nativeEncodePos","encodeURIComponent","escaped","encodeURIComponentMinimal","keepDriveLetterCasing","encoder","userinfo","_rEncodedAsHex","decodeURIComponentGraceful","decodeURIComponent","getUriFromAmdModule","requirefn","relativePath","uri_1","toUrl","getPathFromAmdModule","entry","parsedArguments","stackArgument","__$stack","findFirstFrame","newlineIndex","color","isRemoteConsoleLog","severity","getFirstFrame","arg0","topFrame","label","isOneStringArg","consoleArgs","replacer","flags","revive","depth","buffer_1","Schemas","inMemory","internal","walkThrough","walkThroughSnippet","http","https","mailto","untitled","command","vscodeRemote","vscodeRemoteResource","userData","vscodeCustomEditor","vscodeNotebook","vscodeNotebookCell","vscodeSettings","webviewPanel","vscodeWebview","vscodeWebviewResource","extension","RemoteAuthorities","_hosts","_ports","_connectionTokens","_preferredWebSchema","_delegate","schema","delegate","host","port","connectionToken","window","pathname","FileAccess","uriOrModule","moduleIdToUrl","toUri","rewrite","isUri","getOrSet","mapToString","setToString","StringIterator","_pos","PathIterator","_splitOnBackslash","_caseSensitive","_from","_to","justSeps","UriIteratorState","UriIterator","_ignorePathCasing","_states","_stateIdx","_pathIterator","network_1","reset","hasNext","TernarySearchTreeNode","left","right","TernarySearchTree","_iter","ignorePathCasing","_root","iter","oldElement","_delete","superStr","_values","_entries","ResourceMap","mapOrKeyFn","toKey","defaultToKey","clb","thisArg","tuple","Touch","LinkedMap","_map","_head","_tail","_state","addItemLast","addItemFirst","removeItem","callbackfn","newSize","currentSize","LRUCache","limit","ratio","_limit","_ratio","checkTrim","trimOld","round","getEmptyExpression","GLOBSTAR","GLOB_SPLIT","PATH_REGEX","NO_PATH_REGEX","ALL_FORWARD_SLASHES","starsToRegExp","starCount","splitGlobAware","splitChar","inBraces","inBrackets","curVal","char","T1","T2","T3","T3_2","T4","T5","CACHE","map_1","FALSE","NULL","parsePattern","arg1","patternKey","trimForExclusions","parsedPattern","wrapRelativePattern","originalPattern","slashBase","backslashBase","basenames","patterns","allBasenames","trivia2","parsedPatterns","aggregateBasenameMatches","withBasenames","allPaths","trivia3","trivia4and5","regExp","parseRegExp","regEx","previousSegmentWasGlobStar","braceVal","bracketVal","braceRegExp","toRegExp","arg2","extpath","matchPathEnds","nativePath","nativePathEnd","isRelativePattern","resultPattern","expression","when","hasSibling","matched","async_1","requiresSiblings","parseExpressionPattern","resultExpression","parsedExpression","listToMap","list","rp","basenamePatterns","aggregate","aggregatedPatterns","hasSiblingPromiseFn","siblingsFn","siblings","hasSiblingFn","getBasenameTerms","patternOrExpression","getPathTerms","canNormalize","nfcCache","normalizeNFC","nfdCache","normalizeNFD","nonAsciiCharactersPattern","form","normalizedCache","cached","removeAccents","regex","originalFSPath","ExtUri","uri1","uri2","ignoreFragment","getComparisonKey","isEqualAuthority","joinPath","normalizedPath","fromPath","toPath","newURI","a1","a2","fsp","hasTrailingPathSeparator","isRootSep","extUri","extUriBiasedIgnorePathCase","extUriIgnorePathCase","basenameOrAuthority","normalizePath","resolvePath","isAbsolutePath","removeTrailingPathSeparator","addTrailingPathSeparator","distinctParents","resourceAccessor","candidateResource","otherItem","DataUri","META_DATA_LABEL","META_DATA_DESCRIPTION","META_DATA_SIZE","META_DATA_MIME","parseMetaData","dataUri","mime","ResourceGlobMatcher","globalExpression","rootExpressions","expressionsByRoot","forUris","glob_1","rootExpression","findSubstr","toLocalResource","localScheme","hasDriveLetter","normalizeDriveLetter","getPathLabel","userHomeProvider","rootProvider","baseResource","getWorkspaceFolder","hasMultipleRoots","getWorkspace","folders","pathLabel","resources_1","rootName","userHome","tildify","getBaseLabel","normalizedUserHomeCached","normalizedUserHome","original","normalized","startsWith","untildify","ellipsis","unc","home","Type","shorten","pathSeparator","shortenedPaths","pathIndex","prefix","subpathLength","subpath","otherPathIndex","isSubpathEnding","subpathWithSep","isOtherPathEnding","template","inVariable","TEXT","VARIABLE","prevSegment","SEPARATOR","mnemonicMenuLabel","forceDisableMnemonics","mnemonicButtonLabel","unmnemonicLabel","splitName","fullPath","parentPath","toJSON","_transformIncomingURIs","transformIncoming","URITransformer","remoteAuthority","DefaultURITransformer","transformOutgoingURIs","_transformOutgoingURIs","transformOutgoing","transformIncomingURIs","transformAndReviveIncomingURIs","_UUIDPattern","isUUID","_hex","padStart","_fillRandomValues","bucket","generateUuid","LineDecoder","encoding","stringDecoder","sd","StringDecoder","remaining","lastChar","require","__$__nodeRequire","invalidMacAddresses","validateMacAddress","tempCandidate","getMac","ifaces","os_1","networkInterfaces","infos","info","mac","machineId","virtualMachineHint","_virtualMachineOUIs","forStrings","vmOui","interfaceCount","interfaces","_isVirtualMachineMacAdress","getMachineId","crypto","resolve_1","reject_1","macAddress","macAddress_1","createHash","update","digest","getMacMachineId","uuid","pathsPath","asFileUri","getAppDataPath","getDefaultUserDataPath","RimRafMode","mode","UNLINK","extpath_1","rimrafUnlink","pathInTemp","os","tmpdir","uuid_1","rename","rimrafMove","chmod","util_1","promisify","handleDirectoryChildren","readdirSync","normalization_1","oldPath","MAX_FILE_SIZE","arch","MAX_HEAP_SIZE","rimrafSync","lstatSync","chmodSync","unlinkSync","rmdirSync","readdirWithFileTypes","withFileTypes","statLink","lstats","symbolicLink","dangling","renameIgnoreError","symlink","truncate","writeFilePathQueues","queueKey","existingWriteFileQueue","writeFileQueue","onFinish","ensureWriteFileQueue","toQueueKey","ensuredOptions","ensureWriteOptions","canFlush","flag","open","openError","fd","writeError","close","fdatasync","syncError","closeError","doWriteFileAndFlush","dirExists","copy","copiedSourcesIn","copiedSources","fileStat","reader","createReadStream","writer","createWriteStream","finished","finish","pipe","doCopyFile","writeFileSync","openSync","fdatasyncSync","closeSync","readDirsInDir","dirPath","directories","isFile","whenDeleted","running","updateMtime","futimes","atime","MOVE","realcaseSync","pfs_1","ix","realpath","access","constants","R_OK","realpathSync","accessSync","monkeyPatch","inVSCode","shouldEnable","httpProxy","proxyFromEnv","getProxyForUrl","logger_1","logger","debug","httpsProxy","shouldEnableProxy","pa","proxyAgent","newProxyAgent","globalAgent","doWatchNonRecursive","onChange","originalFileName","mapPathToStatDisposable","watcherDisposables","disposable","watcher","fs_1","watch","folderChildren","changedFileName","changedFilePath","statDisposable","timeoutHandle","CHANGE_BUFFER_DELAY","watchFile","watchFolder","State","DataType","requestTypeToStr","responseTypeToStr","RequestType","ResponseType","BufferReader","bytes","BufferWriter","createSizeBuffer","readSizeBuffer","createOneByteBuffer","BufferPresets","serialize","deserialize","ChannelServer","protocol","ctx","timeoutDelay","channels","activeRequests","pendingRequests","protocolListener","onMessage","onRawMessage","sendResponse","channelName","channel","flushPendingRequests","response","msgLength","send","logOutgoing","header","body","sendBuffer","logIncoming","onPromise","onEventListen","disposeActiveRequest","request","collectPendingRequest","cancellationTokenSource","listen","timeoutTimer","requests","RequestInitiator","ChannelClient","Uninitialized","handlers","lastRequestId","_onDidInitialize","onDidInitialize","onBuffer","that","cancellationToken","requestPromise","requestEvent","doRequest","sendRequest","uninitializedPromise","Idle","whenInitialized","cancellationTokenListener","onResponse","IPCServer","onDidClientConnect","_connections","_onDidAddConnection","onDidAddConnection","_onDidRemoveConnection","onDidRemoveConnection","onDidClientDisconnect","onFirstMessage","channelServer","channelClient","registerChannel","connection","connections","routerOrClientFilter","connectionPromise","routeCall","getDelayedChannel","getChannel","getMulticastEvent","routeEvent","clientFilter","eventMultiplexer","relay","IPCClient","ipcLogger","getNextTickChannel","didTick","propertyIsEvent","StaticRouter","hub","route","createChannelReceiver","service","disableMarshalling","mapEventNameToEvent","eventImpl","marshalling_1","createChannelSender","_target","propKey","properties","methodArgs","colorTables","prettyWithoutArrays","logWithColors","direction","req","initiator","pretty","colorTable","IPCLogger","_outgoingPrefix","_incomingPrefix","_totalIncoming","_totalOutgoing","requestId","emptyBuffer","getEmptyBuffer","ChunkStream","_chunks","_totalLength","buff","byteCount","_read","advance","resultOffset","chunkIndex","chunkPart","ProtocolMessageType","ProtocolConstants","ProtocolMessage","ack","writtenTime","ProtocolReader","socket","_onMessage","_register","readHead","readLen","messageType","_socket","_incomingData","onData","acceptChunk","lastReadTime","ProtocolWriter","lastWriteTime","drain","_writeNow","_writeSoon","head","wasEmpty","_bufferAdd","_bufferTake","Protocol","_onClose","onClose","_socketWriter","_socketReader","Client","ipc_1","getSocket","sendDisconnect","BufferedEmitter","_hasListeners","_isDeliveringMessages","_bufferedMessages","_deliverMessages","QueueElement","resultLen","it","LoadEstimator","lastRuns","_HISTORY_LENGTH","historyLimit","score","load","PersistentProtocol","initialChunk","_loadEstimator","_onControlMessage","onControlMessage","_onSocketClose","onSocketClose","_onSocketTimeout","onSocketTimeout","_isReconnecting","_outgoingUnackMsg","_outgoingMsgId","_outgoingAckId","_outgoingAckTimeout","_incomingMsgId","_incomingAckId","_incomingMsgLastTime","_incomingAckTimeout","_outgoingKeepAliveTimeout","_incomingKeepAliveTimeout","_socketDisposables","_receiveMessage","_sendKeepAliveCheck","_recvKeepAliveCheck","unacknowledgedCount","timeSinceLastOutgoingMsg","timeSinceLastIncomingMsg","hasHighLoad","initialDataChunk","flushBuffer","toSend","_recvAckCheck","peek","_sendAckCheck","readEntireBuffer","_sendAck","oldestUnacknowledgedMsg","timeSinceOldestUnacknowledgedMsg","NodeSocket","_listener","bufferSize","Constants","ReadState","WebSocketNodeSocket","_onData","mask","ipc_net_1","_acceptChunk","onEnd","headerLen","secondByte","hasMask","unmask","cnt","bytesLeft","m3","m2","m1","XDG_RUNTIME_DIR","safeIpcPathLengths","2","1","validateIPCHandleLength","createRandomIPCHandle","randomSuffix","createStaticIPCHandle","directoryPath","scope","crypto_1","Server","server","toClientConnectionEvent","onConnection","serve","net_1","createServer","connect","clientId","createConnection","fromSocket","nls","Action","cssClass","enabled","actionCallback","_onDidChange","onDidChange","_enabled","_checked","_id","_label","_cssClass","_actionCallback","_setLabel","tooltip","_tooltip","_setTooltip","class","_setClass","_setEnabled","checked","_setChecked","ActionRunner","_onDidBeforeRun","onDidBeforeRun","_onDidRun","onDidRun","action","runAction","RadioGroup","actions","Separator","ID","SubmenuAction","_actions","EmptySubmenuAction","localize","minute","hour","day","week","month","year","fromNow","date","appendAgoLabel","seconds","nls_1","toLocalISOString","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","toFixed","exceptionToErrorMessage","exception","verbose","detectSystemErrorMessage","stackToString","errno","syscall","toErrorMessage","arrays","types","detail","getParseErrorMessage","errorCode","getWindowsCode","status","getWindowsShell","environment","AbstractProcess","arg3","arg4","cmd","shell","executable","isShellCommand","childProcess","childProcessPromise","terminateRequested","newEnv","WellKnowCommands","pp","useExec","cc","cp","stdout","stderr","killed","handleExec","closeHandler","handleClose","terminated","Types","cmdCode","Objects","windowsVerbatimArguments","detached","quotedCommand","quotedArg","commandLine","quoted","ensureQuotes","spawn","pidResolve","pid","handleSpawn","stdio","killProcess","execFile","success","kill","terminateProcess","cmdShell","ant","cmake","eslint","gradle","grunt","gulp","jake","jenkins","jshint","make","maven","msbuild","msc","nmake","npm","rake","tsc","xbuild","LineProcess","stdoutLineDecoder","stderrLineDecoder","lineDecoder","decoder_1","sync","stdoutLine","stderrLine","createQueuedSender","msgQueue","useQueue","msgQueueCopy","findExecutable","PATH","pathEntry","withExtension","modulePath","_onDidProcessExit","onDidProcessExit","disposeDelayer","_client","getCachedChannel","disposeClient","client","forkOpts","objects_1","VSCODE_PARENT_PID","freshExecArgv","execArgv","debugBrk","child_process_1","fork","onMessageEmitter","console_1","serverName","sender","processes_1","connected","onExit","ExtensionHostDebugBroadcastChannel","_onCloseEmitter","_onReloadEmitter","_onTerminateEmitter","_onLogToEmitter","_onAttachEmitter","sessionId","subId","ChannelName","ExtensionHostDebugChannelClient","onReload","onAttachSession","onLogToSession","onTerminateSession","debugRenderer","transformIncomingURI","transformIncomingExtension","uriIpc_1","manifest","transformed","transformOutgoingExtension","transformOutgoingURI","ExtensionManagementChannel","getUriTransformer","onInstallExtension","onDidInstallExtension","onUninstallExtension","onDidUninstallExtension","uriTransformer","local","zip","unzip","install","getManifest","canInstall","installFromGallery","uninstall","reinstallFromGallery","getInstalled","extensions","updateMetadata","updateExtensionScope","getExtensionsReport","ExtensionManagementChannelClient","zipLocation","vsix","installOptions","force","isMachineScoped","ExtensionTipsChannel","getConfigBasedTips","getImportantExecutableBasedTips","getOtherExecutableBasedTips","getAllWorkspacesTips","nlsRegex","localizeManifest","VERSION_REGEXP","isValidVersionStr","parseVersion","hasCaret","hasGreaterEquals","majorBase","majorMustEqual","minorBase","minorMustEqual","patchBase","patchMustEqual","preRelease","normalizeVersion","isMinimum","isValidVersion","_version","_desiredVersion","desiredVersion","desiredMajorBase","desiredMinorBase","desiredPatchBase","isVersionValid","currentVersion","requestedVersion","notices","isValidExtensionVersion","extensionDesc","isBuiltin","main","engines","isEngineValid","engine","FileWatcher","onDidFilesChange","onLogMessage","verboseLogging","isDisposed","restartCounter","startWatching","ipc_cp_1","AMD_ENTRYPOINT","PIPE_LOGGING","VERBOSE_LOGGING","MAX_RESTARTS","setVerboseLogging","onDidChangeFile","onDidLogMessage","setFolders","setRoots","watcherOptions","init","OutOfProcessWin32FolderWatcher","watchedFolder","ignored","eventCallback","logCallback","glob","startWatcher","decoder","rawEvents","eventParts","changeType","absolutePath","ignore","changeTypeMap","folder","csharpWatcherService_1","excludes","onFileEvents","SyncDescriptor","ctor","staticArguments","supportsDelayedInstantiation","createSyncDescriptor","incoming","outgoing","Graph","_hashFn","_nodes","fromNode","lookupOrInsertNode","toNode","_util","storeServiceDependency","optional","DI_TARGET","DI_DEPENDENCIES","serviceId","serviceIds","getServiceDependencies","IInstantiationService","serviceIdentifier","STATIC_VALUES","ContextKeyExprType","ContextKeyExpr","ContextKeyFalseExpr","INSTANCE","ContextKeyTrueExpr","ContextKeyDefinedExpr","ContextKeyEqualsExpr","ContextKeyNotEqualsExpr","ContextKeyRegexExpr","ContextKeyInExpr","ContextKeyNotExpr","expr","ContextKeyAndExpr","ContextKeyOrExpr","serialized","strict","_deserializeOrExpression","pieces","_deserializeAndExpression","_deserializeOne","serializedOne","_deserializeValue","_deserializeRegexValue","serializedValue","caseIgnoreFlag","mapFnc","staticValue","getValue","mapDefined","mapEquals","valueKey","mapIn","ContextKeyNotInExpr","_actual","evaluate","mapNotEquals","mapNot","thisSource","otherSource","mapRegex","ContextKeyNotRegexExpr","_expr","_normalizeArr","hasTrue","lastElement","secondToLastElement","resultElement","negate","hasFalse","terminals","LEFT","RIGHT","and","or","RawContextKey","_defaultValue","createKey","getContextKeyValue","not","notEquals","IContextKeyService","instantiation_1","SET_CONTEXT_COMMAND_ID","IDownloadService","IEnvironmentService","INativeEnvironmentService","LogsDataCleaner","environmentService","cleanUpOldLogsSoon","currentLog","logsPath","logsRoot","oldSessions","__decorate","__param","environment_1","EXTENSION_IDENTIFIER_PATTERN","EXTENSION_IDENTIFIER_REGEX","isIExtensionIdentifier","SortBy","SortOrder","StatisticType","InstallOperation","IExtensionGalleryService","INSTALL_ERROR_NOT_SUPPORTED","INSTALL_ERROR_MALICIOUS","INSTALL_ERROR_INCOMPATIBLE","ExtensionManagementError","IExtensionManagementService","DISABLED_EXTENSIONS_STORAGE_PATH","ENABLED_EXTENSIONS_STORAGE_PATH","IGlobalExtensionEnablementService","IExtensionTipsService","DefaultIconPath","asBrowserUri","ExtensionsLabel","ExtensionsLocalizedLabel","ExtensionsChannelId","PreferencesLabel","PreferencesLocalizedLabel","MANIFEST_CACHE_FOLDER","USER_MANIFEST_CACHE_FILE","BUILTIN_MANIFEST_CACHE_FILE","EXTENSION_CATEGORIES","ExtensionType","ExtensionIdentifier","_lower","aValue","bValue","isLanguagePackExtension","contributes","localizations","isAuthenticaionProviderExtension","authentication","IBuiltinExtensionsScannerService","areSameExtensions","ExtensionIdentifierWithVersion","identifier","adoptToGalleryExtensionId","toLocaleLowerCase","getGalleryExtensionId","publisher","groupByExtension","getExtensionIdentifier","byExtension","findGroup","getLocalExtensionTelemetryData","galleryId","publisherId","publisherName","publisherDisplayName","dependencies","extensionDependencies","getGalleryExtensionTelemetryData","telemetryData","BetterMergeId","extensions_1","getMaliciousExtensionsSet","report","malicious","ExtensionsManifestCache","extensionsManagementService","extensionsManifestCache","onDidUnInstallExtension","invalidate","pfs","FileSystemProviderErrorCode","IFileService","FileType","FileSystemProviderCapabilities","hasReadWriteCapability","provider","capabilities","hasFileFolderCopyCapability","hasOpenReadWriteCloseCapability","hasFileReadStreamCapability","FileSystemProviderError","createFileSystemProviderError","providerError","markAsFileSystemProviderError","toFileSystemProviderErrorCode","Unknown","FileExists","FileIsADirectory","FileNotADirectory","FileNotFound","FileExceedsMemoryLimit","FileTooLarge","NoPermissions","Unavailable","ensureFileSystemProviderError","toFileOperationResult","FileOperationError","fileOperationResult","FileOperation","FileOperationEvent","operation","FileChangeType","FileChangesEvent","changes","updated","deleted","doContains","includeChildren","hasTypesFilter","includes","_b","findSuperstr","_c","_d","_e","_f","getOfType","eventsForType","filterFn","isParent","FileOperationResult","AutoSaveConfiguration","OFF","AFTER_DELAY","ON_FOCUS_CHANGE","ON_WINDOW_CHANGE","HotExitConfiguration","ON_EXIT","ON_EXIT_AND_WINDOW_CLOSE","FILES_ASSOCIATIONS_CONFIG","FILES_EXCLUDE_CONFIG","FileKind","ETAG_DISABLED","etag","mtime","whenProviderRegistered","fileService","canHandleResource","onDidChangeFileSystemProviderRegistrations","MIN_MAX_MEMORY_SIZE_MB","FALLBACK_MAX_MEMORY_SIZE_MB","BinarySize","KB","MB","GB","TB","throwIfCancelled","throwIfTooLarge","totalBytesRead","limits","memory","files_1","readFileIntoStream","bytesRead","allowedRemainingBytes","posInFile","posInBuffer","lastChunkLength","doReadFileIntoStream","errorTransformer","toFileChanges","normalizeFileChanges","normalizer","EventNormalizer","processEvent","mapPathToChange","existingEvent","currentChangeType","newChangeType","addedChangeEvents","deletedPaths","e1","e2","fileChangesDelayer","watcher_2","fileChangesBuffer","pathToWatch","eventType","onFileChange","onVerbose","fileChanges","normalizedFileChanges","watcher_1","ServiceCollection","instanceOrDescriptor","_enableTracing","CyclicDependencyError","graph","InstantiationService","services","serviceCollection_1","_services","_parent","_trace","Trace","traceInvocation","_done","isOptional","_getOrCreateServiceInstance","stop","ctorOrDescriptor","rest","descriptors_1","traceCreation","_createInstance","serviceDependencies","serviceArgs","dependency","firstServiceArgPos","instance","_setServiceInstance","instanceOrDesc","_getServiceInstanceOrDescriptor","_createAndCacheServiceInstance","branch","desc","graph_1","cycleCount","insertEdge","roots","_createServiceInstanceWithOwner","removeNode","_createServiceInstance","_supportsDelayedInstantiation","idle","TraceType","_start","_dep","_None","dur","_totals","causedCreation","lines","printChild","trace","nested","ILabelService","ILocalizationsService","isValidLocalization","localization","languageId","translation","languageName","localizedLanguageName","toISOString","LogLevel","ILogService","ILoggerService","DEFAULT_LOG_LEVEL","AbstractLogService","level","_onDidChangeLogLevel","onDidChangeLogLevel","ConsoleLogMainService","logLevel","setLevel","useColors","getLevel","Debug","Critical","ConsoleLogService","LogServiceAdapter","adapter","consoleLog","extractMessage","errorMessage_1","ConsoleLogInMainService","MultiplexLogService","logServices","logService","critical","DelegatedLogService","NullLogService","getLogLevel","Off","ExtensionIdVersionRegex","ExtensionsDownloader","extensionGalleryService","extensionsDownloadDir","extensionsDownloadPath","cleanUpPromise","cleanUp","getName","download","folderStat","resolveMetadata","extensionManagementUtil_1","del","extensionManagement_1","log_1","ExtensionsLifecycle","processesLimiter","script","parseScript","runLifecycleHook","getExtensionStoragePath","scriptKey","lifecycleHook","lifecycleType","extensionLifecycleProcess","onexit","uninstallHook","opts","silent","extensionUninstallProcess","setEncoding","onStdout","onStderr","onOutput","onDebouncedOutput","groupEnd","globalStorageHome","FileService","BUFFER_SIZE","_onDidChangeFileSystemProviderRegistrations","_onWillActivateFileSystemProvider","onWillActivateFileSystemProvider","_onDidChangeFileSystemProviderCapabilities","onDidChangeFileSystemProviderCapabilities","_onDidRunOperation","onDidRunOperation","_onError","_onDidFilesChange","activeWatchers","writeQueues","providerDisposables","isPathCaseSensitive","onDidChangeCapabilities","onDidErrorOccur","joiners","capability","resourceForError","activateProvider","withProvider","doResolveFile","resolveTo","resolveSingleChildDescendants","trie","toFileStat","Boolean","recurse","labels_1","File","Directory","SymbolicLink","ctime","resolvedEntries","childResource","childStat","toResolve","doValidateCreateFile","bufferOrReadableOrStream","throwIfFileSystemIsReadonly","withWriteProvider","bufferOrReadableOrStreamOrBufferedStream","validateWriteFile","stream_1","doWriteUnbuffered","doWriteBuffered","withReadProvider","doReadAsFileStream","preferUnbuffered","cancellableSource","statPromise","validateReadFile","fileStreamPromise","readFileUnbuffered","readFileStreamed","readFileBuffered","fileStream","readFileStream","io_1","validateReadFileLimits","tooLargeErrorResult","doCanMoveCopy","sourceProvider","targetProvider","doValidateMoveCopy","doMoveCopy","isSameResourceWithDifferentPathCase","sourceFile","doCopyFolder","doPipeBuffered","doPipeBufferedToUnbuffered","doPipeUnbufferedToBuffered","doPipeUnbuffered","sourceFolder","targetFolder","sourceChild","targetChild","getExtUri","directory","directoriesToCreate","doValidateDelete","useTrash","watchDisposed","watchDisposable","doWatch","toWatchKey","writeQueue","readableOrStreamOrBufferedStream","ensureWriteQueue","doWriteStreamBufferedQueued","doWriteReadableBufferedQueued","streamOrBufferedStream","doWriteBuffer","totalBytesWritten","doWriteUnbufferedQueued","doPipeBufferedQueued","sourceHandle","targetHandle","doPipeUnbufferedQueued","doPipeUnbufferedToBufferedQueued","DiskFileSystemProvider","mapHandleToPos","writeHandles","_onDidWatchErrorOccur","_onDidChangeFile","recursiveFoldersToWatch","recursiveWatchRequestDelayer","_capabilities","toFilePath","toType","birthtime","toFileSystemProviderError","filePath","normalizedPos","normalizePos","updatePos","bytesLength","lastKnownPos","doWrite","bytesWritten","doDelete","fromFilePath","validateTargetDeleted","watchRecursive","watchNonRecursive","folderToWatch","refreshRecursiveWatchers","doRefreshRecursiveWatchers","recursiveWatcher","watcherService_3","watcherImpl","usePolling","watcherService_1","watcherService_2","recursiveWatcherLogLevelListener","watcherService","watcherService_4","logLevelListener","LocalizationsService","extensionManagementService","_onDidLanguagesChange","onDidLanguagesChange","LanguagePacksCache","getLanguagePacks","languagePacks","languages","extensionIdentifier","installed","languagePacksFilePath","languagePacksFileLimiter","initializedCache","withLanguagePacks","createLanguagePacksFromExtensions","createLanguagePacksFromExtension","updateHash","localizationContribution","localizations_1","languagePack","extensionInLanguagePack","md5","getLogFunction","BufferLogService","_logger","_log","FileLogService","backupIndex","initializePromise","initialize","createFile","loadContent","getBackupResource","getCurrentTimestamp","stringifyLogLevel","toTwoDigits","currentTime","toThreeDigits","FileLoggerService","instantiationService","loggers","bufferLog_1","createInstance","LoggerChannel","consoleFn","LoggerChannelClient","FollowerLogService","createRotatingLogger","filename","filesize","filecount","SpdLogService","logsFolder","_loggerCreationPromise","_createSpdLogLogger","processName","_spdlog","setAsyncMode","logfilePath","createRotatingLoggerAsync","createSpdLogLogger","disposeLogger","drop","LoggerService","baseName","spdlogService_1","fileLogService_1","severity_1","INotificationService","NeverShowAgainScope","NotificationsFilter","NoOpNotification","progress","NoOpProgress","onDidClose","onDidChangeVisibility","product","nameShort","nameLong","applicationName","dataFolderName","urlProtocol","reportIssueUrl","licenseName","licenseUrl","extensionAllowedProposedApi","rawProductConfiguration","rootPath","pkg","process_1","NativeEnvironmentService","_args","date_1","appRoot","homedir","vscodePortable","parseUserDataDir","appSettingsHome","tmpDir","userRoamingDataHome","settingsResource","resources","userDataSyncHome","userDataSyncLogResource","machineSettingsResource","workspaceStorageHome","keybindingsResource","keyboardLayoutResource","argvResource","product_1","snippetsHome","isExtensionDevelopment","extensionDevelopmentPath","untitledWorkspacesHome","installSourcePath","builtinExtensionsPath","fromArgs","parsePathArg","extensionsPath","vscodeExtensions","extraExtensionPaths","extraBuiltinExtensionPaths","extensionDevelopmentLocationURI","extensionTestsLocationURI","extensionTestsPath","disableExtensions","debugExtensionHost","parseExtensionHostPort","isBuilt","sharedIPCHandle","serviceMachineIdResource","crashReporterId","crashReporterDirectory","driverHandle","telemetryLogResource","disableTelemetry","isBuild","parseDebugPort","debugId","debugArg","debugBrkArg","defaultBuildPort","break","decorators_1","parseSearchPort","IProductService","Registry","Assert","Extensions","JSONContribution","jsonContributionRegistry","_onDidChangeSchema","onDidChangeSchema","schemasById","unresolvedSchemaContent","schemas","Configuration","ConfigurationScope","allSettings","patternProperties","applicationSettings","machineSettings","machineOverridableSettings","windowSettings","resourceSettings","resourceLanguageSettingsSchemaId","contributionRegistry","as","jsonContributionRegistry_1","overrideIdentifierFromKey","getDefaultValue","OVERRIDE_PROPERTY_PATTERN","configurationRegistry","overrideIdentifiers","_onDidSchemaChange","onDidSchemaChange","_onDidUpdateConfiguration","onDidUpdateConfiguration","defaultValues","defaultLanguageConfigurationOverridesNode","configurationContributors","resourceLanguageSettingsSchema","additionalProperties","errorMessage","allowTrailingCommas","allowComments","configurationProperties","excludedConfigurationProperties","registerSchema","configuration","validate","registerConfigurations","configurations","validateAndRegisterProperties","registerJSONConfiguration","deregisterConfiguration","removeFromSchema","allOf","defaultConfigurations","defaultConfiguration","description","$ref","updatePropertyDefaultValue","updateSchema","registerOverrideIdentifiers","updateOverridePropertyPatternKey","overrideIdentifier","propertyKeys","validateProperty","included","deprecationMessage","markdownDeprecationMessage","subNodes","register","overrideIdentifierProperty","resourceLanguagePropertiesSchema","getConfigurationProperties","getScopes","scopes","toValuesTree","conflictReporter","addToValueTree","settingsTreeRoot","getConfigurationValue","settingPath","component","accessSetting","keyFromOverrideIdentifier","IConfigurationService","isConfigurationOverrides","ConfigurationTarget","ConfigurationTargetToString","configurationTarget","value1","value2","overrides","byOverrideIdentifier","override","identifiers","toOverridesByIdentifier","fromOverridesByIdentifier","configurationRegistry_1","fromOverride","toOverride","toOverrides","overrideRaw","keyInOverrideRaw","removeFromValueTree","valueTree","doRemoveFromValueTree","getConfigurationKeys","getDefaultValues","valueTreeRoot","getMigratedSettingValue","configurationService","currentSettingName","legacySettingName","setting","inspect","legacySetting","userValue","workspaceValue","workspaceFolderValue","ConfigurationModel","_contents","_keys","_overrides","checkAndFreeze","section","configuration_1","overrideContents","getContentsForOverrideIdentifer","contentsForKey","overrideContentsForKey","mergeContents","others","otherOverride","addKey","removeKey","DefaultConfigurationModel","ConfigurationModelParser","_name","_scopes","_raw","_configurationModel","_parseErrors","configurationModel","doParseContent","parseRaw","doParseRaw","parseErrors","json","filterByScope","filterOverriddenProperties","getScope","propertySchema","UserSettings","userSettingsResource","parser","parseContent","_defaultConfiguration","_localUserConfiguration","_remoteUserConfiguration","_workspaceConfiguration","_folderConfigurations","_memoryConfiguration","_memoryConfigurationByResource","_freeze","_workspaceConsolidatedConfiguration","_foldersConsolidatedConfigurations","_userConfiguration","workspace","getConsolidateConfigurationModel","memoryConfiguration","removeValue","setValue","consolidateConfigurationModel","folderConfigurationModel","getFolderConfigurationModelForResource","memoryConfigurationModel","userConfiguration","userLocalValue","localUserConfiguration","userRemoteValue","remoteUserConfiguration","memoryValue","getOverrideValue","user","userLocal","userRemote","workspaceFolder","workspaceConfiguration","folderConfigurations","defaults","fromKeys","getKeysForOverrideIdentifier","toKeys","updateDefaultConfiguration","updateLocalUserConfiguration","updateRemoteUserConfiguration","updateWorkspaceConfiguration","folderConfiguration","currentFolderConfiguration","updateFolderConfiguration","folderConfig","deleteFolderConfiguration","getConsolidatedConfigurationModelForResource","consolidateConfiguration","getWorkspaceConsolidatedConfiguration","getFolder","getFolderConsolidatedConfiguration","memoryConfigurationForResource","folderConsolidatedConfiguration","workspaceConsolidateConfiguration","folderConfiguraiton","parseConfigurationModel","model","mergeChanges","keysSet","overridesMap","ConfigurationChangeEvent","currentConfiguraiton","currentWorkspace","_previousConfiguration","affectedKeys","affectedKeysTree","previousConfiguration","doesAffectedKeysTreeContains","requestedTree","AllKeysConfigurationChangeEvent","sourceConfig","allKeys","ConfigurationService","_onDidChangeConfiguration","onDidChangeConfiguration","configurationModels_1","reloadConfigurationScheduler","reloadConfiguration","onDidDefaultConfigurationChange","loadConfiguration","toData","onDidChangeUserConfiguration","userConfigurationModel","compareAndUpdateLocalUserConfiguration","compareAndUpdateDefaultConfiguration","configurationChange","getTargetConfiguration","RemoteAuthorityResolverErrorCode","IRemoteAuthorityResolverService","RemoteAuthorityResolverError","_message","_code","_detail","isHandled","NotAvailable","setPrototypeOf","TemporarilyNotAvailable","NoResolverFound","getRemoteAuthority","getRemoteName","isSuccess","statusCode","hasNoContent","IRequestService","asText","asJson","registerConfiguration","order","http.proxy","markdownDescription","http.proxyStrictSSL","http.proxyAuthorization","http.proxySupport","enum","enumDescriptions","http.systemCertificates","RequestChannel","headers","RequestChannelClient","getProxyAgent","rawRequestURL","requestURL","url_1","proxyURL","proxyUrl","HTTP_PROXY","http_proxy","HTTPS_PROXY","https_proxy","getSystemProxyURI","proxyEndpoint","hostname","auth","rejectUnauthorized","strictSSL","resolve_2","reject_2","getServiceMachineId","storageService","store","IStateService","FileStorage","dbPath","_database","lastFlushedSerializedDatabase","database","loadSync","loadAsync","saveSync","serializedDatabase","StateService","fileStorage","STATE_FILE","getItem","setItem","WillSaveStateReason","IS_NEW_KEY","IStorageService","StorageScope","InMemoryStorageService","_onDidChangeStorage","onDidChangeStorage","_onWillSaveState","onWillSaveState","globalCache","workspaceCache","fallbackValue","getCache","valueStr","logStorage","toWorkspace","reason","NONE","globalPath","workspacePath","safeParse","globalItems","globalItemsParsed","workspaceItems","workspaceItemsParsed","globalValues","table","workspaceValues","ErrorEvent","callstack","BaseErrorTelemetry","telemetryService","flushDelay","ERROR_FLUSH_TIMEOUT","_flushHandle","_disposables","_telemetryService","_flushDelay","unbind","Errors","_onErrorEvent","installErrorListeners","_flushBuffer","_enqueue","publicLogError2","ErrorTelemetry","errorTelemetry_1","oldOnError","onerror","_onUncaughtError","uncaught_error_name","uncaught_error_msg","ITelemetryService","instanceStorageKey","currentSessionDateStorageKey","firstSessionDateStorageKey","lastSessionDateStorageKey","machineIdKey","Flags","FilterType","AssetType","Icon","Details","Changelog","Manifest","VSIX","License","Repository","PropertyType","Dependency","ExtensionPack","Engine","LocalizedLanguages","WebExtension","DefaultQueryState","pageNumber","pageSize","sortBy","sortOrder","criteria","assetTypes","Query","filterType","filters","searchText","criterium","SearchText","getStatistic","statistics","statisticName","getCoreTranslationAssets","assetType","asset","getVersionAsset","getRepositoryAsset","gitRegExp","fallbackUri","getDownloadAsset","fallbackAssetUri","getIconAsset","assetUri","getExtensions","getEngine","getLocalizedLanguages","getIsWebExtension","webExtensionProperty","getWebResource","toExtension","galleryExtension","querySource","assets","readme","changelog","license","repository","icon","coreTranslations","extensionName","extensionId","lastUpdated","displayName","shortDescription","installCount","rating","ratingCount","webResource","extensionPack","localizedLanguages","webExtension","preview","ExtensionGalleryService","requestService","productService","extensionsGallery","extensionsGalleryUrl","serviceUrl","extensionsControlUrl","controlUrl","commonHeadersPromise","resolveMarketplaceHeaders","names","total","firstPage","pageResult","getPage","pageIndex","getCompatibleExtensionByEngine","extensionValidator_1","withFlags","IncludeAssetUri","IncludeStatistics","IncludeFiles","IncludeVersionProperties","withPage","withFilter","Target","ExtensionId","ExtensionName","galleryExtensions","queryGallery","rawExtension","versionAsset","rawVersion","getLastValidExtensionVersion","isEnabled","publicLog2","IncludeLatestVersionOnly","quotedCategory","category","Category","quotedTag","tag","Tag","Featured","withSortBy","ids","withSortOrder","ct","nextPageQuery","ExcludeNonValidated","ExcludeWithFlags","flagsToString","Unpublished","commonHeaders","Content-Type","Accept","Accept-Encoding","Content-Length","url","api","request_1","resultCount","resultMetadata","metadataType","metadataItems","operationParam","downloadAsset","getAsset","duration","publicLog","compatible","IncludeVersions","fallbackUrl","firstOptions","fallbackOptions","getLastValidExtensionVersionFromProperties","getLastValidExtensionVersionRecursively","manifestAsset","slow","X-Market-Client-Id","User-Agent","serviceMachineId_1","telemetry_1","productService_1","storage_1","TelemetryService","_configurationService","_experimentProperties","_cleanupPatterns","_appender","appender","_commonProperties","commonProperties","_piiPaths","piiPaths","_userOptIn","sendErrorTelemetry","piiPath","_updateUserOptIn","optIn","isHashedId","usingFallbackGuid","TELEMETRY_SECTION_ID","enableTelemetry","isOptedIn","instanceId","msftInternal","anonymizeFilePaths","_cleanupInfo","errorEventName","publicLogError","updatedStack","cleanUpIndexes","nodeModulesRegex","fileRegex","IDLE_START_EVENT_NAME","IDLE_STOP_EVENT_NAME","telemetry.enableTelemetry","privacyStatementUrl","tags","flattenKeys","flatKeys","NullTelemetryService","combinedAppender","appenders","NullAppender","configurationTelemetry","configurationSource","configurationKeys","validateTelemetryData","measurements","flat","cleanRemoteAuthority","TelemetryLogAppender","loggerService","getLogger","telemetryUtils_1","AppInsightsAppender","_eventPrefix","_defaultData","aiKeyOrClientFactory","_aiClient","aiKey","appInsights","defaultClient","TelemetryClient","setUseDiskRetryCaching","setup","setAutoCollectRequests","setAutoCollectPerformance","setAutoCollectExceptions","setAutoCollectDependencies","setAutoDependencyCorrelation","setAutoCollectConsole","setInternalLogging","endpointUrl","getClient","trackEvent","resolveCommonProperties","msftInternalDomains","release","domainList","domain","msftDomain","verifyMicrosoftInternalDomain","seq","defineProperties","timestamp","common.timesincesessionstart","common.sequence","SNAP","SNAP_REVISION","buildTelemetryMessage","mergedTelemetry","mergeTelemetry","dirName","dirs","statSync","telemetryJsonFolders","isRecentFolder","isStoredWorkspaceFolder","isRawFileWorkspaceFolder","isRawUriWorkspaceFolder","isSingleFolderWorkspaceIdentifier","WORKSPACE_EXTENSION","WORKSPACE_FILTER","UNTITLED_WORKSPACE_NAME","IWorkspacesService","isRecentWorkspace","isRecentFile","reviveWorkspaceIdentifier","configPath","isWorkspaceIdentifier","workspaceIdentifier","toWorkspaceIdentifier","isUntitledWorkspace","isSingleFolderWorkspaceInitializationPayload","WORKSPACE_SUFFIX","hasWorkspaceFileExtension","SLASH","getStoredWorkspaceFolder","folderURI","forceAbsolute","folderName","targetConfigFolderURI","useSlashForPath","folderPath","storedFolders","rewriteWorkspaceFileForNewLocation","rawWorkspaceContents","configPathURI","isFromUntitledWorkspace","targetConfigPathURI","storedWorkspace","doParseStoredWorkspace","sourceConfigFolder","targetConfigFolder","rewrittenFolders","slashForPath","absolute","jsonEdit","newContent","remoteHosts_1","restoreRecentlyOpened","workspaces","restoreGracefully","func","storedRecents","workspaces3","workspaceLabels","configURIPath","folderUri","files2","fileLabels","fileUri","toStoreData","recents","hasLabel","recent","IWorkspaceContextService","WorkbenchState","IWorkspace","isIWorkspace","IWorkspaceFolder","isIWorkspaceFolder","toResource","Workspace","_configuration","_foldersMap","_folders","updateFoldersMap","WorkspaceFolder","toWorkspaceFolder","toWorkspaceFolders","configuredFolders","workspaceConfigFile","relativeTo","configuredFolder","workspaces_1","comparisonKey","INodeProxyService","NodeProxyChannel","NodeProxyChannelClient","TelemetryChannel","setEnabled","getTelemetryInfo","setExperimentProperty","TelemetryChannelClient","Channel","_sender","cpus","cores","memoryFree","freemem","memoryTotal","totalmem","userInfo","TELEMETRY_URL","named","metadataPath","amd_1","isInternalConfiguration","DefaultConfiguration","getNlsConfiguration","util","lp","_languagePackSupport","getTranslations","getLocaleFromConfig","localeConfigUri","_m1","_m2","m4","length_1","Connection","offline","_offline","doReconnect","doDispose","ManagementConnection","setOffline","getUnderlyingSocket","beginAcceptReconnection","endAcceptReconnection","ExtensionHostConnection","field","sendInitMessage","skipWebSocketFrames","proc","VSCODE_EXTHOST_WILL_SEND_SOCKET","VSCODE_HANDLES_UNCAUGHT_ERRORS","VSCODE_LOG_STACK","VSCODE_LOG_LEVEL","LOG_LEVEL","VSCODE_NLS_CONFIG","ipc_net_2","logger_2","reconnectionToken","rawMessage","authenticate","sendMessage","sendControl","encodePath","SideBySideEditor","ActiveEditorDirtyContext","contextkey_1","ActiveEditorPinnedContext","ActiveEditorStickyContext","ActiveEditorReadonlyContext","ActiveEditorContext","ActiveEditorAvailableEditorIdsContext","TextCompareEditorVisibleContext","TextCompareEditorActiveContext","EditorGroupEditorsCountContext","ActiveEditorGroupEmptyContext","ActiveEditorGroupIndexContext","ActiveEditorGroupLastContext","MultipleEditorGroupsContext","SingleEditorGroupsContext","toNegated","EditorsVisibleContext","InEditorZenModeContext","IsCenteredLayoutContext","SplitEditorsVertically","EditorAreaVisibleContext","TEXT_DIFF_EDITOR_ID","BINARY_DIFF_EDITOR_ID","isTextEditorPane","getViewState","Verbosity","SaveReason","EditorInput","_onDidChangeDirty","onDidChangeDirty","_onDidChangeLabel","onDidChangeLabel","_onDispose","onDispose","getTypeId","verbosity","getTitle","candidates","typeId","otherInput","isEditorInputWithPreferredResource","preferredResource","EncodingMode","SideBySideEditorInput","_secondary","_primary","registerListeners","onceSecondaryDisposed","secondary","oncePrimaryDisposed","primary","isReadonly","isUntitled","isDirty","isSaving","save","saveAs","revert","getTelemetryDescriptor","EditorModel","isEditorInputWithOptions","editor","EditorOptions","settings","forceReload","revealIfVisible","revealIfOpened","preserveFocus","activation","pinned","sticky","inactive","ignoreError","TextEditorOptions","textEditorOptions","selection","startLineNumber","startColumn","endLineNumber","endColumn","viewState","editorViewState","selectionRevealType","saveViewState","scrollType","gotApplied","restoreViewState","setSelection","revealRangeNearTop","revealRangeNearTopIfOutsideViewport","revealRangeInCenterIfOutsideViewport","revealRangeInCenter","EditorCommandsContextActionRunner","actions_1","EditorResourceAccessor","supportSideBySide","BOTH","getOriginalUri","filterByScheme","PRIMARY","originalResource","filterUri","getCanonicalUri","canonicalResource","CloseDirection","EditorInputFactories","customEditorInputFactoryInstances","editorInputFactoryConstructors","editorInputFactoryInstances","accessor","createEditorInputFactory","editorInputId","fileEditorInputFactory","pathsToEditors","editors","openOnlyIfExists","lineNumber","columnNumber","overrideId","forceFile","forceUntitled","EditorsOrder","computeEditorAriaLabel","groupCount","ariaLabel","getAriaLabel","isPinned","isSticky","IEnvironmentVariableService","EnvironmentVariableMutatorType","getMissingMutatorsFromArray","otherMutatorExtensions","mutator","MergedEnvironmentVariableCollection","collections","collection","variable","environmentVariable_1","Replace","lowerToActualVariableNames","mutators","actualVariable","Append","Prepend","otherMutators","currentMutators","otherMutator","getChangedMutatorsFromArray","serializeEnvironmentVariableCollection","deserializeEnvironmentVariableCollection","serializedCollection","TERMINAL_VIEW_ID","KEYBINDING_CONTEXT_TERMINAL_IS_OPEN","KEYBINDING_CONTEXT_TERMINAL_FOCUS","KEYBINDING_CONTEXT_TERMINAL_SHELL_TYPE_KEY","KEYBINDING_CONTEXT_TERMINAL_SHELL_TYPE","KEYBINDING_CONTEXT_TERMINAL_NOT_FOCUSED","KEYBINDING_CONTEXT_TERMINAL_A11Y_TREE_FOCUS","KEYBINDING_CONTEXT_TERMINAL_TEXT_SELECTED","KEYBINDING_CONTEXT_TERMINAL_TEXT_NOT_SELECTED","KEYBINDING_CONTEXT_TERMINAL_FIND_VISIBLE","KEYBINDING_CONTEXT_TERMINAL_FIND_NOT_VISIBLE","KEYBINDING_CONTEXT_TERMINAL_FIND_INPUT_FOCUSED","KEYBINDING_CONTEXT_TERMINAL_FIND_FOCUSED","KEYBINDING_CONTEXT_TERMINAL_FIND_INPUT_NOT_FOCUSED","KEYBINDING_CONTEXT_TERMINAL_PROCESS_SUPPORTED","IS_WORKSPACE_SHELL_ALLOWED_STORAGE_KEY","NEVER_MEASURE_RENDER_TIME_STORAGE_KEY","EXT_HOST_CREATION_DELAY","TerminalCursorStyle","BLOCK","LINE","UNDERLINE","TERMINAL_CONFIG_SECTION","TERMINAL_ACTION_CATEGORY","DEFAULT_LETTER_SPACING","MINIMUM_LETTER_SPACING","DEFAULT_LINE_HEIGHT","MINIMUM_FONT_WEIGHT","MAXIMUM_FONT_WEIGHT","DEFAULT_FONT_WEIGHT","DEFAULT_BOLD_FONT_WEIGHT","SUGGESTIONS_FONT_WEIGHT","ProcessState","LinuxDistro","TitleEventSource","TERMINAL_COMMAND_ID","DEFAULT_COMMANDS_TO_SKIP_SHELL","terminalContributionsDescriptor","extensionPoint","defaultExtensionKind","jsonSchema","required","TerminalDataBufferer","_callback","_terminalBufferMap","throttleBy","timeoutId","mergeEnvironments","configKey","actualKey","_mergeEnvironmentValue","addTerminalEnvironmentKeys","detectLocale","shouldSetLangEnvVariable","getLangEnvVariable","mergeNonNullKeys","resolveConfigurationVariables","variableResolver","languageVariants","af","am","be","bg","ca","cs","da","de","en","es","et","eu","fi","fr","he","hr","hu","hy","ja","kk","ko","nl","no","pl","pt","ro","ru","sk","sl","sr","sv","tr","uk","zh","_resolveCwd","_sanitizeCwd","getShellSetting","fetchSetting","isWorkspaceShellAllowed","platformOverride","shellConfigValue","getCwd","customCwd","unresolved","ignoreConfigurationCwd","escapeNonWindowsPath","createVariableResolver","lastActiveWorkspace","configurationResolverService","getDefaultShell","defaultShell","isWoW64","windir","useAutomationShell","maybeExecutable","sysnativePath","getDefaultShellArgs","platformKey","shellArgsConfigValue","resolvedArgs","createTerminalEnvironment","shellLaunchConfig","envFromConfig","baseEnv","strictEnv","allowedEnvFromConfig","getSystemShell","_TERMINAL_DEFAULT_SHELL_WINDOWS","isAtLeastWindows10","parseFloat","is32ProcessOn64Windows","powerShellPath","processes","getSystemShellWindows","_TERMINAL_DEFAULT_SHELL_UNIX_LIKE","unixLikeTerminal","SHELL","getSystemShellUnixLike","detectedDistro","terminal_1","Fedora","Ubuntu","getWindowsBuildNumber","osVersion","buildNumber","getShellPathFromRegistry","shellName","shellPath","GetStringRegKey","linuxDistro","detectAvailableShells","system32Path","useWSLexe","expectedLocations","Command Prompt","Windows PowerShell","PowerShell","WSL Bash","Git Bash","validateShellPaths","potentialPaths","shells","detectAvailableWindowsShells","detectAvailableUnixShells","mainProcessParentEnv","getMainProcessParentEnv","baseEnvironment","mainProcessId","ppid","codeProcessName","rawEnv","envPath","TerminalProcess","_shellLaunchConfig","cols","rows","_executableEnv","windowsEnableConpty","_logService","_currentTitle","_titleInterval","_writeQueue","_onProcessData","_onProcessExit","_onProcessReady","_onProcessTitleChanged","_initialCwd","useConpty","_ptyOptions","conptyInheritCursor","initialText","_delayedResizer","DelayedResizer","onTrigger","dimensions","resize","exitMessage","_exitMessage","onProcessData","onProcessExit","onProcessReady","onProcessTitleChanged","firstError","_validateCwd","_validateExecutable","setupPtyProcess","slc","envPaths","terminalEnvironment_1","ptyProcess","_ptyProcess","_processStartupComplete","_closeTimeout","_queueProcessExit","_exitCode","exitCode","_setupTitlePolling","_sendProcessId","_sendProcessTitle","_kill","ex","immediate","_startWrite","_writeTimeout","_doWrite","readlink","linkedstr","_onTrigger","_timeout","IConfigurationResolverService","AbstractVariableResolverService","_context","_labelService","_envVariables","_ignoreEditorVariables","_contributedVariables","ev","recursiveResolve","commandValueMapping","resolvedVariables","windows","osx","linux","resolveAnyBase","newConfig","variables","resolution","resolveString","replaced","VARIABLE_REGEXP","resolvedValue","evaluateSingleVariable","displayUri","getUriLabel","noPrefix","argument","getFilePath","getFolderUri","withArg","getWorkspaceFolderCount","resolveFromMap","getLineNumber","selectedText","getSelectedText","ep","getExecPath","IEditorService","ACTIVE_GROUP","SIDE_GROUP","REMOTE_TERMINAL_CHANNEL_NAME","RemoteTerminalChannelClient","_remoteAuthority","_channel","_workspaceContextService","_resolverService","_environmentVariableService","_remoteAuthorityResolverService","_editorService","activeWorkspaceRootUri","shouldPersistTerminal","terminalConfig","terminal.integrated.automationShell.windows","_readSingleTerminalConfiguration","terminal.integrated.automationShell.osx","terminal.integrated.automationShell.linux","terminal.integrated.shell.windows","terminal.integrated.shell.osx","terminal.integrated.shell.linux","terminal.integrated.shellArgs.windows","terminal.integrated.shellArgs.osx","terminal.integrated.shellArgs.linux","terminal.integrated.env.windows","terminal.integrated.env.osx","terminal.integrated.env.linux","terminal.integrated.inheritEnv","inheritEnv","terminal.integrated.cwd","terminal.integrated.detectLocale","allResolvedVariables","resolveWithInteraction","envVariableCollections","environmentVariableShared_1","resolverResult","resolveAuthority","resolverEnv","extensionHostEnv","workspaceFolders","activeWorkspaceFolder","activeFileResource","editor_1","activeEditor","workspaceId","workspaceName","getWorkspaceLabel","terminalId","reqId","isError","payload","isInitialization","workspace_1","configurationResolver_1","remoteAuthorityResolver_1","editorService_1","label_1","Translations","aKeys","bKeys","Logger","messageHandler","_messageHandler","notification_1","MANIFEST_FILE","ExtensionManifestHandler","ourVersion","absoluteFolderPath","isUnderDevelopment","_ourVersion","_absoluteFolderPath","_isBuiltin","_isUnderDevelopment","_absoluteManifestPath","ExtensionManifestParser","manifestContents","__metadata","isUserBuiltin","jsonErrorMessages_1","ExtensionManifestNLSReplacer","_nlsConfig","extensionDescription","reportErrors","localized","reportInvalidFormat","translationId","localizedMessages","translationPath","translationBundle","package","findMessageBundles","messageBundle","messageBundleContent","resolveOriginalMessageBundle","_replaceNLStrings","originalMessageBundle","originalBundleContent","devMode","toCheck","literal","originalMessages","messageScope","processEntry","messageKey","ExtensionManifestValidator","_extensionDescription","isValidExtensionDescription","extensionLocation","extensionFolderPath","baseIsValidExtensionDescription","_isStringArray","activationEvents","normalizedAbsolutePath","ExtensionScannerInput","extensionPoints_1","DefaultExtensionResolver","ExtensionScanner","replaceNLS","resolver","obsolete","obsoleteFileContents","refs","resolveExtensions","ref","createNLSConfig","_extensionDescriptions","scanExtension","extensionDescriptions","scanExtensions","builtinExtensions","extraBuiltinExtensions","resultMap","resultArr","aLastSegment","bLastSegment","Watcher","diskFileSystemProvider_1","watches","FileProviderChannel","watchers","filechange","session","cts","unwatch","_watch","requestResourcePath","ExtensionEnvironmentChannel","telemetry","getEnvironmentData","getDiagnosticInfo","logTelemetry","flushTelemetry","settingsPath","extensionHostLogsPath","scanMultiple","VSCODE_DEV","scanBuiltin","scanInstalled","allExtensions","uniqueExtensions","multipleExtensions","extensionKind","NodeProxyService","_serviceBrand","_$onMessage","$onMessage","_onDown","onDown","_onUp","onUp","node_browser_1","VariableResolverService","variableResolver_1","Terminal","_pid","_title","_isOrphan","replayData","maxReplayData","totalReplayData","disposeDelay","buffering","_onEvent","bufferer","startBuffering","disposeTimeout","persist","terminalDataBuffering_1","overflow","terminalProcess_1","isOrphan","onEvent","shutdown","getInitialCwd","TerminalProviderChannel","onTerminalProcessEvent","getTerminal","createTerminalProcess","startTerminalProcess","sendInputToTerminalProcess","shutdownTerminalProcess","resizeTerminalProcess","getTerminalInitialCwd","getTerminalCwd","sendCommandResultToTerminalProcess","orphanQuestionReply","listTerminals","activeWorkspaceUri","activeWorkspace","resolverService","terminalEnvironment","resolvedShellLaunchConfig","getDefaultShellAndArgs","getEnvFromConfig","VSCODE_IPC_HOOK_CLI","getNonInheritedEnv","environmentVariableCollection_1","applyToProcessEnvironment","terminal","REMOTE_FILE_SYSTEM_CHANNEL_NAME","RemoteFileSystemProvider","remoteAgentService","_onDidChangeCapabilities","getConnection","setCaseSensitive","remoteAgentEnvironment","getEnvironment","eventsOrError","isCaseSensitive","dataOrErrorOrEnd","RemoteExtensionLogFileName","IRemoteAgentService","ExtractError","cause","toExtractError","extractZip","zipfile","targetPath","extractedEntriesCount","readNextEntry","readEntry","entryCount","sourcePathRegex","fileName","targetFileName","openZipStream","attr","externalFileAttributes","modeFromEntry","targetDirName","istream","extractEntry","openZip","zipFile","lazy","yauzl_1","lazyEntries","openReadStream","zipPath","yazl","ZipFile","addBuffer","localPath","addFile","zipStream","outputStream","extract","sourcePath","zip_1","ExtensionsScanner","beforeRemovingExtension","_devSystemExtensionsPath","systemExtensionsPath","uninstalledPath","uninstalledFileLimiter","removeUninstalledExtensions","removeOutdatedExtensions","scanSystemExtensions","joinErrors","scanUserExtensions","excludeOutdated","uninstalled","getUninstalledExtensions","scanAllUserExtensions","scanExtensionsInDirs","identifierWithVersion","tempPath","extensionPath","extractAtLocation","setMetadata","manifestPath","parseManifest","withUninstalledExtensions","removeExtension","extractPath","renamePath","retryUntil","systemExtensionsPromise","scanDefaultSystemExtensions","devSystemExtensionsPromise","scanDevSystemExtensions","systemExtensions","devSystemExtensions","limiter","extensionsFolders","extensionFolder","readManifest","readmeUrl","changelogUrl","devSystemExtensionsList","getDevSystemExtensionsList","scanExtensionsInDir","devSystemExtensionsPath","removeUninstalledExtension","builtInExtensions","errorOrErrors","previousValue","currentValue","extensionNls_1","ExtensionManagementService","galleryService","downloadService","lastReportTimestamp","installingExtensions","uninstallingExtensions","_onInstallExtension","_onDidInstallExtension","_onUninstallExtension","_onDidUninstallExtension","extensionLifecycle","extensionLifecycle_1","extensionsScanner","extensionsScanner_1","postUninstall","manifestCache","extensionsManifestCache_1","extensionsDownloader","extensionDownloader_1","collectFiles","downloadLocation","downloadVsix","extensionManagementUtil_2","collectFilesFromDirectory","uninstallExtension","unsetUninstalledAndGetLocal","getGalleryMetadata","installFromZipPath","downloadedLocation","installExtension","installDependenciesAndPackExtensions","checkAndGetCompatibleVersion","reportTelemetry","getTelemetryEvent","doInstallFromGallery","gallery","existingExtension","installableExtension","downloadInstallableExtension","setUninstalled","isMalicious","compatibleExtension","getCompatibleExtension","findGalleryExtension","downloadExtension","saveMetadataForLocalExtension","extractAndInstall","isUninstalled","unsetUninstalled","extractUserExtension","dependenciesAndPackExtensions","old","galleryIdentifier","extensionsToInstall","rollback","extensionsToUninstall","extensionToUninstall","checkForDependenciesAndUninstall","findGalleryExtensionByName","findGalleryExtensionById","preUninstallExtension","packedExtensions","getAllPackExtensionsToUninstall","uninstallExtensions","postUninstallExtension","otherExtensionsToUninstall","checkForDependents","doUninstall","dependents","getDependents","remainingDependents","dependent","getDependentsErrorMessage","dependingExtension","extensionsPack","packOfPackedExtensions","packedExtension","userExtensions","reportStatistic","errorcode","filterUninstalled","allUninstalled","reportedExtensions","updateReportCache","extensionData","download_1","vszipExtract","vszip","vszipBuffer","tar","tarPath","pack","tarStream","finalize","archivePath","extractTar","extractAssets","assetPath","extractor","fail","extractData","fileData","nextEntry","rawName","fstream","enableCustomMarketplace","SERVICE_URL","itemUrl","ITEM_URL","recommendationsUrl","RequestService","configure","proxy","proxyStrictSSL","authorization","proxyAuthorization","agent","proxy_1","Proxy-Authorization","_request","endpoint","rawRequest","getRawRequest","getNodeRequest","password","followRedirects","zlib_1","createGunzip","abort","notInstalled","useId","getId","withVersion","EXTENSION_ID_REGEX","getIdAndVersion","Main","setInstallSource","listExtensions","installExtensions","locateExtension","telemetry_2","installSource","showVersions","categories","builtinExtensionIds","failed","installedExtensionsManifests","vsixs","installExtensionInfos","installVSIX","getGalleryExtensions","extensionInfo","notFound","updateLocalizationsCache","extensionIds","extensionsWithIdAndVersion","installedExtension","newer","getExtensionId","uninstalledExtensions","localizationService","eventPrefix","environmentService_1","fileService_1","diskFileSystemProvider","registerProvider","configurationService_1","state_1","stateService_1","instantiationService_1","invokeFunction","stateService","requestService_1","extensionManagementService_1","extensionGalleryService_1","aiConfig","asimovKey","appInsightsAppender_1","commonProperties_1","telemetryService_1","createChild","Vscode","_onDidClientConnect","ipc","maxExtraOfflineConnections","cliProcessMain_1","servicesPromise","initializeServices","startPath","parseUrl","workbenchWebConfiguration","workspaceUri","workspaceProvider","homeIndicator","href","nls_2","remoteUserDataUri","productConfiguration","nlsConfiguration","protocol_1","reconnection","handshake","desiredConnectionType","debugPort","getDebugPort","reconnect","connection_1","nodeProxy_1","disposeOldOfflineConnections","tunnel","mkdirSync","remoteAgentService_1","logIpc_1","extensionHostDebugIpc_1","loggerService_1","id_1","logsDataCleaner_1","insights_1","telemetryLogAppender_1","localizations_2","channel_1","extensionManagementIpc_1","requestIpc_1","remoteAgentFileSystemChannel_1","remoteTerminalChannel_1","marketplace_1","exit","CODE_SERVER_PARENT_PID","parentPid","server_1","cli","handleWebSocket"],"mappings":"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AAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IACAA,EAAAA,EAAA,EAAA,KAAA,IAEAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAAA,IAAA,IACAA,EAAAA,EAAA,EAA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","file":"entry.js","sourcesContent":["}).call(this);","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\n//@ts-check\n\nfunction _factory(sharedObj) {\n\n\tsharedObj.MonacoPerformanceMarks = sharedObj.MonacoPerformanceMarks || [];\n\n\tconst _dataLen = 2;\n\tconst _timeStamp = typeof console.timeStamp === 'function' ? console.timeStamp.bind(console) : () => { };\n\n\tfunction importEntries(entries) {\n\t\tsharedObj.MonacoPerformanceMarks.splice(0, 0, ...entries);\n\t}\n\n\tfunction exportEntries() {\n\t\treturn sharedObj.MonacoPerformanceMarks.slice(0);\n\t}\n\n\tfunction getEntries() {\n\t\tconst result = [];\n\t\tconst entries = sharedObj.MonacoPerformanceMarks;\n\t\tfor (let i = 0; i < entries.length; i += _dataLen) {\n\t\t\tresult.push({\n\t\t\t\tname: entries[i],\n\t\t\t\tstartTime: entries[i + 1],\n\t\t\t});\n\t\t}\n\t\treturn result;\n\t}\n\n\tfunction getDuration(from, to) {\n\t\tconst entries = sharedObj.MonacoPerformanceMarks;\n\t\tlet target = to;\n\t\tlet endIndex = 0;\n\t\tfor (let i = entries.length - _dataLen; i >= 0; i -= _dataLen) {\n\t\t\tif (entries[i] === target) {\n\t\t\t\tif (target === to) {\n\t\t\t\t\t// found `to` (end of interval)\n\t\t\t\t\tendIndex = i;\n\t\t\t\t\ttarget = from;\n\t\t\t\t} else {\n\t\t\t\t\t// found `from` (start of interval)\n\t\t\t\t\treturn entries[endIndex + 1] - entries[i + 1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\n\tfunction mark(name) {\n\t\tsharedObj.MonacoPerformanceMarks.push(name, Date.now());\n\t\t_timeStamp(name);\n\t}\n\n\tconst exports = {\n\t\tmark: mark,\n\t\tgetEntries: getEntries,\n\t\tgetDuration: getDuration,\n\t\timportEntries: importEntries,\n\t\texportEntries: exportEntries\n\t};\n\n\treturn exports;\n}\n\n// This module can be loaded in an amd and commonjs-context.\n// Because we want both instances to use the same perf-data\n// we store them globally\n\n// eslint-disable-next-line no-var\nvar sharedObj;\nif (typeof global === 'object') {\n\t// nodejs\n\tsharedObj = global;\n} else if (typeof self === 'object') {\n\t// browser\n\tsharedObj = self;\n} else {\n\tsharedObj = {};\n}\n\nif (typeof define === 'function') {\n\t// amd\n\tdefine(\"vs/base/common/performance\", [], function () { return _factory(sharedObj); });\n} else if (typeof module === 'object' && typeof module.exports === 'object') {\n\t// commonjs\n\tmodule.exports = _factory(sharedObj);\n} else {\n\tsharedObj.perf = _factory(sharedObj);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\n//@ts-check\n\n/**\n * @param {NodeRequire} nodeRequire\n * @param {typeof import('path')} path\n * @param {typeof import('fs')} fs\n * @param {typeof import('../common/performance')} perf\n */\nfunction factory(nodeRequire, path, fs, perf) {\n\n\t/**\n\t * @param {string} file\n\t * @returns {Promise<boolean>}\n\t */\n\tfunction exists(file) {\n\t\treturn new Promise(c => fs.exists(file, c));\n\t}\n\n\t/**\n\t * @param {string} file\n\t * @returns {Promise<void>}\n\t */\n\tfunction touch(file) {\n\t\treturn new Promise((c, e) => { const d = new Date(); fs.utimes(file, d, d, err => err ? e(err) : c()); });\n\t}\n\n\t/**\n\t * @param {string} file\n\t * @returns {Promise<object>}\n\t */\n\tfunction lstat(file) {\n\t\treturn new Promise((c, e) => fs.lstat(file, (err, stats) => err ? e(err) : c(stats)));\n\t}\n\n\t/**\n\t * @param {string} dir\n\t * @returns {Promise<string[]>}\n\t */\n\tfunction readdir(dir) {\n\t\treturn new Promise((c, e) => fs.readdir(dir, (err, files) => err ? e(err) : c(files)));\n\t}\n\n\t/**\n\t * @param {string} dir\n\t * @returns {Promise<string>}\n\t */\n\tfunction mkdirp(dir) {\n\t\treturn new Promise((c, e) => fs.mkdir(dir, { recursive: true }, err => (err && err.code !== 'EEXIST') ? e(err) : c(dir)));\n\t}\n\n\t/**\n\t * @param {string} dir\n\t * @returns {Promise<void>}\n\t */\n\tfunction rmdir(dir) {\n\t\treturn new Promise((c, e) => fs.rmdir(dir, err => err ? e(err) : c(undefined)));\n\t}\n\n\t/**\n\t * @param {string} file\n\t * @returns {Promise<void>}\n\t */\n\tfunction unlink(file) {\n\t\treturn new Promise((c, e) => fs.unlink(file, err => err ? e(err) : c(undefined)));\n\t}\n\n\t/**\n\t * @param {string} location\n\t * @returns {Promise<void>}\n\t */\n\tfunction rimraf(location) {\n\t\treturn lstat(location).then(stat => {\n\t\t\tif (stat.isDirectory() && !stat.isSymbolicLink()) {\n\t\t\t\treturn readdir(location)\n\t\t\t\t\t.then(children => Promise.all(children.map(child => rimraf(path.join(location, child)))))\n\t\t\t\t\t.then(() => rmdir(location));\n\t\t\t} else {\n\t\t\t\treturn unlink(location);\n\t\t\t}\n\t\t}, err => {\n\t\t\tif (err.code === 'ENOENT') {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tthrow err;\n\t\t});\n\t}\n\n\tfunction readFile(file) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\tfs.readFile(file, 'utf8', function (err, data) {\n\t\t\t\tif (err) {\n\t\t\t\t\treject(err);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tresolve(data);\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * @param {string} file\n\t * @param {string} content\n\t * @returns {Promise<void>}\n\t */\n\tfunction writeFile(file, content) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\tfs.writeFile(file, content, 'utf8', function (err) {\n\t\t\t\tif (err) {\n\t\t\t\t\treject(err);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tresolve();\n\t\t\t});\n\t\t});\n\t}\n\n\n\t/**\n\t * @param {string} userDataPath\n\t * @returns {object}\n\t */\n\tfunction getLanguagePackConfigurations(userDataPath) {\n\t\tconst configFile = path.join(userDataPath, 'languagepacks.json');\n\t\ttry {\n\t\t\t// NOTE@coder: Swapped require with readFile since require is cached and\n\t\t\t// we don't restart the server-side portion of code-server when the\n\t\t\t// language changes.\n\t\t\treturn JSON.parse(fs.readFileSync(configFile, 'utf8'));\n\t\t} catch (err) {\n\t\t\t// Do nothing. If we can't read the file we have no\n\t\t\t// language pack config.\n\t\t}\n\t\treturn undefined;\n\t}\n\n\t/**\n\t * @param {object} config\n\t * @param {string} locale\n\t */\n\tfunction resolveLanguagePackLocale(config, locale) {\n\t\ttry {\n\t\t\twhile (locale) {\n\t\t\t\tif (config[locale]) {\n\t\t\t\t\treturn locale;\n\t\t\t\t} else {\n\t\t\t\t\tconst index = locale.lastIndexOf('-');\n\t\t\t\t\tif (index > 0) {\n\t\t\t\t\t\tlocale = locale.substring(0, index);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.error('Resolving language pack configuration failed.', err);\n\t\t}\n\t\treturn undefined;\n\t}\n\n\t/**\n\t * @param {string} commit\n\t * @param {string} userDataPath\n\t * @param {string} metaDataFile\n\t * @param {string} locale\n\t */\n\tfunction getNLSConfiguration(commit, userDataPath, metaDataFile, locale) {\n\t\tif (locale === 'pseudo') {\n\t\t\treturn Promise.resolve({ locale: locale, availableLanguages: {}, pseudo: true });\n\t\t}\n\n\t\tif (process.env['VSCODE_DEV']) {\n\t\t\treturn Promise.resolve({ locale: locale, availableLanguages: {} });\n\t\t}\n\n\t\t// We have a built version so we have extracted nls file. Try to find\n\t\t// the right file to use.\n\n\t\t// Check if we have an English or English US locale. If so fall to default since that is our\n\t\t// English translation (we don't ship *.nls.en.json files)\n\t\tif (locale && (locale === 'en' || locale === 'en-us')) {\n\t\t\treturn Promise.resolve({ locale: locale, availableLanguages: {} });\n\t\t}\n\n\t\tconst initialLocale = locale;\n\n\t\tperf.mark('nlsGeneration:start');\n\n\t\tconst defaultResult = function (locale) {\n\t\t\tperf.mark('nlsGeneration:end');\n\t\t\treturn Promise.resolve({ locale: locale, availableLanguages: {} });\n\t\t};\n\t\ttry {\n\t\t\tif (!commit) {\n\t\t\t\treturn defaultResult(initialLocale);\n\t\t\t}\n\t\t\tconst configs = getLanguagePackConfigurations(userDataPath);\n\t\t\tif (!configs) {\n\t\t\t\treturn defaultResult(initialLocale);\n\t\t\t}\n\t\t\tlocale = resolveLanguagePackLocale(configs, locale);\n\t\t\tif (!locale) {\n\t\t\t\treturn defaultResult(initialLocale);\n\t\t\t}\n\t\t\tconst packConfig = configs[locale];\n\t\t\tlet mainPack;\n\t\t\tif (!packConfig || typeof packConfig.hash !== 'string' || !packConfig.translations || typeof (mainPack = packConfig.translations['vscode']) !== 'string') {\n\t\t\t\treturn defaultResult(initialLocale);\n\t\t\t}\n\t\t\treturn exists(mainPack).then(fileExists => {\n\t\t\t\tif (!fileExists) {\n\t\t\t\t\treturn defaultResult(initialLocale);\n\t\t\t\t}\n\t\t\t\tconst packId = packConfig.hash + '.' + locale;\n\t\t\t\tconst cacheRoot = path.join(userDataPath, 'clp', packId);\n\t\t\t\tconst coreLocation = path.join(cacheRoot, commit);\n\t\t\t\tconst translationsConfigFile = path.join(cacheRoot, 'tcf.json');\n\t\t\t\tconst corruptedFile = path.join(cacheRoot, 'corrupted.info');\n\t\t\t\tconst result = {\n\t\t\t\t\tlocale: initialLocale,\n\t\t\t\t\tavailableLanguages: { '*': locale },\n\t\t\t\t\t_languagePackId: packId,\n\t\t\t\t\t_translationsConfigFile: translationsConfigFile,\n\t\t\t\t\t_cacheRoot: cacheRoot,\n\t\t\t\t\t_resolvedLanguagePackCoreLocation: coreLocation,\n\t\t\t\t\t_corruptedFile: corruptedFile\n\t\t\t\t};\n\t\t\t\treturn exists(corruptedFile).then(corrupted => {\n\t\t\t\t\t// The nls cache directory is corrupted.\n\t\t\t\t\tlet toDelete;\n\t\t\t\t\tif (corrupted) {\n\t\t\t\t\t\ttoDelete = rimraf(cacheRoot);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttoDelete = Promise.resolve(undefined);\n\t\t\t\t\t}\n\t\t\t\t\treturn toDelete.then(() => {\n\t\t\t\t\t\treturn exists(coreLocation).then(fileExists => {\n\t\t\t\t\t\t\tif (fileExists) {\n\t\t\t\t\t\t\t\t// We don't wait for this. No big harm if we can't touch\n\t\t\t\t\t\t\t\ttouch(coreLocation).catch(() => { });\n\t\t\t\t\t\t\t\tperf.mark('nlsGeneration:end');\n\t\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn mkdirp(coreLocation).then(() => {\n\t\t\t\t\t\t\t\treturn Promise.all([readFile(metaDataFile), readFile(mainPack)]);\n\t\t\t\t\t\t\t}).then(values => {\n\t\t\t\t\t\t\t\tconst metadata = JSON.parse(values[0]);\n\t\t\t\t\t\t\t\tconst packData = JSON.parse(values[1]).contents;\n\t\t\t\t\t\t\t\tconst bundles = Object.keys(metadata.bundles);\n\t\t\t\t\t\t\t\tconst writes = [];\n\t\t\t\t\t\t\t\tfor (const bundle of bundles) {\n\t\t\t\t\t\t\t\t\tconst modules = metadata.bundles[bundle];\n\t\t\t\t\t\t\t\t\tconst target = Object.create(null);\n\t\t\t\t\t\t\t\t\tfor (const module of modules) {\n\t\t\t\t\t\t\t\t\t\tconst keys = metadata.keys[module];\n\t\t\t\t\t\t\t\t\t\tconst defaultMessages = metadata.messages[module];\n\t\t\t\t\t\t\t\t\t\tconst translations = packData[module];\n\t\t\t\t\t\t\t\t\t\tlet targetStrings;\n\t\t\t\t\t\t\t\t\t\tif (translations) {\n\t\t\t\t\t\t\t\t\t\t\ttargetStrings = [];\n\t\t\t\t\t\t\t\t\t\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\t\t\t\t\t\t\t\t\t\tconst elem = keys[i];\n\t\t\t\t\t\t\t\t\t\t\t\tconst key = typeof elem === 'string' ? elem : elem.key;\n\t\t\t\t\t\t\t\t\t\t\t\tlet translatedMessage = translations[key];\n\t\t\t\t\t\t\t\t\t\t\t\tif (translatedMessage === undefined) {\n\t\t\t\t\t\t\t\t\t\t\t\t\ttranslatedMessage = defaultMessages[i];\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\ttargetStrings.push(translatedMessage);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\ttargetStrings = defaultMessages;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\ttarget[module] = targetStrings;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\twrites.push(writeFile(path.join(coreLocation, bundle.replace(/\\//g, '!') + '.nls.json'), JSON.stringify(target)));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\twrites.push(writeFile(translationsConfigFile, JSON.stringify(packConfig.translations)));\n\t\t\t\t\t\t\t\treturn Promise.all(writes);\n\t\t\t\t\t\t\t}).then(() => {\n\t\t\t\t\t\t\t\tperf.mark('nlsGeneration:end');\n\t\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t\t}).catch(err => {\n\t\t\t\t\t\t\t\tconsole.error('Generating translation files failed.', err);\n\t\t\t\t\t\t\t\treturn defaultResult(locale);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t} catch (err) {\n\t\t\tconsole.error('Generating translation files failed.', err);\n\t\t\treturn defaultResult(locale);\n\t\t}\n\t}\n\n\treturn {\n\t\tgetNLSConfiguration\n\t};\n}\n\n\nif (typeof define === 'function') {\n\t// amd\n\tdefine(__m[101/*vs/base/node/languagePacks*/], __M([44/*path*/,21/*fs*/,200/*vs/base/common/performance*/]), function (path, fs, perf) { return factory(require.__$__nodeRequire, path, fs, perf); });\n} else if (typeof module === 'object' && typeof module.exports === 'object') {\n\tconst path = require('path');\n\tconst fs = require('fs');\n\tconst perf = require('../common/performance');\n\tmodule.exports = factory(require, path, fs, perf);\n} else {\n\tthrow new Error('Unknown context');\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Throws an error with the provided message if the provided value does not evaluate to a true Javascript value.\n */\nexport function ok(value?: unknown, message?: string) {\n\tif (!value) {\n\t\tthrow new Error(message ? `Assertion failed (${message})` : 'Assertion Failed');\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport function createDecorator(mapFn: (fn: Function, key: string) => Function): Function {\n\treturn (target: any, key: string, descriptor: any) => {\n\t\tlet fnKey: string | null = null;\n\t\tlet fn: Function | null = null;\n\n\t\tif (typeof descriptor.value === 'function') {\n\t\t\tfnKey = 'value';\n\t\t\tfn = descriptor.value;\n\t\t} else if (typeof descriptor.get === 'function') {\n\t\t\tfnKey = 'get';\n\t\t\tfn = descriptor.get;\n\t\t}\n\n\t\tif (!fn) {\n\t\t\tthrow new Error('not supported');\n\t\t}\n\n\t\tdescriptor[fnKey!] = mapFn(fn, key);\n\t};\n}\n\nlet memoizeId = 0;\nexport function createMemoizer() {\n\tconst memoizeKeyPrefix = `$memoize${memoizeId++}`;\n\tlet self: any = undefined;\n\n\tconst result = function memoize(target: any, key: string, descriptor: any) {\n\t\tlet fnKey: string | null = null;\n\t\tlet fn: Function | null = null;\n\n\t\tif (typeof descriptor.value === 'function') {\n\t\t\tfnKey = 'value';\n\t\t\tfn = descriptor.value;\n\n\t\t\tif (fn!.length !== 0) {\n\t\t\t\tconsole.warn('Memoize should only be used in functions with zero parameters');\n\t\t\t}\n\t\t} else if (typeof descriptor.get === 'function') {\n\t\t\tfnKey = 'get';\n\t\t\tfn = descriptor.get;\n\t\t}\n\n\t\tif (!fn) {\n\t\t\tthrow new Error('not supported');\n\t\t}\n\n\t\tconst memoizeKey = `${memoizeKeyPrefix}:${key}`;\n\t\tdescriptor[fnKey!] = function (...args: any[]) {\n\t\t\tself = this;\n\n\t\t\tif (!this.hasOwnProperty(memoizeKey)) {\n\t\t\t\tObject.defineProperty(this, memoizeKey, {\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\tenumerable: false,\n\t\t\t\t\twritable: true,\n\t\t\t\t\tvalue: fn!.apply(this, args)\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn this[memoizeKey];\n\t\t};\n\t};\n\n\tresult.clear = () => {\n\t\tif (typeof self === 'undefined') {\n\t\t\treturn;\n\t\t}\n\t\tObject.getOwnPropertyNames(self).forEach(property => {\n\t\t\tif (property.indexOf(memoizeKeyPrefix) === 0) {\n\t\t\t\tdelete self[property];\n\t\t\t}\n\t\t});\n\t};\n\n\treturn result;\n}\n\nexport function memoize(target: any, key: string, descriptor: any) {\n\treturn createMemoizer()(target, key, descriptor);\n}\n\nexport interface IDebounceReducer<T> {\n\t(previousValue: T, ...args: any[]): T;\n}\n\nexport function debounce<T>(delay: number, reducer?: IDebounceReducer<T>, initialValueProvider?: () => T): Function {\n\treturn createDecorator((fn, key) => {\n\t\tconst timerKey = `$debounce$${key}`;\n\t\tconst resultKey = `$debounce$result$${key}`;\n\n\t\treturn function (this: any, ...args: any[]) {\n\t\t\tif (!this[resultKey]) {\n\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t}\n\n\t\t\tclearTimeout(this[timerKey]);\n\n\t\t\tif (reducer) {\n\t\t\t\tthis[resultKey] = reducer(this[resultKey], ...args);\n\t\t\t\targs = [this[resultKey]];\n\t\t\t}\n\n\t\t\tthis[timerKey] = setTimeout(() => {\n\t\t\t\tfn.apply(this, args);\n\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t}, delay);\n\t\t};\n\t});\n}\n\nexport function throttle<T>(delay: number, reducer?: IDebounceReducer<T>, initialValueProvider?: () => T): Function {\n\treturn createDecorator((fn, key) => {\n\t\tconst timerKey = `$throttle$timer$${key}`;\n\t\tconst resultKey = `$throttle$result$${key}`;\n\t\tconst lastRunKey = `$throttle$lastRun$${key}`;\n\t\tconst pendingKey = `$throttle$pending$${key}`;\n\n\t\treturn function (this: any, ...args: any[]) {\n\t\t\tif (!this[resultKey]) {\n\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t}\n\t\t\tif (this[lastRunKey] === null || this[lastRunKey] === undefined) {\n\t\t\t\tthis[lastRunKey] = -Number.MAX_VALUE;\n\t\t\t}\n\n\t\t\tif (reducer) {\n\t\t\t\tthis[resultKey] = reducer(this[resultKey], ...args);\n\t\t\t}\n\n\t\t\tif (this[pendingKey]) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst nextTime = this[lastRunKey] + delay;\n\t\t\tif (nextTime <= Date.now()) {\n\t\t\t\tthis[lastRunKey] = Date.now();\n\t\t\t\tfn.apply(this, [this[resultKey]]);\n\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t} else {\n\t\t\t\tthis[pendingKey] = true;\n\t\t\t\tthis[timerKey] = setTimeout(() => {\n\t\t\t\t\tthis[pendingKey] = false;\n\t\t\t\t\tthis[lastRunKey] = Date.now();\n\t\t\t\t\tfn.apply(this, [this[resultKey]]);\n\t\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t\t}, nextTime - Date.now());\n\t\t\t}\n\t\t};\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport interface ErrorListenerCallback {\n\t(error: any): void;\n}\n\nexport interface ErrorListenerUnbind {\n\t(): void;\n}\n\n// Avoid circular dependency on EventEmitter by implementing a subset of the interface.\nexport class ErrorHandler {\n\tprivate unexpectedErrorHandler: (e: any) => void;\n\tprivate listeners: ErrorListenerCallback[];\n\n\tconstructor() {\n\n\t\tthis.listeners = [];\n\n\t\tthis.unexpectedErrorHandler = function (e: any) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (e.stack) {\n\t\t\t\t\tthrow new Error(e.message + '\\n\\n' + e.stack);\n\t\t\t\t}\n\n\t\t\t\tthrow e;\n\t\t\t}, 0);\n\t\t};\n\t}\n\n\taddListener(listener: ErrorListenerCallback): ErrorListenerUnbind {\n\t\tthis.listeners.push(listener);\n\n\t\treturn () => {\n\t\t\tthis._removeListener(listener);\n\t\t};\n\t}\n\n\tprivate emit(e: any): void {\n\t\tthis.listeners.forEach((listener) => {\n\t\t\tlistener(e);\n\t\t});\n\t}\n\n\tprivate _removeListener(listener: ErrorListenerCallback): void {\n\t\tthis.listeners.splice(this.listeners.indexOf(listener), 1);\n\t}\n\n\tsetUnexpectedErrorHandler(newUnexpectedErrorHandler: (e: any) => void): void {\n\t\tthis.unexpectedErrorHandler = newUnexpectedErrorHandler;\n\t}\n\n\tgetUnexpectedErrorHandler(): (e: any) => void {\n\t\treturn this.unexpectedErrorHandler;\n\t}\n\n\tonUnexpectedError(e: any): void {\n\t\tthis.unexpectedErrorHandler(e);\n\t\tthis.emit(e);\n\t}\n\n\t// For external errors, we don't want the listeners to be called\n\tonUnexpectedExternalError(e: any): void {\n\t\tthis.unexpectedErrorHandler(e);\n\t}\n}\n\nexport const errorHandler = new ErrorHandler();\n\nexport function setUnexpectedErrorHandler(newUnexpectedErrorHandler: (e: any) => void): void {\n\terrorHandler.setUnexpectedErrorHandler(newUnexpectedErrorHandler);\n}\n\nexport function onUnexpectedError(e: any): undefined {\n\t// ignore errors from cancelled promises\n\tif (!isPromiseCanceledError(e)) {\n\t\terrorHandler.onUnexpectedError(e);\n\t}\n\treturn undefined;\n}\n\nexport function onUnexpectedExternalError(e: any): undefined {\n\t// ignore errors from cancelled promises\n\tif (!isPromiseCanceledError(e)) {\n\t\terrorHandler.onUnexpectedExternalError(e);\n\t}\n\treturn undefined;\n}\n\nexport interface SerializedError {\n\treadonly $isError: true;\n\treadonly name: string;\n\treadonly message: string;\n\treadonly stack: string;\n}\n\nexport function transformErrorForSerialization(error: Error): SerializedError;\nexport function transformErrorForSerialization(error: any): any;\nexport function transformErrorForSerialization(error: any): any {\n\tif (error instanceof Error) {\n\t\tlet { name, message } = error;\n\t\tconst stack: string = (<any>error).stacktrace || (<any>error).stack;\n\t\treturn {\n\t\t\t$isError: true,\n\t\t\tname,\n\t\t\tmessage,\n\t\t\tstack\n\t\t};\n\t}\n\n\t// return as is\n\treturn error;\n}\n\n// see https://github.com/v8/v8/wiki/Stack%20Trace%20API#basic-stack-traces\nexport interface V8CallSite {\n\tgetThis(): any;\n\tgetTypeName(): string;\n\tgetFunction(): string;\n\tgetFunctionName(): string;\n\tgetMethodName(): string;\n\tgetFileName(): string;\n\tgetLineNumber(): number;\n\tgetColumnNumber(): number;\n\tgetEvalOrigin(): string;\n\tisToplevel(): boolean;\n\tisEval(): boolean;\n\tisNative(): boolean;\n\tisConstructor(): boolean;\n\ttoString(): string;\n}\n\nconst canceledName = 'Canceled';\n\n/**\n * Checks if the given error is a promise in canceled state\n */\nexport function isPromiseCanceledError(error: any): boolean {\n\treturn error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\n\n/**\n * Returns an error that signals cancellation.\n */\nexport function canceled(): Error {\n\tconst error = new Error(canceledName);\n\terror.name = error.message;\n\treturn error;\n}\n\nexport function illegalArgument(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(`Illegal argument: ${name}`);\n\t} else {\n\t\treturn new Error('Illegal argument');\n\t}\n}\n\nexport function illegalState(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(`Illegal state: ${name}`);\n\t} else {\n\t\treturn new Error('Illegal state');\n\t}\n}\n\nexport function readonly(name?: string): Error {\n\treturn name\n\t\t? new Error(`readonly property '${name} cannot be changed'`)\n\t\t: new Error('readonly property cannot be changed');\n}\n\nexport function disposed(what: string): Error {\n\tconst result = new Error(`${what} has been disposed`);\n\tresult.name = 'DISPOSED';\n\treturn result;\n}\n\nexport function getErrorMessage(err: any): string {\n\tif (!err) {\n\t\treturn 'Error';\n\t}\n\n\tif (err.message) {\n\t\treturn err.message;\n\t}\n\n\tif (err.stack) {\n\t\treturn err.stack.split('\\n')[0];\n\t}\n\n\treturn String(err);\n}\n\nexport class NotImplementedError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper('NotImplemented');\n\t\tif (message) {\n\t\t\tthis.message = message;\n\t\t}\n\t}\n}\n\nexport class NotSupportedError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper('NotSupported');\n\t\tif (message) {\n\t\t\tthis.message = message;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { canceled } from 'vs/base/common/errors';\nimport { ISplice } from 'vs/base/common/sequence';\n\n/**\n * Returns the last element of an array.\n * @param array The array.\n * @param n Which element from the end (default is zero).\n */\nexport function tail<T>(array: ArrayLike<T>, n: number = 0): T {\n\treturn array[array.length - (1 + n)];\n}\n\nexport function tail2<T>(arr: T[]): [T[], T] {\n\tif (arr.length === 0) {\n\t\tthrow new Error('Invalid tail call');\n\t}\n\n\treturn [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\n\nexport function equals<T>(one: ReadonlyArray<T> | undefined, other: ReadonlyArray<T> | undefined, itemEquals: (a: T, b: T) => boolean = (a, b) => a === b): boolean {\n\tif (one === other) {\n\t\treturn true;\n\t}\n\n\tif (!one || !other) {\n\t\treturn false;\n\t}\n\n\tif (one.length !== other.length) {\n\t\treturn false;\n\t}\n\n\tfor (let i = 0, len = one.length; i < len; i++) {\n\t\tif (!itemEquals(one[i], other[i])) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nexport function binarySearch<T>(array: ReadonlyArray<T>, key: T, comparator: (op1: T, op2: T) => number): number {\n\tlet low = 0,\n\t\thigh = array.length - 1;\n\n\twhile (low <= high) {\n\t\tconst mid = ((low + high) / 2) | 0;\n\t\tconst comp = comparator(array[mid], key);\n\t\tif (comp < 0) {\n\t\t\tlow = mid + 1;\n\t\t} else if (comp > 0) {\n\t\t\thigh = mid - 1;\n\t\t} else {\n\t\t\treturn mid;\n\t\t}\n\t}\n\treturn -(low + 1);\n}\n\n/**\n * Takes a sorted array and a function p. The array is sorted in such a way that all elements where p(x) is false\n * are located before all elements where p(x) is true.\n * @returns the least x for which p(x) is true or array.length if no element fullfills the given function.\n */\nexport function findFirstInSorted<T>(array: ReadonlyArray<T>, p: (x: T) => boolean): number {\n\tlet low = 0, high = array.length;\n\tif (high === 0) {\n\t\treturn 0; // no children\n\t}\n\twhile (low < high) {\n\t\tconst mid = Math.floor((low + high) / 2);\n\t\tif (p(array[mid])) {\n\t\t\thigh = mid;\n\t\t} else {\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\treturn low;\n}\n\ntype Compare<T> = (a: T, b: T) => number;\n\n\nexport function quickSelect<T>(nth: number, data: T[], compare: Compare<T>): T {\n\n\tnth = nth | 0;\n\n\tif (nth >= data.length) {\n\t\tthrow new TypeError('invalid index');\n\t}\n\n\tlet pivotValue = data[Math.floor(data.length * Math.random())];\n\tlet lower: T[] = [];\n\tlet higher: T[] = [];\n\tlet pivots: T[] = [];\n\n\tfor (let value of data) {\n\t\tconst val = compare(value, pivotValue);\n\t\tif (val < 0) {\n\t\t\tlower.push(value);\n\t\t} else if (val > 0) {\n\t\t\thigher.push(value);\n\t\t} else {\n\t\t\tpivots.push(value);\n\t\t}\n\t}\n\n\tif (nth < lower.length) {\n\t\treturn quickSelect(nth, lower, compare);\n\t} else if (nth < lower.length + pivots.length) {\n\t\treturn pivots[0];\n\t} else {\n\t\treturn quickSelect(nth - (lower.length + pivots.length), higher, compare);\n\t}\n}\n\n/**\n * Like `Array#sort` but always stable. Usually runs a little slower `than Array#sort`\n * so only use this when actually needing stable sort.\n */\nexport function mergeSort<T>(data: T[], compare: Compare<T>): T[] {\n\t_sort(data, compare, 0, data.length - 1, []);\n\treturn data;\n}\n\nfunction _merge<T>(a: T[], compare: Compare<T>, lo: number, mid: number, hi: number, aux: T[]): void {\n\tlet leftIdx = lo, rightIdx = mid + 1;\n\tfor (let i = lo; i <= hi; i++) {\n\t\taux[i] = a[i];\n\t}\n\tfor (let i = lo; i <= hi; i++) {\n\t\tif (leftIdx > mid) {\n\t\t\t// left side consumed\n\t\t\ta[i] = aux[rightIdx++];\n\t\t} else if (rightIdx > hi) {\n\t\t\t// right side consumed\n\t\t\ta[i] = aux[leftIdx++];\n\t\t} else if (compare(aux[rightIdx], aux[leftIdx]) < 0) {\n\t\t\t// right element is less -> comes first\n\t\t\ta[i] = aux[rightIdx++];\n\t\t} else {\n\t\t\t// left element comes first (less or equal)\n\t\t\ta[i] = aux[leftIdx++];\n\t\t}\n\t}\n}\n\nfunction _sort<T>(a: T[], compare: Compare<T>, lo: number, hi: number, aux: T[]) {\n\tif (hi <= lo) {\n\t\treturn;\n\t}\n\tconst mid = lo + ((hi - lo) / 2) | 0;\n\t_sort(a, compare, lo, mid, aux);\n\t_sort(a, compare, mid + 1, hi, aux);\n\tif (compare(a[mid], a[mid + 1]) <= 0) {\n\t\t// left and right are sorted and if the last-left element is less\n\t\t// or equals than the first-right element there is nothing else\n\t\t// to do\n\t\treturn;\n\t}\n\t_merge(a, compare, lo, mid, hi, aux);\n}\n\n\nexport function groupBy<T>(data: ReadonlyArray<T>, compare: (a: T, b: T) => number): T[][] {\n\tconst result: T[][] = [];\n\tlet currentGroup: T[] | undefined = undefined;\n\tfor (const element of mergeSort(data.slice(0), compare)) {\n\t\tif (!currentGroup || compare(currentGroup[0], element) !== 0) {\n\t\t\tcurrentGroup = [element];\n\t\t\tresult.push(currentGroup);\n\t\t} else {\n\t\t\tcurrentGroup.push(element);\n\t\t}\n\t}\n\treturn result;\n}\n\ninterface IMutableSplice<T> extends ISplice<T> {\n\tdeleteCount: number;\n}\n\n/**\n * Diffs two *sorted* arrays and computes the splices which apply the diff.\n */\nexport function sortedDiff<T>(before: ReadonlyArray<T>, after: ReadonlyArray<T>, compare: (a: T, b: T) => number): ISplice<T>[] {\n\tconst result: IMutableSplice<T>[] = [];\n\n\tfunction pushSplice(start: number, deleteCount: number, toInsert: T[]): void {\n\t\tif (deleteCount === 0 && toInsert.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst latest = result[result.length - 1];\n\n\t\tif (latest && latest.start + latest.deleteCount === start) {\n\t\t\tlatest.deleteCount += deleteCount;\n\t\t\tlatest.toInsert.push(...toInsert);\n\t\t} else {\n\t\t\tresult.push({ start, deleteCount, toInsert });\n\t\t}\n\t}\n\n\tlet beforeIdx = 0;\n\tlet afterIdx = 0;\n\n\twhile (true) {\n\t\tif (beforeIdx === before.length) {\n\t\t\tpushSplice(beforeIdx, 0, after.slice(afterIdx));\n\t\t\tbreak;\n\t\t}\n\t\tif (afterIdx === after.length) {\n\t\t\tpushSplice(beforeIdx, before.length - beforeIdx, []);\n\t\t\tbreak;\n\t\t}\n\n\t\tconst beforeElement = before[beforeIdx];\n\t\tconst afterElement = after[afterIdx];\n\t\tconst n = compare(beforeElement, afterElement);\n\t\tif (n === 0) {\n\t\t\t// equal\n\t\t\tbeforeIdx += 1;\n\t\t\tafterIdx += 1;\n\t\t} else if (n < 0) {\n\t\t\t// beforeElement is smaller -> before element removed\n\t\t\tpushSplice(beforeIdx, 1, []);\n\t\t\tbeforeIdx += 1;\n\t\t} else if (n > 0) {\n\t\t\t// beforeElement is greater -> after element added\n\t\t\tpushSplice(beforeIdx, 0, [afterElement]);\n\t\t\tafterIdx += 1;\n\t\t}\n\t}\n\n\treturn result;\n}\n\n/**\n * Takes two *sorted* arrays and computes their delta (removed, added elements).\n * Finishes in `Math.min(before.length, after.length)` steps.\n */\nexport function delta<T>(before: ReadonlyArray<T>, after: ReadonlyArray<T>, compare: (a: T, b: T) => number): { removed: T[], added: T[] } {\n\tconst splices = sortedDiff(before, after, compare);\n\tconst removed: T[] = [];\n\tconst added: T[] = [];\n\n\tfor (const splice of splices) {\n\t\tremoved.push(...before.slice(splice.start, splice.start + splice.deleteCount));\n\t\tadded.push(...splice.toInsert);\n\t}\n\n\treturn { removed, added };\n}\n\n/**\n * Returns the top N elements from the array.\n *\n * Faster than sorting the entire array when the array is a lot larger than N.\n *\n * @param array The unsorted array.\n * @param compare A sort function for the elements.\n * @param n The number of elements to return.\n * @return The first n elemnts from array when sorted with compare.\n */\nexport function top<T>(array: ReadonlyArray<T>, compare: (a: T, b: T) => number, n: number): T[] {\n\tif (n === 0) {\n\t\treturn [];\n\t}\n\tconst result = array.slice(0, n).sort(compare);\n\ttopStep(array, compare, result, n, array.length);\n\treturn result;\n}\n\n/**\n * Asynchronous variant of `top()` allowing for splitting up work in batches between which the event loop can run.\n *\n * Returns the top N elements from the array.\n *\n * Faster than sorting the entire array when the array is a lot larger than N.\n *\n * @param array The unsorted array.\n * @param compare A sort function for the elements.\n * @param n The number of elements to return.\n * @param batch The number of elements to examine before yielding to the event loop.\n * @return The first n elemnts from array when sorted with compare.\n */\nexport function topAsync<T>(array: T[], compare: (a: T, b: T) => number, n: number, batch: number, token?: CancellationToken): Promise<T[]> {\n\tif (n === 0) {\n\t\treturn Promise.resolve([]);\n\t}\n\n\treturn new Promise((resolve, reject) => {\n\t\t(async () => {\n\t\t\tconst o = array.length;\n\t\t\tconst result = array.slice(0, n).sort(compare);\n\t\t\tfor (let i = n, m = Math.min(n + batch, o); i < o; i = m, m = Math.min(m + batch, o)) {\n\t\t\t\tif (i > n) {\n\t\t\t\t\tawait new Promise(resolve => setTimeout(resolve)); // nextTick() would starve I/O.\n\t\t\t\t}\n\t\t\t\tif (token && token.isCancellationRequested) {\n\t\t\t\t\tthrow canceled();\n\t\t\t\t}\n\t\t\t\ttopStep(array, compare, result, i, m);\n\t\t\t}\n\t\t\treturn result;\n\t\t})()\n\t\t\t.then(resolve, reject);\n\t});\n}\n\nfunction topStep<T>(array: ReadonlyArray<T>, compare: (a: T, b: T) => number, result: T[], i: number, m: number): void {\n\tfor (const n = result.length; i < m; i++) {\n\t\tconst element = array[i];\n\t\tif (compare(element, result[n - 1]) < 0) {\n\t\t\tresult.pop();\n\t\t\tconst j = findFirstInSorted(result, e => compare(element, e) < 0);\n\t\t\tresult.splice(j, 0, element);\n\t\t}\n\t}\n}\n\n/**\n * @returns New array with all falsy values removed. The original array IS NOT modified.\n */\nexport function coalesce<T>(array: ReadonlyArray<T | undefined | null>): T[] {\n\treturn <T[]>array.filter(e => !!e);\n}\n\n/**\n * Remove all falsey values from `array`. The original array IS modified.\n */\nexport function coalesceInPlace<T>(array: Array<T | undefined | null>): void {\n\tlet to = 0;\n\tfor (let i = 0; i < array.length; i++) {\n\t\tif (!!array[i]) {\n\t\t\tarray[to] = array[i];\n\t\t\tto += 1;\n\t\t}\n\t}\n\tarray.length = to;\n}\n\n/**\n * Moves the element in the array for the provided positions.\n */\nexport function move(array: any[], from: number, to: number): void {\n\tarray.splice(to, 0, array.splice(from, 1)[0]);\n}\n\n/**\n * @returns false if the provided object is an array and not empty.\n */\nexport function isFalsyOrEmpty(obj: any): boolean {\n\treturn !Array.isArray(obj) || obj.length === 0;\n}\n\n/**\n * @returns True if the provided object is an array and has at least one element.\n */\nexport function isNonEmptyArray<T>(obj: T[] | undefined | null): obj is T[];\nexport function isNonEmptyArray<T>(obj: readonly T[] | undefined | null): obj is readonly T[];\nexport function isNonEmptyArray<T>(obj: T[] | readonly T[] | undefined | null): obj is T[] | readonly T[] {\n\treturn Array.isArray(obj) && obj.length > 0;\n}\n\n/**\n * Removes duplicates from the given array. The optional keyFn allows to specify\n * how elements are checked for equalness by returning a unique string for each.\n */\nexport function distinct<T>(array: ReadonlyArray<T>, keyFn?: (t: T) => string): T[] {\n\tif (!keyFn) {\n\t\treturn array.filter((element, position) => {\n\t\t\treturn array.indexOf(element) === position;\n\t\t});\n\t}\n\n\tconst seen: { [key: string]: boolean; } = Object.create(null);\n\treturn array.filter((elem) => {\n\t\tconst key = keyFn(elem);\n\t\tif (seen[key]) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen[key] = true;\n\n\t\treturn true;\n\t});\n}\n\nexport function distinctES6<T>(array: ReadonlyArray<T>): T[] {\n\tconst seen = new Set<T>();\n\treturn array.filter(element => {\n\t\tif (seen.has(element)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen.add(element);\n\t\treturn true;\n\t});\n}\n\nexport function uniqueFilter<T>(keyFn: (t: T) => string): (t: T) => boolean {\n\tconst seen: { [key: string]: boolean; } = Object.create(null);\n\n\treturn element => {\n\t\tconst key = keyFn(element);\n\n\t\tif (seen[key]) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen[key] = true;\n\t\treturn true;\n\t};\n}\n\nexport function lastIndex<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean): number {\n\tfor (let i = array.length - 1; i >= 0; i--) {\n\t\tconst element = array[i];\n\n\t\tif (fn(element)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn -1;\n}\n\nexport function firstOrDefault<T, NotFound = T>(array: ReadonlyArray<T>, notFoundValue: NotFound): T | NotFound;\nexport function firstOrDefault<T>(array: ReadonlyArray<T>): T | undefined;\nexport function firstOrDefault<T, NotFound = T>(array: ReadonlyArray<T>, notFoundValue?: NotFound): T | NotFound | undefined {\n\treturn array.length > 0 ? array[0] : notFoundValue;\n}\n\nexport function commonPrefixLength<T>(one: ReadonlyArray<T>, other: ReadonlyArray<T>, equals: (a: T, b: T) => boolean = (a, b) => a === b): number {\n\tlet result = 0;\n\n\tfor (let i = 0, len = Math.min(one.length, other.length); i < len && equals(one[i], other[i]); i++) {\n\t\tresult++;\n\t}\n\n\treturn result;\n}\n\nexport function flatten<T>(arr: T[][]): T[] {\n\treturn (<T[]>[]).concat(...arr);\n}\n\nexport function range(to: number): number[];\nexport function range(from: number, to: number): number[];\nexport function range(arg: number, to?: number): number[] {\n\tlet from = typeof to === 'number' ? arg : 0;\n\n\tif (typeof to === 'number') {\n\t\tfrom = arg;\n\t} else {\n\t\tfrom = 0;\n\t\tto = arg;\n\t}\n\n\tconst result: number[] = [];\n\n\tif (from <= to) {\n\t\tfor (let i = from; i < to; i++) {\n\t\t\tresult.push(i);\n\t\t}\n\t} else {\n\t\tfor (let i = from; i > to; i--) {\n\t\t\tresult.push(i);\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function index<T>(array: ReadonlyArray<T>, indexer: (t: T) => string): { [key: string]: T; };\nexport function index<T, R>(array: ReadonlyArray<T>, indexer: (t: T) => string, mapper: (t: T) => R): { [key: string]: R; };\nexport function index<T, R>(array: ReadonlyArray<T>, indexer: (t: T) => string, mapper?: (t: T) => R): { [key: string]: R; } {\n\treturn array.reduce((r, t) => {\n\t\tr[indexer(t)] = mapper ? mapper(t) : t;\n\t\treturn r;\n\t}, Object.create(null));\n}\n\n/**\n * Inserts an element into an array. Returns a function which, when\n * called, will remove that element from the array.\n */\nexport function insert<T>(array: T[], element: T): () => void {\n\tarray.push(element);\n\n\treturn () => remove(array, element);\n}\n\n/**\n * Removes an element from an array if it can be found.\n */\nexport function remove<T>(array: T[], element: T): T | undefined {\n\tconst index = array.indexOf(element);\n\tif (index > -1) {\n\t\tarray.splice(index, 1);\n\n\t\treturn element;\n\t}\n\n\treturn undefined;\n}\n\n/**\n * Insert `insertArr` inside `target` at `insertIndex`.\n * Please don't touch unless you understand https://jsperf.com/inserting-an-array-within-an-array\n */\nexport function arrayInsert<T>(target: T[], insertIndex: number, insertArr: T[]): T[] {\n\tconst before = target.slice(0, insertIndex);\n\tconst after = target.slice(insertIndex);\n\treturn before.concat(insertArr, after);\n}\n\n/**\n * Uses Fisher-Yates shuffle to shuffle the given array\n */\nexport function shuffle<T>(array: T[], _seed?: number): void {\n\tlet rand: () => number;\n\n\tif (typeof _seed === 'number') {\n\t\tlet seed = _seed;\n\t\t// Seeded random number generator in JS. Modified from:\n\t\t// https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript\n\t\trand = () => {\n\t\t\tconst x = Math.sin(seed++) * 179426549; // throw away most significant digits and reduce any potential bias\n\t\t\treturn x - Math.floor(x);\n\t\t};\n\t} else {\n\t\trand = Math.random;\n\t}\n\n\tfor (let i = array.length - 1; i > 0; i -= 1) {\n\t\tconst j = Math.floor(rand() * (i + 1));\n\t\tconst temp = array[i];\n\t\tarray[i] = array[j];\n\t\tarray[j] = temp;\n\t}\n}\n\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart<T>(arr: T[], value: T): void {\n\tconst index = arr.indexOf(value);\n\n\tif (index > -1) {\n\t\tarr.splice(index, 1);\n\t\tarr.unshift(value);\n\t}\n}\n\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd<T>(arr: T[], value: T): void {\n\tconst index = arr.indexOf(value);\n\n\tif (index > -1) {\n\t\tarr.splice(index, 1);\n\t\tarr.push(value);\n\t}\n}\n\nexport function mapArrayOrNot<T, U>(items: T | T[], fn: (_: T) => U): U | U[] {\n\treturn Array.isArray(items) ?\n\t\titems.map(fn) :\n\t\tfn(items);\n}\n\nexport function asArray<T>(x: T | T[]): T[];\nexport function asArray<T>(x: T | readonly T[]): readonly T[];\nexport function asArray<T>(x: T | T[]): T[] {\n\treturn Array.isArray(x) ? x : [x];\n}\n\nexport function getRandomElement<T>(arr: T[]): T | undefined {\n\treturn arr[Math.floor(Math.random() * arr.length)];\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport function once<T extends Function>(this: unknown, fn: T): T {\n\tconst _this = this;\n\tlet didCall = false;\n\tlet result: unknown;\n\n\treturn function () {\n\t\tif (didCall) {\n\t\t\treturn result;\n\t\t}\n\n\t\tdidCall = true;\n\t\tresult = fn.apply(_this, arguments);\n\n\t\treturn result;\n\t} as unknown as T;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport namespace Iterable {\n\n\texport function is<T = any>(thing: any): thing is IterableIterator<T> {\n\t\treturn thing && typeof thing === 'object' && typeof thing[Symbol.iterator] === 'function';\n\t}\n\n\tconst _empty: Iterable<any> = Object.freeze([]);\n\texport function empty<T = any>(): Iterable<T> {\n\t\treturn _empty;\n\t}\n\n\texport function* single<T>(element: T): Iterable<T> {\n\t\tyield element;\n\t}\n\n\texport function from<T>(iterable: Iterable<T> | undefined | null): Iterable<T> {\n\t\treturn iterable || _empty;\n\t}\n\n\texport function first<T>(iterable: Iterable<T>): T | undefined {\n\t\treturn iterable[Symbol.iterator]().next().value;\n\t}\n\n\texport function some<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): boolean {\n\t\tfor (const element of iterable) {\n\t\t\tif (predicate(element)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\texport function* filter<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): Iterable<T> {\n\t\tfor (const element of iterable) {\n\t\t\tif (predicate(element)) {\n\t\t\t\tyield element;\n\t\t\t}\n\t\t}\n\t}\n\n\texport function* map<T, R>(iterable: Iterable<T>, fn: (t: T) => R): Iterable<R> {\n\t\tfor (const element of iterable) {\n\t\t\tyield fn(element);\n\t\t}\n\t}\n\n\texport function* concat<T>(...iterables: Iterable<T>[]): Iterable<T> {\n\t\tfor (const iterable of iterables) {\n\t\t\tfor (const element of iterable) {\n\t\t\t\tyield element;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Consumes `atMost` elements from iterable and returns the consumed elements,\n\t * and an iterable for the rest of the elements.\n\t */\n\texport function consume<T>(iterable: Iterable<T>, atMost: number = Number.POSITIVE_INFINITY): [T[], Iterable<T>] {\n\t\tconst consumed: T[] = [];\n\n\t\tif (atMost === 0) {\n\t\t\treturn [consumed, iterable];\n\t\t}\n\n\t\tconst iterator = iterable[Symbol.iterator]();\n\n\t\tfor (let i = 0; i < atMost; i++) {\n\t\t\tconst next = iterator.next();\n\n\t\t\tif (next.done) {\n\t\t\t\treturn [consumed, Iterable.empty()];\n\t\t\t}\n\n\t\t\tconsumed.push(next.value);\n\t\t}\n\n\t\treturn [consumed, { [Symbol.iterator]() { return iterator; } }];\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport const enum ScanError {\n\tNone = 0,\n\tUnexpectedEndOfComment = 1,\n\tUnexpectedEndOfString = 2,\n\tUnexpectedEndOfNumber = 3,\n\tInvalidUnicode = 4,\n\tInvalidEscapeCharacter = 5,\n\tInvalidCharacter = 6\n}\n\nexport const enum SyntaxKind {\n\tOpenBraceToken = 1,\n\tCloseBraceToken = 2,\n\tOpenBracketToken = 3,\n\tCloseBracketToken = 4,\n\tCommaToken = 5,\n\tColonToken = 6,\n\tNullKeyword = 7,\n\tTrueKeyword = 8,\n\tFalseKeyword = 9,\n\tStringLiteral = 10,\n\tNumericLiteral = 11,\n\tLineCommentTrivia = 12,\n\tBlockCommentTrivia = 13,\n\tLineBreakTrivia = 14,\n\tTrivia = 15,\n\tUnknown = 16,\n\tEOF = 17\n}\n\n/**\n * The scanner object, representing a JSON scanner at a position in the input string.\n */\nexport interface JSONScanner {\n\t/**\n\t * Sets the scan position to a new offset. A call to 'scan' is needed to get the first token.\n\t */\n\tsetPosition(pos: number): void;\n\t/**\n\t * Read the next token. Returns the token code.\n\t */\n\tscan(): SyntaxKind;\n\t/**\n\t * Returns the current scan position, which is after the last read token.\n\t */\n\tgetPosition(): number;\n\t/**\n\t * Returns the last read token.\n\t */\n\tgetToken(): SyntaxKind;\n\t/**\n\t * Returns the last read token value. The value for strings is the decoded string content. For numbers its of type number, for boolean it's true or false.\n\t */\n\tgetTokenValue(): string;\n\t/**\n\t * The start offset of the last read token.\n\t */\n\tgetTokenOffset(): number;\n\t/**\n\t * The length of the last read token.\n\t */\n\tgetTokenLength(): number;\n\t/**\n\t * An error code of the last scan.\n\t */\n\tgetTokenError(): ScanError;\n}\n\n\n\nexport interface ParseError {\n\terror: ParseErrorCode;\n\toffset: number;\n\tlength: number;\n}\n\nexport const enum ParseErrorCode {\n\tInvalidSymbol = 1,\n\tInvalidNumberFormat = 2,\n\tPropertyNameExpected = 3,\n\tValueExpected = 4,\n\tColonExpected = 5,\n\tCommaExpected = 6,\n\tCloseBraceExpected = 7,\n\tCloseBracketExpected = 8,\n\tEndOfFileExpected = 9,\n\tInvalidCommentToken = 10,\n\tUnexpectedEndOfComment = 11,\n\tUnexpectedEndOfString = 12,\n\tUnexpectedEndOfNumber = 13,\n\tInvalidUnicode = 14,\n\tInvalidEscapeCharacter = 15,\n\tInvalidCharacter = 16\n}\n\nexport type NodeType = 'object' | 'array' | 'property' | 'string' | 'number' | 'boolean' | 'null';\n\nexport interface Node {\n\treadonly type: NodeType;\n\treadonly value?: any;\n\treadonly offset: number;\n\treadonly length: number;\n\treadonly colonOffset?: number;\n\treadonly parent?: Node;\n\treadonly children?: Node[];\n}\n\nexport type Segment = string | number;\nexport type JSONPath = Segment[];\n\nexport interface Location {\n\t/**\n\t * The previous property key or literal value (string, number, boolean or null) or undefined.\n\t */\n\tpreviousNode?: Node;\n\t/**\n\t * The path describing the location in the JSON document. The path consists of a sequence strings\n\t * representing an object property or numbers for array indices.\n\t */\n\tpath: JSONPath;\n\t/**\n\t * Matches the locations path against a pattern consisting of strings (for properties) and numbers (for array indices).\n\t * '*' will match a single segment, of any property name or index.\n\t * '**' will match a sequece of segments or no segment, of any property name or index.\n\t */\n\tmatches: (patterns: JSONPath) => boolean;\n\t/**\n\t * If set, the location's offset is at a property key.\n\t */\n\tisAtPropertyKey: boolean;\n}\n\nexport interface ParseOptions {\n\tdisallowComments?: boolean;\n\tallowTrailingComma?: boolean;\n\tallowEmptyContent?: boolean;\n}\n\nexport namespace ParseOptions {\n\texport const DEFAULT = {\n\t\tallowTrailingComma: true\n\t};\n}\n\nexport interface JSONVisitor {\n\t/**\n\t * Invoked when an open brace is encountered and an object is started. The offset and length represent the location of the open brace.\n\t */\n\tonObjectBegin?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a property is encountered. The offset and length represent the location of the property name.\n\t */\n\tonObjectProperty?: (property: string, offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a closing brace is encountered and an object is completed. The offset and length represent the location of the closing brace.\n\t */\n\tonObjectEnd?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when an open bracket is encountered. The offset and length represent the location of the open bracket.\n\t */\n\tonArrayBegin?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a closing bracket is encountered. The offset and length represent the location of the closing bracket.\n\t */\n\tonArrayEnd?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a literal value is encountered. The offset and length represent the location of the literal value.\n\t */\n\tonLiteralValue?: (value: any, offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a comma or colon separator is encountered. The offset and length represent the location of the separator.\n\t */\n\tonSeparator?: (character: string, offset: number, length: number) => void;\n\n\t/**\n\t * When comments are allowed, invoked when a line or block comment is encountered. The offset and length represent the location of the comment.\n\t */\n\tonComment?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked on an error.\n\t */\n\tonError?: (error: ParseErrorCode, offset: number, length: number) => void;\n}\n\n/**\n * Creates a JSON scanner on the given text.\n * If ignoreTrivia is set, whitespaces or comments are ignored.\n */\nexport function createScanner(text: string, ignoreTrivia: boolean = false): JSONScanner {\n\n\tlet pos = 0,\n\t\tlen = text.length,\n\t\tvalue: string = '',\n\t\ttokenOffset = 0,\n\t\ttoken: SyntaxKind = SyntaxKind.Unknown,\n\t\tscanError: ScanError = ScanError.None;\n\n\tfunction scanHexDigits(count: number): number {\n\t\tlet digits = 0;\n\t\tlet hexValue = 0;\n\t\twhile (digits < count) {\n\t\t\tconst ch = text.charCodeAt(pos);\n\t\t\tif (ch >= CharacterCodes._0 && ch <= CharacterCodes._9) {\n\t\t\t\thexValue = hexValue * 16 + ch - CharacterCodes._0;\n\t\t\t}\n\t\t\telse if (ch >= CharacterCodes.A && ch <= CharacterCodes.F) {\n\t\t\t\thexValue = hexValue * 16 + ch - CharacterCodes.A + 10;\n\t\t\t}\n\t\t\telse if (ch >= CharacterCodes.a && ch <= CharacterCodes.f) {\n\t\t\t\thexValue = hexValue * 16 + ch - CharacterCodes.a + 10;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tpos++;\n\t\t\tdigits++;\n\t\t}\n\t\tif (digits < count) {\n\t\t\thexValue = -1;\n\t\t}\n\t\treturn hexValue;\n\t}\n\n\tfunction setPosition(newPosition: number) {\n\t\tpos = newPosition;\n\t\tvalue = '';\n\t\ttokenOffset = 0;\n\t\ttoken = SyntaxKind.Unknown;\n\t\tscanError = ScanError.None;\n\t}\n\n\tfunction scanNumber(): string {\n\t\tconst start = pos;\n\t\tif (text.charCodeAt(pos) === CharacterCodes._0) {\n\t\t\tpos++;\n\t\t} else {\n\t\t\tpos++;\n\t\t\twhile (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\tpos++;\n\t\t\t}\n\t\t}\n\t\tif (pos < text.length && text.charCodeAt(pos) === CharacterCodes.dot) {\n\t\t\tpos++;\n\t\t\tif (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\tpos++;\n\t\t\t\twhile (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\t\tpos++;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tscanError = ScanError.UnexpectedEndOfNumber;\n\t\t\t\treturn text.substring(start, pos);\n\t\t\t}\n\t\t}\n\t\tlet end = pos;\n\t\tif (pos < text.length && (text.charCodeAt(pos) === CharacterCodes.E || text.charCodeAt(pos) === CharacterCodes.e)) {\n\t\t\tpos++;\n\t\t\tif (pos < text.length && text.charCodeAt(pos) === CharacterCodes.plus || text.charCodeAt(pos) === CharacterCodes.minus) {\n\t\t\t\tpos++;\n\t\t\t}\n\t\t\tif (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\tpos++;\n\t\t\t\twhile (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\t\tpos++;\n\t\t\t\t}\n\t\t\t\tend = pos;\n\t\t\t} else {\n\t\t\t\tscanError = ScanError.UnexpectedEndOfNumber;\n\t\t\t}\n\t\t}\n\t\treturn text.substring(start, end);\n\t}\n\n\tfunction scanString(): string {\n\n\t\tlet result = '',\n\t\t\tstart = pos;\n\n\t\twhile (true) {\n\t\t\tif (pos >= len) {\n\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\tscanError = ScanError.UnexpectedEndOfString;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tconst ch = text.charCodeAt(pos);\n\t\t\tif (ch === CharacterCodes.doubleQuote) {\n\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\tpos++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (ch === CharacterCodes.backslash) {\n\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\tpos++;\n\t\t\t\tif (pos >= len) {\n\t\t\t\t\tscanError = ScanError.UnexpectedEndOfString;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tconst ch2 = text.charCodeAt(pos++);\n\t\t\t\tswitch (ch2) {\n\t\t\t\t\tcase CharacterCodes.doubleQuote:\n\t\t\t\t\t\tresult += '\\\"';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.backslash:\n\t\t\t\t\t\tresult += '\\\\';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.slash:\n\t\t\t\t\t\tresult += '/';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.b:\n\t\t\t\t\t\tresult += '\\b';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.f:\n\t\t\t\t\t\tresult += '\\f';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.n:\n\t\t\t\t\t\tresult += '\\n';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.r:\n\t\t\t\t\t\tresult += '\\r';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.t:\n\t\t\t\t\t\tresult += '\\t';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.u:\n\t\t\t\t\t\tconst ch3 = scanHexDigits(4);\n\t\t\t\t\t\tif (ch3 >= 0) {\n\t\t\t\t\t\t\tresult += String.fromCharCode(ch3);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tscanError = ScanError.InvalidUnicode;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tscanError = ScanError.InvalidEscapeCharacter;\n\t\t\t\t}\n\t\t\t\tstart = pos;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (ch >= 0 && ch <= 0x1F) {\n\t\t\t\tif (isLineBreak(ch)) {\n\t\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\t\tscanError = ScanError.UnexpectedEndOfString;\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\tscanError = ScanError.InvalidCharacter;\n\t\t\t\t\t// mark as error but continue with string\n\t\t\t\t}\n\t\t\t}\n\t\t\tpos++;\n\t\t}\n\t\treturn result;\n\t}\n\n\tfunction scanNext(): SyntaxKind {\n\n\t\tvalue = '';\n\t\tscanError = ScanError.None;\n\n\t\ttokenOffset = pos;\n\n\t\tif (pos >= len) {\n\t\t\t// at the end\n\t\t\ttokenOffset = len;\n\t\t\treturn token = SyntaxKind.EOF;\n\t\t}\n\n\t\tlet code = text.charCodeAt(pos);\n\t\t// trivia: whitespace\n\t\tif (isWhitespace(code)) {\n\t\t\tdo {\n\t\t\t\tpos++;\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tcode = text.charCodeAt(pos);\n\t\t\t} while (isWhitespace(code));\n\n\t\t\treturn token = SyntaxKind.Trivia;\n\t\t}\n\n\t\t// trivia: newlines\n\t\tif (isLineBreak(code)) {\n\t\t\tpos++;\n\t\t\tvalue += String.fromCharCode(code);\n\t\t\tif (code === CharacterCodes.carriageReturn && text.charCodeAt(pos) === CharacterCodes.lineFeed) {\n\t\t\t\tpos++;\n\t\t\t\tvalue += '\\n';\n\t\t\t}\n\t\t\treturn token = SyntaxKind.LineBreakTrivia;\n\t\t}\n\n\t\tswitch (code) {\n\t\t\t// tokens: []{}:,\n\t\t\tcase CharacterCodes.openBrace:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.OpenBraceToken;\n\t\t\tcase CharacterCodes.closeBrace:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.CloseBraceToken;\n\t\t\tcase CharacterCodes.openBracket:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.OpenBracketToken;\n\t\t\tcase CharacterCodes.closeBracket:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.CloseBracketToken;\n\t\t\tcase CharacterCodes.colon:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.ColonToken;\n\t\t\tcase CharacterCodes.comma:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.CommaToken;\n\n\t\t\t// strings\n\t\t\tcase CharacterCodes.doubleQuote:\n\t\t\t\tpos++;\n\t\t\t\tvalue = scanString();\n\t\t\t\treturn token = SyntaxKind.StringLiteral;\n\n\t\t\t// comments\n\t\t\tcase CharacterCodes.slash:\n\t\t\t\tconst start = pos - 1;\n\t\t\t\t// Single-line comment\n\t\t\t\tif (text.charCodeAt(pos + 1) === CharacterCodes.slash) {\n\t\t\t\t\tpos += 2;\n\n\t\t\t\t\twhile (pos < len) {\n\t\t\t\t\t\tif (isLineBreak(text.charCodeAt(pos))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpos++;\n\n\t\t\t\t\t}\n\t\t\t\t\tvalue = text.substring(start, pos);\n\t\t\t\t\treturn token = SyntaxKind.LineCommentTrivia;\n\t\t\t\t}\n\n\t\t\t\t// Multi-line comment\n\t\t\t\tif (text.charCodeAt(pos + 1) === CharacterCodes.asterisk) {\n\t\t\t\t\tpos += 2;\n\n\t\t\t\t\tconst safeLength = len - 1; // For lookahead.\n\t\t\t\t\tlet commentClosed = false;\n\t\t\t\t\twhile (pos < safeLength) {\n\t\t\t\t\t\tconst ch = text.charCodeAt(pos);\n\n\t\t\t\t\t\tif (ch === CharacterCodes.asterisk && text.charCodeAt(pos + 1) === CharacterCodes.slash) {\n\t\t\t\t\t\t\tpos += 2;\n\t\t\t\t\t\t\tcommentClosed = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpos++;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!commentClosed) {\n\t\t\t\t\t\tpos++;\n\t\t\t\t\t\tscanError = ScanError.UnexpectedEndOfComment;\n\t\t\t\t\t}\n\n\t\t\t\t\tvalue = text.substring(start, pos);\n\t\t\t\t\treturn token = SyntaxKind.BlockCommentTrivia;\n\t\t\t\t}\n\t\t\t\t// just a single slash\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.Unknown;\n\n\t\t\t// numbers\n\t\t\tcase CharacterCodes.minus:\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tpos++;\n\t\t\t\tif (pos === len || !isDigit(text.charCodeAt(pos))) {\n\t\t\t\t\treturn token = SyntaxKind.Unknown;\n\t\t\t\t}\n\t\t\t// found a minus, followed by a number so\n\t\t\t// we fall through to proceed with scanning\n\t\t\t// numbers\n\t\t\tcase CharacterCodes._0:\n\t\t\tcase CharacterCodes._1:\n\t\t\tcase CharacterCodes._2:\n\t\t\tcase CharacterCodes._3:\n\t\t\tcase CharacterCodes._4:\n\t\t\tcase CharacterCodes._5:\n\t\t\tcase CharacterCodes._6:\n\t\t\tcase CharacterCodes._7:\n\t\t\tcase CharacterCodes._8:\n\t\t\tcase CharacterCodes._9:\n\t\t\t\tvalue += scanNumber();\n\t\t\t\treturn token = SyntaxKind.NumericLiteral;\n\t\t\t// literals and unknown symbols\n\t\t\tdefault:\n\t\t\t\t// is a literal? Read the full word.\n\t\t\t\twhile (pos < len && isUnknownContentCharacter(code)) {\n\t\t\t\t\tpos++;\n\t\t\t\t\tcode = text.charCodeAt(pos);\n\t\t\t\t}\n\t\t\t\tif (tokenOffset !== pos) {\n\t\t\t\t\tvalue = text.substring(tokenOffset, pos);\n\t\t\t\t\t// keywords: true, false, null\n\t\t\t\t\tswitch (value) {\n\t\t\t\t\t\tcase 'true': return token = SyntaxKind.TrueKeyword;\n\t\t\t\t\t\tcase 'false': return token = SyntaxKind.FalseKeyword;\n\t\t\t\t\t\tcase 'null': return token = SyntaxKind.NullKeyword;\n\t\t\t\t\t}\n\t\t\t\t\treturn token = SyntaxKind.Unknown;\n\t\t\t\t}\n\t\t\t\t// some\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.Unknown;\n\t\t}\n\t}\n\n\tfunction isUnknownContentCharacter(code: CharacterCodes) {\n\t\tif (isWhitespace(code) || isLineBreak(code)) {\n\t\t\treturn false;\n\t\t}\n\t\tswitch (code) {\n\t\t\tcase CharacterCodes.closeBrace:\n\t\t\tcase CharacterCodes.closeBracket:\n\t\t\tcase CharacterCodes.openBrace:\n\t\t\tcase CharacterCodes.openBracket:\n\t\t\tcase CharacterCodes.doubleQuote:\n\t\t\tcase CharacterCodes.colon:\n\t\t\tcase CharacterCodes.comma:\n\t\t\tcase CharacterCodes.slash:\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\n\tfunction scanNextNonTrivia(): SyntaxKind {\n\t\tlet result: SyntaxKind;\n\t\tdo {\n\t\t\tresult = scanNext();\n\t\t} while (result >= SyntaxKind.LineCommentTrivia && result <= SyntaxKind.Trivia);\n\t\treturn result;\n\t}\n\n\treturn {\n\t\tsetPosition: setPosition,\n\t\tgetPosition: () => pos,\n\t\tscan: ignoreTrivia ? scanNextNonTrivia : scanNext,\n\t\tgetToken: () => token,\n\t\tgetTokenValue: () => value,\n\t\tgetTokenOffset: () => tokenOffset,\n\t\tgetTokenLength: () => pos - tokenOffset,\n\t\tgetTokenError: () => scanError\n\t};\n}\n\nfunction isWhitespace(ch: number): boolean {\n\treturn ch === CharacterCodes.space || ch === CharacterCodes.tab || ch === CharacterCodes.verticalTab || ch === CharacterCodes.formFeed ||\n\t\tch === CharacterCodes.nonBreakingSpace || ch === CharacterCodes.ogham || ch >= CharacterCodes.enQuad && ch <= CharacterCodes.zeroWidthSpace ||\n\t\tch === CharacterCodes.narrowNoBreakSpace || ch === CharacterCodes.mathematicalSpace || ch === CharacterCodes.ideographicSpace || ch === CharacterCodes.byteOrderMark;\n}\n\nfunction isLineBreak(ch: number): boolean {\n\treturn ch === CharacterCodes.lineFeed || ch === CharacterCodes.carriageReturn || ch === CharacterCodes.lineSeparator || ch === CharacterCodes.paragraphSeparator;\n}\n\nfunction isDigit(ch: number): boolean {\n\treturn ch >= CharacterCodes._0 && ch <= CharacterCodes._9;\n}\n\nconst enum CharacterCodes {\n\tnullCharacter = 0,\n\tmaxAsciiCharacter = 0x7F,\n\n\tlineFeed = 0x0A,              // \\n\n\tcarriageReturn = 0x0D,        // \\r\n\tlineSeparator = 0x2028,\n\tparagraphSeparator = 0x2029,\n\n\t// REVIEW: do we need to support this?  The scanner doesn't, but our IText does.  This seems\n\t// like an odd disparity?  (Or maybe it's completely fine for them to be different).\n\tnextLine = 0x0085,\n\n\t// Unicode 3.0 space characters\n\tspace = 0x0020,   // \" \"\n\tnonBreakingSpace = 0x00A0,   //\n\tenQuad = 0x2000,\n\temQuad = 0x2001,\n\tenSpace = 0x2002,\n\temSpace = 0x2003,\n\tthreePerEmSpace = 0x2004,\n\tfourPerEmSpace = 0x2005,\n\tsixPerEmSpace = 0x2006,\n\tfigureSpace = 0x2007,\n\tpunctuationSpace = 0x2008,\n\tthinSpace = 0x2009,\n\thairSpace = 0x200A,\n\tzeroWidthSpace = 0x200B,\n\tnarrowNoBreakSpace = 0x202F,\n\tideographicSpace = 0x3000,\n\tmathematicalSpace = 0x205F,\n\togham = 0x1680,\n\n\t_ = 0x5F,\n\t$ = 0x24,\n\n\t_0 = 0x30,\n\t_1 = 0x31,\n\t_2 = 0x32,\n\t_3 = 0x33,\n\t_4 = 0x34,\n\t_5 = 0x35,\n\t_6 = 0x36,\n\t_7 = 0x37,\n\t_8 = 0x38,\n\t_9 = 0x39,\n\n\ta = 0x61,\n\tb = 0x62,\n\tc = 0x63,\n\td = 0x64,\n\te = 0x65,\n\tf = 0x66,\n\tg = 0x67,\n\th = 0x68,\n\ti = 0x69,\n\tj = 0x6A,\n\tk = 0x6B,\n\tl = 0x6C,\n\tm = 0x6D,\n\tn = 0x6E,\n\to = 0x6F,\n\tp = 0x70,\n\tq = 0x71,\n\tr = 0x72,\n\ts = 0x73,\n\tt = 0x74,\n\tu = 0x75,\n\tv = 0x76,\n\tw = 0x77,\n\tx = 0x78,\n\ty = 0x79,\n\tz = 0x7A,\n\n\tA = 0x41,\n\tB = 0x42,\n\tC = 0x43,\n\tD = 0x44,\n\tE = 0x45,\n\tF = 0x46,\n\tG = 0x47,\n\tH = 0x48,\n\tI = 0x49,\n\tJ = 0x4A,\n\tK = 0x4B,\n\tL = 0x4C,\n\tM = 0x4D,\n\tN = 0x4E,\n\tO = 0x4F,\n\tP = 0x50,\n\tQ = 0x51,\n\tR = 0x52,\n\tS = 0x53,\n\tT = 0x54,\n\tU = 0x55,\n\tV = 0x56,\n\tW = 0x57,\n\tX = 0x58,\n\tY = 0x59,\n\tZ = 0x5A,\n\n\tampersand = 0x26,             // &\n\tasterisk = 0x2A,              // *\n\tat = 0x40,                    // @\n\tbackslash = 0x5C,             // \\\n\tbar = 0x7C,                   // |\n\tcaret = 0x5E,                 // ^\n\tcloseBrace = 0x7D,            // }\n\tcloseBracket = 0x5D,          // ]\n\tcloseParen = 0x29,            // )\n\tcolon = 0x3A,                 // :\n\tcomma = 0x2C,                 // ,\n\tdot = 0x2E,                   // .\n\tdoubleQuote = 0x22,           // \"\n\tequals = 0x3D,                // =\n\texclamation = 0x21,           // !\n\tgreaterThan = 0x3E,           // >\n\tlessThan = 0x3C,              // <\n\tminus = 0x2D,                 // -\n\topenBrace = 0x7B,             // {\n\topenBracket = 0x5B,           // [\n\topenParen = 0x28,             // (\n\tpercent = 0x25,               // %\n\tplus = 0x2B,                  // +\n\tquestion = 0x3F,              // ?\n\tsemicolon = 0x3B,             // ;\n\tsingleQuote = 0x27,           // '\n\tslash = 0x2F,                 // /\n\ttilde = 0x7E,                 // ~\n\n\tbackspace = 0x08,             // \\b\n\tformFeed = 0x0C,              // \\f\n\tbyteOrderMark = 0xFEFF,\n\ttab = 0x09,                   // \\t\n\tverticalTab = 0x0B,           // \\v\n}\n\ninterface NodeImpl extends Node {\n\ttype: NodeType;\n\tvalue?: any;\n\toffset: number;\n\tlength: number;\n\tcolonOffset?: number;\n\tparent?: NodeImpl;\n\tchildren?: NodeImpl[];\n}\n\n/**\n * For a given offset, evaluate the location in the JSON document. Each segment in the location path is either a property name or an array index.\n */\nexport function getLocation(text: string, position: number): Location {\n\tconst segments: Segment[] = []; // strings or numbers\n\tconst earlyReturnException = new Object();\n\tlet previousNode: NodeImpl | undefined = undefined;\n\tconst previousNodeInst: NodeImpl = {\n\t\tvalue: {},\n\t\toffset: 0,\n\t\tlength: 0,\n\t\ttype: 'object',\n\t\tparent: undefined\n\t};\n\tlet isAtPropertyKey = false;\n\tfunction setPreviousNode(value: string, offset: number, length: number, type: NodeType) {\n\t\tpreviousNodeInst.value = value;\n\t\tpreviousNodeInst.offset = offset;\n\t\tpreviousNodeInst.length = length;\n\t\tpreviousNodeInst.type = type;\n\t\tpreviousNodeInst.colonOffset = undefined;\n\t\tpreviousNode = previousNodeInst;\n\t}\n\ttry {\n\n\t\tvisit(text, {\n\t\t\tonObjectBegin: (offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tpreviousNode = undefined;\n\t\t\t\tisAtPropertyKey = position > offset;\n\t\t\t\tsegments.push(''); // push a placeholder (will be replaced)\n\t\t\t},\n\t\t\tonObjectProperty: (name: string, offset: number, length: number) => {\n\t\t\t\tif (position < offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tsetPreviousNode(name, offset, length, 'property');\n\t\t\t\tsegments[segments.length - 1] = name;\n\t\t\t\tif (position <= offset + length) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t},\n\t\t\tonObjectEnd: (offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tpreviousNode = undefined;\n\t\t\t\tsegments.pop();\n\t\t\t},\n\t\t\tonArrayBegin: (offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tpreviousNode = undefined;\n\t\t\t\tsegments.push(0);\n\t\t\t},\n\t\t\tonArrayEnd: (offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tpreviousNode = undefined;\n\t\t\t\tsegments.pop();\n\t\t\t},\n\t\t\tonLiteralValue: (value: any, offset: number, length: number) => {\n\t\t\t\tif (position < offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tsetPreviousNode(value, offset, length, getNodeType(value));\n\n\t\t\t\tif (position <= offset + length) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t},\n\t\t\tonSeparator: (sep: string, offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tif (sep === ':' && previousNode && previousNode.type === 'property') {\n\t\t\t\t\tpreviousNode.colonOffset = offset;\n\t\t\t\t\tisAtPropertyKey = false;\n\t\t\t\t\tpreviousNode = undefined;\n\t\t\t\t} else if (sep === ',') {\n\t\t\t\t\tconst last = segments[segments.length - 1];\n\t\t\t\t\tif (typeof last === 'number') {\n\t\t\t\t\t\tsegments[segments.length - 1] = last + 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tisAtPropertyKey = true;\n\t\t\t\t\t\tsegments[segments.length - 1] = '';\n\t\t\t\t\t}\n\t\t\t\t\tpreviousNode = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t} catch (e) {\n\t\tif (e !== earlyReturnException) {\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\treturn {\n\t\tpath: segments,\n\t\tpreviousNode,\n\t\tisAtPropertyKey,\n\t\tmatches: (pattern: Segment[]) => {\n\t\t\tlet k = 0;\n\t\t\tfor (let i = 0; k < pattern.length && i < segments.length; i++) {\n\t\t\t\tif (pattern[k] === segments[i] || pattern[k] === '*') {\n\t\t\t\t\tk++;\n\t\t\t\t} else if (pattern[k] !== '**') {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn k === pattern.length;\n\t\t}\n\t};\n}\n\n\n/**\n * Parses the given text and returns the object the JSON content represents. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n * Therefore always check the errors list to find out if the input was valid.\n */\nexport function parse(text: string, errors: ParseError[] = [], options: ParseOptions = ParseOptions.DEFAULT): any {\n\tlet currentProperty: string | null = null;\n\tlet currentParent: any = [];\n\tconst previousParents: any[] = [];\n\n\tfunction onValue(value: any) {\n\t\tif (Array.isArray(currentParent)) {\n\t\t\t(<any[]>currentParent).push(value);\n\t\t} else if (currentProperty !== null) {\n\t\t\tcurrentParent[currentProperty] = value;\n\t\t}\n\t}\n\n\tconst visitor: JSONVisitor = {\n\t\tonObjectBegin: () => {\n\t\t\tconst object = {};\n\t\t\tonValue(object);\n\t\t\tpreviousParents.push(currentParent);\n\t\t\tcurrentParent = object;\n\t\t\tcurrentProperty = null;\n\t\t},\n\t\tonObjectProperty: (name: string) => {\n\t\t\tcurrentProperty = name;\n\t\t},\n\t\tonObjectEnd: () => {\n\t\t\tcurrentParent = previousParents.pop();\n\t\t},\n\t\tonArrayBegin: () => {\n\t\t\tconst array: any[] = [];\n\t\t\tonValue(array);\n\t\t\tpreviousParents.push(currentParent);\n\t\t\tcurrentParent = array;\n\t\t\tcurrentProperty = null;\n\t\t},\n\t\tonArrayEnd: () => {\n\t\t\tcurrentParent = previousParents.pop();\n\t\t},\n\t\tonLiteralValue: onValue,\n\t\tonError: (error: ParseErrorCode, offset: number, length: number) => {\n\t\t\terrors.push({ error, offset, length });\n\t\t}\n\t};\n\tvisit(text, visitor, options);\n\treturn currentParent[0];\n}\n\n\n/**\n * Parses the given text and returns a tree representation the JSON content. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n */\nexport function parseTree(text: string, errors: ParseError[] = [], options: ParseOptions = ParseOptions.DEFAULT): Node {\n\tlet currentParent: NodeImpl = { type: 'array', offset: -1, length: -1, children: [], parent: undefined }; // artificial root\n\n\tfunction ensurePropertyComplete(endOffset: number) {\n\t\tif (currentParent.type === 'property') {\n\t\t\tcurrentParent.length = endOffset - currentParent.offset;\n\t\t\tcurrentParent = currentParent.parent!;\n\t\t}\n\t}\n\n\tfunction onValue(valueNode: Node): Node {\n\t\tcurrentParent.children!.push(valueNode);\n\t\treturn valueNode;\n\t}\n\n\tconst visitor: JSONVisitor = {\n\t\tonObjectBegin: (offset: number) => {\n\t\t\tcurrentParent = onValue({ type: 'object', offset, length: -1, parent: currentParent, children: [] });\n\t\t},\n\t\tonObjectProperty: (name: string, offset: number, length: number) => {\n\t\t\tcurrentParent = onValue({ type: 'property', offset, length: -1, parent: currentParent, children: [] });\n\t\t\tcurrentParent.children!.push({ type: 'string', value: name, offset, length, parent: currentParent });\n\t\t},\n\t\tonObjectEnd: (offset: number, length: number) => {\n\t\t\tcurrentParent.length = offset + length - currentParent.offset;\n\t\t\tcurrentParent = currentParent.parent!;\n\t\t\tensurePropertyComplete(offset + length);\n\t\t},\n\t\tonArrayBegin: (offset: number, length: number) => {\n\t\t\tcurrentParent = onValue({ type: 'array', offset, length: -1, parent: currentParent, children: [] });\n\t\t},\n\t\tonArrayEnd: (offset: number, length: number) => {\n\t\t\tcurrentParent.length = offset + length - currentParent.offset;\n\t\t\tcurrentParent = currentParent.parent!;\n\t\t\tensurePropertyComplete(offset + length);\n\t\t},\n\t\tonLiteralValue: (value: any, offset: number, length: number) => {\n\t\t\tonValue({ type: getNodeType(value), offset, length, parent: currentParent, value });\n\t\t\tensurePropertyComplete(offset + length);\n\t\t},\n\t\tonSeparator: (sep: string, offset: number, length: number) => {\n\t\t\tif (currentParent.type === 'property') {\n\t\t\t\tif (sep === ':') {\n\t\t\t\t\tcurrentParent.colonOffset = offset;\n\t\t\t\t} else if (sep === ',') {\n\t\t\t\t\tensurePropertyComplete(offset);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tonError: (error: ParseErrorCode, offset: number, length: number) => {\n\t\t\terrors.push({ error, offset, length });\n\t\t}\n\t};\n\tvisit(text, visitor, options);\n\n\tconst result = currentParent.children![0];\n\tif (result) {\n\t\tdelete result.parent;\n\t}\n\treturn result;\n}\n\n/**\n * Finds the node at the given path in a JSON DOM.\n */\nexport function findNodeAtLocation(root: Node, path: JSONPath): Node | undefined {\n\tif (!root) {\n\t\treturn undefined;\n\t}\n\tlet node = root;\n\tfor (let segment of path) {\n\t\tif (typeof segment === 'string') {\n\t\t\tif (node.type !== 'object' || !Array.isArray(node.children)) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tlet found = false;\n\t\t\tfor (const propertyNode of node.children) {\n\t\t\t\tif (Array.isArray(propertyNode.children) && propertyNode.children[0].value === segment) {\n\t\t\t\t\tnode = propertyNode.children[1];\n\t\t\t\t\tfound = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!found) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t} else {\n\t\t\tconst index = <number>segment;\n\t\t\tif (node.type !== 'array' || index < 0 || !Array.isArray(node.children) || index >= node.children.length) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tnode = node.children[index];\n\t\t}\n\t}\n\treturn node;\n}\n\n/**\n * Gets the JSON path of the given JSON DOM node\n */\nexport function getNodePath(node: Node): JSONPath {\n\tif (!node.parent || !node.parent.children) {\n\t\treturn [];\n\t}\n\tconst path = getNodePath(node.parent);\n\tif (node.parent.type === 'property') {\n\t\tconst key = node.parent.children[0].value;\n\t\tpath.push(key);\n\t} else if (node.parent.type === 'array') {\n\t\tconst index = node.parent.children.indexOf(node);\n\t\tif (index !== -1) {\n\t\t\tpath.push(index);\n\t\t}\n\t}\n\treturn path;\n}\n\n/**\n * Evaluates the JavaScript object of the given JSON DOM node\n */\nexport function getNodeValue(node: Node): any {\n\tswitch (node.type) {\n\t\tcase 'array':\n\t\t\treturn node.children!.map(getNodeValue);\n\t\tcase 'object':\n\t\t\tconst obj = Object.create(null);\n\t\t\tfor (let prop of node.children!) {\n\t\t\t\tconst valueNode = prop.children![1];\n\t\t\t\tif (valueNode) {\n\t\t\t\t\tobj[prop.children![0].value] = getNodeValue(valueNode);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn obj;\n\t\tcase 'null':\n\t\tcase 'string':\n\t\tcase 'number':\n\t\tcase 'boolean':\n\t\t\treturn node.value;\n\t\tdefault:\n\t\t\treturn undefined;\n\t}\n\n}\n\nexport function contains(node: Node, offset: number, includeRightBound = false): boolean {\n\treturn (offset >= node.offset && offset < (node.offset + node.length)) || includeRightBound && (offset === (node.offset + node.length));\n}\n\n/**\n * Finds the most inner node at the given offset. If includeRightBound is set, also finds nodes that end at the given offset.\n */\nexport function findNodeAtOffset(node: Node, offset: number, includeRightBound = false): Node | undefined {\n\tif (contains(node, offset, includeRightBound)) {\n\t\tconst children = node.children;\n\t\tif (Array.isArray(children)) {\n\t\t\tfor (let i = 0; i < children.length && children[i].offset <= offset; i++) {\n\t\t\t\tconst item = findNodeAtOffset(children[i], offset, includeRightBound);\n\t\t\t\tif (item) {\n\t\t\t\t\treturn item;\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t\treturn node;\n\t}\n\treturn undefined;\n}\n\n\n/**\n * Parses the given text and invokes the visitor functions for each object, array and literal reached.\n */\nexport function visit(text: string, visitor: JSONVisitor, options: ParseOptions = ParseOptions.DEFAULT): any {\n\n\tconst _scanner = createScanner(text, false);\n\n\tfunction toNoArgVisit(visitFunction?: (offset: number, length: number) => void): () => void {\n\t\treturn visitFunction ? () => visitFunction(_scanner.getTokenOffset(), _scanner.getTokenLength()) : () => true;\n\t}\n\tfunction toOneArgVisit<T>(visitFunction?: (arg: T, offset: number, length: number) => void): (arg: T) => void {\n\t\treturn visitFunction ? (arg: T) => visitFunction(arg, _scanner.getTokenOffset(), _scanner.getTokenLength()) : () => true;\n\t}\n\n\tconst onObjectBegin = toNoArgVisit(visitor.onObjectBegin),\n\t\tonObjectProperty = toOneArgVisit(visitor.onObjectProperty),\n\t\tonObjectEnd = toNoArgVisit(visitor.onObjectEnd),\n\t\tonArrayBegin = toNoArgVisit(visitor.onArrayBegin),\n\t\tonArrayEnd = toNoArgVisit(visitor.onArrayEnd),\n\t\tonLiteralValue = toOneArgVisit(visitor.onLiteralValue),\n\t\tonSeparator = toOneArgVisit(visitor.onSeparator),\n\t\tonComment = toNoArgVisit(visitor.onComment),\n\t\tonError = toOneArgVisit(visitor.onError);\n\n\tconst disallowComments = options && options.disallowComments;\n\tconst allowTrailingComma = options && options.allowTrailingComma;\n\tfunction scanNext(): SyntaxKind {\n\t\twhile (true) {\n\t\t\tconst token = _scanner.scan();\n\t\t\tswitch (_scanner.getTokenError()) {\n\t\t\t\tcase ScanError.InvalidUnicode:\n\t\t\t\t\thandleError(ParseErrorCode.InvalidUnicode);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.InvalidEscapeCharacter:\n\t\t\t\t\thandleError(ParseErrorCode.InvalidEscapeCharacter);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.UnexpectedEndOfNumber:\n\t\t\t\t\thandleError(ParseErrorCode.UnexpectedEndOfNumber);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.UnexpectedEndOfComment:\n\t\t\t\t\tif (!disallowComments) {\n\t\t\t\t\t\thandleError(ParseErrorCode.UnexpectedEndOfComment);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.UnexpectedEndOfString:\n\t\t\t\t\thandleError(ParseErrorCode.UnexpectedEndOfString);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.InvalidCharacter:\n\t\t\t\t\thandleError(ParseErrorCode.InvalidCharacter);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tswitch (token) {\n\t\t\t\tcase SyntaxKind.LineCommentTrivia:\n\t\t\t\tcase SyntaxKind.BlockCommentTrivia:\n\t\t\t\t\tif (disallowComments) {\n\t\t\t\t\t\thandleError(ParseErrorCode.InvalidCommentToken);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tonComment();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.Unknown:\n\t\t\t\t\thandleError(ParseErrorCode.InvalidSymbol);\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.Trivia:\n\t\t\t\tcase SyntaxKind.LineBreakTrivia:\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\treturn token;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction handleError(error: ParseErrorCode, skipUntilAfter: SyntaxKind[] = [], skipUntil: SyntaxKind[] = []): void {\n\t\tonError(error);\n\t\tif (skipUntilAfter.length + skipUntil.length > 0) {\n\t\t\tlet token = _scanner.getToken();\n\t\t\twhile (token !== SyntaxKind.EOF) {\n\t\t\t\tif (skipUntilAfter.indexOf(token) !== -1) {\n\t\t\t\t\tscanNext();\n\t\t\t\t\tbreak;\n\t\t\t\t} else if (skipUntil.indexOf(token) !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ttoken = scanNext();\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction parseString(isValue: boolean): boolean {\n\t\tconst value = _scanner.getTokenValue();\n\t\tif (isValue) {\n\t\t\tonLiteralValue(value);\n\t\t} else {\n\t\t\tonObjectProperty(value);\n\t\t}\n\t\tscanNext();\n\t\treturn true;\n\t}\n\n\tfunction parseLiteral(): boolean {\n\t\tswitch (_scanner.getToken()) {\n\t\t\tcase SyntaxKind.NumericLiteral:\n\t\t\t\tlet value = 0;\n\t\t\t\ttry {\n\t\t\t\t\tvalue = JSON.parse(_scanner.getTokenValue());\n\t\t\t\t\tif (typeof value !== 'number') {\n\t\t\t\t\t\thandleError(ParseErrorCode.InvalidNumberFormat);\n\t\t\t\t\t\tvalue = 0;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\thandleError(ParseErrorCode.InvalidNumberFormat);\n\t\t\t\t}\n\t\t\t\tonLiteralValue(value);\n\t\t\t\tbreak;\n\t\t\tcase SyntaxKind.NullKeyword:\n\t\t\t\tonLiteralValue(null);\n\t\t\t\tbreak;\n\t\t\tcase SyntaxKind.TrueKeyword:\n\t\t\t\tonLiteralValue(true);\n\t\t\t\tbreak;\n\t\t\tcase SyntaxKind.FalseKeyword:\n\t\t\t\tonLiteralValue(false);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn false;\n\t\t}\n\t\tscanNext();\n\t\treturn true;\n\t}\n\n\tfunction parseProperty(): boolean {\n\t\tif (_scanner.getToken() !== SyntaxKind.StringLiteral) {\n\t\t\thandleError(ParseErrorCode.PropertyNameExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n\t\t\treturn false;\n\t\t}\n\t\tparseString(false);\n\t\tif (_scanner.getToken() === SyntaxKind.ColonToken) {\n\t\t\tonSeparator(':');\n\t\t\tscanNext(); // consume colon\n\n\t\t\tif (!parseValue()) {\n\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n\t\t\t}\n\t\t} else {\n\t\t\thandleError(ParseErrorCode.ColonExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction parseObject(): boolean {\n\t\tonObjectBegin();\n\t\tscanNext(); // consume open brace\n\n\t\tlet needsComma = false;\n\t\twhile (_scanner.getToken() !== SyntaxKind.CloseBraceToken && _scanner.getToken() !== SyntaxKind.EOF) {\n\t\t\tif (_scanner.getToken() === SyntaxKind.CommaToken) {\n\t\t\t\tif (!needsComma) {\n\t\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], []);\n\t\t\t\t}\n\t\t\t\tonSeparator(',');\n\t\t\t\tscanNext(); // consume comma\n\t\t\t\tif (_scanner.getToken() === SyntaxKind.CloseBraceToken && allowTrailingComma) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (needsComma) {\n\t\t\t\thandleError(ParseErrorCode.CommaExpected, [], []);\n\t\t\t}\n\t\t\tif (!parseProperty()) {\n\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n\t\t\t}\n\t\t\tneedsComma = true;\n\t\t}\n\t\tonObjectEnd();\n\t\tif (_scanner.getToken() !== SyntaxKind.CloseBraceToken) {\n\t\t\thandleError(ParseErrorCode.CloseBraceExpected, [SyntaxKind.CloseBraceToken], []);\n\t\t} else {\n\t\t\tscanNext(); // consume close brace\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction parseArray(): boolean {\n\t\tonArrayBegin();\n\t\tscanNext(); // consume open bracket\n\n\t\tlet needsComma = false;\n\t\twhile (_scanner.getToken() !== SyntaxKind.CloseBracketToken && _scanner.getToken() !== SyntaxKind.EOF) {\n\t\t\tif (_scanner.getToken() === SyntaxKind.CommaToken) {\n\t\t\t\tif (!needsComma) {\n\t\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], []);\n\t\t\t\t}\n\t\t\t\tonSeparator(',');\n\t\t\t\tscanNext(); // consume comma\n\t\t\t\tif (_scanner.getToken() === SyntaxKind.CloseBracketToken && allowTrailingComma) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (needsComma) {\n\t\t\t\thandleError(ParseErrorCode.CommaExpected, [], []);\n\t\t\t}\n\t\t\tif (!parseValue()) {\n\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], [SyntaxKind.CloseBracketToken, SyntaxKind.CommaToken]);\n\t\t\t}\n\t\t\tneedsComma = true;\n\t\t}\n\t\tonArrayEnd();\n\t\tif (_scanner.getToken() !== SyntaxKind.CloseBracketToken) {\n\t\t\thandleError(ParseErrorCode.CloseBracketExpected, [SyntaxKind.CloseBracketToken], []);\n\t\t} else {\n\t\t\tscanNext(); // consume close bracket\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction parseValue(): boolean {\n\t\tswitch (_scanner.getToken()) {\n\t\t\tcase SyntaxKind.OpenBracketToken:\n\t\t\t\treturn parseArray();\n\t\t\tcase SyntaxKind.OpenBraceToken:\n\t\t\t\treturn parseObject();\n\t\t\tcase SyntaxKind.StringLiteral:\n\t\t\t\treturn parseString(true);\n\t\t\tdefault:\n\t\t\t\treturn parseLiteral();\n\t\t}\n\t}\n\n\tscanNext();\n\tif (_scanner.getToken() === SyntaxKind.EOF) {\n\t\tif (options.allowEmptyContent) {\n\t\t\treturn true;\n\t\t}\n\t\thandleError(ParseErrorCode.ValueExpected, [], []);\n\t\treturn false;\n\t}\n\tif (!parseValue()) {\n\t\thandleError(ParseErrorCode.ValueExpected, [], []);\n\t\treturn false;\n\t}\n\tif (_scanner.getToken() !== SyntaxKind.EOF) {\n\t\thandleError(ParseErrorCode.EndOfFileExpected, [], []);\n\t}\n\treturn true;\n}\n\n/**\n * Takes JSON with JavaScript-style comments and remove\n * them. Optionally replaces every none-newline character\n * of comments with a replaceCharacter\n */\nexport function stripComments(text: string, replaceCh?: string): string {\n\n\tlet _scanner = createScanner(text),\n\t\tparts: string[] = [],\n\t\tkind: SyntaxKind,\n\t\toffset = 0,\n\t\tpos: number;\n\n\tdo {\n\t\tpos = _scanner.getPosition();\n\t\tkind = _scanner.scan();\n\t\tswitch (kind) {\n\t\t\tcase SyntaxKind.LineCommentTrivia:\n\t\t\tcase SyntaxKind.BlockCommentTrivia:\n\t\t\tcase SyntaxKind.EOF:\n\t\t\t\tif (offset !== pos) {\n\t\t\t\t\tparts.push(text.substring(offset, pos));\n\t\t\t\t}\n\t\t\t\tif (replaceCh !== undefined) {\n\t\t\t\t\tparts.push(_scanner.getTokenValue().replace(/[^\\r\\n]/g, replaceCh));\n\t\t\t\t}\n\t\t\t\toffset = _scanner.getPosition();\n\t\t\t\tbreak;\n\t\t}\n\t} while (kind !== SyntaxKind.EOF);\n\n\treturn parts.join('');\n}\n\nexport function getNodeType(value: any): NodeType {\n\tswitch (typeof value) {\n\t\tcase 'boolean': return 'boolean';\n\t\tcase 'number': return 'number';\n\t\tcase 'string': return 'string';\n\t\tcase 'object': {\n\t\t\tif (!value) {\n\t\t\t\treturn 'null';\n\t\t\t} else if (Array.isArray(value)) {\n\t\t\t\treturn 'array';\n\t\t\t}\n\t\t\treturn 'object';\n\t\t}\n\t\tdefault: return 'null';\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createScanner, SyntaxKind, ScanError } from './json';\n\nexport interface FormattingOptions {\n\t/**\n\t * If indentation is based on spaces (`insertSpaces` = true), then what is the number of spaces that make an indent?\n\t */\n\ttabSize?: number;\n\t/**\n\t * Is indentation based on spaces?\n\t */\n\tinsertSpaces?: boolean;\n\t/**\n\t * The default 'end of line' character. If not set, '\\n' is used as default.\n\t */\n\teol?: string;\n}\n\n/**\n * Represents a text modification\n */\nexport interface Edit {\n\t/**\n\t * The start offset of the modification.\n\t */\n\toffset: number;\n\t/**\n\t * The length of the modification. Must not be negative. Empty length represents an *insert*.\n\t */\n\tlength: number;\n\t/**\n\t * The new content. Empty content represents a *remove*.\n\t */\n\tcontent: string;\n}\n\n/**\n * A text range in the document\n*/\nexport interface Range {\n\t/**\n\t * The start offset of the range.\n\t */\n\toffset: number;\n\t/**\n\t * The length of the range. Must not be negative.\n\t */\n\tlength: number;\n}\n\n\nexport function format(documentText: string, range: Range | undefined, options: FormattingOptions): Edit[] {\n\tlet initialIndentLevel: number;\n\tlet formatText: string;\n\tlet formatTextStart: number;\n\tlet rangeStart: number;\n\tlet rangeEnd: number;\n\tif (range) {\n\t\trangeStart = range.offset;\n\t\trangeEnd = rangeStart + range.length;\n\n\t\tformatTextStart = rangeStart;\n\t\twhile (formatTextStart > 0 && !isEOL(documentText, formatTextStart - 1)) {\n\t\t\tformatTextStart--;\n\t\t}\n\t\tlet endOffset = rangeEnd;\n\t\twhile (endOffset < documentText.length && !isEOL(documentText, endOffset)) {\n\t\t\tendOffset++;\n\t\t}\n\t\tformatText = documentText.substring(formatTextStart, endOffset);\n\t\tinitialIndentLevel = computeIndentLevel(formatText, options);\n\t} else {\n\t\tformatText = documentText;\n\t\tinitialIndentLevel = 0;\n\t\tformatTextStart = 0;\n\t\trangeStart = 0;\n\t\trangeEnd = documentText.length;\n\t}\n\tconst eol = getEOL(options, documentText);\n\n\tlet lineBreak = false;\n\tlet indentLevel = 0;\n\tlet indentValue: string;\n\tif (options.insertSpaces) {\n\t\tindentValue = repeat(' ', options.tabSize || 4);\n\t} else {\n\t\tindentValue = '\\t';\n\t}\n\n\tconst scanner = createScanner(formatText, false);\n\tlet hasError = false;\n\n\tfunction newLineAndIndent(): string {\n\t\treturn eol + repeat(indentValue, initialIndentLevel + indentLevel);\n\t}\n\tfunction scanNext(): SyntaxKind {\n\t\tlet token = scanner.scan();\n\t\tlineBreak = false;\n\t\twhile (token === SyntaxKind.Trivia || token === SyntaxKind.LineBreakTrivia) {\n\t\t\tlineBreak = lineBreak || (token === SyntaxKind.LineBreakTrivia);\n\t\t\ttoken = scanner.scan();\n\t\t}\n\t\thasError = token === SyntaxKind.Unknown || scanner.getTokenError() !== ScanError.None;\n\t\treturn token;\n\t}\n\tconst editOperations: Edit[] = [];\n\tfunction addEdit(text: string, startOffset: number, endOffset: number) {\n\t\tif (!hasError && startOffset < rangeEnd && endOffset > rangeStart && documentText.substring(startOffset, endOffset) !== text) {\n\t\t\teditOperations.push({ offset: startOffset, length: endOffset - startOffset, content: text });\n\t\t}\n\t}\n\n\tlet firstToken = scanNext();\n\n\tif (firstToken !== SyntaxKind.EOF) {\n\t\tconst firstTokenStart = scanner.getTokenOffset() + formatTextStart;\n\t\tconst initialIndent = repeat(indentValue, initialIndentLevel);\n\t\taddEdit(initialIndent, formatTextStart, firstTokenStart);\n\t}\n\n\twhile (firstToken !== SyntaxKind.EOF) {\n\t\tlet firstTokenEnd = scanner.getTokenOffset() + scanner.getTokenLength() + formatTextStart;\n\t\tlet secondToken = scanNext();\n\n\t\tlet replaceContent = '';\n\t\twhile (!lineBreak && (secondToken === SyntaxKind.LineCommentTrivia || secondToken === SyntaxKind.BlockCommentTrivia)) {\n\t\t\t// comments on the same line: keep them on the same line, but ignore them otherwise\n\t\t\tconst commentTokenStart = scanner.getTokenOffset() + formatTextStart;\n\t\t\taddEdit(' ', firstTokenEnd, commentTokenStart);\n\t\t\tfirstTokenEnd = scanner.getTokenOffset() + scanner.getTokenLength() + formatTextStart;\n\t\t\treplaceContent = secondToken === SyntaxKind.LineCommentTrivia ? newLineAndIndent() : '';\n\t\t\tsecondToken = scanNext();\n\t\t}\n\n\t\tif (secondToken === SyntaxKind.CloseBraceToken) {\n\t\t\tif (firstToken !== SyntaxKind.OpenBraceToken) {\n\t\t\t\tindentLevel--;\n\t\t\t\treplaceContent = newLineAndIndent();\n\t\t\t}\n\t\t} else if (secondToken === SyntaxKind.CloseBracketToken) {\n\t\t\tif (firstToken !== SyntaxKind.OpenBracketToken) {\n\t\t\t\tindentLevel--;\n\t\t\t\treplaceContent = newLineAndIndent();\n\t\t\t}\n\t\t} else {\n\t\t\tswitch (firstToken) {\n\t\t\t\tcase SyntaxKind.OpenBracketToken:\n\t\t\t\tcase SyntaxKind.OpenBraceToken:\n\t\t\t\t\tindentLevel++;\n\t\t\t\t\treplaceContent = newLineAndIndent();\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.CommaToken:\n\t\t\t\tcase SyntaxKind.LineCommentTrivia:\n\t\t\t\t\treplaceContent = newLineAndIndent();\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.BlockCommentTrivia:\n\t\t\t\t\tif (lineBreak) {\n\t\t\t\t\t\treplaceContent = newLineAndIndent();\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// symbol following comment on the same line: keep on same line, separate with ' '\n\t\t\t\t\t\treplaceContent = ' ';\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.ColonToken:\n\t\t\t\t\treplaceContent = ' ';\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.StringLiteral:\n\t\t\t\t\tif (secondToken === SyntaxKind.ColonToken) {\n\t\t\t\t\t\treplaceContent = '';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t// fall through\n\t\t\t\tcase SyntaxKind.NullKeyword:\n\t\t\t\tcase SyntaxKind.TrueKeyword:\n\t\t\t\tcase SyntaxKind.FalseKeyword:\n\t\t\t\tcase SyntaxKind.NumericLiteral:\n\t\t\t\tcase SyntaxKind.CloseBraceToken:\n\t\t\t\tcase SyntaxKind.CloseBracketToken:\n\t\t\t\t\tif (secondToken === SyntaxKind.LineCommentTrivia || secondToken === SyntaxKind.BlockCommentTrivia) {\n\t\t\t\t\t\treplaceContent = ' ';\n\t\t\t\t\t} else if (secondToken !== SyntaxKind.CommaToken && secondToken !== SyntaxKind.EOF) {\n\t\t\t\t\t\thasError = true;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.Unknown:\n\t\t\t\t\thasError = true;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (lineBreak && (secondToken === SyntaxKind.LineCommentTrivia || secondToken === SyntaxKind.BlockCommentTrivia)) {\n\t\t\t\treplaceContent = newLineAndIndent();\n\t\t\t}\n\n\t\t}\n\t\tconst secondTokenStart = scanner.getTokenOffset() + formatTextStart;\n\t\taddEdit(replaceContent, firstTokenEnd, secondTokenStart);\n\t\tfirstToken = secondToken;\n\t}\n\treturn editOperations;\n}\n\nfunction repeat(s: string, count: number): string {\n\tlet result = '';\n\tfor (let i = 0; i < count; i++) {\n\t\tresult += s;\n\t}\n\treturn result;\n}\n\nfunction computeIndentLevel(content: string, options: FormattingOptions): number {\n\tlet i = 0;\n\tlet nChars = 0;\n\tconst tabSize = options.tabSize || 4;\n\twhile (i < content.length) {\n\t\tconst ch = content.charAt(i);\n\t\tif (ch === ' ') {\n\t\t\tnChars++;\n\t\t} else if (ch === '\\t') {\n\t\t\tnChars += tabSize;\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\treturn Math.floor(nChars / tabSize);\n}\n\nexport function getEOL(options: FormattingOptions, text: string): string {\n\tfor (let i = 0; i < text.length; i++) {\n\t\tconst ch = text.charAt(i);\n\t\tif (ch === '\\r') {\n\t\t\tif (i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n\t\t\t\treturn '\\r\\n';\n\t\t\t}\n\t\t\treturn '\\r';\n\t\t} else if (ch === '\\n') {\n\t\t\treturn '\\n';\n\t\t}\n\t}\n\treturn (options && options.eol) || '\\n';\n}\n\nexport function isEOL(text: string, offset: number) {\n\treturn '\\r\\n'.indexOf(text.charAt(offset)) !== -1;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ParseError, Node, JSONPath, Segment, parseTree, findNodeAtLocation } from './json';\nimport { Edit, format, isEOL, FormattingOptions } from './jsonFormatter';\nimport { mergeSort } from 'vs/base/common/arrays';\n\n\nexport function removeProperty(text: string, path: JSONPath, formattingOptions: FormattingOptions): Edit[] {\n\treturn setProperty(text, path, undefined, formattingOptions);\n}\n\nexport function setProperty(text: string, originalPath: JSONPath, value: any, formattingOptions: FormattingOptions, getInsertionIndex?: (properties: string[]) => number): Edit[] {\n\tconst path = originalPath.slice();\n\tconst errors: ParseError[] = [];\n\tconst root = parseTree(text, errors);\n\tlet parent: Node | undefined = undefined;\n\n\tlet lastSegment: Segment | undefined = undefined;\n\twhile (path.length > 0) {\n\t\tlastSegment = path.pop();\n\t\tparent = findNodeAtLocation(root, path);\n\t\tif (parent === undefined && value !== undefined) {\n\t\t\tif (typeof lastSegment === 'string') {\n\t\t\t\tvalue = { [lastSegment]: value };\n\t\t\t} else {\n\t\t\t\tvalue = [value];\n\t\t\t}\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (!parent) {\n\t\t// empty document\n\t\tif (value === undefined) { // delete\n\t\t\tthrow new Error('Can not delete in empty document');\n\t\t}\n\t\treturn withFormatting(text, { offset: root ? root.offset : 0, length: root ? root.length : 0, content: JSON.stringify(value) }, formattingOptions);\n\t} else if (parent.type === 'object' && typeof lastSegment === 'string' && Array.isArray(parent.children)) {\n\t\tconst existing = findNodeAtLocation(parent, [lastSegment]);\n\t\tif (existing !== undefined) {\n\t\t\tif (value === undefined) { // delete\n\t\t\t\tif (!existing.parent) {\n\t\t\t\t\tthrow new Error('Malformed AST');\n\t\t\t\t}\n\t\t\t\tconst propertyIndex = parent.children.indexOf(existing.parent);\n\t\t\t\tlet removeBegin: number;\n\t\t\t\tlet removeEnd = existing.parent.offset + existing.parent.length;\n\t\t\t\tif (propertyIndex > 0) {\n\t\t\t\t\t// remove the comma of the previous node\n\t\t\t\t\tconst previous = parent.children[propertyIndex - 1];\n\t\t\t\t\tremoveBegin = previous.offset + previous.length;\n\t\t\t\t} else {\n\t\t\t\t\tremoveBegin = parent.offset + 1;\n\t\t\t\t\tif (parent.children.length > 1) {\n\t\t\t\t\t\t// remove the comma of the next node\n\t\t\t\t\t\tconst next = parent.children[1];\n\t\t\t\t\t\tremoveEnd = next.offset;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn withFormatting(text, { offset: removeBegin, length: removeEnd - removeBegin, content: '' }, formattingOptions);\n\t\t\t} else {\n\t\t\t\t// set value of existing property\n\t\t\t\treturn withFormatting(text, { offset: existing.offset, length: existing.length, content: JSON.stringify(value) }, formattingOptions);\n\t\t\t}\n\t\t} else {\n\t\t\tif (value === undefined) { // delete\n\t\t\t\treturn []; // property does not exist, nothing to do\n\t\t\t}\n\t\t\tconst newProperty = `${JSON.stringify(lastSegment)}: ${JSON.stringify(value)}`;\n\t\t\tconst index = getInsertionIndex ? getInsertionIndex(parent.children.map(p => p.children![0].value)) : parent.children.length;\n\t\t\tlet edit: Edit;\n\t\t\tif (index > 0) {\n\t\t\t\tconst previous = parent.children[index - 1];\n\t\t\t\tedit = { offset: previous.offset + previous.length, length: 0, content: ',' + newProperty };\n\t\t\t} else if (parent.children.length === 0) {\n\t\t\t\tedit = { offset: parent.offset + 1, length: 0, content: newProperty };\n\t\t\t} else {\n\t\t\t\tedit = { offset: parent.offset + 1, length: 0, content: newProperty + ',' };\n\t\t\t}\n\t\t\treturn withFormatting(text, edit, formattingOptions);\n\t\t}\n\t} else if (parent.type === 'array' && typeof lastSegment === 'number' && Array.isArray(parent.children)) {\n\t\tif (value !== undefined) {\n\t\t\t// Insert\n\t\t\tconst newProperty = `${JSON.stringify(value)}`;\n\t\t\tlet edit: Edit;\n\t\t\tif (parent.children.length === 0 || lastSegment === 0) {\n\t\t\t\tedit = { offset: parent.offset + 1, length: 0, content: parent.children.length === 0 ? newProperty : newProperty + ',' };\n\t\t\t} else {\n\t\t\t\tconst index = lastSegment === -1 || lastSegment > parent.children.length ? parent.children.length : lastSegment;\n\t\t\t\tconst previous = parent.children[index - 1];\n\t\t\t\tedit = { offset: previous.offset + previous.length, length: 0, content: ',' + newProperty };\n\t\t\t}\n\t\t\treturn withFormatting(text, edit, formattingOptions);\n\t\t} else {\n\t\t\t//Removal\n\t\t\tconst removalIndex = lastSegment;\n\t\t\tconst toRemove = parent.children[removalIndex];\n\t\t\tlet edit: Edit;\n\t\t\tif (parent.children.length === 1) {\n\t\t\t\t// only item\n\t\t\t\tedit = { offset: parent.offset + 1, length: parent.length - 2, content: '' };\n\t\t\t} else if (parent.children.length - 1 === removalIndex) {\n\t\t\t\t// last item\n\t\t\t\tconst previous = parent.children[removalIndex - 1];\n\t\t\t\tconst offset = previous.offset + previous.length;\n\t\t\t\tconst parentEndOffset = parent.offset + parent.length;\n\t\t\t\tedit = { offset, length: parentEndOffset - 2 - offset, content: '' };\n\t\t\t} else {\n\t\t\t\tedit = { offset: toRemove.offset, length: parent.children[removalIndex + 1].offset - toRemove.offset, content: '' };\n\t\t\t}\n\t\t\treturn withFormatting(text, edit, formattingOptions);\n\t\t}\n\t} else {\n\t\tthrow new Error(`Can not add ${typeof lastSegment !== 'number' ? 'index' : 'property'} to parent of type ${parent.type}`);\n\t}\n}\n\nexport function withFormatting(text: string, edit: Edit, formattingOptions: FormattingOptions): Edit[] {\n\t// apply the edit\n\tlet newText = applyEdit(text, edit);\n\n\t// format the new text\n\tlet begin = edit.offset;\n\tlet end = edit.offset + edit.content.length;\n\tif (edit.length === 0 || edit.content.length === 0) { // insert or remove\n\t\twhile (begin > 0 && !isEOL(newText, begin - 1)) {\n\t\t\tbegin--;\n\t\t}\n\t\twhile (end < newText.length && !isEOL(newText, end)) {\n\t\t\tend++;\n\t\t}\n\t}\n\n\tconst edits = format(newText, { offset: begin, length: end - begin }, formattingOptions);\n\n\t// apply the formatting edits and track the begin and end offsets of the changes\n\tfor (let i = edits.length - 1; i >= 0; i--) {\n\t\tconst curr = edits[i];\n\t\tnewText = applyEdit(newText, curr);\n\t\tbegin = Math.min(begin, curr.offset);\n\t\tend = Math.max(end, curr.offset + curr.length);\n\t\tend += curr.content.length - curr.length;\n\t}\n\t// create a single edit with all changes\n\tconst editLength = text.length - (newText.length - end) - begin;\n\treturn [{ offset: begin, length: editLength, content: newText.substring(begin, end) }];\n}\n\nexport function applyEdit(text: string, edit: Edit): string {\n\treturn text.substring(0, edit.offset) + edit.content + text.substring(edit.offset + edit.length);\n}\n\nexport function applyEdits(text: string, edits: Edit[]): string {\n\tlet sortedEdits = mergeSort(edits, (a, b) => {\n\t\tconst diff = a.offset - b.offset;\n\t\tif (diff === 0) {\n\t\t\treturn a.length - b.length;\n\t\t}\n\t\treturn diff;\n\t});\n\tlet lastModifiedOffset = text.length;\n\tfor (let i = sortedEdits.length - 1; i >= 0; i--) {\n\t\tlet e = sortedEdits[i];\n\t\tif (e.offset + e.length <= lastModifiedOffset) {\n\t\t\ttext = applyEdit(text, e);\n\t\t} else {\n\t\t\tthrow new Error('Overlapping edit');\n\t\t}\n\t\tlastModifiedOffset = e.offset;\n\t}\n\treturn text;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { once } from 'vs/base/common/functional';\nimport { Iterable } from 'vs/base/common/iterator';\n\n/**\n * Enables logging of potentially leaked disposables.\n *\n * A disposable is considered leaked if it is not disposed or not registered as the child of\n * another disposable. This tracking is very simple an only works for classes that either\n * extend Disposable or use a DisposableStore. This means there are a lot of false positives.\n */\nconst TRACK_DISPOSABLES = false;\n\nconst __is_disposable_tracked__ = '__is_disposable_tracked__';\n\nfunction markTracked<T extends IDisposable>(x: T): void {\n\tif (!TRACK_DISPOSABLES) {\n\t\treturn;\n\t}\n\n\tif (x && x !== Disposable.None) {\n\t\ttry {\n\t\t\t(x as any)[__is_disposable_tracked__] = true;\n\t\t} catch {\n\t\t\t// noop\n\t\t}\n\t}\n}\n\nfunction trackDisposable<T extends IDisposable>(x: T): T {\n\tif (!TRACK_DISPOSABLES) {\n\t\treturn x;\n\t}\n\n\tconst stack = new Error('Potentially leaked disposable').stack!;\n\tsetTimeout(() => {\n\t\tif (!(x as any)[__is_disposable_tracked__]) {\n\t\t\tconsole.log(stack);\n\t\t}\n\t}, 3000);\n\treturn x;\n}\n\nexport class MultiDisposeError extends Error {\n\tconstructor(\n\t\tpublic readonly errors: any[]\n\t) {\n\t\tsuper(`Encounter errors while disposing of store. Errors: [${errors.join(', ')}]`);\n\t}\n}\n\nexport interface IDisposable {\n\tdispose(): void;\n}\n\nexport function isDisposable<E extends object>(thing: E): thing is E & IDisposable {\n\treturn typeof (<IDisposable>thing).dispose === 'function' && (<IDisposable>thing).dispose.length === 0;\n}\n\nexport function dispose<T extends IDisposable>(disposable: T): T;\nexport function dispose<T extends IDisposable>(disposable: T | undefined): T | undefined;\nexport function dispose<T extends IDisposable, A extends IterableIterator<T> = IterableIterator<T>>(disposables: IterableIterator<T>): A;\nexport function dispose<T extends IDisposable>(disposables: Array<T>): Array<T>;\nexport function dispose<T extends IDisposable>(disposables: ReadonlyArray<T>): ReadonlyArray<T>;\nexport function dispose<T extends IDisposable>(arg: T | IterableIterator<T> | undefined): any {\n\tif (Iterable.is(arg)) {\n\t\tlet errors: any[] = [];\n\n\t\tfor (const d of arg) {\n\t\t\tif (d) {\n\t\t\t\tmarkTracked(d);\n\t\t\t\ttry {\n\t\t\t\t\td.dispose();\n\t\t\t\t} catch (e) {\n\t\t\t\t\terrors.push(e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (errors.length === 1) {\n\t\t\tthrow errors[0];\n\t\t} else if (errors.length > 1) {\n\t\t\tthrow new MultiDisposeError(errors);\n\t\t}\n\n\t\treturn Array.isArray(arg) ? [] : arg;\n\t} else if (arg) {\n\t\tmarkTracked(arg);\n\t\targ.dispose();\n\t\treturn arg;\n\t}\n}\n\n\nexport function combinedDisposable(...disposables: IDisposable[]): IDisposable {\n\tdisposables.forEach(markTracked);\n\treturn trackDisposable({ dispose: () => dispose(disposables) });\n}\n\nexport function toDisposable(fn: () => void): IDisposable {\n\tconst self = trackDisposable({\n\t\tdispose: () => {\n\t\t\tmarkTracked(self);\n\t\t\tfn();\n\t\t}\n\t});\n\treturn self;\n}\n\nexport class DisposableStore implements IDisposable {\n\n\tstatic DISABLE_DISPOSED_WARNING = false;\n\n\tprivate _toDispose = new Set<IDisposable>();\n\tprivate _isDisposed = false;\n\n\t/**\n\t * Dispose of all registered disposables and mark this object as disposed.\n\t *\n\t * Any future disposables added to this object will be disposed of on `add`.\n\t */\n\tpublic dispose(): void {\n\t\tif (this._isDisposed) {\n\t\t\treturn;\n\t\t}\n\n\t\tmarkTracked(this);\n\t\tthis._isDisposed = true;\n\t\tthis.clear();\n\t}\n\n\t/**\n\t * Dispose of all registered disposables but do not mark this object as disposed.\n\t */\n\tpublic clear(): void {\n\t\ttry {\n\t\t\tdispose(this._toDispose.values());\n\t\t} finally {\n\t\t\tthis._toDispose.clear();\n\t\t}\n\t}\n\n\tpublic add<T extends IDisposable>(t: T): T {\n\t\tif (!t) {\n\t\t\treturn t;\n\t\t}\n\t\tif ((t as unknown as DisposableStore) === this) {\n\t\t\tthrow new Error('Cannot register a disposable on itself!');\n\t\t}\n\n\t\tmarkTracked(t);\n\t\tif (this._isDisposed) {\n\t\t\tif (!DisposableStore.DISABLE_DISPOSED_WARNING) {\n\t\t\t\tconsole.warn(new Error('Trying to add a disposable to a DisposableStore that has already been disposed of. The added object will be leaked!').stack);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._toDispose.add(t);\n\t\t}\n\n\t\treturn t;\n\t}\n}\n\nexport abstract class Disposable implements IDisposable {\n\n\tstatic readonly None = Object.freeze<IDisposable>({ dispose() { } });\n\n\tprivate readonly _store = new DisposableStore();\n\n\tconstructor() {\n\t\ttrackDisposable(this);\n\t}\n\n\tpublic dispose(): void {\n\t\tmarkTracked(this);\n\n\t\tthis._store.dispose();\n\t}\n\n\tprotected _register<T extends IDisposable>(t: T): T {\n\t\tif ((t as unknown as Disposable) === this) {\n\t\t\tthrow new Error('Cannot register a disposable on itself!');\n\t\t}\n\t\treturn this._store.add(t);\n\t}\n}\n\n/**\n * Manages the lifecycle of a disposable value that may be changed.\n *\n * This ensures that when the disposable value is changed, the previously held disposable is disposed of. You can\n * also register a `MutableDisposable` on a `Disposable` to ensure it is automatically cleaned up.\n */\nexport class MutableDisposable<T extends IDisposable> implements IDisposable {\n\tprivate _value?: T;\n\tprivate _isDisposed = false;\n\n\tconstructor() {\n\t\ttrackDisposable(this);\n\t}\n\n\tget value(): T | undefined {\n\t\treturn this._isDisposed ? undefined : this._value;\n\t}\n\n\tset value(value: T | undefined) {\n\t\tif (this._isDisposed || value === this._value) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._value) {\n\t\t\tthis._value.dispose();\n\t\t}\n\t\tif (value) {\n\t\t\tmarkTracked(value);\n\t\t}\n\t\tthis._value = value;\n\t}\n\n\tclear() {\n\t\tthis.value = undefined;\n\t}\n\n\tdispose(): void {\n\t\tthis._isDisposed = true;\n\t\tmarkTracked(this);\n\t\tif (this._value) {\n\t\t\tthis._value.dispose();\n\t\t}\n\t\tthis._value = undefined;\n\t}\n}\n\nexport interface IReference<T> extends IDisposable {\n\treadonly object: T;\n}\n\nexport abstract class ReferenceCollection<T> {\n\n\tprivate readonly references: Map<string, { readonly object: T; counter: number; }> = new Map();\n\n\tacquire(key: string, ...args: any[]): IReference<T> {\n\t\tlet reference = this.references.get(key);\n\n\t\tif (!reference) {\n\t\t\treference = { counter: 0, object: this.createReferencedObject(key, ...args) };\n\t\t\tthis.references.set(key, reference);\n\t\t}\n\n\t\tconst { object } = reference;\n\t\tconst dispose = once(() => {\n\t\t\tif (--reference!.counter === 0) {\n\t\t\t\tthis.destroyReferencedObject(key, reference!.object);\n\t\t\t\tthis.references.delete(key);\n\t\t\t}\n\t\t});\n\n\t\treference.counter++;\n\n\t\treturn { object, dispose };\n\t}\n\n\tprotected abstract createReferencedObject(key: string, ...args: any[]): T;\n\tprotected abstract destroyReferencedObject(key: string, object: T): void;\n}\n\nexport class ImmortalReference<T> implements IReference<T> {\n\tconstructor(public object: T) { }\n\tdispose(): void { /* noop */ }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nclass Node<E> {\n\n\tstatic readonly Undefined = new Node<any>(undefined);\n\n\telement: E;\n\tnext: Node<E>;\n\tprev: Node<E>;\n\n\tconstructor(element: E) {\n\t\tthis.element = element;\n\t\tthis.next = Node.Undefined;\n\t\tthis.prev = Node.Undefined;\n\t}\n}\n\nexport class LinkedList<E> {\n\n\tprivate _first: Node<E> = Node.Undefined;\n\tprivate _last: Node<E> = Node.Undefined;\n\tprivate _size: number = 0;\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn this._first === Node.Undefined;\n\t}\n\n\tclear(): void {\n\t\tthis._first = Node.Undefined;\n\t\tthis._last = Node.Undefined;\n\t\tthis._size = 0;\n\t}\n\n\tunshift(element: E): () => void {\n\t\treturn this._insert(element, false);\n\t}\n\n\tpush(element: E): () => void {\n\t\treturn this._insert(element, true);\n\t}\n\n\tprivate _insert(element: E, atTheEnd: boolean): () => void {\n\t\tconst newNode = new Node(element);\n\t\tif (this._first === Node.Undefined) {\n\t\t\tthis._first = newNode;\n\t\t\tthis._last = newNode;\n\n\t\t} else if (atTheEnd) {\n\t\t\t// push\n\t\t\tconst oldLast = this._last!;\n\t\t\tthis._last = newNode;\n\t\t\tnewNode.prev = oldLast;\n\t\t\toldLast.next = newNode;\n\n\t\t} else {\n\t\t\t// unshift\n\t\t\tconst oldFirst = this._first;\n\t\t\tthis._first = newNode;\n\t\t\tnewNode.next = oldFirst;\n\t\t\toldFirst.prev = newNode;\n\t\t}\n\t\tthis._size += 1;\n\n\t\tlet didRemove = false;\n\t\treturn () => {\n\t\t\tif (!didRemove) {\n\t\t\t\tdidRemove = true;\n\t\t\t\tthis._remove(newNode);\n\t\t\t}\n\t\t};\n\t}\n\n\tshift(): E | undefined {\n\t\tif (this._first === Node.Undefined) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tconst res = this._first.element;\n\t\t\tthis._remove(this._first);\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tpop(): E | undefined {\n\t\tif (this._last === Node.Undefined) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tconst res = this._last.element;\n\t\t\tthis._remove(this._last);\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tprivate _remove(node: Node<E>): void {\n\t\tif (node.prev !== Node.Undefined && node.next !== Node.Undefined) {\n\t\t\t// middle\n\t\t\tconst anchor = node.prev;\n\t\t\tanchor.next = node.next;\n\t\t\tnode.next.prev = anchor;\n\n\t\t} else if (node.prev === Node.Undefined && node.next === Node.Undefined) {\n\t\t\t// only node\n\t\t\tthis._first = Node.Undefined;\n\t\t\tthis._last = Node.Undefined;\n\n\t\t} else if (node.next === Node.Undefined) {\n\t\t\t// last\n\t\t\tthis._last = this._last!.prev!;\n\t\t\tthis._last.next = Node.Undefined;\n\n\t\t} else if (node.prev === Node.Undefined) {\n\t\t\t// first\n\t\t\tthis._first = this._first!.next!;\n\t\t\tthis._first.prev = Node.Undefined;\n\t\t}\n\n\t\t// done\n\t\tthis._size -= 1;\n\t}\n\n\t*[Symbol.iterator](): Iterator<E> {\n\t\tlet node = this._first;\n\t\twhile (node !== Node.Undefined) {\n\t\t\tyield node.element;\n\t\t\tnode = node.next;\n\t\t}\n\t}\n\n\ttoArray(): E[] {\n\t\tconst result: E[] = [];\n\t\tfor (let node = this._first; node !== Node.Undefined; node = node.next) {\n\t\t\tresult.push(node.element);\n\t\t}\n\t\treturn result;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { once as onceFn } from 'vs/base/common/functional';\nimport { Disposable, IDisposable, toDisposable, combinedDisposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { LinkedList } from 'vs/base/common/linkedList';\nimport { CancellationToken } from 'vs/base/common/cancellation';\n\n/**\n * To an event a function with one or zero parameters\n * can be subscribed. The event is the subscriber function itself.\n */\nexport interface Event<T> {\n\t(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore): IDisposable;\n}\n\nexport namespace Event {\n\texport const None: Event<any> = () => Disposable.None;\n\n\t/**\n\t * Given an event, returns another event which only fires once.\n\t */\n\texport function once<T>(event: Event<T>): Event<T> {\n\t\treturn (listener, thisArgs = null, disposables?) => {\n\t\t\t// we need this, in case the event fires during the listener call\n\t\t\tlet didFire = false;\n\t\t\tlet result: IDisposable;\n\t\t\tresult = event(e => {\n\t\t\t\tif (didFire) {\n\t\t\t\t\treturn;\n\t\t\t\t} else if (result) {\n\t\t\t\t\tresult.dispose();\n\t\t\t\t} else {\n\t\t\t\t\tdidFire = true;\n\t\t\t\t}\n\n\t\t\t\treturn listener.call(thisArgs, e);\n\t\t\t}, null, disposables);\n\n\t\t\tif (didFire) {\n\t\t\t\tresult.dispose();\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\t}\n\n\t/**\n\t * Given an event and a `map` function, returns another event which maps each element\n\t * through the mapping function.\n\t */\n\texport function map<I, O>(event: Event<I>, map: (i: I) => O): Event<O> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(i => listener.call(thisArgs, map(i)), null, disposables));\n\t}\n\n\t/**\n\t * Given an event and an `each` function, returns another identical event and calls\n\t * the `each` function per each element.\n\t */\n\texport function forEach<I>(event: Event<I>, each: (i: I) => void): Event<I> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(i => { each(i); listener.call(thisArgs, i); }, null, disposables));\n\t}\n\n\t/**\n\t * Given an event and a `filter` function, returns another event which emits those\n\t * elements for which the `filter` function returns `true`.\n\t */\n\texport function filter<T>(event: Event<T>, filter: (e: T) => boolean): Event<T>;\n\texport function filter<T, R>(event: Event<T | R>, filter: (e: T | R) => e is R): Event<R>;\n\texport function filter<T>(event: Event<T>, filter: (e: T) => boolean): Event<T> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(e => filter(e) && listener.call(thisArgs, e), null, disposables));\n\t}\n\n\t/**\n\t * Given an event, returns the same event but typed as `Event<void>`.\n\t */\n\texport function signal<T>(event: Event<T>): Event<void> {\n\t\treturn event as Event<any> as Event<void>;\n\t}\n\n\t/**\n\t * Given a collection of events, returns a single event which emits\n\t * whenever any of the provided events emit.\n\t */\n\texport function any<T>(...events: Event<T>[]): Event<T>;\n\texport function any(...events: Event<any>[]): Event<void>;\n\texport function any<T>(...events: Event<T>[]): Event<T> {\n\t\treturn (listener, thisArgs = null, disposables?) => combinedDisposable(...events.map(event => event(e => listener.call(thisArgs, e), null, disposables)));\n\t}\n\n\t/**\n\t * Given an event and a `merge` function, returns another event which maps each element\n\t * and the cumulative result through the `merge` function. Similar to `map`, but with memory.\n\t */\n\texport function reduce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, initial?: O): Event<O> {\n\t\tlet output: O | undefined = initial;\n\n\t\treturn map<I, O>(event, e => {\n\t\t\toutput = merge(output, e);\n\t\t\treturn output;\n\t\t});\n\t}\n\n\t/**\n\t * Given a chain of event processing functions (filter, map, etc), each\n\t * function will be invoked per event & per listener. Snapshotting an event\n\t * chain allows each function to be invoked just once per event.\n\t */\n\texport function snapshot<T>(event: Event<T>): Event<T> {\n\t\tlet listener: IDisposable;\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tlistener = event(emitter.fire, emitter);\n\t\t\t},\n\t\t\tonLastListenerRemove() {\n\t\t\t\tlistener.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\t/**\n\t * Debounces the provided event, given a `merge` function.\n\t *\n\t * @param event The input event.\n\t * @param merge The reducing function.\n\t * @param delay The debouncing delay in millis.\n\t * @param leading Whether the event should fire in the leading phase of the timeout.\n\t * @param leakWarningThreshold The leak warning threshold override.\n\t */\n\texport function debounce<T>(event: Event<T>, merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): Event<T>;\n\texport function debounce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, delay?: number, leading?: boolean, leakWarningThreshold?: number): Event<O>;\n\texport function debounce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, delay: number = 100, leading = false, leakWarningThreshold?: number): Event<O> {\n\n\t\tlet subscription: IDisposable;\n\t\tlet output: O | undefined = undefined;\n\t\tlet handle: any = undefined;\n\t\tlet numDebouncedCalls = 0;\n\n\t\tconst emitter = new Emitter<O>({\n\t\t\tleakWarningThreshold,\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tsubscription = event(cur => {\n\t\t\t\t\tnumDebouncedCalls++;\n\t\t\t\t\toutput = merge(output, cur);\n\n\t\t\t\t\tif (leading && !handle) {\n\t\t\t\t\t\temitter.fire(output);\n\t\t\t\t\t\toutput = undefined;\n\t\t\t\t\t}\n\n\t\t\t\t\tclearTimeout(handle);\n\t\t\t\t\thandle = setTimeout(() => {\n\t\t\t\t\t\tconst _output = output;\n\t\t\t\t\t\toutput = undefined;\n\t\t\t\t\t\thandle = undefined;\n\t\t\t\t\t\tif (!leading || numDebouncedCalls > 1) {\n\t\t\t\t\t\t\temitter.fire(_output!);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnumDebouncedCalls = 0;\n\t\t\t\t\t}, delay);\n\t\t\t\t});\n\t\t\t},\n\t\t\tonLastListenerRemove() {\n\t\t\t\tsubscription.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\t/**\n\t * Given an event, it returns another event which fires only once and as soon as\n\t * the input event emits. The event data is the number of millis it took for the\n\t * event to fire.\n\t */\n\texport function stopwatch<T>(event: Event<T>): Event<number> {\n\t\tconst start = new Date().getTime();\n\t\treturn map(once(event), _ => new Date().getTime() - start);\n\t}\n\n\t/**\n\t * Given an event, it returns another event which fires only when the event\n\t * element changes.\n\t */\n\texport function latch<T>(event: Event<T>): Event<T> {\n\t\tlet firstCall = true;\n\t\tlet cache: T;\n\n\t\treturn filter(event, value => {\n\t\t\tconst shouldEmit = firstCall || value !== cache;\n\t\t\tfirstCall = false;\n\t\t\tcache = value;\n\t\t\treturn shouldEmit;\n\t\t});\n\t}\n\n\t/**\n\t * Buffers the provided event until a first listener comes\n\t * along, at which point fire all the events at once and\n\t * pipe the event from then on.\n\t *\n\t * ```typescript\n\t * const emitter = new Emitter<number>();\n\t * const event = emitter.event;\n\t * const bufferedEvent = buffer(event);\n\t *\n\t * emitter.fire(1);\n\t * emitter.fire(2);\n\t * emitter.fire(3);\n\t * // nothing...\n\t *\n\t * const listener = bufferedEvent(num => console.log(num));\n\t * // 1, 2, 3\n\t *\n\t * emitter.fire(4);\n\t * // 4\n\t * ```\n\t */\n\texport function buffer<T>(event: Event<T>, nextTick = false, _buffer: T[] = []): Event<T> {\n\t\tlet buffer: T[] | null = _buffer.slice();\n\n\t\tlet listener: IDisposable | null = event(e => {\n\t\t\tif (buffer) {\n\t\t\t\tbuffer.push(e);\n\t\t\t} else {\n\t\t\t\temitter.fire(e);\n\t\t\t}\n\t\t});\n\n\t\tconst flush = () => {\n\t\t\tif (buffer) {\n\t\t\t\tbuffer.forEach(e => emitter.fire(e));\n\t\t\t}\n\t\t\tbuffer = null;\n\t\t};\n\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tif (!listener) {\n\t\t\t\t\tlistener = event(e => emitter.fire(e));\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonFirstListenerDidAdd() {\n\t\t\t\tif (buffer) {\n\t\t\t\t\tif (nextTick) {\n\t\t\t\t\t\tsetTimeout(flush);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tflush();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonLastListenerRemove() {\n\t\t\t\tif (listener) {\n\t\t\t\t\tlistener.dispose();\n\t\t\t\t}\n\t\t\t\tlistener = null;\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\texport interface IChainableEvent<T> {\n\t\tevent: Event<T>;\n\t\tmap<O>(fn: (i: T) => O): IChainableEvent<O>;\n\t\tforEach(fn: (i: T) => void): IChainableEvent<T>;\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T>;\n\t\tfilter<R>(fn: (e: T | R) => e is R): IChainableEvent<R>;\n\t\treduce<R>(merge: (last: R | undefined, event: T) => R, initial?: R): IChainableEvent<R>;\n\t\tlatch(): IChainableEvent<T>;\n\t\tdebounce(merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<T>;\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<R>;\n\t\ton(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore): IDisposable;\n\t\tonce(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[]): IDisposable;\n\t}\n\n\tclass ChainableEvent<T> implements IChainableEvent<T> {\n\n\t\tconstructor(readonly event: Event<T>) { }\n\n\t\tmap<O>(fn: (i: T) => O): IChainableEvent<O> {\n\t\t\treturn new ChainableEvent(map(this.event, fn));\n\t\t}\n\n\t\tforEach(fn: (i: T) => void): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(forEach(this.event, fn));\n\t\t}\n\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T>;\n\t\tfilter<R>(fn: (e: T | R) => e is R): IChainableEvent<R>;\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(filter(this.event, fn));\n\t\t}\n\n\t\treduce<R>(merge: (last: R | undefined, event: T) => R, initial?: R): IChainableEvent<R> {\n\t\t\treturn new ChainableEvent(reduce(this.event, merge, initial));\n\t\t}\n\n\t\tlatch(): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(latch(this.event));\n\t\t}\n\n\t\tdebounce(merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<T>;\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<R>;\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay: number = 100, leading = false, leakWarningThreshold?: number): IChainableEvent<R> {\n\t\t\treturn new ChainableEvent(debounce(this.event, merge, delay, leading, leakWarningThreshold));\n\t\t}\n\n\t\ton(listener: (e: T) => any, thisArgs: any, disposables: IDisposable[] | DisposableStore) {\n\t\t\treturn this.event(listener, thisArgs, disposables);\n\t\t}\n\n\t\tonce(listener: (e: T) => any, thisArgs: any, disposables: IDisposable[]) {\n\t\t\treturn once(this.event)(listener, thisArgs, disposables);\n\t\t}\n\t}\n\n\texport function chain<T>(event: Event<T>): IChainableEvent<T> {\n\t\treturn new ChainableEvent(event);\n\t}\n\n\texport interface NodeEventEmitter {\n\t\ton(event: string | symbol, listener: Function): unknown;\n\t\tremoveListener(event: string | symbol, listener: Function): unknown;\n\t}\n\n\texport function fromNodeEventEmitter<T>(emitter: NodeEventEmitter, eventName: string, map: (...args: any[]) => T = id => id): Event<T> {\n\t\tconst fn = (...args: any[]) => result.fire(map(...args));\n\t\tconst onFirstListenerAdd = () => emitter.on(eventName, fn);\n\t\tconst onLastListenerRemove = () => emitter.removeListener(eventName, fn);\n\t\tconst result = new Emitter<T>({ onFirstListenerAdd, onLastListenerRemove });\n\n\t\treturn result.event;\n\t}\n\n\texport interface DOMEventEmitter {\n\t\taddEventListener(event: string | symbol, listener: Function): void;\n\t\tremoveEventListener(event: string | symbol, listener: Function): void;\n\t}\n\n\texport function fromDOMEventEmitter<T>(emitter: DOMEventEmitter, eventName: string, map: (...args: any[]) => T = id => id): Event<T> {\n\t\tconst fn = (...args: any[]) => result.fire(map(...args));\n\t\tconst onFirstListenerAdd = () => emitter.addEventListener(eventName, fn);\n\t\tconst onLastListenerRemove = () => emitter.removeEventListener(eventName, fn);\n\t\tconst result = new Emitter<T>({ onFirstListenerAdd, onLastListenerRemove });\n\n\t\treturn result.event;\n\t}\n\n\texport function fromPromise<T = any>(promise: Promise<T>): Event<undefined> {\n\t\tconst emitter = new Emitter<undefined>();\n\t\tlet shouldEmit = false;\n\n\t\tpromise\n\t\t\t.then(undefined, () => null)\n\t\t\t.then(() => {\n\t\t\t\tif (!shouldEmit) {\n\t\t\t\t\tsetTimeout(() => emitter.fire(undefined), 0);\n\t\t\t\t} else {\n\t\t\t\t\temitter.fire(undefined);\n\t\t\t\t}\n\t\t\t});\n\n\t\tshouldEmit = true;\n\t\treturn emitter.event;\n\t}\n\n\texport function toPromise<T>(event: Event<T>): Promise<T> {\n\t\treturn new Promise(c => once(event)(c));\n\t}\n}\n\ntype Listener<T> = [(e: T) => void, any] | ((e: T) => void);\n\nexport interface EmitterOptions {\n\tonFirstListenerAdd?: Function;\n\tonFirstListenerDidAdd?: Function;\n\tonListenerDidAdd?: Function;\n\tonLastListenerRemove?: Function;\n\tleakWarningThreshold?: number;\n}\n\nlet _globalLeakWarningThreshold = -1;\nexport function setGlobalLeakWarningThreshold(n: number): IDisposable {\n\tconst oldValue = _globalLeakWarningThreshold;\n\t_globalLeakWarningThreshold = n;\n\treturn {\n\t\tdispose() {\n\t\t\t_globalLeakWarningThreshold = oldValue;\n\t\t}\n\t};\n}\n\nclass LeakageMonitor {\n\n\tprivate _stacks: Map<string, number> | undefined;\n\tprivate _warnCountdown: number = 0;\n\n\tconstructor(\n\t\treadonly customThreshold?: number,\n\t\treadonly name: string = Math.random().toString(18).slice(2, 5),\n\t) { }\n\n\tdispose(): void {\n\t\tif (this._stacks) {\n\t\t\tthis._stacks.clear();\n\t\t}\n\t}\n\n\tcheck(listenerCount: number): undefined | (() => void) {\n\n\t\tlet threshold = _globalLeakWarningThreshold;\n\t\tif (typeof this.customThreshold === 'number') {\n\t\t\tthreshold = this.customThreshold;\n\t\t}\n\n\t\tif (threshold <= 0 || listenerCount < threshold) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (!this._stacks) {\n\t\t\tthis._stacks = new Map();\n\t\t}\n\t\tconst stack = new Error().stack!.split('\\n').slice(3).join('\\n');\n\t\tconst count = (this._stacks.get(stack) || 0);\n\t\tthis._stacks.set(stack, count + 1);\n\t\tthis._warnCountdown -= 1;\n\n\t\tif (this._warnCountdown <= 0) {\n\t\t\t// only warn on first exceed and then every time the limit\n\t\t\t// is exceeded by 50% again\n\t\t\tthis._warnCountdown = threshold * 0.5;\n\n\t\t\t// find most frequent listener and print warning\n\t\t\tlet topStack: string | undefined;\n\t\t\tlet topCount: number = 0;\n\t\t\tfor (const [stack, count] of this._stacks) {\n\t\t\t\tif (!topStack || topCount < count) {\n\t\t\t\t\ttopStack = stack;\n\t\t\t\t\ttopCount = count;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconsole.warn(`[${this.name}] potential listener LEAK detected, having ${listenerCount} listeners already. MOST frequent listener (${topCount}):`);\n\t\t\tconsole.warn(topStack!);\n\t\t}\n\n\t\treturn () => {\n\t\t\tconst count = (this._stacks!.get(stack) || 0);\n\t\t\tthis._stacks!.set(stack, count - 1);\n\t\t};\n\t}\n}\n\n/**\n * The Emitter can be used to expose an Event to the public\n * to fire it from the insides.\n * Sample:\n\tclass Document {\n\n\t\tprivate readonly _onDidChange = new Emitter<(value:string)=>any>();\n\n\t\tpublic onDidChange = this._onDidChange.event;\n\n\t\t// getter-style\n\t\t// get onDidChange(): Event<(value:string)=>any> {\n\t\t// \treturn this._onDidChange.event;\n\t\t// }\n\n\t\tprivate _doIt() {\n\t\t\t//...\n\t\t\tthis._onDidChange.fire(value);\n\t\t}\n\t}\n */\nexport class Emitter<T> {\n\n\tprivate static readonly _noop = function () { };\n\n\tprivate readonly _options?: EmitterOptions;\n\tprivate readonly _leakageMon?: LeakageMonitor;\n\tprivate _disposed: boolean = false;\n\tprivate _event?: Event<T>;\n\tprivate _deliveryQueue?: LinkedList<[Listener<T>, T]>;\n\tprotected _listeners?: LinkedList<Listener<T>>;\n\n\tconstructor(options?: EmitterOptions) {\n\t\tthis._options = options;\n\t\tthis._leakageMon = _globalLeakWarningThreshold > 0\n\t\t\t? new LeakageMonitor(this._options && this._options.leakWarningThreshold)\n\t\t\t: undefined;\n\t}\n\n\t/**\n\t * For the public to allow to subscribe\n\t * to events from this Emitter\n\t */\n\tget event(): Event<T> {\n\t\tif (!this._event) {\n\t\t\tthis._event = (listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore) => {\n\t\t\t\tif (!this._listeners) {\n\t\t\t\t\tthis._listeners = new LinkedList();\n\t\t\t\t}\n\n\t\t\t\tconst firstListener = this._listeners.isEmpty();\n\n\t\t\t\tif (firstListener && this._options && this._options.onFirstListenerAdd) {\n\t\t\t\t\tthis._options.onFirstListenerAdd(this);\n\t\t\t\t}\n\n\t\t\t\tconst remove = this._listeners.push(!thisArgs ? listener : [listener, thisArgs]);\n\n\t\t\t\tif (firstListener && this._options && this._options.onFirstListenerDidAdd) {\n\t\t\t\t\tthis._options.onFirstListenerDidAdd(this);\n\t\t\t\t}\n\n\t\t\t\tif (this._options && this._options.onListenerDidAdd) {\n\t\t\t\t\tthis._options.onListenerDidAdd(this, listener, thisArgs);\n\t\t\t\t}\n\n\t\t\t\t// check and record this emitter for potential leakage\n\t\t\t\tlet removeMonitor: (() => void) | undefined;\n\t\t\t\tif (this._leakageMon) {\n\t\t\t\t\tremoveMonitor = this._leakageMon.check(this._listeners.size);\n\t\t\t\t}\n\n\t\t\t\tlet result: IDisposable;\n\t\t\t\tresult = {\n\t\t\t\t\tdispose: () => {\n\t\t\t\t\t\tif (removeMonitor) {\n\t\t\t\t\t\t\tremoveMonitor();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresult.dispose = Emitter._noop;\n\t\t\t\t\t\tif (!this._disposed) {\n\t\t\t\t\t\t\tremove();\n\t\t\t\t\t\t\tif (this._options && this._options.onLastListenerRemove) {\n\t\t\t\t\t\t\t\tconst hasListeners = (this._listeners && !this._listeners.isEmpty());\n\t\t\t\t\t\t\t\tif (!hasListeners) {\n\t\t\t\t\t\t\t\t\tthis._options.onLastListenerRemove(this);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tif (disposables instanceof DisposableStore) {\n\t\t\t\t\tdisposables.add(result);\n\t\t\t\t} else if (Array.isArray(disposables)) {\n\t\t\t\t\tdisposables.push(result);\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t};\n\t\t}\n\t\treturn this._event;\n\t}\n\n\t/**\n\t * To be kept private to fire an event to\n\t * subscribers\n\t */\n\tfire(event: T): void {\n\t\tif (this._listeners) {\n\t\t\t// put all [listener,event]-pairs into delivery queue\n\t\t\t// then emit all event. an inner/nested event might be\n\t\t\t// the driver of this\n\n\t\t\tif (!this._deliveryQueue) {\n\t\t\t\tthis._deliveryQueue = new LinkedList();\n\t\t\t}\n\n\t\t\tfor (let listener of this._listeners) {\n\t\t\t\tthis._deliveryQueue.push([listener, event]);\n\t\t\t}\n\n\t\t\twhile (this._deliveryQueue.size > 0) {\n\t\t\t\tconst [listener, event] = this._deliveryQueue.shift()!;\n\t\t\t\ttry {\n\t\t\t\t\tif (typeof listener === 'function') {\n\t\t\t\t\t\tlistener.call(undefined, event);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlistener[0].call(listener[1], event);\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tonUnexpectedError(e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdispose() {\n\t\tif (this._listeners) {\n\t\t\tthis._listeners.clear();\n\t\t}\n\t\tif (this._deliveryQueue) {\n\t\t\tthis._deliveryQueue.clear();\n\t\t}\n\t\tif (this._leakageMon) {\n\t\t\tthis._leakageMon.dispose();\n\t\t}\n\t\tthis._disposed = true;\n\t}\n}\n\nexport class PauseableEmitter<T> extends Emitter<T> {\n\n\tprivate _isPaused = 0;\n\tprivate _eventQueue = new LinkedList<T>();\n\tprivate _mergeFn?: (input: T[]) => T;\n\n\tconstructor(options?: EmitterOptions & { merge?: (input: T[]) => T }) {\n\t\tsuper(options);\n\t\tthis._mergeFn = options && options.merge;\n\t}\n\n\tpause(): void {\n\t\tthis._isPaused++;\n\t}\n\n\tresume(): void {\n\t\tif (this._isPaused !== 0 && --this._isPaused === 0) {\n\t\t\tif (this._mergeFn) {\n\t\t\t\t// use the merge function to create a single composite\n\t\t\t\t// event. make a copy in case firing pauses this emitter\n\t\t\t\tconst events = this._eventQueue.toArray();\n\t\t\t\tthis._eventQueue.clear();\n\t\t\t\tsuper.fire(this._mergeFn(events));\n\n\t\t\t} else {\n\t\t\t\t// no merging, fire each event individually and test\n\t\t\t\t// that this emitter isn't paused halfway through\n\t\t\t\twhile (!this._isPaused && this._eventQueue.size !== 0) {\n\t\t\t\t\tsuper.fire(this._eventQueue.shift()!);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfire(event: T): void {\n\t\tif (this._listeners) {\n\t\t\tif (this._isPaused !== 0) {\n\t\t\t\tthis._eventQueue.push(event);\n\t\t\t} else {\n\t\t\t\tsuper.fire(event);\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport interface IWaitUntil {\n\twaitUntil(thenable: Promise<any>): void;\n}\n\nexport class AsyncEmitter<T extends IWaitUntil> extends Emitter<T> {\n\n\tprivate _asyncDeliveryQueue?: LinkedList<[Listener<T>, Omit<T, 'waitUntil'>]>;\n\n\tasync fireAsync(data: Omit<T, 'waitUntil'>, token: CancellationToken, promiseJoin?: (p: Promise<any>, listener: Function) => Promise<any>): Promise<void> {\n\t\tif (!this._listeners) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._asyncDeliveryQueue) {\n\t\t\tthis._asyncDeliveryQueue = new LinkedList();\n\t\t}\n\n\t\tfor (const listener of this._listeners) {\n\t\t\tthis._asyncDeliveryQueue.push([listener, data]);\n\t\t}\n\n\t\twhile (this._asyncDeliveryQueue.size > 0 && !token.isCancellationRequested) {\n\n\t\t\tconst [listener, data] = this._asyncDeliveryQueue.shift()!;\n\t\t\tconst thenables: Promise<any>[] = [];\n\n\t\t\tconst event = <T>{\n\t\t\t\t...data,\n\t\t\t\twaitUntil: (p: Promise<any>): void => {\n\t\t\t\t\tif (Object.isFrozen(thenables)) {\n\t\t\t\t\t\tthrow new Error('waitUntil can NOT be called asynchronous');\n\t\t\t\t\t}\n\t\t\t\t\tif (promiseJoin) {\n\t\t\t\t\t\tp = promiseJoin(p, typeof listener === 'function' ? listener : listener[0]);\n\t\t\t\t\t}\n\t\t\t\t\tthenables.push(p);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\ttry {\n\t\t\t\tif (typeof listener === 'function') {\n\t\t\t\t\tlistener.call(undefined, event);\n\t\t\t\t} else {\n\t\t\t\t\tlistener[0].call(listener[1], event);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tonUnexpectedError(e);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// freeze thenables-collection to enforce sync-calls to\n\t\t\t// wait until and then wait for all thenables to resolve\n\t\t\tObject.freeze(thenables);\n\t\t\tawait Promise.all(thenables).catch(e => onUnexpectedError(e));\n\t\t}\n\t}\n}\n\nexport class EventMultiplexer<T> implements IDisposable {\n\n\tprivate readonly emitter: Emitter<T>;\n\tprivate hasListeners = false;\n\tprivate events: { event: Event<T>; listener: IDisposable | null; }[] = [];\n\n\tconstructor() {\n\t\tthis.emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd: () => this.onFirstListenerAdd(),\n\t\t\tonLastListenerRemove: () => this.onLastListenerRemove()\n\t\t});\n\t}\n\n\tget event(): Event<T> {\n\t\treturn this.emitter.event;\n\t}\n\n\tadd(event: Event<T>): IDisposable {\n\t\tconst e = { event: event, listener: null };\n\t\tthis.events.push(e);\n\n\t\tif (this.hasListeners) {\n\t\t\tthis.hook(e);\n\t\t}\n\n\t\tconst dispose = () => {\n\t\t\tif (this.hasListeners) {\n\t\t\t\tthis.unhook(e);\n\t\t\t}\n\n\t\t\tconst idx = this.events.indexOf(e);\n\t\t\tthis.events.splice(idx, 1);\n\t\t};\n\n\t\treturn toDisposable(onceFn(dispose));\n\t}\n\n\tprivate onFirstListenerAdd(): void {\n\t\tthis.hasListeners = true;\n\t\tthis.events.forEach(e => this.hook(e));\n\t}\n\n\tprivate onLastListenerRemove(): void {\n\t\tthis.hasListeners = false;\n\t\tthis.events.forEach(e => this.unhook(e));\n\t}\n\n\tprivate hook(e: { event: Event<T>; listener: IDisposable | null; }): void {\n\t\te.listener = e.event(r => this.emitter.fire(r));\n\t}\n\n\tprivate unhook(e: { event: Event<T>; listener: IDisposable | null; }): void {\n\t\tif (e.listener) {\n\t\t\te.listener.dispose();\n\t\t}\n\t\te.listener = null;\n\t}\n\n\tdispose(): void {\n\t\tthis.emitter.dispose();\n\t}\n}\n\n/**\n * The EventBufferer is useful in situations in which you want\n * to delay firing your events during some code.\n * You can wrap that code and be sure that the event will not\n * be fired during that wrap.\n *\n * ```\n * const emitter: Emitter;\n * const delayer = new EventDelayer();\n * const delayedEvent = delayer.wrapEvent(emitter.event);\n *\n * delayedEvent(console.log);\n *\n * delayer.bufferEvents(() => {\n *   emitter.fire(); // event will not be fired yet\n * });\n *\n * // event will only be fired at this point\n * ```\n */\nexport class EventBufferer {\n\n\tprivate buffers: Function[][] = [];\n\n\twrapEvent<T>(event: Event<T>): Event<T> {\n\t\treturn (listener, thisArgs?, disposables?) => {\n\t\t\treturn event(i => {\n\t\t\t\tconst buffer = this.buffers[this.buffers.length - 1];\n\n\t\t\t\tif (buffer) {\n\t\t\t\t\tbuffer.push(() => listener.call(thisArgs, i));\n\t\t\t\t} else {\n\t\t\t\t\tlistener.call(thisArgs, i);\n\t\t\t\t}\n\t\t\t}, undefined, disposables);\n\t\t};\n\t}\n\n\tbufferEvents<R = void>(fn: () => R): R {\n\t\tconst buffer: Array<() => R> = [];\n\t\tthis.buffers.push(buffer);\n\t\tconst r = fn();\n\t\tthis.buffers.pop();\n\t\tbuffer.forEach(flush => flush());\n\t\treturn r;\n\t}\n}\n\n/**\n * A Relay is an event forwarder which functions as a replugabble event pipe.\n * Once created, you can connect an input event to it and it will simply forward\n * events from that input event through its own `event` property. The `input`\n * can be changed at any point in time.\n */\nexport class Relay<T> implements IDisposable {\n\n\tprivate listening = false;\n\tprivate inputEvent: Event<T> = Event.None;\n\tprivate inputEventListener: IDisposable = Disposable.None;\n\n\tprivate readonly emitter = new Emitter<T>({\n\t\tonFirstListenerDidAdd: () => {\n\t\t\tthis.listening = true;\n\t\t\tthis.inputEventListener = this.inputEvent(this.emitter.fire, this.emitter);\n\t\t},\n\t\tonLastListenerRemove: () => {\n\t\t\tthis.listening = false;\n\t\t\tthis.inputEventListener.dispose();\n\t\t}\n\t});\n\n\treadonly event: Event<T> = this.emitter.event;\n\n\tset input(event: Event<T>) {\n\t\tthis.inputEvent = event;\n\n\t\tif (this.listening) {\n\t\t\tthis.inputEventListener.dispose();\n\t\t\tthis.inputEventListener = event(this.emitter.fire, this.emitter);\n\t\t}\n\t}\n\n\tdispose() {\n\t\tthis.inputEventListener.dispose();\n\t\tthis.emitter.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IDisposable } from 'vs/base/common/lifecycle';\n\nexport interface CancellationToken {\n\n\t/**\n\t * A flag signalling is cancellation has been requested.\n\t */\n\treadonly isCancellationRequested: boolean;\n\n\t/**\n\t * An event which fires when cancellation is requested. This event\n\t * only ever fires `once` as cancellation can only happen once. Listeners\n\t * that are registered after cancellation will be called (next event loop run),\n\t * but also only once.\n\t *\n\t * @event\n\t */\n\treadonly onCancellationRequested: (listener: (e: any) => any, thisArgs?: any, disposables?: IDisposable[]) => IDisposable;\n}\n\nconst shortcutEvent: Event<any> = Object.freeze(function (callback, context?): IDisposable {\n\tconst handle = setTimeout(callback.bind(context), 0);\n\treturn { dispose() { clearTimeout(handle); } };\n});\n\nexport namespace CancellationToken {\n\n\texport function isCancellationToken(thing: unknown): thing is CancellationToken {\n\t\tif (thing === CancellationToken.None || thing === CancellationToken.Cancelled) {\n\t\t\treturn true;\n\t\t}\n\t\tif (thing instanceof MutableToken) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing || typeof thing !== 'object') {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (thing as CancellationToken).isCancellationRequested === 'boolean'\n\t\t\t&& typeof (thing as CancellationToken).onCancellationRequested === 'function';\n\t}\n\n\n\texport const None: CancellationToken = Object.freeze({\n\t\tisCancellationRequested: false,\n\t\tonCancellationRequested: Event.None\n\t});\n\n\texport const Cancelled: CancellationToken = Object.freeze({\n\t\tisCancellationRequested: true,\n\t\tonCancellationRequested: shortcutEvent\n\t});\n}\n\nclass MutableToken implements CancellationToken {\n\n\tprivate _isCancelled: boolean = false;\n\tprivate _emitter: Emitter<any> | null = null;\n\n\tpublic cancel() {\n\t\tif (!this._isCancelled) {\n\t\t\tthis._isCancelled = true;\n\t\t\tif (this._emitter) {\n\t\t\t\tthis._emitter.fire(undefined);\n\t\t\t\tthis.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tget isCancellationRequested(): boolean {\n\t\treturn this._isCancelled;\n\t}\n\n\tget onCancellationRequested(): Event<any> {\n\t\tif (this._isCancelled) {\n\t\t\treturn shortcutEvent;\n\t\t}\n\t\tif (!this._emitter) {\n\t\t\tthis._emitter = new Emitter<any>();\n\t\t}\n\t\treturn this._emitter.event;\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this._emitter) {\n\t\t\tthis._emitter.dispose();\n\t\t\tthis._emitter = null;\n\t\t}\n\t}\n}\n\nexport class CancellationTokenSource {\n\n\tprivate _token?: CancellationToken = undefined;\n\tprivate _parentListener?: IDisposable = undefined;\n\n\tconstructor(parent?: CancellationToken) {\n\t\tthis._parentListener = parent && parent.onCancellationRequested(this.cancel, this);\n\t}\n\n\tget token(): CancellationToken {\n\t\tif (!this._token) {\n\t\t\t// be lazy and create the token only when\n\t\t\t// actually needed\n\t\t\tthis._token = new MutableToken();\n\t\t}\n\t\treturn this._token;\n\t}\n\n\tcancel(): void {\n\t\tif (!this._token) {\n\t\t\t// save an object by returning the default\n\t\t\t// cancelled token when cancellation happens\n\t\t\t// before someone asks for the token\n\t\t\tthis._token = CancellationToken.Cancelled;\n\n\t\t} else if (this._token instanceof MutableToken) {\n\t\t\t// actually cancel\n\t\t\tthis._token.cancel();\n\t\t}\n\t}\n\n\tdispose(cancel: boolean = false): void {\n\t\tif (cancel) {\n\t\t\tthis.cancel();\n\t\t}\n\t\tif (this._parentListener) {\n\t\t\tthis._parentListener.dispose();\n\t\t}\n\t\tif (!this._token) {\n\t\t\t// ensure to initialize with an empty token if we had none\n\t\t\tthis._token = CancellationToken.None;\n\n\t\t} else if (this._token instanceof MutableToken) {\n\t\t\t// actually dispose\n\t\t\tthis._token.dispose();\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport * as errors from 'vs/base/common/errors';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\n\nexport function isThenable<T>(obj: any): obj is Promise<T> {\n\treturn obj && typeof (<Promise<any>>obj).then === 'function';\n}\n\nexport interface CancelablePromise<T> extends Promise<T> {\n\tcancel(): void;\n}\n\nexport function createCancelablePromise<T>(callback: (token: CancellationToken) => Promise<T>): CancelablePromise<T> {\n\tconst source = new CancellationTokenSource();\n\n\tconst thenable = callback(source.token);\n\tconst promise = new Promise<T>((resolve, reject) => {\n\t\tsource.token.onCancellationRequested(() => {\n\t\t\treject(errors.canceled());\n\t\t});\n\t\tPromise.resolve(thenable).then(value => {\n\t\t\tsource.dispose();\n\t\t\tresolve(value);\n\t\t}, err => {\n\t\t\tsource.dispose();\n\t\t\treject(err);\n\t\t});\n\t});\n\n\treturn <CancelablePromise<T>>new class {\n\t\tcancel() {\n\t\t\tsource.cancel();\n\t\t}\n\t\tthen<TResult1 = T, TResult2 = never>(resolve?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, reject?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2> {\n\t\t\treturn promise.then(resolve, reject);\n\t\t}\n\t\tcatch<TResult = never>(reject?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult> {\n\t\t\treturn this.then(undefined, reject);\n\t\t}\n\t\tfinally(onfinally?: (() => void) | undefined | null): Promise<T> {\n\t\t\treturn promise.finally(onfinally);\n\t\t}\n\t};\n}\n\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken): Promise<T | undefined>;\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken, defaultValue: T): Promise<T>;\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken, defaultValue?: T): Promise<T | undefined> {\n\treturn Promise.race([promise, new Promise<T | undefined>(resolve => token.onCancellationRequested(() => resolve(defaultValue)))]);\n}\n\n/**\n * Returns as soon as one of the promises is resolved and cancels remaining promises\n */\nexport async function raceCancellablePromises<T>(cancellablePromises: CancelablePromise<T>[]): Promise<T> {\n\tlet resolvedPromiseIndex = -1;\n\tconst promises = cancellablePromises.map((promise, index) => promise.then(result => { resolvedPromiseIndex = index; return result; }));\n\tconst result = await Promise.race(promises);\n\tcancellablePromises.forEach((cancellablePromise, index) => {\n\t\tif (index !== resolvedPromiseIndex) {\n\t\t\tcancellablePromise.cancel();\n\t\t}\n\t});\n\treturn result;\n}\n\nexport function raceTimeout<T>(promise: Promise<T>, timeout: number, onTimeout?: () => void): Promise<T | undefined> {\n\tlet promiseResolve: ((value: T | undefined) => void) | undefined = undefined;\n\n\tconst timer = setTimeout(() => {\n\t\tpromiseResolve?.(undefined);\n\t\tonTimeout?.();\n\t}, timeout);\n\n\treturn Promise.race([\n\t\tpromise.finally(() => clearTimeout(timer)),\n\t\tnew Promise<T | undefined>(resolve => promiseResolve = resolve)\n\t]);\n}\n\nexport function asPromise<T>(callback: () => T | Thenable<T>): Promise<T> {\n\treturn new Promise<T>((resolve, reject) => {\n\t\tconst item = callback();\n\t\tif (isThenable<T>(item)) {\n\t\t\titem.then(resolve, reject);\n\t\t} else {\n\t\t\tresolve(item);\n\t\t}\n\t});\n}\n\nexport interface ITask<T> {\n\t(): T;\n}\n\n/**\n * A helper to prevent accumulation of sequential async tasks.\n *\n * Imagine a mail man with the sole task of delivering letters. As soon as\n * a letter submitted for delivery, he drives to the destination, delivers it\n * and returns to his base. Imagine that during the trip, N more letters were submitted.\n * When the mail man returns, he picks those N letters and delivers them all in a\n * single trip. Even though N+1 submissions occurred, only 2 deliveries were made.\n *\n * The throttler implements this via the queue() method, by providing it a task\n * factory. Following the example:\n *\n * \t\tconst throttler = new Throttler();\n * \t\tconst letters = [];\n *\n * \t\tfunction deliver() {\n * \t\t\tconst lettersToDeliver = letters;\n * \t\t\tletters = [];\n * \t\t\treturn makeTheTrip(lettersToDeliver);\n * \t\t}\n *\n * \t\tfunction onLetterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tthrottler.queue(deliver);\n * \t\t}\n */\nexport class Throttler {\n\n\tprivate activePromise: Promise<any> | null;\n\tprivate queuedPromise: Promise<any> | null;\n\tprivate queuedPromiseFactory: ITask<Promise<any>> | null;\n\n\tconstructor() {\n\t\tthis.activePromise = null;\n\t\tthis.queuedPromise = null;\n\t\tthis.queuedPromiseFactory = null;\n\t}\n\n\tqueue<T>(promiseFactory: ITask<Promise<T>>): Promise<T> {\n\t\tif (this.activePromise) {\n\t\t\tthis.queuedPromiseFactory = promiseFactory;\n\n\t\t\tif (!this.queuedPromise) {\n\t\t\t\tconst onComplete = () => {\n\t\t\t\t\tthis.queuedPromise = null;\n\n\t\t\t\t\tconst result = this.queue(this.queuedPromiseFactory!);\n\t\t\t\t\tthis.queuedPromiseFactory = null;\n\n\t\t\t\t\treturn result;\n\t\t\t\t};\n\n\t\t\t\tthis.queuedPromise = new Promise(c => {\n\t\t\t\t\tthis.activePromise!.then(onComplete, onComplete).then(c);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn new Promise((c, e) => {\n\t\t\t\tthis.queuedPromise!.then(c, e);\n\t\t\t});\n\t\t}\n\n\t\tthis.activePromise = promiseFactory();\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.activePromise!.then((result: any) => {\n\t\t\t\tthis.activePromise = null;\n\t\t\t\tresolve(result);\n\t\t\t}, (err: any) => {\n\t\t\t\tthis.activePromise = null;\n\t\t\t\treject(err);\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport class Sequencer {\n\n\tprivate current: Promise<any> = Promise.resolve(null);\n\n\tqueue<T>(promiseTask: ITask<Promise<T>>): Promise<T> {\n\t\treturn this.current = this.current.then(() => promiseTask());\n\t}\n}\n\nexport class SequencerByKey<TKey> {\n\n\tprivate promiseMap = new Map<TKey, Promise<any>>();\n\n\tqueue<T>(key: TKey, promiseTask: ITask<Promise<T>>): Promise<T> {\n\t\tconst runningPromise = this.promiseMap.get(key) ?? Promise.resolve();\n\t\tconst newPromise = runningPromise\n\t\t\t.catch(() => { })\n\t\t\t.then(promiseTask)\n\t\t\t.finally(() => {\n\t\t\t\tif (this.promiseMap.get(key) === newPromise) {\n\t\t\t\t\tthis.promiseMap.delete(key);\n\t\t\t\t}\n\t\t\t});\n\t\tthis.promiseMap.set(key, newPromise);\n\t\treturn newPromise;\n\t}\n}\n\n/**\n * A helper to delay execution of a task that is being requested often.\n *\n * Following the throttler, now imagine the mail man wants to optimize the number of\n * trips proactively. The trip itself can be long, so he decides not to make the trip\n * as soon as a letter is submitted. Instead he waits a while, in case more\n * letters are submitted. After said waiting period, if no letters were submitted, he\n * decides to make the trip. Imagine that N more letters were submitted after the first\n * one, all within a short period of time between each other. Even though N+1\n * submissions occurred, only 1 delivery was made.\n *\n * The delayer offers this behavior via the trigger() method, into which both the task\n * to be executed and the waiting period (delay) must be passed in as arguments. Following\n * the example:\n *\n * \t\tconst delayer = new Delayer(WAITING_PERIOD);\n * \t\tconst letters = [];\n *\n * \t\tfunction letterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tdelayer.trigger(() => { return makeTheTrip(); });\n * \t\t}\n */\nexport class Delayer<T> implements IDisposable {\n\n\tprivate timeout: any;\n\tprivate completionPromise: Promise<any> | null;\n\tprivate doResolve: ((value?: any | Promise<any>) => void) | null;\n\tprivate doReject: ((err: any) => void) | null;\n\tprivate task: ITask<T | Promise<T>> | null;\n\n\tconstructor(public defaultDelay: number) {\n\t\tthis.timeout = null;\n\t\tthis.completionPromise = null;\n\t\tthis.doResolve = null;\n\t\tthis.doReject = null;\n\t\tthis.task = null;\n\t}\n\n\ttrigger(task: ITask<T | Promise<T>>, delay: number = this.defaultDelay): Promise<T> {\n\t\tthis.task = task;\n\t\tthis.cancelTimeout();\n\n\t\tif (!this.completionPromise) {\n\t\t\tthis.completionPromise = new Promise((c, e) => {\n\t\t\t\tthis.doResolve = c;\n\t\t\t\tthis.doReject = e;\n\t\t\t}).then(() => {\n\t\t\t\tthis.completionPromise = null;\n\t\t\t\tthis.doResolve = null;\n\t\t\t\tif (this.task) {\n\t\t\t\t\tconst task = this.task;\n\t\t\t\t\tthis.task = null;\n\t\t\t\t\treturn task();\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t});\n\t\t}\n\n\t\tthis.timeout = setTimeout(() => {\n\t\t\tthis.timeout = null;\n\t\t\tif (this.doResolve) {\n\t\t\t\tthis.doResolve(null);\n\t\t\t}\n\t\t}, delay);\n\n\t\treturn this.completionPromise;\n\t}\n\n\tisTriggered(): boolean {\n\t\treturn this.timeout !== null;\n\t}\n\n\tcancel(): void {\n\t\tthis.cancelTimeout();\n\n\t\tif (this.completionPromise) {\n\t\t\tif (this.doReject) {\n\t\t\t\tthis.doReject(errors.canceled());\n\t\t\t}\n\t\t\tthis.completionPromise = null;\n\t\t}\n\t}\n\n\tprivate cancelTimeout(): void {\n\t\tif (this.timeout !== null) {\n\t\t\tclearTimeout(this.timeout);\n\t\t\tthis.timeout = null;\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.cancelTimeout();\n\t}\n}\n\n/**\n * A helper to delay execution of a task that is being requested often, while\n * preventing accumulation of consecutive executions, while the task runs.\n *\n * The mail man is clever and waits for a certain amount of time, before going\n * out to deliver letters. While the mail man is going out, more letters arrive\n * and can only be delivered once he is back. Once he is back the mail man will\n * do one more trip to deliver the letters that have accumulated while he was out.\n */\nexport class ThrottledDelayer<T> {\n\n\tprivate delayer: Delayer<Promise<T>>;\n\tprivate throttler: Throttler;\n\n\tconstructor(defaultDelay: number) {\n\t\tthis.delayer = new Delayer(defaultDelay);\n\t\tthis.throttler = new Throttler();\n\t}\n\n\ttrigger(promiseFactory: ITask<Promise<T>>, delay?: number): Promise<T> {\n\t\treturn this.delayer.trigger(() => this.throttler.queue(promiseFactory), delay) as any as Promise<T>;\n\t}\n\n\tisTriggered(): boolean {\n\t\treturn this.delayer.isTriggered();\n\t}\n\n\tcancel(): void {\n\t\tthis.delayer.cancel();\n\t}\n\n\tdispose(): void {\n\t\tthis.delayer.dispose();\n\t}\n}\n\n/**\n * A barrier that is initially closed and then becomes opened permanently.\n */\nexport class Barrier {\n\n\tprivate _isOpen: boolean;\n\tprivate _promise: Promise<boolean>;\n\tprivate _completePromise!: (v: boolean) => void;\n\n\tconstructor() {\n\t\tthis._isOpen = false;\n\t\tthis._promise = new Promise<boolean>((c, e) => {\n\t\t\tthis._completePromise = c;\n\t\t});\n\t}\n\n\tisOpen(): boolean {\n\t\treturn this._isOpen;\n\t}\n\n\topen(): void {\n\t\tthis._isOpen = true;\n\t\tthis._completePromise(true);\n\t}\n\n\twait(): Promise<boolean> {\n\t\treturn this._promise;\n\t}\n}\n\nexport function timeout(millis: number): CancelablePromise<void>;\nexport function timeout(millis: number, token: CancellationToken): Promise<void>;\nexport function timeout(millis: number, token?: CancellationToken): CancelablePromise<void> | Promise<void> {\n\tif (!token) {\n\t\treturn createCancelablePromise(token => timeout(millis, token));\n\t}\n\n\treturn new Promise((resolve, reject) => {\n\t\tconst handle = setTimeout(resolve, millis);\n\t\ttoken.onCancellationRequested(() => {\n\t\t\tclearTimeout(handle);\n\t\t\treject(errors.canceled());\n\t\t});\n\t});\n}\n\nexport function disposableTimeout(handler: () => void, timeout = 0): IDisposable {\n\tconst timer = setTimeout(handler, timeout);\n\treturn toDisposable(() => clearTimeout(timer));\n}\n\nexport function ignoreErrors<T>(promise: Promise<T>): Promise<T | undefined> {\n\treturn promise.then(undefined, _ => undefined);\n}\n\n/**\n * Runs the provided list of promise factories in sequential order. The returned\n * promise will complete to an array of results from each promise.\n */\n\nexport function sequence<T>(promiseFactories: ITask<Promise<T>>[]): Promise<T[]> {\n\tconst results: T[] = [];\n\tlet index = 0;\n\tconst len = promiseFactories.length;\n\n\tfunction next(): Promise<T> | null {\n\t\treturn index < len ? promiseFactories[index++]() : null;\n\t}\n\n\tfunction thenHandler(result: any): Promise<any> {\n\t\tif (result !== undefined && result !== null) {\n\t\t\tresults.push(result);\n\t\t}\n\n\t\tconst n = next();\n\t\tif (n) {\n\t\t\treturn n.then(thenHandler);\n\t\t}\n\n\t\treturn Promise.resolve(results);\n\t}\n\n\treturn Promise.resolve(null).then(thenHandler);\n}\n\nexport function first<T>(promiseFactories: ITask<Promise<T>>[], shouldStop: (t: T) => boolean = t => !!t, defaultValue: T | null = null): Promise<T | null> {\n\tlet index = 0;\n\tconst len = promiseFactories.length;\n\n\tconst loop: () => Promise<T | null> = () => {\n\t\tif (index >= len) {\n\t\t\treturn Promise.resolve(defaultValue);\n\t\t}\n\n\t\tconst factory = promiseFactories[index++];\n\t\tconst promise = Promise.resolve(factory());\n\n\t\treturn promise.then(result => {\n\t\t\tif (shouldStop(result)) {\n\t\t\t\treturn Promise.resolve(result);\n\t\t\t}\n\n\t\t\treturn loop();\n\t\t});\n\t};\n\n\treturn loop();\n}\n\ninterface ILimitedTaskFactory<T> {\n\tfactory: ITask<Promise<T>>;\n\tc: (value: T | Promise<T>) => void;\n\te: (error?: any) => void;\n}\n\n/**\n * A helper to queue N promises and run them all with a max degree of parallelism. The helper\n * ensures that at any time no more than M promises are running at the same time.\n */\nexport class Limiter<T> {\n\n\tprivate _size = 0;\n\tprivate runningPromises: number;\n\tprivate maxDegreeOfParalellism: number;\n\tprivate outstandingPromises: ILimitedTaskFactory<T>[];\n\tprivate readonly _onFinished: Emitter<void>;\n\n\tconstructor(maxDegreeOfParalellism: number) {\n\t\tthis.maxDegreeOfParalellism = maxDegreeOfParalellism;\n\t\tthis.outstandingPromises = [];\n\t\tthis.runningPromises = 0;\n\t\tthis._onFinished = new Emitter<void>();\n\t}\n\n\tget onFinished(): Event<void> {\n\t\treturn this._onFinished.event;\n\t}\n\n\tget size(): number {\n\t\treturn this._size;\n\t\t// return this.runningPromises + this.outstandingPromises.length;\n\t}\n\n\tqueue(factory: ITask<Promise<T>>): Promise<T> {\n\t\tthis._size++;\n\n\t\treturn new Promise<T>((c, e) => {\n\t\t\tthis.outstandingPromises.push({ factory, c, e });\n\t\t\tthis.consume();\n\t\t});\n\t}\n\n\tprivate consume(): void {\n\t\twhile (this.outstandingPromises.length && this.runningPromises < this.maxDegreeOfParalellism) {\n\t\t\tconst iLimitedTask = this.outstandingPromises.shift()!;\n\t\t\tthis.runningPromises++;\n\n\t\t\tconst promise = iLimitedTask.factory();\n\t\t\tpromise.then(iLimitedTask.c, iLimitedTask.e);\n\t\t\tpromise.then(() => this.consumed(), () => this.consumed());\n\t\t}\n\t}\n\n\tprivate consumed(): void {\n\t\tthis._size--;\n\t\tthis.runningPromises--;\n\n\t\tif (this.outstandingPromises.length > 0) {\n\t\t\tthis.consume();\n\t\t} else {\n\t\t\tthis._onFinished.fire();\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis._onFinished.dispose();\n\t}\n}\n\n/**\n * A queue is handles one promise at a time and guarantees that at any time only one promise is executing.\n */\nexport class Queue<T> extends Limiter<T> {\n\n\tconstructor() {\n\t\tsuper(1);\n\t}\n}\n\n/**\n * A helper to organize queues per resource. The ResourceQueue makes sure to manage queues per resource\n * by disposing them once the queue is empty.\n */\nexport class ResourceQueue implements IDisposable {\n\n\tprivate readonly queues = new Map<string, Queue<void>>();\n\n\tqueueFor(resource: URI): Queue<void> {\n\t\tconst key = resource.toString();\n\t\tif (!this.queues.has(key)) {\n\t\t\tconst queue = new Queue<void>();\n\t\t\tqueue.onFinished(() => {\n\t\t\t\tqueue.dispose();\n\t\t\t\tthis.queues.delete(key);\n\t\t\t});\n\n\t\t\tthis.queues.set(key, queue);\n\t\t}\n\n\t\treturn this.queues.get(key)!;\n\t}\n\n\tdispose(): void {\n\t\tthis.queues.forEach(queue => queue.dispose());\n\t\tthis.queues.clear();\n\t}\n}\n\nexport class TimeoutTimer implements IDisposable {\n\tprivate _token: any;\n\n\tconstructor();\n\tconstructor(runner: () => void, timeout: number);\n\tconstructor(runner?: () => void, timeout?: number) {\n\t\tthis._token = -1;\n\n\t\tif (typeof runner === 'function' && typeof timeout === 'number') {\n\t\t\tthis.setIfNotSet(runner, timeout);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t}\n\n\tcancel(): void {\n\t\tif (this._token !== -1) {\n\t\t\tclearTimeout(this._token);\n\t\t\tthis._token = -1;\n\t\t}\n\t}\n\n\tcancelAndSet(runner: () => void, timeout: number): void {\n\t\tthis.cancel();\n\t\tthis._token = setTimeout(() => {\n\t\t\tthis._token = -1;\n\t\t\trunner();\n\t\t}, timeout);\n\t}\n\n\tsetIfNotSet(runner: () => void, timeout: number): void {\n\t\tif (this._token !== -1) {\n\t\t\t// timer is already set\n\t\t\treturn;\n\t\t}\n\t\tthis._token = setTimeout(() => {\n\t\t\tthis._token = -1;\n\t\t\trunner();\n\t\t}, timeout);\n\t}\n}\n\nexport class IntervalTimer implements IDisposable {\n\n\tprivate _token: any;\n\n\tconstructor() {\n\t\tthis._token = -1;\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t}\n\n\tcancel(): void {\n\t\tif (this._token !== -1) {\n\t\t\tclearInterval(this._token);\n\t\t\tthis._token = -1;\n\t\t}\n\t}\n\n\tcancelAndSet(runner: () => void, interval: number): void {\n\t\tthis.cancel();\n\t\tthis._token = setInterval(() => {\n\t\t\trunner();\n\t\t}, interval);\n\t}\n}\n\nexport class RunOnceScheduler {\n\n\tprotected runner: ((...args: any[]) => void) | null;\n\n\tprivate timeoutToken: any;\n\tprivate timeout: number;\n\tprivate timeoutHandler: () => void;\n\n\tconstructor(runner: (...args: any[]) => void, delay: number) {\n\t\tthis.timeoutToken = -1;\n\t\tthis.runner = runner;\n\t\tthis.timeout = delay;\n\t\tthis.timeoutHandler = this.onTimeout.bind(this);\n\t}\n\n\t/**\n\t * Dispose RunOnceScheduler\n\t */\n\tdispose(): void {\n\t\tthis.cancel();\n\t\tthis.runner = null;\n\t}\n\n\t/**\n\t * Cancel current scheduled runner (if any).\n\t */\n\tcancel(): void {\n\t\tif (this.isScheduled()) {\n\t\t\tclearTimeout(this.timeoutToken);\n\t\t\tthis.timeoutToken = -1;\n\t\t}\n\t}\n\n\t/**\n\t * Cancel previous runner (if any) & schedule a new runner.\n\t */\n\tschedule(delay = this.timeout): void {\n\t\tthis.cancel();\n\t\tthis.timeoutToken = setTimeout(this.timeoutHandler, delay);\n\t}\n\n\tget delay(): number {\n\t\treturn this.timeout;\n\t}\n\n\tset delay(value: number) {\n\t\tthis.timeout = value;\n\t}\n\n\t/**\n\t * Returns true if scheduled.\n\t */\n\tisScheduled(): boolean {\n\t\treturn this.timeoutToken !== -1;\n\t}\n\n\tprivate onTimeout() {\n\t\tthis.timeoutToken = -1;\n\t\tif (this.runner) {\n\t\t\tthis.doRun();\n\t\t}\n\t}\n\n\tprotected doRun(): void {\n\t\tif (this.runner) {\n\t\t\tthis.runner();\n\t\t}\n\t}\n}\n\nexport class RunOnceWorker<T> extends RunOnceScheduler {\n\tprivate units: T[] = [];\n\n\tconstructor(runner: (units: T[]) => void, timeout: number) {\n\t\tsuper(runner, timeout);\n\t}\n\n\twork(unit: T): void {\n\t\tthis.units.push(unit);\n\n\t\tif (!this.isScheduled()) {\n\t\t\tthis.schedule();\n\t\t}\n\t}\n\n\tprotected doRun(): void {\n\t\tconst units = this.units;\n\t\tthis.units = [];\n\n\t\tif (this.runner) {\n\t\t\tthis.runner(units);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.units = [];\n\n\t\tsuper.dispose();\n\t}\n}\n\n//#region -- run on idle tricks ------------\n\nexport interface IdleDeadline {\n\treadonly didTimeout: boolean;\n\ttimeRemaining(): number;\n}\n/**\n * Execute the callback the next time the browser is idle\n */\nexport let runWhenIdle: (callback: (idle: IdleDeadline) => void, timeout?: number) => IDisposable;\n\ndeclare function requestIdleCallback(callback: (args: IdleDeadline) => void, options?: { timeout: number }): number;\ndeclare function cancelIdleCallback(handle: number): void;\n\n(function () {\n\tif (typeof requestIdleCallback !== 'function' || typeof cancelIdleCallback !== 'function') {\n\t\tconst dummyIdle: IdleDeadline = Object.freeze({\n\t\t\tdidTimeout: true,\n\t\t\ttimeRemaining() { return 15; }\n\t\t});\n\t\trunWhenIdle = (runner) => {\n\t\t\tconst handle = setTimeout(() => runner(dummyIdle));\n\t\t\tlet disposed = false;\n\t\t\treturn {\n\t\t\t\tdispose() {\n\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdisposed = true;\n\t\t\t\t\tclearTimeout(handle);\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t} else {\n\t\trunWhenIdle = (runner, timeout?) => {\n\t\t\tconst handle: number = requestIdleCallback(runner, typeof timeout === 'number' ? { timeout } : undefined);\n\t\t\tlet disposed = false;\n\t\t\treturn {\n\t\t\t\tdispose() {\n\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdisposed = true;\n\t\t\t\t\tcancelIdleCallback(handle);\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t}\n})();\n\n/**\n * An implementation of the \"idle-until-urgent\"-strategy as introduced\n * here: https://philipwalton.com/articles/idle-until-urgent/\n */\nexport class IdleValue<T> {\n\n\tprivate readonly _executor: () => void;\n\tprivate readonly _handle: IDisposable;\n\n\tprivate _didRun: boolean = false;\n\tprivate _value?: T;\n\tprivate _error: any;\n\n\tconstructor(executor: () => T) {\n\t\tthis._executor = () => {\n\t\t\ttry {\n\t\t\t\tthis._value = executor();\n\t\t\t} catch (err) {\n\t\t\t\tthis._error = err;\n\t\t\t} finally {\n\t\t\t\tthis._didRun = true;\n\t\t\t}\n\t\t};\n\t\tthis._handle = runWhenIdle(() => this._executor());\n\t}\n\n\tdispose(): void {\n\t\tthis._handle.dispose();\n\t}\n\n\tget value(): T {\n\t\tif (!this._didRun) {\n\t\t\tthis._handle.dispose();\n\t\t\tthis._executor();\n\t\t}\n\t\tif (this._error) {\n\t\t\tthrow this._error;\n\t\t}\n\t\treturn this._value!;\n\t}\n}\n\n//#endregion\n\nexport async function retry<T>(task: ITask<Promise<T>>, delay: number, retries: number): Promise<T> {\n\tlet lastError: Error | undefined;\n\n\tfor (let i = 0; i < retries; i++) {\n\t\ttry {\n\t\t\treturn await task();\n\t\t} catch (error) {\n\t\t\tlastError = error;\n\n\t\t\tawait timeout(delay);\n\t\t}\n\t}\n\n\tthrow lastError;\n}\n\n//#region Task Sequentializer\n\ninterface IPendingTask {\n\ttaskId: number;\n\tcancel: () => void;\n\tpromise: Promise<void>;\n}\n\ninterface ISequentialTask {\n\tpromise: Promise<void>;\n\tpromiseResolve: () => void;\n\tpromiseReject: (error: Error) => void;\n\trun: () => Promise<void>;\n}\n\nexport interface ITaskSequentializerWithPendingTask {\n\treadonly pending: Promise<void>;\n}\n\nexport class TaskSequentializer {\n\tprivate _pending?: IPendingTask;\n\tprivate _next?: ISequentialTask;\n\n\thasPending(taskId?: number): this is ITaskSequentializerWithPendingTask {\n\t\tif (!this._pending) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (typeof taskId === 'number') {\n\t\t\treturn this._pending.taskId === taskId;\n\t\t}\n\n\t\treturn !!this._pending;\n\t}\n\n\tget pending(): Promise<void> | undefined {\n\t\treturn this._pending ? this._pending.promise : undefined;\n\t}\n\n\tcancelPending(): void {\n\t\tthis._pending?.cancel();\n\t}\n\n\tsetPending(taskId: number, promise: Promise<void>, onCancel?: () => void,): Promise<void> {\n\t\tthis._pending = { taskId: taskId, cancel: () => onCancel?.(), promise };\n\n\t\tpromise.then(() => this.donePending(taskId), () => this.donePending(taskId));\n\n\t\treturn promise;\n\t}\n\n\tprivate donePending(taskId: number): void {\n\t\tif (this._pending && taskId === this._pending.taskId) {\n\n\t\t\t// only set pending to done if the promise finished that is associated with that taskId\n\t\t\tthis._pending = undefined;\n\n\t\t\t// schedule the next task now that we are free if we have any\n\t\t\tthis.triggerNext();\n\t\t}\n\t}\n\n\tprivate triggerNext(): void {\n\t\tif (this._next) {\n\t\t\tconst next = this._next;\n\t\t\tthis._next = undefined;\n\n\t\t\t// Run next task and complete on the associated promise\n\t\t\tnext.run().then(next.promiseResolve, next.promiseReject);\n\t\t}\n\t}\n\n\tsetNext(run: () => Promise<void>): Promise<void> {\n\n\t\t// this is our first next task, so we create associated promise with it\n\t\t// so that we can return a promise that completes when the task has\n\t\t// completed.\n\t\tif (!this._next) {\n\t\t\tlet promiseResolve: () => void;\n\t\t\tlet promiseReject: (error: Error) => void;\n\t\t\tconst promise = new Promise<void>((resolve, reject) => {\n\t\t\t\tpromiseResolve = resolve;\n\t\t\t\tpromiseReject = reject;\n\t\t\t});\n\n\t\t\tthis._next = {\n\t\t\t\trun,\n\t\t\t\tpromise,\n\t\t\t\tpromiseResolve: promiseResolve!,\n\t\t\t\tpromiseReject: promiseReject!\n\t\t\t};\n\t\t}\n\n\t\t// we have a previous next task, just overwrite it\n\t\telse {\n\t\t\tthis._next.run = run;\n\t\t}\n\n\t\treturn this._next.promise;\n\t}\n}\n\n//#endregion\n\n//#region\n\n/**\n * The `IntervalCounter` allows to count the number\n * of calls to `increment()` over a duration of\n * `interval`. This utility can be used to conditionally\n * throttle a frequent task when a certain threshold\n * is reached.\n */\nexport class IntervalCounter {\n\n\tprivate lastIncrementTime = 0;\n\n\tprivate value = 0;\n\n\tconstructor(private readonly interval: number) { }\n\n\tincrement(): number {\n\t\tconst now = Date.now();\n\n\t\t// We are outside of the range of `interval` and as such\n\t\t// start counting from 0 and remember the time\n\t\tif (now - this.lastIncrementTime > this.interval) {\n\t\t\tthis.lastIncrementTime = now;\n\t\t\tthis.value = 0;\n\t\t}\n\n\t\tthis.value++;\n\n\t\treturn this.value;\n\t}\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nconst LANGUAGE_DEFAULT = 'en';\n\nlet _isWindows = false;\nlet _isMacintosh = false;\nlet _isLinux = false;\nlet _isNative = false;\nlet _isWeb = false;\nlet _isIOS = false;\nlet _locale: string | undefined = undefined;\nlet _language: string = LANGUAGE_DEFAULT;\nlet _translationsConfigFile: string | undefined = undefined;\nlet _userAgent: string | undefined = undefined;\n\ninterface NLSConfig {\n\tlocale: string;\n\tavailableLanguages: { [key: string]: string; };\n\t_translationsConfigFile: string;\n}\n\nexport interface IProcessEnvironment {\n\t[key: string]: string;\n}\n\nexport interface INodeProcess {\n\tplatform: 'win32' | 'linux' | 'darwin';\n\tenv: IProcessEnvironment;\n\tnextTick: Function;\n\tversions?: {\n\t\telectron?: string;\n\t};\n\ttype?: string;\n\tgetuid(): number;\n\tcwd(): string;\n}\ndeclare const process: INodeProcess;\ndeclare const global: any;\n\ninterface INavigator {\n\tuserAgent: string;\n\tlanguage: string;\n\tmaxTouchPoints?: number;\n}\ndeclare const navigator: INavigator;\ndeclare const self: any;\n\nconst _globals = (typeof self === 'object' ? self : typeof global === 'object' ? global : {} as any);\n\nlet nodeProcess: INodeProcess | undefined = undefined;\nif (typeof process !== 'undefined') {\n\t// Native environment (non-sandboxed)\n\tnodeProcess = process;\n} else if (typeof _globals.vscode !== 'undefined') {\n\t// Native envionment (sandboxed)\n\tnodeProcess = _globals.vscode.process;\n}\n\nconst isElectronRenderer = typeof nodeProcess?.versions?.electron === 'string' && nodeProcess.type === 'renderer';\n\n// Web environment\nif (typeof navigator === 'object' && !isElectronRenderer) {\n\t_userAgent = navigator.userAgent;\n\t_isWindows = _userAgent.indexOf('Windows') >= 0;\n\t_isMacintosh = _userAgent.indexOf('Macintosh') >= 0;\n\t_isIOS = (_userAgent.indexOf('Macintosh') >= 0 || _userAgent.indexOf('iPad') >= 0 || _userAgent.indexOf('iPhone') >= 0) && !!navigator.maxTouchPoints && navigator.maxTouchPoints > 0;\n\t_isLinux = _userAgent.indexOf('Linux') >= 0;\n\t_isWeb = true;\n\t_locale = navigator.language;\n\t_language = _locale;\n\n\t// NOTE@coder: Make languages work.\n\tconst el = typeof document !== 'undefined' && document.getElementById('vscode-remote-nls-configuration');\n\tconst rawNlsConfig = el && el.getAttribute('data-settings');\n\tif (rawNlsConfig) {\n\t\ttry {\n\t\t\tconst nlsConfig: NLSConfig = JSON.parse(rawNlsConfig);\n\t\t\t_locale = nlsConfig.locale;\n\t\t\t_translationsConfigFile = nlsConfig._translationsConfigFile;\n\t\t\t_language = nlsConfig.availableLanguages['*'] || LANGUAGE_DEFAULT;\n\t\t} catch (error) { /* Oh well. */ }\n\t}\n}\n\n// Native environment\nelse if (typeof nodeProcess === 'object') {\n\t_isWindows = (nodeProcess.platform === 'win32');\n\t_isMacintosh = (nodeProcess.platform === 'darwin');\n\t_isLinux = (nodeProcess.platform === 'linux');\n\t_locale = LANGUAGE_DEFAULT;\n\t_language = LANGUAGE_DEFAULT;\n\tconst rawNlsConfig = nodeProcess.env['VSCODE_NLS_CONFIG'];\n\tif (rawNlsConfig) {\n\t\ttry {\n\t\t\tconst nlsConfig: NLSConfig = JSON.parse(rawNlsConfig);\n\t\t\tconst resolved = nlsConfig.availableLanguages['*'];\n\t\t\t_locale = nlsConfig.locale;\n\t\t\t// VSCode's default language is 'en'\n\t\t\t_language = resolved ? resolved : LANGUAGE_DEFAULT;\n\t\t\t_translationsConfigFile = nlsConfig._translationsConfigFile;\n\t\t} catch (e) {\n\t\t}\n\t}\n\t_isNative = true;\n}\n\n// Unknown environment\nelse {\n\tconsole.error('Unable to resolve platform.');\n}\n\nexport const enum Platform {\n\tWeb,\n\tMac,\n\tLinux,\n\tWindows\n}\nexport function PlatformToString(platform: Platform) {\n\tswitch (platform) {\n\t\tcase Platform.Web: return 'Web';\n\t\tcase Platform.Mac: return 'Mac';\n\t\tcase Platform.Linux: return 'Linux';\n\t\tcase Platform.Windows: return 'Windows';\n\t}\n}\n\nlet _platform: Platform = Platform.Web;\nif (_isMacintosh) {\n\t_platform = Platform.Mac;\n} else if (_isWindows) {\n\t_platform = Platform.Windows;\n} else if (_isLinux) {\n\t_platform = Platform.Linux;\n}\n\nexport const isWindows = _isWindows;\nexport const isMacintosh = _isMacintosh;\nexport const isLinux = _isLinux;\nexport const isNative = _isNative;\nexport const isWeb = _isWeb;\nexport const isIOS = _isIOS;\nexport const platform = _platform;\nexport const userAgent = _userAgent;\n\nexport function isRootUser(): boolean {\n\treturn !!nodeProcess && !_isWindows && (nodeProcess.getuid() === 0);\n}\n\n/**\n * The language used for the user interface. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese)\n */\nexport const language = _language;\n\nexport namespace Language {\n\n\texport function value(): string {\n\t\treturn language;\n\t}\n\n\texport function isDefaultVariant(): boolean {\n\t\tif (language.length === 2) {\n\t\t\treturn language === 'en';\n\t\t} else if (language.length >= 3) {\n\t\t\treturn language[0] === 'e' && language[1] === 'n' && language[2] === '-';\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\texport function isDefault(): boolean {\n\t\treturn language === 'en';\n\t}\n}\n\n/**\n * The OS locale or the locale specified by --locale. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese). The UI is not necessarily shown in the provided locale.\n */\nexport const locale = _locale;\n\n/**\n * The translatios that are available through language packs.\n */\nexport const translationsConfigFile = _translationsConfigFile;\n\nexport const globals: any = _globals;\n\ninterface ISetImmediate {\n\t(callback: (...args: any[]) => void): void;\n}\n\nexport const setImmediate: ISetImmediate = (function defineSetImmediate() {\n\tif (globals.setImmediate) {\n\t\treturn globals.setImmediate.bind(globals);\n\t}\n\tif (typeof globals.postMessage === 'function' && !globals.importScripts) {\n\t\tinterface IQueueElement {\n\t\t\tid: number;\n\t\t\tcallback: () => void;\n\t\t}\n\t\tlet pending: IQueueElement[] = [];\n\t\tglobals.addEventListener('message', (e: MessageEvent) => {\n\t\t\tif (e.data && e.data.vscodeSetImmediateId) {\n\t\t\t\tfor (let i = 0, len = pending.length; i < len; i++) {\n\t\t\t\t\tconst candidate = pending[i];\n\t\t\t\t\tif (candidate.id === e.data.vscodeSetImmediateId) {\n\t\t\t\t\t\tpending.splice(i, 1);\n\t\t\t\t\t\tcandidate.callback();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tlet lastId = 0;\n\t\treturn (callback: () => void) => {\n\t\t\tconst myId = ++lastId;\n\t\t\tpending.push({\n\t\t\t\tid: myId,\n\t\t\t\tcallback: callback\n\t\t\t});\n\t\t\tglobals.postMessage({ vscodeSetImmediateId: myId }, '*');\n\t\t};\n\t}\n\tif (nodeProcess) {\n\t\treturn nodeProcess.nextTick.bind(nodeProcess);\n\t}\n\tconst _promise = Promise.resolve();\n\treturn (callback: (...args: any[]) => void) => _promise.then(callback);\n})();\n\nexport const enum OperatingSystem {\n\tWindows = 1,\n\tMacintosh = 2,\n\tLinux = 3\n}\nexport const OS = (_isMacintosh || _isIOS ? OperatingSystem.Macintosh : (_isWindows ? OperatingSystem.Windows : OperatingSystem.Linux));\n\nlet _isLittleEndian = true;\nlet _isLittleEndianComputed = false;\nexport function isLittleEndian(): boolean {\n\tif (!_isLittleEndianComputed) {\n\t\t_isLittleEndianComputed = true;\n\t\tconst test = new Uint8Array(2);\n\t\ttest[0] = 1;\n\t\ttest[1] = 2;\n\t\tconst view = new Uint16Array(test.buffer);\n\t\t_isLittleEndian = (view[0] === (2 << 8) + 1);\n\t}\n\treturn _isLittleEndian;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows, isMacintosh, setImmediate, globals, INodeProcess } from 'vs/base/common/platform';\n\ndeclare const process: INodeProcess;\n\nlet safeProcess: INodeProcess;\n\n// Native node.js environment\nif (typeof process !== 'undefined') {\n\tsafeProcess = process;\n}\n\n// Native sandbox environment\nelse if (typeof globals.vscode !== 'undefined') {\n\tsafeProcess = globals.vscode.process;\n}\n\n// Web environment\nelse {\n\tsafeProcess = {\n\n\t\t// Supported\n\t\tget platform(): 'win32' | 'linux' | 'darwin' { return isWindows ? 'win32' : isMacintosh ? 'darwin' : 'linux'; },\n\t\tnextTick(callback: (...args: any[]) => void): void { return setImmediate(callback); },\n\n\t\t// Unsupported\n\t\tget env() { return Object.create(null); },\n\t\tcwd(): string { return '/'; },\n\t\tgetuid(): number { return -1; }\n\t};\n}\n\nexport const cwd = safeProcess.cwd;\nexport const env = safeProcess.env;\nexport const platform = safeProcess.platform;\nexport const nextTick = safeProcess.nextTick;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// NOTE: VSCode's copy of nodejs path library to be usable in common (non-node) namespace\n// Copied from: https://github.com/nodejs/node/blob/v12.8.1/lib/path.js\n\n/**\n * Copyright Joyent, Inc. and other Node contributors.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to permit\n * persons to whom the Software is furnished to do so, subject to the\n * following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n * NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n * USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport * as process from 'vs/base/common/process';\n\nconst CHAR_UPPERCASE_A = 65;/* A */\nconst CHAR_LOWERCASE_A = 97; /* a */\nconst CHAR_UPPERCASE_Z = 90; /* Z */\nconst CHAR_LOWERCASE_Z = 122; /* z */\nconst CHAR_DOT = 46; /* . */\nconst CHAR_FORWARD_SLASH = 47; /* / */\nconst CHAR_BACKWARD_SLASH = 92; /* \\ */\nconst CHAR_COLON = 58; /* : */\nconst CHAR_QUESTION_MARK = 63; /* ? */\n\nclass ErrorInvalidArgType extends Error {\n\tcode: 'ERR_INVALID_ARG_TYPE';\n\tconstructor(name: string, expected: string, actual: any) {\n\t\t// determiner: 'must be' or 'must not be'\n\t\tlet determiner;\n\t\tif (typeof expected === 'string' && expected.indexOf('not ') === 0) {\n\t\t\tdeterminer = 'must not be';\n\t\t\texpected = expected.replace(/^not /, '');\n\t\t} else {\n\t\t\tdeterminer = 'must be';\n\t\t}\n\n\t\tconst type = name.indexOf('.') !== -1 ? 'property' : 'argument';\n\t\tlet msg = `The \"${name}\" ${type} ${determiner} of type ${expected}`;\n\n\t\tmsg += `. Received type ${typeof actual}`;\n\t\tsuper(msg);\n\n\t\tthis.code = 'ERR_INVALID_ARG_TYPE';\n\t}\n}\n\nfunction validateString(value: string, name: string) {\n\tif (typeof value !== 'string') {\n\t\tthrow new ErrorInvalidArgType(name, 'string', value);\n\t}\n}\n\nfunction isPathSeparator(code: number | undefined) {\n\treturn code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n}\n\nfunction isPosixPathSeparator(code: number | undefined) {\n\treturn code === CHAR_FORWARD_SLASH;\n}\n\nfunction isWindowsDeviceRoot(code: number) {\n\treturn code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z ||\n\t\tcode >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z;\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeString(path: string, allowAboveRoot: boolean, separator: string, isPathSeparator: (code?: number) => boolean) {\n\tlet res = '';\n\tlet lastSegmentLength = 0;\n\tlet lastSlash = -1;\n\tlet dots = 0;\n\tlet code = 0;\n\tfor (let i = 0; i <= path.length; ++i) {\n\t\tif (i < path.length) {\n\t\t\tcode = path.charCodeAt(i);\n\t\t}\n\t\telse if (isPathSeparator(code)) {\n\t\t\tbreak;\n\t\t}\n\t\telse {\n\t\t\tcode = CHAR_FORWARD_SLASH;\n\t\t}\n\n\t\tif (isPathSeparator(code)) {\n\t\t\tif (lastSlash === i - 1 || dots === 1) {\n\t\t\t\t// NOOP\n\t\t\t} else if (dots === 2) {\n\t\t\t\tif (res.length < 2 || lastSegmentLength !== 2 ||\n\t\t\t\t\tres.charCodeAt(res.length - 1) !== CHAR_DOT ||\n\t\t\t\t\tres.charCodeAt(res.length - 2) !== CHAR_DOT) {\n\t\t\t\t\tif (res.length > 2) {\n\t\t\t\t\t\tconst lastSlashIndex = res.lastIndexOf(separator);\n\t\t\t\t\t\tif (lastSlashIndex === -1) {\n\t\t\t\t\t\t\tres = '';\n\t\t\t\t\t\t\tlastSegmentLength = 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tres = res.slice(0, lastSlashIndex);\n\t\t\t\t\t\t\tlastSegmentLength = res.length - 1 - res.lastIndexOf(separator);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlastSlash = i;\n\t\t\t\t\t\tdots = 0;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else if (res.length !== 0) {\n\t\t\t\t\t\tres = '';\n\t\t\t\t\t\tlastSegmentLength = 0;\n\t\t\t\t\t\tlastSlash = i;\n\t\t\t\t\t\tdots = 0;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (allowAboveRoot) {\n\t\t\t\t\tres += res.length > 0 ? `${separator}..` : '..';\n\t\t\t\t\tlastSegmentLength = 2;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (res.length > 0) {\n\t\t\t\t\tres += `${separator}${path.slice(lastSlash + 1, i)}`;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tres = path.slice(lastSlash + 1, i);\n\t\t\t\t}\n\t\t\t\tlastSegmentLength = i - lastSlash - 1;\n\t\t\t}\n\t\t\tlastSlash = i;\n\t\t\tdots = 0;\n\t\t} else if (code === CHAR_DOT && dots !== -1) {\n\t\t\t++dots;\n\t\t} else {\n\t\t\tdots = -1;\n\t\t}\n\t}\n\treturn res;\n}\n\nfunction _format(sep: string, pathObject: ParsedPath) {\n\tif (pathObject === null || typeof pathObject !== 'object') {\n\t\tthrow new ErrorInvalidArgType('pathObject', 'Object', pathObject);\n\t}\n\tconst dir = pathObject.dir || pathObject.root;\n\tconst base = pathObject.base ||\n\t\t`${pathObject.name || ''}${pathObject.ext || ''}`;\n\tif (!dir) {\n\t\treturn base;\n\t}\n\treturn dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\n}\n\nexport interface ParsedPath {\n\troot: string;\n\tdir: string;\n\tbase: string;\n\text: string;\n\tname: string;\n}\n\nexport interface IPath {\n\tnormalize(path: string): string;\n\tisAbsolute(path: string): boolean;\n\tjoin(...paths: string[]): string;\n\tresolve(...pathSegments: string[]): string;\n\trelative(from: string, to: string): string;\n\tdirname(path: string): string;\n\tbasename(path: string, ext?: string): string;\n\textname(path: string): string;\n\tformat(pathObject: ParsedPath): string;\n\tparse(path: string): ParsedPath;\n\ttoNamespacedPath(path: string): string;\n\tsep: '\\\\' | '/';\n\tdelimiter: string;\n\twin32: IPath | null;\n\tposix: IPath | null;\n}\n\nexport const win32: IPath = {\n\t// path.resolve([from ...], to)\n\tresolve(...pathSegments: string[]): string {\n\t\tlet resolvedDevice = '';\n\t\tlet resolvedTail = '';\n\t\tlet resolvedAbsolute = false;\n\n\t\tfor (let i = pathSegments.length - 1; i >= -1; i--) {\n\t\t\tlet path;\n\t\t\tif (i >= 0) {\n\t\t\t\tpath = pathSegments[i];\n\t\t\t\tvalidateString(path, 'path');\n\n\t\t\t\t// Skip empty entries\n\t\t\t\tif (path.length === 0) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t} else if (resolvedDevice.length === 0) {\n\t\t\t\tpath = process.cwd();\n\t\t\t} else {\n\t\t\t\t// Windows has the concept of drive-specific current working\n\t\t\t\t// directories. If we've resolved a drive letter but not yet an\n\t\t\t\t// absolute path, get cwd for that drive, or the process cwd if\n\t\t\t\t// the drive cwd is not available. We're sure the device is not\n\t\t\t\t// a UNC path at this points, because UNC paths are always absolute.\n\t\t\t\tpath = (process.env as any)[`=${resolvedDevice}`] || process.cwd();\n\n\t\t\t\t// Verify that a cwd was found and that it actually points\n\t\t\t\t// to our drive. If not, default to the drive's root.\n\t\t\t\tif (path === undefined ||\n\t\t\t\t\tpath.slice(0, 2).toLowerCase() !== resolvedDevice.toLowerCase() &&\n\t\t\t\t\tpath.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\tpath = `${resolvedDevice}\\\\`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst len = path.length;\n\t\t\tlet rootEnd = 0;\n\t\t\tlet device = '';\n\t\t\tlet isAbsolute = false;\n\t\t\tconst code = path.charCodeAt(0);\n\n\t\t\t// Try to match a root\n\t\t\tif (len === 1) {\n\t\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t\t// `path` contains just a path separator\n\t\t\t\t\trootEnd = 1;\n\t\t\t\t\tisAbsolute = true;\n\t\t\t\t}\n\t\t\t} else if (isPathSeparator(code)) {\n\t\t\t\t// Possible UNC root\n\n\t\t\t\t// If we started with a separator, we know we at least have an\n\t\t\t\t// absolute path of some kind (UNC or otherwise)\n\t\t\t\tisAbsolute = true;\n\n\t\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t\t// Matched double path separator at beginning\n\t\t\t\t\tlet j = 2;\n\t\t\t\t\tlet last = j;\n\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\tconst firstPart = path.slice(last, j);\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (j === len || j !== last) {\n\t\t\t\t\t\t\t\t// We matched a UNC root\n\t\t\t\t\t\t\t\tdevice = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n\t\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\trootEnd = 1;\n\t\t\t\t}\n\t\t\t} else if (isWindowsDeviceRoot(code) &&\n\t\t\t\tpath.charCodeAt(1) === CHAR_COLON) {\n\t\t\t\t// Possible device root\n\t\t\t\tdevice = path.slice(0, 2);\n\t\t\t\trootEnd = 2;\n\t\t\t\tif (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t\t// Treat separator following drive name as an absolute path\n\t\t\t\t\t// indicator\n\t\t\t\t\tisAbsolute = true;\n\t\t\t\t\trootEnd = 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (device.length > 0) {\n\t\t\t\tif (resolvedDevice.length > 0) {\n\t\t\t\t\tif (device.toLowerCase() !== resolvedDevice.toLowerCase()) {\n\t\t\t\t\t\t// This path points to another device so it is not applicable\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tresolvedDevice = device;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (resolvedAbsolute) {\n\t\t\t\tif (resolvedDevice.length > 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresolvedTail = `${path.slice(rootEnd)}\\\\${resolvedTail}`;\n\t\t\t\tresolvedAbsolute = isAbsolute;\n\t\t\t\tif (isAbsolute && resolvedDevice.length > 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// At this point the path should be resolved to a full absolute path,\n\t\t// but handle relative paths to be safe (might happen when process.cwd()\n\t\t// fails)\n\n\t\t// Normalize the tail path\n\t\tresolvedTail = normalizeString(resolvedTail, !resolvedAbsolute, '\\\\',\n\t\t\tisPathSeparator);\n\n\t\treturn resolvedAbsolute ?\n\t\t\t`${resolvedDevice}\\\\${resolvedTail}` :\n\t\t\t`${resolvedDevice}${resolvedTail}` || '.';\n\t},\n\n\tnormalize(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet rootEnd = 0;\n\t\tlet device;\n\t\tlet isAbsolute = false;\n\t\tconst code = path.charCodeAt(0);\n\n\t\t// Try to match a root\n\t\tif (len === 1) {\n\t\t\t// `path` contains just a single char, exit early to avoid\n\t\t\t// unnecessary work\n\t\t\treturn isPosixPathSeparator(code) ? '\\\\' : path;\n\t\t}\n\t\tif (isPathSeparator(code)) {\n\t\t\t// Possible UNC root\n\n\t\t\t// If we started with a separator, we know we at least have an absolute\n\t\t\t// path of some kind (UNC or otherwise)\n\t\t\tisAbsolute = true;\n\n\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t// Matched double path separator at beginning\n\t\t\t\tlet j = 2;\n\t\t\t\tlet last = j;\n\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\tconst firstPart = path.slice(last, j);\n\t\t\t\t\t// Matched!\n\t\t\t\t\tlast = j;\n\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\t// Return the normalized version of the UNC root since there\n\t\t\t\t\t\t\t// is nothing left to process\n\t\t\t\t\t\t\treturn `\\\\\\\\${firstPart}\\\\${path.slice(last)}\\\\`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j !== last) {\n\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\t\t\t\t\t\t\tdevice = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\trootEnd = 1;\n\t\t\t}\n\t\t} else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t// Possible device root\n\t\t\tdevice = path.slice(0, 2);\n\t\t\trootEnd = 2;\n\t\t\tif (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t// Treat separator following drive name as an absolute path\n\t\t\t\t// indicator\n\t\t\t\tisAbsolute = true;\n\t\t\t\trootEnd = 3;\n\t\t\t}\n\t\t}\n\n\t\tlet tail = rootEnd < len ?\n\t\t\tnormalizeString(path.slice(rootEnd), !isAbsolute, '\\\\', isPathSeparator) :\n\t\t\t'';\n\t\tif (tail.length === 0 && !isAbsolute) {\n\t\t\ttail = '.';\n\t\t}\n\t\tif (tail.length > 0 && isPathSeparator(path.charCodeAt(len - 1))) {\n\t\t\ttail += '\\\\';\n\t\t}\n\t\tif (device === undefined) {\n\t\t\treturn isAbsolute ? `\\\\${tail}` : tail;\n\t\t}\n\t\treturn isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\n\t},\n\n\tisAbsolute(path: string): boolean {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst code = path.charCodeAt(0);\n\t\treturn isPathSeparator(code) ||\n\t\t\t// Possible device root\n\t\t\tlen > 2 &&\n\t\t\tisWindowsDeviceRoot(code) &&\n\t\t\tpath.charCodeAt(1) === CHAR_COLON &&\n\t\t\tisPathSeparator(path.charCodeAt(2));\n\t},\n\n\tjoin(...paths: string[]): string {\n\t\tif (paths.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\n\t\tlet joined;\n\t\tlet firstPart: string | undefined;\n\t\tfor (let i = 0; i < paths.length; ++i) {\n\t\t\tconst arg = paths[i];\n\t\t\tvalidateString(arg, 'path');\n\t\t\tif (arg.length > 0) {\n\t\t\t\tif (joined === undefined) {\n\t\t\t\t\tjoined = firstPart = arg;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tjoined += `\\\\${arg}`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (joined === undefined) {\n\t\t\treturn '.';\n\t\t}\n\n\t\t// Make sure that the joined path doesn't start with two slashes, because\n\t\t// normalize() will mistake it for an UNC path then.\n\t\t//\n\t\t// This step is skipped when it is very clear that the user actually\n\t\t// intended to point at an UNC path. This is assumed when the first\n\t\t// non-empty string arguments starts with exactly two slashes followed by\n\t\t// at least one more non-slash character.\n\t\t//\n\t\t// Note that for normalize() to treat a path as an UNC path it needs to\n\t\t// have at least 2 components, so we don't filter for that here.\n\t\t// This means that the user can use join to construct UNC paths from\n\t\t// a server name and a share name; for example:\n\t\t//   path.join('//server', 'share') -> '\\\\\\\\server\\\\share\\\\')\n\t\tlet needsReplace = true;\n\t\tlet slashCount = 0;\n\t\tif (typeof firstPart === 'string' && isPathSeparator(firstPart.charCodeAt(0))) {\n\t\t\t++slashCount;\n\t\t\tconst firstLen = firstPart.length;\n\t\t\tif (firstLen > 1 && isPathSeparator(firstPart.charCodeAt(1))) {\n\t\t\t\t++slashCount;\n\t\t\t\tif (firstLen > 2) {\n\t\t\t\t\tif (isPathSeparator(firstPart.charCodeAt(2))) {\n\t\t\t\t\t\t++slashCount;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// We matched a UNC path in the first part\n\t\t\t\t\t\tneedsReplace = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (needsReplace) {\n\t\t\t// Find any more consecutive slashes we need to replace\n\t\t\twhile (slashCount < joined.length &&\n\t\t\t\tisPathSeparator(joined.charCodeAt(slashCount))) {\n\t\t\t\tslashCount++;\n\t\t\t}\n\n\t\t\t// Replace the slashes if needed\n\t\t\tif (slashCount >= 2) {\n\t\t\t\tjoined = `\\\\${joined.slice(slashCount)}`;\n\t\t\t}\n\t\t}\n\n\t\treturn win32.normalize(joined);\n\t},\n\n\n\t// It will solve the relative path from `from` to `to`, for instance:\n\t//  from = 'C:\\\\orandea\\\\test\\\\aaa'\n\t//  to = 'C:\\\\orandea\\\\impl\\\\bbb'\n\t// The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\n\trelative(from: string, to: string): string {\n\t\tvalidateString(from, 'from');\n\t\tvalidateString(to, 'to');\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst fromOrig = win32.resolve(from);\n\t\tconst toOrig = win32.resolve(to);\n\n\t\tif (fromOrig === toOrig) {\n\t\t\treturn '';\n\t\t}\n\n\t\tfrom = fromOrig.toLowerCase();\n\t\tto = toOrig.toLowerCase();\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\t// Trim any leading backslashes\n\t\tlet fromStart = 0;\n\t\twhile (fromStart < from.length &&\n\t\t\tfrom.charCodeAt(fromStart) === CHAR_BACKWARD_SLASH) {\n\t\t\tfromStart++;\n\t\t}\n\t\t// Trim trailing backslashes (applicable to UNC paths only)\n\t\tlet fromEnd = from.length;\n\t\twhile (fromEnd - 1 > fromStart &&\n\t\t\tfrom.charCodeAt(fromEnd - 1) === CHAR_BACKWARD_SLASH) {\n\t\t\tfromEnd--;\n\t\t}\n\t\tconst fromLen = fromEnd - fromStart;\n\n\t\t// Trim any leading backslashes\n\t\tlet toStart = 0;\n\t\twhile (toStart < to.length &&\n\t\t\tto.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n\t\t\ttoStart++;\n\t\t}\n\t\t// Trim trailing backslashes (applicable to UNC paths only)\n\t\tlet toEnd = to.length;\n\t\twhile (toEnd - 1 > toStart &&\n\t\t\tto.charCodeAt(toEnd - 1) === CHAR_BACKWARD_SLASH) {\n\t\t\ttoEnd--;\n\t\t}\n\t\tconst toLen = toEnd - toStart;\n\n\t\t// Compare paths to find the longest common path from root\n\t\tconst length = fromLen < toLen ? fromLen : toLen;\n\t\tlet lastCommonSep = -1;\n\t\tlet i = 0;\n\t\tfor (; i < length; i++) {\n\t\t\tconst fromCode = from.charCodeAt(fromStart + i);\n\t\t\tif (fromCode !== to.charCodeAt(toStart + i)) {\n\t\t\t\tbreak;\n\t\t\t} else if (fromCode === CHAR_BACKWARD_SLASH) {\n\t\t\t\tlastCommonSep = i;\n\t\t\t}\n\t\t}\n\n\t\t// We found a mismatch before the first common path separator was seen, so\n\t\t// return the original `to`.\n\t\tif (i !== length) {\n\t\t\tif (lastCommonSep === -1) {\n\t\t\t\treturn toOrig;\n\t\t\t}\n\t\t} else {\n\t\t\tif (toLen > length) {\n\t\t\t\tif (to.charCodeAt(toStart + i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\t// We get here if `from` is the exact base path for `to`.\n\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\n\t\t\t\t\treturn toOrig.slice(toStart + i + 1);\n\t\t\t\t}\n\t\t\t\tif (i === 2) {\n\t\t\t\t\t// We get here if `from` is the device root.\n\t\t\t\t\t// For example: from='C:\\\\'; to='C:\\\\foo'\n\t\t\t\t\treturn toOrig.slice(toStart + i);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (fromLen > length) {\n\t\t\t\tif (from.charCodeAt(fromStart + i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\t// We get here if `to` is the exact base path for `from`.\n\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\n\t\t\t\t\tlastCommonSep = i;\n\t\t\t\t} else if (i === 2) {\n\t\t\t\t\t// We get here if `to` is the device root.\n\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\n\t\t\t\t\tlastCommonSep = 3;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (lastCommonSep === -1) {\n\t\t\t\tlastCommonSep = 0;\n\t\t\t}\n\t\t}\n\n\t\tlet out = '';\n\t\t// Generate the relative path based on the path difference between `to` and\n\t\t// `from`\n\t\tfor (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n\t\t\tif (i === fromEnd || from.charCodeAt(i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\tout += out.length === 0 ? '..' : '\\\\..';\n\t\t\t}\n\t\t}\n\n\t\ttoStart += lastCommonSep;\n\n\t\t// Lastly, append the rest of the destination (`to`) path that comes after\n\t\t// the common path parts\n\t\tif (out.length > 0) {\n\t\t\treturn `${out}${toOrig.slice(toStart, toEnd)}`;\n\t\t}\n\n\t\tif (toOrig.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n\t\t\t++toStart;\n\t\t}\n\n\t\treturn toOrig.slice(toStart, toEnd);\n\t},\n\n\ttoNamespacedPath(path: string): string {\n\t\t// Note: this will *probably* throw somewhere.\n\t\tif (typeof path !== 'string') {\n\t\t\treturn path;\n\t\t}\n\n\t\tif (path.length === 0) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst resolvedPath = win32.resolve(path);\n\n\t\tif (resolvedPath.length <= 2) {\n\t\t\treturn path;\n\t\t}\n\n\t\tif (resolvedPath.charCodeAt(0) === CHAR_BACKWARD_SLASH) {\n\t\t\t// Possible UNC root\n\t\t\tif (resolvedPath.charCodeAt(1) === CHAR_BACKWARD_SLASH) {\n\t\t\t\tconst code = resolvedPath.charCodeAt(2);\n\t\t\t\tif (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\n\t\t\t\t\t// Matched non-long UNC root, convert the path to a long UNC path\n\t\t\t\t\treturn `\\\\\\\\?\\\\UNC\\\\${resolvedPath.slice(2)}`;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isWindowsDeviceRoot(resolvedPath.charCodeAt(0)) &&\n\t\t\tresolvedPath.charCodeAt(1) === CHAR_COLON &&\n\t\t\tresolvedPath.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\n\t\t\t// Matched device root, convert the path to a long UNC path\n\t\t\treturn `\\\\\\\\?\\\\${resolvedPath}`;\n\t\t}\n\n\t\treturn path;\n\t},\n\n\tdirname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet rootEnd = -1;\n\t\tlet offset = 0;\n\t\tconst code = path.charCodeAt(0);\n\n\t\tif (len === 1) {\n\t\t\t// `path` contains just a path separator, exit early to avoid\n\t\t\t// unnecessary work or a dot.\n\t\t\treturn isPathSeparator(code) ? path : '.';\n\t\t}\n\n\t\t// Try to match a root\n\t\tif (isPathSeparator(code)) {\n\t\t\t// Possible UNC root\n\n\t\t\trootEnd = offset = 1;\n\n\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t// Matched double path separator at beginning\n\t\t\t\tlet j = 2;\n\t\t\t\tlet last = j;\n\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t// Matched!\n\t\t\t\t\tlast = j;\n\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\treturn path;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j !== last) {\n\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\n\t\t\t\t\t\t\t// Offset by 1 to include the separator after the UNC root to\n\t\t\t\t\t\t\t// treat it as a \"normal root\" on top of a (UNC) root\n\t\t\t\t\t\t\trootEnd = offset = j + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Possible device root\n\t\t} else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\trootEnd = len > 2 && isPathSeparator(path.charCodeAt(2)) ? 3 : 2;\n\t\t\toffset = rootEnd;\n\t\t}\n\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tfor (let i = len - 1; i >= offset; --i) {\n\t\t\tif (isPathSeparator(path.charCodeAt(i))) {\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tend = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We saw the first non-path separator\n\t\t\t\tmatchedSlash = false;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\tif (rootEnd === -1) {\n\t\t\t\treturn '.';\n\t\t\t}\n\n\t\t\tend = rootEnd;\n\t\t}\n\t\treturn path.slice(0, end);\n\t},\n\n\tbasename(path: string, ext?: string): string {\n\t\tif (ext !== undefined) {\n\t\t\tvalidateString(ext, 'ext');\n\t\t}\n\t\tvalidateString(path, 'path');\n\t\tlet start = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i;\n\n\t\t// Check for a drive letter prefix so as not to mistake the following\n\t\t// path separator as an extra separator at the end of the path that can be\n\t\t// disregarded\n\t\tif (path.length >= 2 &&\n\t\t\tisWindowsDeviceRoot(path.charCodeAt(0)) &&\n\t\t\tpath.charCodeAt(1) === CHAR_COLON) {\n\t\t\tstart = 2;\n\t\t}\n\n\t\tif (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n\t\t\tif (ext === path) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tlet extIdx = ext.length - 1;\n\t\t\tlet firstNonSlashEnd = -1;\n\t\t\tfor (i = path.length - 1; i >= start; --i) {\n\t\t\t\tconst code = path.charCodeAt(i);\n\t\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (firstNonSlashEnd === -1) {\n\t\t\t\t\t\t// We saw the first non-path separator, remember this index in case\n\t\t\t\t\t\t// we need it if the extension ends up not matching\n\t\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\t\tfirstNonSlashEnd = i + 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (extIdx >= 0) {\n\t\t\t\t\t\t// Try to match the explicit extension\n\t\t\t\t\t\tif (code === ext.charCodeAt(extIdx)) {\n\t\t\t\t\t\t\tif (--extIdx === -1) {\n\t\t\t\t\t\t\t\t// We matched the extension, so mark this as the end of our path\n\t\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\t\tend = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Extension does not match, so our result is the entire path\n\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\textIdx = -1;\n\t\t\t\t\t\t\tend = firstNonSlashEnd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === end) {\n\t\t\t\tend = firstNonSlashEnd;\n\t\t\t} else if (end === -1) {\n\t\t\t\tend = path.length;\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t}\n\t\tfor (i = path.length - 1; i >= start; --i) {\n\t\t\tif (isPathSeparator(path.charCodeAt(i))) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// path component\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(start, end);\n\t},\n\n\textname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tlet start = 0;\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Check for a drive letter prefix so as not to mistake the following\n\t\t// path separator as an extra separator at the end of the path that can be\n\t\t// disregarded\n\n\t\tif (path.length >= 2 &&\n\t\t\tpath.charCodeAt(1) === CHAR_COLON &&\n\t\t\tisWindowsDeviceRoot(path.charCodeAt(0))) {\n\t\t\tstart = startPart = 2;\n\t\t}\n\n\t\tfor (let i = path.length - 1; i >= start; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(startDot, end);\n\t},\n\n\tformat: _format.bind(null, '\\\\'),\n\n\tparse(path) {\n\t\tvalidateString(path, 'path');\n\n\t\tconst ret = { root: '', dir: '', base: '', ext: '', name: '' };\n\t\tif (path.length === 0) {\n\t\t\treturn ret;\n\t\t}\n\n\t\tconst len = path.length;\n\t\tlet rootEnd = 0;\n\t\tlet code = path.charCodeAt(0);\n\n\t\tif (len === 1) {\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// `path` contains just a path separator, exit early to avoid\n\t\t\t\t// unnecessary work\n\t\t\t\tret.root = ret.dir = path;\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t\tret.base = ret.name = path;\n\t\t\treturn ret;\n\t\t}\n\t\t// Try to match a root\n\t\tif (isPathSeparator(code)) {\n\t\t\t// Possible UNC root\n\n\t\t\trootEnd = 1;\n\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t// Matched double path separator at beginning\n\t\t\t\tlet j = 2;\n\t\t\t\tlet last = j;\n\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t// Matched!\n\t\t\t\t\tlast = j;\n\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t} else if (j !== last) {\n\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\t\t\t\t\t\t\trootEnd = j + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t// Possible device root\n\t\t\tif (len <= 2) {\n\t\t\t\t// `path` contains just a drive root, exit early to avoid\n\t\t\t\t// unnecessary work\n\t\t\t\tret.root = ret.dir = path;\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t\trootEnd = 2;\n\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\tif (len === 3) {\n\t\t\t\t\t// `path` contains just a drive root, exit early to avoid\n\t\t\t\t\t// unnecessary work\n\t\t\t\t\tret.root = ret.dir = path;\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\t\t\t\trootEnd = 3;\n\t\t\t}\n\t\t}\n\t\tif (rootEnd > 0) {\n\t\t\tret.root = path.slice(0, rootEnd);\n\t\t}\n\n\t\tlet startDot = -1;\n\t\tlet startPart = rootEnd;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i = path.length - 1;\n\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Get non-dir info\n\t\tfor (; i >= rootEnd; --i) {\n\t\t\tcode = path.charCodeAt(i);\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t} else if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (end !== -1) {\n\t\t\tif (startDot === -1 ||\n\t\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\t\tpreDotState === 0 ||\n\t\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t\t(preDotState === 1 &&\n\t\t\t\t\tstartDot === end - 1 &&\n\t\t\t\t\tstartDot === startPart + 1)) {\n\t\t\t\tret.base = ret.name = path.slice(startPart, end);\n\t\t\t} else {\n\t\t\t\tret.name = path.slice(startPart, startDot);\n\t\t\t\tret.base = path.slice(startPart, end);\n\t\t\t\tret.ext = path.slice(startDot, end);\n\t\t\t}\n\t\t}\n\n\t\t// If the directory is the root, use the entire root as the `dir` including\n\t\t// the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise, strip out the\n\t\t// trailing slash (`C:\\abc\\def` -> `C:\\abc`).\n\t\tif (startPart > 0 && startPart !== rootEnd) {\n\t\t\tret.dir = path.slice(0, startPart - 1);\n\t\t} else {\n\t\t\tret.dir = ret.root;\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tsep: '\\\\',\n\tdelimiter: ';',\n\twin32: null,\n\tposix: null\n};\n\nexport const posix: IPath = {\n\t// path.resolve([from ...], to)\n\tresolve(...pathSegments: string[]): string {\n\t\tlet resolvedPath = '';\n\t\tlet resolvedAbsolute = false;\n\n\t\tfor (let i = pathSegments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n\t\t\tconst path = i >= 0 ? pathSegments[i] : process.cwd();\n\n\t\t\tvalidateString(path, 'path');\n\n\t\t\t// Skip empty entries\n\t\t\tif (path.length === 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tresolvedPath = `${path}/${resolvedPath}`;\n\t\t\tresolvedAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\t}\n\n\t\t// At this point the path should be resolved to a full absolute path, but\n\t\t// handle relative paths to be safe (might happen when process.cwd() fails)\n\n\t\t// Normalize the path\n\t\tresolvedPath = normalizeString(resolvedPath, !resolvedAbsolute, '/',\n\t\t\tisPosixPathSeparator);\n\n\t\tif (resolvedAbsolute) {\n\t\t\treturn `/${resolvedPath}`;\n\t\t}\n\t\treturn resolvedPath.length > 0 ? resolvedPath : '.';\n\t},\n\n\tnormalize(path: string): string {\n\t\tvalidateString(path, 'path');\n\n\t\tif (path.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\n\t\tconst isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tconst trailingSeparator =\n\t\t\tpath.charCodeAt(path.length - 1) === CHAR_FORWARD_SLASH;\n\n\t\t// Normalize the path\n\t\tpath = normalizeString(path, !isAbsolute, '/', isPosixPathSeparator);\n\n\t\tif (path.length === 0) {\n\t\t\tif (isAbsolute) {\n\t\t\t\treturn '/';\n\t\t\t}\n\t\t\treturn trailingSeparator ? './' : '.';\n\t\t}\n\t\tif (trailingSeparator) {\n\t\t\tpath += '/';\n\t\t}\n\n\t\treturn isAbsolute ? `/${path}` : path;\n\t},\n\n\tisAbsolute(path: string): boolean {\n\t\tvalidateString(path, 'path');\n\t\treturn path.length > 0 && path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t},\n\n\tjoin(...paths: string[]): string {\n\t\tif (paths.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet joined;\n\t\tfor (let i = 0; i < paths.length; ++i) {\n\t\t\tconst arg = paths[i];\n\t\t\tvalidateString(arg, 'path');\n\t\t\tif (arg.length > 0) {\n\t\t\t\tif (joined === undefined) {\n\t\t\t\t\tjoined = arg;\n\t\t\t\t} else {\n\t\t\t\t\tjoined += `/${arg}`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (joined === undefined) {\n\t\t\treturn '.';\n\t\t}\n\t\treturn posix.normalize(joined);\n\t},\n\n\trelative(from: string, to: string): string {\n\t\tvalidateString(from, 'from');\n\t\tvalidateString(to, 'to');\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\t// Trim leading forward slashes.\n\t\tfrom = posix.resolve(from);\n\t\tto = posix.resolve(to);\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst fromStart = 1;\n\t\tconst fromEnd = from.length;\n\t\tconst fromLen = fromEnd - fromStart;\n\t\tconst toStart = 1;\n\t\tconst toLen = to.length - toStart;\n\n\t\t// Compare paths to find the longest common path from root\n\t\tconst length = (fromLen < toLen ? fromLen : toLen);\n\t\tlet lastCommonSep = -1;\n\t\tlet i = 0;\n\t\tfor (; i < length; i++) {\n\t\t\tconst fromCode = from.charCodeAt(fromStart + i);\n\t\t\tif (fromCode !== to.charCodeAt(toStart + i)) {\n\t\t\t\tbreak;\n\t\t\t} else if (fromCode === CHAR_FORWARD_SLASH) {\n\t\t\t\tlastCommonSep = i;\n\t\t\t}\n\t\t}\n\t\tif (i === length) {\n\t\t\tif (toLen > length) {\n\t\t\t\tif (to.charCodeAt(toStart + i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// We get here if `from` is the exact base path for `to`.\n\t\t\t\t\t// For example: from='/foo/bar'; to='/foo/bar/baz'\n\t\t\t\t\treturn to.slice(toStart + i + 1);\n\t\t\t\t}\n\t\t\t\tif (i === 0) {\n\t\t\t\t\t// We get here if `from` is the root\n\t\t\t\t\t// For example: from='/'; to='/foo'\n\t\t\t\t\treturn to.slice(toStart + i);\n\t\t\t\t}\n\t\t\t} else if (fromLen > length) {\n\t\t\t\tif (from.charCodeAt(fromStart + i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// We get here if `to` is the exact base path for `from`.\n\t\t\t\t\t// For example: from='/foo/bar/baz'; to='/foo/bar'\n\t\t\t\t\tlastCommonSep = i;\n\t\t\t\t} else if (i === 0) {\n\t\t\t\t\t// We get here if `to` is the root.\n\t\t\t\t\t// For example: from='/foo/bar'; to='/'\n\t\t\t\t\tlastCommonSep = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet out = '';\n\t\t// Generate the relative path based on the path difference between `to`\n\t\t// and `from`.\n\t\tfor (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n\t\t\tif (i === fromEnd || from.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\tout += out.length === 0 ? '..' : '/..';\n\t\t\t}\n\t\t}\n\n\t\t// Lastly, append the rest of the destination (`to`) path that comes after\n\t\t// the common path parts.\n\t\treturn `${out}${to.slice(toStart + lastCommonSep)}`;\n\t},\n\n\ttoNamespacedPath(path: string): string {\n\t\t// Non-op on posix systems\n\t\treturn path;\n\t},\n\n\tdirname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tif (path.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tconst hasRoot = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tfor (let i = path.length - 1; i >= 1; --i) {\n\t\t\tif (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tend = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We saw the first non-path separator\n\t\t\t\tmatchedSlash = false;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn hasRoot ? '/' : '.';\n\t\t}\n\t\tif (hasRoot && end === 1) {\n\t\t\treturn '//';\n\t\t}\n\t\treturn path.slice(0, end);\n\t},\n\n\tbasename(path: string, ext?: string): string {\n\t\tif (ext !== undefined) {\n\t\t\tvalidateString(ext, 'ext');\n\t\t}\n\t\tvalidateString(path, 'path');\n\n\t\tlet start = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i;\n\n\t\tif (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n\t\t\tif (ext === path) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tlet extIdx = ext.length - 1;\n\t\t\tlet firstNonSlashEnd = -1;\n\t\t\tfor (i = path.length - 1; i >= 0; --i) {\n\t\t\t\tconst code = path.charCodeAt(i);\n\t\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (firstNonSlashEnd === -1) {\n\t\t\t\t\t\t// We saw the first non-path separator, remember this index in case\n\t\t\t\t\t\t// we need it if the extension ends up not matching\n\t\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\t\tfirstNonSlashEnd = i + 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (extIdx >= 0) {\n\t\t\t\t\t\t// Try to match the explicit extension\n\t\t\t\t\t\tif (code === ext.charCodeAt(extIdx)) {\n\t\t\t\t\t\t\tif (--extIdx === -1) {\n\t\t\t\t\t\t\t\t// We matched the extension, so mark this as the end of our path\n\t\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\t\tend = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Extension does not match, so our result is the entire path\n\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\textIdx = -1;\n\t\t\t\t\t\t\tend = firstNonSlashEnd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === end) {\n\t\t\t\tend = firstNonSlashEnd;\n\t\t\t} else if (end === -1) {\n\t\t\t\tend = path.length;\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t}\n\t\tfor (i = path.length - 1; i >= 0; --i) {\n\t\t\tif (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// path component\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(start, end);\n\t},\n\n\textname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\t\tfor (let i = path.length - 1; i >= 0; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(startDot, end);\n\t},\n\n\tformat: _format.bind(null, '/'),\n\n\tparse(path: string): ParsedPath {\n\t\tvalidateString(path, 'path');\n\n\t\tconst ret = { root: '', dir: '', base: '', ext: '', name: '' };\n\t\tif (path.length === 0) {\n\t\t\treturn ret;\n\t\t}\n\t\tconst isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tlet start;\n\t\tif (isAbsolute) {\n\t\t\tret.root = '/';\n\t\t\tstart = 1;\n\t\t} else {\n\t\t\tstart = 0;\n\t\t}\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i = path.length - 1;\n\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Get non-dir info\n\t\tfor (; i >= start; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t} else if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (end !== -1) {\n\t\t\tconst start = startPart === 0 && isAbsolute ? 1 : startPart;\n\t\t\tif (startDot === -1 ||\n\t\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\t\tpreDotState === 0 ||\n\t\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t\t(preDotState === 1 &&\n\t\t\t\t\tstartDot === end - 1 &&\n\t\t\t\t\tstartDot === startPart + 1)) {\n\t\t\t\tret.base = ret.name = path.slice(start, end);\n\t\t\t} else {\n\t\t\t\tret.name = path.slice(start, startDot);\n\t\t\t\tret.base = path.slice(start, end);\n\t\t\t\tret.ext = path.slice(startDot, end);\n\t\t\t}\n\t\t}\n\n\t\tif (startPart > 0) {\n\t\t\tret.dir = path.slice(0, startPart - 1);\n\t\t} else if (isAbsolute) {\n\t\t\tret.dir = '/';\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tsep: '/',\n\tdelimiter: ':',\n\twin32: null,\n\tposix: null\n};\n\nposix.win32 = win32.win32 = win32;\nposix.posix = win32.posix = posix;\n\nexport const normalize = (process.platform === 'win32' ? win32.normalize : posix.normalize);\nexport const isAbsolute = (process.platform === 'win32' ? win32.isAbsolute : posix.isAbsolute);\nexport const join = (process.platform === 'win32' ? win32.join : posix.join);\nexport const resolve = (process.platform === 'win32' ? win32.resolve : posix.resolve);\nexport const relative = (process.platform === 'win32' ? win32.relative : posix.relative);\nexport const dirname = (process.platform === 'win32' ? win32.dirname : posix.dirname);\nexport const basename = (process.platform === 'win32' ? win32.basename : posix.basename);\nexport const extname = (process.platform === 'win32' ? win32.extname : posix.extname);\nexport const format = (process.platform === 'win32' ? win32.format : posix.format);\nexport const parse = (process.platform === 'win32' ? win32.parse : posix.parse);\nexport const toNamespacedPath = (process.platform === 'win32' ? win32.toNamespacedPath : posix.toNamespacedPath);\nexport const sep = (process.platform === 'win32' ? win32.sep : posix.sep);\nexport const delimiter = (process.platform === 'win32' ? win32.delimiter : posix.delimiter);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IProcessEnvironment } from 'vs/base/common/platform';\n\n/**\n * Options to be passed to the external program or shell.\n */\nexport interface CommandOptions {\n\t/**\n\t * The current working directory of the executed program or shell.\n\t * If omitted VSCode's current workspace root is used.\n\t */\n\tcwd?: string;\n\n\t/**\n\t * The environment of the executed program or shell. If omitted\n\t * the parent process' environment is used.\n\t */\n\tenv?: { [key: string]: string; };\n}\n\nexport interface Executable {\n\t/**\n\t * The command to be executed. Can be an external program or a shell\n\t * command.\n\t */\n\tcommand: string;\n\n\t/**\n\t * Specifies whether the command is a shell command and therefore must\n\t * be executed in a shell interpreter (e.g. cmd.exe, bash, ...).\n\t */\n\tisShellCommand: boolean;\n\n\t/**\n\t * The arguments passed to the command.\n\t */\n\targs: string[];\n\n\t/**\n\t * The command options used when the command is executed. Can be omitted.\n\t */\n\toptions?: CommandOptions;\n}\n\nexport interface ForkOptions extends CommandOptions {\n\texecArgv?: string[];\n}\n\nexport const enum Source {\n\tstdout,\n\tstderr\n}\n\n/**\n * The data send via a success callback\n */\nexport interface SuccessData {\n\terror?: Error;\n\tcmdCode?: number;\n\tterminated?: boolean;\n}\n\n/**\n * The data send via a error callback\n */\nexport interface ErrorData {\n\terror?: Error;\n\tterminated?: boolean;\n\tstdout?: string;\n\tstderr?: string;\n}\n\nexport interface TerminateResponse {\n\tsuccess: boolean;\n\tcode?: TerminateResponseCode;\n\terror?: any;\n}\n\nexport const enum TerminateResponseCode {\n\tSuccess = 0,\n\tUnknown = 1,\n\tAccessDenied = 2,\n\tProcessNotFound = 3,\n}\n\nexport interface ProcessItem {\n\tname: string;\n\tcmd: string;\n\tpid: number;\n\tppid: number;\n\tload: number;\n\tmem: number;\n\n\tchildren?: ProcessItem[];\n}\n\n/**\n * Sanitizes a VS Code process environment by removing all Electron/VS Code-related values.\n */\nexport function sanitizeProcessEnvironment(env: IProcessEnvironment, ...preserve: string[]): void {\n\tconst set = preserve.reduce((set, key) => {\n\t\tset[key] = true;\n\t\treturn set;\n\t}, {} as Record<string, boolean>);\n\tconst keysToRemove = [\n\t\t/^ELECTRON_.+$/,\n\t\t/^GOOGLE_API_KEY$/,\n\t\t/^VSCODE_.+$/,\n\t\t/^SNAP(|_.*)$/,\n\t\t/^GDK_PIXBUF_.+$/,\n\t\t/^CODE_SERVER_.+$/,\n\t];\n\tconst envKeys = Object.keys(env);\n\tenvKeys\n\t\t.filter(key => !set[key])\n\t\t.forEach(envKey => {\n\t\t\tfor (let i = 0; i < keysToRemove.length; i++) {\n\t\t\t\tif (envKey.search(keysToRemove[i]) !== -1) {\n\t\t\t\t\tdelete env[envKey];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n}\n","/**\n * Semver UMD module\n * Copyright (c) Isaac Z. Schlueter and Contributors\n * https://github.com/npm/node-semver\n */\n\n/**\n * DO NOT EDIT THIS FILE\n */\n\n!function(e,r){if(\"object\"==typeof exports&&\"object\"==typeof module)module.exports=r();else if(\"function\"==typeof define&&define.amd)define(\"vs/base/common/semver/semver\", [],r);else{var t=r();for(var n in t)(\"object\"==typeof exports?exports:e)[n]=t[n]}}(\"undefined\"!=typeof self?self:this,(function(){return function(e){var r={};function t(n){if(r[n])return r[n].exports;var o=r[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,t),o.l=!0,o.exports}return t.m=e,t.c=r,t.d=function(e,r,n){t.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:n})},t.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},t.t=function(e,r){if(1&r&&(e=t(e)),8&r)return e;if(4&r&&\"object\"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(t.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:e}),2&r&&\"string\"!=typeof e)for(var o in e)t.d(n,o,function(r){return e[r]}.bind(null,o));return n},t.n=function(e){var r=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(r,\"a\",r),r},t.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},t.p=\"\",t(t.s=0)}([function(e,r,t){(function(t){var n;r=e.exports=H,n=\"object\"==typeof t&&t.env&&t.env.NODE_DEBUG&&/\\bsemver\\b/i.test(t.env.NODE_DEBUG)?function(){var e=Array.prototype.slice.call(arguments,0);e.unshift(\"SEMVER\"),console.log.apply(console,e)}:function(){},r.SEMVER_SPEC_VERSION=\"2.0.0\";var o=256,i=Number.MAX_SAFE_INTEGER||9007199254740991,s=r.re=[],a=r.src=[],u=0,c=u++;a[c]=\"0|[1-9]\\\\d*\";var p=u++;a[p]=\"[0-9]+\";var f=u++;a[f]=\"\\\\d*[a-zA-Z-][a-zA-Z0-9-]*\";var l=u++;a[l]=\"(\"+a[c]+\")\\\\.(\"+a[c]+\")\\\\.(\"+a[c]+\")\";var h=u++;a[h]=\"(\"+a[p]+\")\\\\.(\"+a[p]+\")\\\\.(\"+a[p]+\")\";var v=u++;a[v]=\"(?:\"+a[c]+\"|\"+a[f]+\")\";var m=u++;a[m]=\"(?:\"+a[p]+\"|\"+a[f]+\")\";var w=u++;a[w]=\"(?:-(\"+a[v]+\"(?:\\\\.\"+a[v]+\")*))\";var g=u++;a[g]=\"(?:-?(\"+a[m]+\"(?:\\\\.\"+a[m]+\")*))\";var y=u++;a[y]=\"[0-9A-Za-z-]+\";var d=u++;a[d]=\"(?:\\\\+(\"+a[y]+\"(?:\\\\.\"+a[y]+\")*))\";var b=u++,j=\"v?\"+a[l]+a[w]+\"?\"+a[d]+\"?\";a[b]=\"^\"+j+\"$\";var E=\"[v=\\\\s]*\"+a[h]+a[g]+\"?\"+a[d]+\"?\",T=u++;a[T]=\"^\"+E+\"$\";var x=u++;a[x]=\"((?:<|>)?=?)\";var $=u++;a[$]=a[p]+\"|x|X|\\\\*\";var k=u++;a[k]=a[c]+\"|x|X|\\\\*\";var S=u++;a[S]=\"[v=\\\\s]*(\"+a[k]+\")(?:\\\\.(\"+a[k]+\")(?:\\\\.(\"+a[k]+\")(?:\"+a[w]+\")?\"+a[d]+\"?)?)?\";var R=u++;a[R]=\"[v=\\\\s]*(\"+a[$]+\")(?:\\\\.(\"+a[$]+\")(?:\\\\.(\"+a[$]+\")(?:\"+a[g]+\")?\"+a[d]+\"?)?)?\";var I=u++;a[I]=\"^\"+a[x]+\"\\\\s*\"+a[S]+\"$\";var _=u++;a[_]=\"^\"+a[x]+\"\\\\s*\"+a[R]+\"$\";var O=u++;a[O]=\"(?:^|[^\\\\d])(\\\\d{1,16})(?:\\\\.(\\\\d{1,16}))?(?:\\\\.(\\\\d{1,16}))?(?:$|[^\\\\d])\";var A=u++;a[A]=\"(?:~>?)\";var M=u++;a[M]=\"(\\\\s*)\"+a[A]+\"\\\\s+\",s[M]=new RegExp(a[M],\"g\");var V=u++;a[V]=\"^\"+a[A]+a[S]+\"$\";var P=u++;a[P]=\"^\"+a[A]+a[R]+\"$\";var C=u++;a[C]=\"(?:\\\\^)\";var L=u++;a[L]=\"(\\\\s*)\"+a[C]+\"\\\\s+\",s[L]=new RegExp(a[L],\"g\");var N=u++;a[N]=\"^\"+a[C]+a[S]+\"$\";var q=u++;a[q]=\"^\"+a[C]+a[R]+\"$\";var D=u++;a[D]=\"^\"+a[x]+\"\\\\s*(\"+E+\")$|^$\";var X=u++;a[X]=\"^\"+a[x]+\"\\\\s*(\"+j+\")$|^$\";var z=u++;a[z]=\"(\\\\s*)\"+a[x]+\"\\\\s*(\"+E+\"|\"+a[S]+\")\",s[z]=new RegExp(a[z],\"g\");var G=u++;a[G]=\"^\\\\s*(\"+a[S]+\")\\\\s+-\\\\s+(\"+a[S]+\")\\\\s*$\";var Z=u++;a[Z]=\"^\\\\s*(\"+a[R]+\")\\\\s+-\\\\s+(\"+a[R]+\")\\\\s*$\";var B=u++;a[B]=\"(<|>)?=?\\\\s*\\\\*\";for(var U=0;U<35;U++)n(U,a[U]),s[U]||(s[U]=new RegExp(a[U]));function F(e,r){if(e instanceof H)return e;if(\"string\"!=typeof e)return null;if(e.length>o)return null;if(!(r?s[T]:s[b]).test(e))return null;try{return new H(e,r)}catch(e){return null}}function H(e,r){if(e instanceof H){if(e.loose===r)return e;e=e.version}else if(\"string\"!=typeof e)throw new TypeError(\"Invalid Version: \"+e);if(e.length>o)throw new TypeError(\"version is longer than \"+o+\" characters\");if(!(this instanceof H))return new H(e,r);n(\"SemVer\",e,r),this.loose=r;var t=e.trim().match(r?s[T]:s[b]);if(!t)throw new TypeError(\"Invalid Version: \"+e);if(this.raw=e,this.major=+t[1],this.minor=+t[2],this.patch=+t[3],this.major>i||this.major<0)throw new TypeError(\"Invalid major version\");if(this.minor>i||this.minor<0)throw new TypeError(\"Invalid minor version\");if(this.patch>i||this.patch<0)throw new TypeError(\"Invalid patch version\");t[4]?this.prerelease=t[4].split(\".\").map((function(e){if(/^[0-9]+$/.test(e)){var r=+e;if(r>=0&&r<i)return r}return e})):this.prerelease=[],this.build=t[5]?t[5].split(\".\"):[],this.format()}r.parse=F,r.valid=function(e,r){var t=F(e,r);return t?t.version:null},r.clean=function(e,r){var t=F(e.trim().replace(/^[=v]+/,\"\"),r);return t?t.version:null},r.SemVer=H,H.prototype.format=function(){return this.version=this.major+\".\"+this.minor+\".\"+this.patch,this.prerelease.length&&(this.version+=\"-\"+this.prerelease.join(\".\")),this.version},H.prototype.toString=function(){return this.version},H.prototype.compare=function(e){return n(\"SemVer.compare\",this.version,this.loose,e),e instanceof H||(e=new H(e,this.loose)),this.compareMain(e)||this.comparePre(e)},H.prototype.compareMain=function(e){return e instanceof H||(e=new H(e,this.loose)),K(this.major,e.major)||K(this.minor,e.minor)||K(this.patch,e.patch)},H.prototype.comparePre=function(e){if(e instanceof H||(e=new H(e,this.loose)),this.prerelease.length&&!e.prerelease.length)return-1;if(!this.prerelease.length&&e.prerelease.length)return 1;if(!this.prerelease.length&&!e.prerelease.length)return 0;var r=0;do{var t=this.prerelease[r],o=e.prerelease[r];if(n(\"prerelease compare\",r,t,o),void 0===t&&void 0===o)return 0;if(void 0===o)return 1;if(void 0===t)return-1;if(t!==o)return K(t,o)}while(++r)},H.prototype.inc=function(e,r){switch(e){case\"premajor\":this.prerelease.length=0,this.patch=0,this.minor=0,this.major++,this.inc(\"pre\",r);break;case\"preminor\":this.prerelease.length=0,this.patch=0,this.minor++,this.inc(\"pre\",r);break;case\"prepatch\":this.prerelease.length=0,this.inc(\"patch\",r),this.inc(\"pre\",r);break;case\"prerelease\":0===this.prerelease.length&&this.inc(\"patch\",r),this.inc(\"pre\",r);break;case\"major\":0===this.minor&&0===this.patch&&0!==this.prerelease.length||this.major++,this.minor=0,this.patch=0,this.prerelease=[];break;case\"minor\":0===this.patch&&0!==this.prerelease.length||this.minor++,this.patch=0,this.prerelease=[];break;case\"patch\":0===this.prerelease.length&&this.patch++,this.prerelease=[];break;case\"pre\":if(0===this.prerelease.length)this.prerelease=[0];else{for(var t=this.prerelease.length;--t>=0;)\"number\"==typeof this.prerelease[t]&&(this.prerelease[t]++,t=-2);-1===t&&this.prerelease.push(0)}r&&(this.prerelease[0]===r?isNaN(this.prerelease[1])&&(this.prerelease=[r,0]):this.prerelease=[r,0]);break;default:throw new Error(\"invalid increment argument: \"+e)}return this.format(),this.raw=this.version,this},r.inc=function(e,r,t,n){\"string\"==typeof t&&(n=t,t=void 0);try{return new H(e,t).inc(r,n).version}catch(e){return null}},r.diff=function(e,r){if(ee(e,r))return null;var t=F(e),n=F(r);if(t.prerelease.length||n.prerelease.length){for(var o in t)if((\"major\"===o||\"minor\"===o||\"patch\"===o)&&t[o]!==n[o])return\"pre\"+o;return\"prerelease\"}for(var o in t)if((\"major\"===o||\"minor\"===o||\"patch\"===o)&&t[o]!==n[o])return o},r.compareIdentifiers=K;var J=/^[0-9]+$/;function K(e,r){var t=J.test(e),n=J.test(r);return t&&n&&(e=+e,r=+r),t&&!n?-1:n&&!t?1:e<r?-1:e>r?1:0}function Q(e,r,t){return new H(e,t).compare(new H(r,t))}function W(e,r,t){return Q(e,r,t)>0}function Y(e,r,t){return Q(e,r,t)<0}function ee(e,r,t){return 0===Q(e,r,t)}function re(e,r,t){return 0!==Q(e,r,t)}function te(e,r,t){return Q(e,r,t)>=0}function ne(e,r,t){return Q(e,r,t)<=0}function oe(e,r,t,n){var o;switch(r){case\"===\":\"object\"==typeof e&&(e=e.version),\"object\"==typeof t&&(t=t.version),o=e===t;break;case\"!==\":\"object\"==typeof e&&(e=e.version),\"object\"==typeof t&&(t=t.version),o=e!==t;break;case\"\":case\"=\":case\"==\":o=ee(e,t,n);break;case\"!=\":o=re(e,t,n);break;case\">\":o=W(e,t,n);break;case\">=\":o=te(e,t,n);break;case\"<\":o=Y(e,t,n);break;case\"<=\":o=ne(e,t,n);break;default:throw new TypeError(\"Invalid operator: \"+r)}return o}function ie(e,r){if(e instanceof ie){if(e.loose===r)return e;e=e.value}if(!(this instanceof ie))return new ie(e,r);n(\"comparator\",e,r),this.loose=r,this.parse(e),this.semver===se?this.value=\"\":this.value=this.operator+this.semver.version,n(\"comp\",this)}r.rcompareIdentifiers=function(e,r){return K(r,e)},r.major=function(e,r){return new H(e,r).major},r.minor=function(e,r){return new H(e,r).minor},r.patch=function(e,r){return new H(e,r).patch},r.compare=Q,r.compareLoose=function(e,r){return Q(e,r,!0)},r.rcompare=function(e,r,t){return Q(r,e,t)},r.sort=function(e,t){return e.sort((function(e,n){return r.compare(e,n,t)}))},r.rsort=function(e,t){return e.sort((function(e,n){return r.rcompare(e,n,t)}))},r.gt=W,r.lt=Y,r.eq=ee,r.neq=re,r.gte=te,r.lte=ne,r.cmp=oe,r.Comparator=ie;var se={};function ae(e,r){if(e instanceof ae)return e.loose===r?e:new ae(e.raw,r);if(e instanceof ie)return new ae(e.value,r);if(!(this instanceof ae))return new ae(e,r);if(this.loose=r,this.raw=e,this.set=e.split(/\\s*\\|\\|\\s*/).map((function(e){return this.parseRange(e.trim())}),this).filter((function(e){return e.length})),!this.set.length)throw new TypeError(\"Invalid SemVer Range: \"+e);this.format()}function ue(e){return!e||\"x\"===e.toLowerCase()||\"*\"===e}function ce(e,r,t,n,o,i,s,a,u,c,p,f,l){return((r=ue(t)?\"\":ue(n)?\">=\"+t+\".0.0\":ue(o)?\">=\"+t+\".\"+n+\".0\":\">=\"+r)+\" \"+(a=ue(u)?\"\":ue(c)?\"<\"+(+u+1)+\".0.0\":ue(p)?\"<\"+u+\".\"+(+c+1)+\".0\":f?\"<=\"+u+\".\"+c+\".\"+p+\"-\"+f:\"<=\"+a)).trim()}function pe(e,r){for(var t=0;t<e.length;t++)if(!e[t].test(r))return!1;if(r.prerelease.length){for(t=0;t<e.length;t++)if(n(e[t].semver),e[t].semver!==se&&e[t].semver.prerelease.length>0){var o=e[t].semver;if(o.major===r.major&&o.minor===r.minor&&o.patch===r.patch)return!0}return!1}return!0}function fe(e,r,t){try{r=new ae(r,t)}catch(e){return!1}return r.test(e)}function le(e,r,t,n){var o,i,s,a,u;switch(e=new H(e,n),r=new ae(r,n),t){case\">\":o=W,i=ne,s=Y,a=\">\",u=\">=\";break;case\"<\":o=Y,i=te,s=W,a=\"<\",u=\"<=\";break;default:throw new TypeError('Must provide a hilo val of \"<\" or \">\"')}if(fe(e,r,n))return!1;for(var c=0;c<r.set.length;++c){var p=r.set[c],f=null,l=null;if(p.forEach((function(e){e.semver===se&&(e=new ie(\">=0.0.0\")),f=f||e,l=l||e,o(e.semver,f.semver,n)?f=e:s(e.semver,l.semver,n)&&(l=e)})),f.operator===a||f.operator===u)return!1;if((!l.operator||l.operator===a)&&i(e,l.semver))return!1;if(l.operator===u&&s(e,l.semver))return!1}return!0}ie.prototype.parse=function(e){var r=this.loose?s[D]:s[X],t=e.match(r);if(!t)throw new TypeError(\"Invalid comparator: \"+e);this.operator=t[1],\"=\"===this.operator&&(this.operator=\"\"),t[2]?this.semver=new H(t[2],this.loose):this.semver=se},ie.prototype.toString=function(){return this.value},ie.prototype.test=function(e){return n(\"Comparator.test\",e,this.loose),this.semver===se||(\"string\"==typeof e&&(e=new H(e,this.loose)),oe(e,this.operator,this.semver,this.loose))},ie.prototype.intersects=function(e,r){if(!(e instanceof ie))throw new TypeError(\"a Comparator is required\");var t;if(\"\"===this.operator)return t=new ae(e.value,r),fe(this.value,t,r);if(\"\"===e.operator)return t=new ae(this.value,r),fe(e.semver,t,r);var n=!(\">=\"!==this.operator&&\">\"!==this.operator||\">=\"!==e.operator&&\">\"!==e.operator),o=!(\"<=\"!==this.operator&&\"<\"!==this.operator||\"<=\"!==e.operator&&\"<\"!==e.operator),i=this.semver.version===e.semver.version,s=!(\">=\"!==this.operator&&\"<=\"!==this.operator||\">=\"!==e.operator&&\"<=\"!==e.operator),a=oe(this.semver,\"<\",e.semver,r)&&(\">=\"===this.operator||\">\"===this.operator)&&(\"<=\"===e.operator||\"<\"===e.operator),u=oe(this.semver,\">\",e.semver,r)&&(\"<=\"===this.operator||\"<\"===this.operator)&&(\">=\"===e.operator||\">\"===e.operator);return n||o||i&&s||a||u},r.Range=ae,ae.prototype.format=function(){return this.range=this.set.map((function(e){return e.join(\" \").trim()})).join(\"||\").trim(),this.range},ae.prototype.toString=function(){return this.range},ae.prototype.parseRange=function(e){var r=this.loose;e=e.trim(),n(\"range\",e,r);var t=r?s[Z]:s[G];e=e.replace(t,ce),n(\"hyphen replace\",e),e=e.replace(s[z],\"$1$2$3\"),n(\"comparator trim\",e,s[z]),e=(e=(e=e.replace(s[M],\"$1~\")).replace(s[L],\"$1^\")).split(/\\s+/).join(\" \");var o=r?s[D]:s[X],i=e.split(\" \").map((function(e){return function(e,r){return n(\"comp\",e),e=function(e,r){return e.trim().split(/\\s+/).map((function(e){return function(e,r){n(\"caret\",e,r);var t=r?s[q]:s[N];return e.replace(t,(function(r,t,o,i,s){var a;return n(\"caret\",e,r,t,o,i,s),ue(t)?a=\"\":ue(o)?a=\">=\"+t+\".0.0 <\"+(+t+1)+\".0.0\":ue(i)?a=\"0\"===t?\">=\"+t+\".\"+o+\".0 <\"+t+\".\"+(+o+1)+\".0\":\">=\"+t+\".\"+o+\".0 <\"+(+t+1)+\".0.0\":s?(n(\"replaceCaret pr\",s),\"-\"!==s.charAt(0)&&(s=\"-\"+s),a=\"0\"===t?\"0\"===o?\">=\"+t+\".\"+o+\".\"+i+s+\" <\"+t+\".\"+o+\".\"+(+i+1):\">=\"+t+\".\"+o+\".\"+i+s+\" <\"+t+\".\"+(+o+1)+\".0\":\">=\"+t+\".\"+o+\".\"+i+s+\" <\"+(+t+1)+\".0.0\"):(n(\"no pr\"),a=\"0\"===t?\"0\"===o?\">=\"+t+\".\"+o+\".\"+i+\" <\"+t+\".\"+o+\".\"+(+i+1):\">=\"+t+\".\"+o+\".\"+i+\" <\"+t+\".\"+(+o+1)+\".0\":\">=\"+t+\".\"+o+\".\"+i+\" <\"+(+t+1)+\".0.0\"),n(\"caret return\",a),a}))}(e,r)})).join(\" \")}(e,r),n(\"caret\",e),e=function(e,r){return e.trim().split(/\\s+/).map((function(e){return function(e,r){var t=r?s[P]:s[V];return e.replace(t,(function(r,t,o,i,s){var a;return n(\"tilde\",e,r,t,o,i,s),ue(t)?a=\"\":ue(o)?a=\">=\"+t+\".0.0 <\"+(+t+1)+\".0.0\":ue(i)?a=\">=\"+t+\".\"+o+\".0 <\"+t+\".\"+(+o+1)+\".0\":s?(n(\"replaceTilde pr\",s),\"-\"!==s.charAt(0)&&(s=\"-\"+s),a=\">=\"+t+\".\"+o+\".\"+i+s+\" <\"+t+\".\"+(+o+1)+\".0\"):a=\">=\"+t+\".\"+o+\".\"+i+\" <\"+t+\".\"+(+o+1)+\".0\",n(\"tilde return\",a),a}))}(e,r)})).join(\" \")}(e,r),n(\"tildes\",e),e=function(e,r){return n(\"replaceXRanges\",e,r),e.split(/\\s+/).map((function(e){return function(e,r){e=e.trim();var t=r?s[_]:s[I];return e.replace(t,(function(r,t,o,i,s,a){n(\"xRange\",e,r,t,o,i,s,a);var u=ue(o),c=u||ue(i),p=c||ue(s);return\"=\"===t&&p&&(t=\"\"),u?r=\">\"===t||\"<\"===t?\"<0.0.0\":\"*\":t&&p?(c&&(i=0),p&&(s=0),\">\"===t?(t=\">=\",c?(o=+o+1,i=0,s=0):p&&(i=+i+1,s=0)):\"<=\"===t&&(t=\"<\",c?o=+o+1:i=+i+1),r=t+o+\".\"+i+\".\"+s):c?r=\">=\"+o+\".0.0 <\"+(+o+1)+\".0.0\":p&&(r=\">=\"+o+\".\"+i+\".0 <\"+o+\".\"+(+i+1)+\".0\"),n(\"xRange return\",r),r}))}(e,r)})).join(\" \")}(e,r),n(\"xrange\",e),e=function(e,r){return n(\"replaceStars\",e,r),e.trim().replace(s[B],\"\")}(e,r),n(\"stars\",e),e}(e,r)})).join(\" \").split(/\\s+/);return this.loose&&(i=i.filter((function(e){return!!e.match(o)}))),i=i.map((function(e){return new ie(e,r)}))},ae.prototype.intersects=function(e,r){if(!(e instanceof ae))throw new TypeError(\"a Range is required\");return this.set.some((function(t){return t.every((function(t){return e.set.some((function(e){return e.every((function(e){return t.intersects(e,r)}))}))}))}))},r.toComparators=function(e,r){return new ae(e,r).set.map((function(e){return e.map((function(e){return e.value})).join(\" \").trim().split(\" \")}))},ae.prototype.test=function(e){if(!e)return!1;\"string\"==typeof e&&(e=new H(e,this.loose));for(var r=0;r<this.set.length;r++)if(pe(this.set[r],e))return!0;return!1},r.satisfies=fe,r.maxSatisfying=function(e,r,t){var n=null,o=null;try{var i=new ae(r,t)}catch(e){return null}return e.forEach((function(e){i.test(e)&&(n&&-1!==o.compare(e)||(o=new H(n=e,t)))})),n},r.minSatisfying=function(e,r,t){var n=null,o=null;try{var i=new ae(r,t)}catch(e){return null}return e.forEach((function(e){i.test(e)&&(n&&1!==o.compare(e)||(o=new H(n=e,t)))})),n},r.validRange=function(e,r){try{return new ae(e,r).range||\"*\"}catch(e){return null}},r.ltr=function(e,r,t){return le(e,r,\"<\",t)},r.gtr=function(e,r,t){return le(e,r,\">\",t)},r.outside=le,r.prerelease=function(e,r){var t=F(e,r);return t&&t.prerelease.length?t.prerelease:null},r.intersects=function(e,r,t){return e=new ae(e,t),r=new ae(r,t),e.intersects(r)},r.coerce=function(e){if(e instanceof H)return e;if(\"string\"!=typeof e)return null;var r=e.match(s[O]);return null==r?null:F((r[1]||\"0\")+\".\"+(r[2]||\"0\")+\".\"+(r[3]||\"0\"))}}).call(this,t(1))},function(e,r){var t,n,o=e.exports={};function i(){throw new Error(\"setTimeout has not been defined\")}function s(){throw new Error(\"clearTimeout has not been defined\")}function a(e){if(t===setTimeout)return setTimeout(e,0);if((t===i||!t)&&setTimeout)return t=setTimeout,setTimeout(e,0);try{return t(e,0)}catch(r){try{return t.call(null,e,0)}catch(r){return t.call(this,e,0)}}}!function(){try{t=\"function\"==typeof setTimeout?setTimeout:i}catch(e){t=i}try{n=\"function\"==typeof clearTimeout?clearTimeout:s}catch(e){n=s}}();var u,c=[],p=!1,f=-1;function l(){p&&u&&(p=!1,u.length?c=u.concat(c):f=-1,c.length&&h())}function h(){if(!p){var e=a(l);p=!0;for(var r=c.length;r;){for(u=c,c=[];++f<r;)u&&u[f].run();f=-1,r=c.length}u=null,p=!1,function(e){if(n===clearTimeout)return clearTimeout(e);if((n===s||!n)&&clearTimeout)return n=clearTimeout,clearTimeout(e);try{n(e)}catch(r){try{return n.call(null,e)}catch(r){return n.call(this,e)}}}(e)}}function v(e,r){this.fun=e,this.array=r}function m(){}o.nextTick=function(e){var r=new Array(arguments.length-1);if(arguments.length>1)for(var t=1;t<arguments.length;t++)r[t-1]=arguments[t];c.push(new v(e,r)),1!==c.length||p||a(h)},v.prototype.run=function(){this.fun.apply(null,this.array)},o.title=\"browser\",o.browser=!0,o.env={},o.argv=[],o.version=\"\",o.versions={},o.on=m,o.addListener=m,o.once=m,o.off=m,o.removeListener=m,o.removeAllListeners=m,o.emit=m,o.prependListener=m,o.prependOnceListener=m,o.listeners=function(e){return[]},o.binding=function(e){throw new Error(\"process.binding is not supported\")},o.cwd=function(){return\"/\"},o.chdir=function(e){throw new Error(\"process.chdir is not supported\")},o.umask=function(){return 0}}])}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DisposableStore, toDisposable } from 'vs/base/common/lifecycle';\n\n/**\n * The payload that flows in readable stream events.\n */\nexport type ReadableStreamEventPayload<T> = T | Error | 'end';\n\nexport interface ReadableStreamEvents<T> {\n\n\t/**\n\t * The 'data' event is emitted whenever the stream is\n\t * relinquishing ownership of a chunk of data to a consumer.\n\t */\n\ton(event: 'data', callback: (data: T) => void): void;\n\n\t/**\n\t * Emitted when any error occurs.\n\t */\n\ton(event: 'error', callback: (err: Error) => void): void;\n\n\t/**\n\t * The 'end' event is emitted when there is no more data\n\t * to be consumed from the stream. The 'end' event will\n\t * not be emitted unless the data is completely consumed.\n\t */\n\ton(event: 'end', callback: () => void): void;\n}\n\n/**\n * A interface that emulates the API shape of a node.js readable\n * stream for use in native and web environments.\n */\nexport interface ReadableStream<T> extends ReadableStreamEvents<T> {\n\n\t/**\n\t * Stops emitting any events until resume() is called.\n\t */\n\tpause(): void;\n\n\t/**\n\t * Starts emitting events again after pause() was called.\n\t */\n\tresume(): void;\n\n\t/**\n\t * Destroys the stream and stops emitting any event.\n\t */\n\tdestroy(): void;\n\n\t/**\n\t * Allows to remove a listener that was previously added.\n\t */\n\tremoveListener(event: string, callback: Function): void;\n}\n\n/**\n * A interface that emulates the API shape of a node.js readable\n * for use in native and web environments.\n */\nexport interface Readable<T> {\n\n\t/**\n\t * Read data from the underlying source. Will return\n\t * null to indicate that no more data can be read.\n\t */\n\tread(): T | null;\n}\n\n/**\n * A interface that emulates the API shape of a node.js writeable\n * stream for use in native and web environments.\n */\nexport interface WriteableStream<T> extends ReadableStream<T> {\n\n\t/**\n\t * Writing data to the stream will trigger the on('data')\n\t * event listener if the stream is flowing and buffer the\n\t * data otherwise until the stream is flowing.\n\t *\n\t * If a `highWaterMark` is configured and writing to the\n\t * stream reaches this mark, a promise will be returned\n\t * that should be awaited on before writing more data.\n\t * Otherwise there is a risk of buffering a large number\n\t * of data chunks without consumer.\n\t */\n\twrite(data: T): void | Promise<void>;\n\n\t/**\n\t * Signals an error to the consumer of the stream via the\n\t * on('error') handler if the stream is flowing.\n\t */\n\terror(error: Error): void;\n\n\t/**\n\t * Signals the end of the stream to the consumer. If the\n\t * result is not an error, will trigger the on('data') event\n\t * listener if the stream is flowing and buffer the data\n\t * otherwise until the stream is flowing.\n\t *\n\t * In case of an error, the on('error') event will be used\n\t * if the stream is flowing.\n\t */\n\tend(result?: T | Error): void;\n}\n\n/**\n * A stream that has a buffer already read. Returns the original stream\n * that was read as well as the chunks that got read.\n *\n * The `ended` flag indicates if the stream has been fully consumed.\n */\nexport interface ReadableBufferedStream<T> {\n\n\t/**\n\t * The original stream that is being read.\n\t */\n\tstream: ReadableStream<T>;\n\n\t/**\n\t * An array of chunks already read from this stream.\n\t */\n\tbuffer: T[];\n\n\t/**\n\t * Signals if the stream has ended or not. If not, consumers\n\t * should continue to read from the stream until consumed.\n\t */\n\tended: boolean;\n}\n\nexport function isReadableStream<T>(obj: unknown): obj is ReadableStream<T> {\n\tconst candidate = obj as ReadableStream<T>;\n\n\treturn candidate && [candidate.on, candidate.pause, candidate.resume, candidate.destroy].every(fn => typeof fn === 'function');\n}\n\nexport function isReadableBufferedStream<T>(obj: unknown): obj is ReadableBufferedStream<T> {\n\tconst candidate = obj as ReadableBufferedStream<T>;\n\n\treturn candidate && isReadableStream(candidate.stream) && Array.isArray(candidate.buffer) && typeof candidate.ended === 'boolean';\n}\n\nexport interface IReducer<T> {\n\t(data: T[]): T;\n}\n\nexport interface IDataTransformer<Original, Transformed> {\n\t(data: Original): Transformed;\n}\n\nexport interface IErrorTransformer {\n\t(error: Error): Error;\n}\n\nexport interface ITransformer<Original, Transformed> {\n\tdata: IDataTransformer<Original, Transformed>;\n\terror?: IErrorTransformer;\n}\n\nexport function newWriteableStream<T>(reducer: IReducer<T>, options?: WriteableStreamOptions): WriteableStream<T> {\n\treturn new WriteableStreamImpl<T>(reducer, options);\n}\n\nexport interface WriteableStreamOptions {\n\n\t/**\n\t * The number of objects to buffer before WriteableStream#write()\n\t * signals back that the buffer is full. Can be used to reduce\n\t * the memory pressure when the stream is not flowing.\n\t */\n\thighWaterMark?: number;\n}\n\nclass WriteableStreamImpl<T> implements WriteableStream<T> {\n\n\tprivate readonly state = {\n\t\tflowing: false,\n\t\tended: false,\n\t\tdestroyed: false\n\t};\n\n\tprivate readonly buffer = {\n\t\tdata: [] as T[],\n\t\terror: [] as Error[]\n\t};\n\n\tprivate readonly listeners = {\n\t\tdata: [] as { (data: T): void }[],\n\t\terror: [] as { (error: Error): void }[],\n\t\tend: [] as { (): void }[]\n\t};\n\n\tprivate readonly pendingWritePromises: Function[] = [];\n\n\tconstructor(private reducer: IReducer<T>, private options?: WriteableStreamOptions) { }\n\n\tpause(): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.state.flowing = false;\n\t}\n\n\tresume(): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.state.flowing) {\n\t\t\tthis.state.flowing = true;\n\n\t\t\t// emit buffered events\n\t\t\tthis.flowData();\n\t\t\tthis.flowErrors();\n\t\t\tthis.flowEnd();\n\t\t}\n\t}\n\n\twrite(data: T): void | Promise<void> {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// flowing: directly send the data to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.listeners.data.forEach(listener => listener(data));\n\t\t}\n\n\t\t// not yet flowing: buffer data until flowing\n\t\telse {\n\t\t\tthis.buffer.data.push(data);\n\n\t\t\t// highWaterMark: if configured, signal back when buffer reached limits\n\t\t\tif (typeof this.options?.highWaterMark === 'number' && this.buffer.data.length > this.options.highWaterMark) {\n\t\t\t\treturn new Promise(resolve => this.pendingWritePromises.push(resolve));\n\t\t\t}\n\t\t}\n\t}\n\n\terror(error: Error): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// flowing: directly send the error to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.listeners.error.forEach(listener => listener(error));\n\t\t}\n\n\t\t// not yet flowing: buffer errors until flowing\n\t\telse {\n\t\t\tthis.buffer.error.push(error);\n\t\t}\n\t}\n\n\tend(result?: T | Error): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// end with data or error if provided\n\t\tif (result instanceof Error) {\n\t\t\tthis.error(result);\n\t\t} else if (result) {\n\t\t\tthis.write(result);\n\t\t}\n\n\t\t// flowing: send end event to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.listeners.end.forEach(listener => listener());\n\n\t\t\tthis.destroy();\n\t\t}\n\n\t\t// not yet flowing: remember state\n\t\telse {\n\t\t\tthis.state.ended = true;\n\t\t}\n\t}\n\n\ton(event: 'data', callback: (data: T) => void): void;\n\ton(event: 'error', callback: (err: Error) => void): void;\n\ton(event: 'end', callback: () => void): void;\n\ton(event: 'data' | 'error' | 'end', callback: (arg0?: any) => void): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (event) {\n\t\t\tcase 'data':\n\t\t\t\tthis.listeners.data.push(callback);\n\n\t\t\t\t// switch into flowing mode as soon as the first 'data'\n\t\t\t\t// listener is added and we are not yet in flowing mode\n\t\t\t\tthis.resume();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'end':\n\t\t\t\tthis.listeners.end.push(callback);\n\n\t\t\t\t// emit 'end' event directly if we are flowing\n\t\t\t\t// and the end has already been reached\n\t\t\t\t//\n\t\t\t\t// finish() when it went through\n\t\t\t\tif (this.state.flowing && this.flowEnd()) {\n\t\t\t\t\tthis.destroy();\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'error':\n\t\t\t\tthis.listeners.error.push(callback);\n\n\t\t\t\t// emit buffered 'error' events unless done already\n\t\t\t\t// now that we know that we have at least one listener\n\t\t\t\tif (this.state.flowing) {\n\t\t\t\t\tthis.flowErrors();\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tremoveListener(event: string, callback: Function): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet listeners: unknown[] | undefined = undefined;\n\n\t\tswitch (event) {\n\t\t\tcase 'data':\n\t\t\t\tlisteners = this.listeners.data;\n\t\t\t\tbreak;\n\n\t\t\tcase 'end':\n\t\t\t\tlisteners = this.listeners.end;\n\t\t\t\tbreak;\n\n\t\t\tcase 'error':\n\t\t\t\tlisteners = this.listeners.error;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (listeners) {\n\t\t\tconst index = listeners.indexOf(callback);\n\t\t\tif (index >= 0) {\n\t\t\t\tlisteners.splice(index, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate flowData(): void {\n\t\tif (this.buffer.data.length > 0) {\n\t\t\tconst fullDataBuffer = this.reducer(this.buffer.data);\n\n\t\t\tthis.listeners.data.forEach(listener => listener(fullDataBuffer));\n\n\t\t\tthis.buffer.data.length = 0;\n\n\t\t\t// When the buffer is empty, resolve all pending writers\n\t\t\tconst pendingWritePromises = [...this.pendingWritePromises];\n\t\t\tthis.pendingWritePromises.length = 0;\n\t\t\tpendingWritePromises.forEach(pendingWritePromise => pendingWritePromise());\n\t\t}\n\t}\n\n\tprivate flowErrors(): void {\n\t\tif (this.listeners.error.length > 0) {\n\t\t\tfor (const error of this.buffer.error) {\n\t\t\t\tthis.listeners.error.forEach(listener => listener(error));\n\t\t\t}\n\n\t\t\tthis.buffer.error.length = 0;\n\t\t}\n\t}\n\n\tprivate flowEnd(): boolean {\n\t\tif (this.state.ended) {\n\t\t\tthis.listeners.end.forEach(listener => listener());\n\n\t\t\treturn this.listeners.end.length > 0;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tdestroy(): void {\n\t\tif (!this.state.destroyed) {\n\t\t\tthis.state.destroyed = true;\n\t\t\tthis.state.ended = true;\n\n\t\t\tthis.buffer.data.length = 0;\n\t\t\tthis.buffer.error.length = 0;\n\n\t\t\tthis.listeners.data.length = 0;\n\t\t\tthis.listeners.error.length = 0;\n\t\t\tthis.listeners.end.length = 0;\n\n\t\t\tthis.pendingWritePromises.length = 0;\n\t\t}\n\t}\n}\n\n/**\n * Helper to fully read a T readable into a T.\n */\nexport function consumeReadable<T>(readable: Readable<T>, reducer: IReducer<T>): T {\n\tconst chunks: T[] = [];\n\n\tlet chunk: T | null;\n\twhile ((chunk = readable.read()) !== null) {\n\t\tchunks.push(chunk);\n\t}\n\n\treturn reducer(chunks);\n}\n\n/**\n * Helper to read a T readable up to a maximum of chunks. If the limit is\n * reached, will return a readable instead to ensure all data can still\n * be read.\n */\nexport function peekReadable<T>(readable: Readable<T>, reducer: IReducer<T>, maxChunks: number): T | Readable<T> {\n\tconst chunks: T[] = [];\n\n\tlet chunk: T | null | undefined = undefined;\n\twhile ((chunk = readable.read()) !== null && chunks.length < maxChunks) {\n\t\tchunks.push(chunk);\n\t}\n\n\t// If the last chunk is null, it means we reached the end of\n\t// the readable and return all the data at once\n\tif (chunk === null && chunks.length > 0) {\n\t\treturn reducer(chunks);\n\t}\n\n\t// Otherwise, we still have a chunk, it means we reached the maxChunks\n\t// value and as such we return a new Readable that first returns\n\t// the existing read chunks and then continues with reading from\n\t// the underlying readable.\n\treturn {\n\t\tread: () => {\n\n\t\t\t// First consume chunks from our array\n\t\t\tif (chunks.length > 0) {\n\t\t\t\treturn chunks.shift()!;\n\t\t\t}\n\n\t\t\t// Then ensure to return our last read chunk\n\t\t\tif (typeof chunk !== 'undefined') {\n\t\t\t\tconst lastReadChunk = chunk;\n\n\t\t\t\t// explicitly use undefined here to indicate that we consumed\n\t\t\t\t// the chunk, which could have either been null or valued.\n\t\t\t\tchunk = undefined;\n\n\t\t\t\treturn lastReadChunk;\n\t\t\t}\n\n\t\t\t// Finally delegate back to the Readable\n\t\t\treturn readable.read();\n\t\t}\n\t};\n}\n\n/**\n * Helper to fully read a T stream into a T.\n */\nexport function consumeStream<T>(stream: ReadableStreamEvents<T>, reducer: IReducer<T>): Promise<T> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst chunks: T[] = [];\n\n\t\tstream.on('data', data => chunks.push(data));\n\t\tstream.on('error', error => reject(error));\n\t\tstream.on('end', () => resolve(reducer(chunks)));\n\t});\n}\n\n/**\n * Helper to peek up to `maxChunks` into a stream. The return type signals if\n * the stream has ended or not. If not, caller needs to add a `data` listener\n * to continue reading.\n */\nexport function peekStream<T>(stream: ReadableStream<T>, maxChunks: number): Promise<ReadableBufferedStream<T>> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst streamListeners = new DisposableStore();\n\n\t\t// Data Listener\n\t\tconst buffer: T[] = [];\n\t\tconst dataListener = (chunk: T) => {\n\n\t\t\t// Add to buffer\n\t\t\tbuffer.push(chunk);\n\n\t\t\t// We reached maxChunks and thus need to return\n\t\t\tif (buffer.length > maxChunks) {\n\n\t\t\t\t// Dispose any listeners and ensure to pause the\n\t\t\t\t// stream so that it can be consumed again by caller\n\t\t\t\tstreamListeners.dispose();\n\t\t\t\tstream.pause();\n\n\t\t\t\treturn resolve({ stream, buffer, ended: false });\n\t\t\t}\n\t\t};\n\n\t\tstreamListeners.add(toDisposable(() => stream.removeListener('data', dataListener)));\n\t\tstream.on('data', dataListener);\n\n\t\t// Error Listener\n\t\tconst errorListener = (error: Error) => {\n\t\t\treturn reject(error);\n\t\t};\n\n\t\tstreamListeners.add(toDisposable(() => stream.removeListener('error', errorListener)));\n\t\tstream.on('error', errorListener);\n\n\t\tconst endListener = () => {\n\t\t\treturn resolve({ stream, buffer, ended: true });\n\t\t};\n\n\t\tstreamListeners.add(toDisposable(() => stream.removeListener('end', endListener)));\n\t\tstream.on('end', endListener);\n\t});\n}\n\n/**\n * Helper to create a readable stream from an existing T.\n */\nexport function toStream<T>(t: T, reducer: IReducer<T>): ReadableStream<T> {\n\tconst stream = newWriteableStream<T>(reducer);\n\n\tstream.end(t);\n\n\treturn stream;\n}\n\n/**\n * Helper to convert a T into a Readable<T>.\n */\nexport function toReadable<T>(t: T): Readable<T> {\n\tlet consumed = false;\n\n\treturn {\n\t\tread: () => {\n\t\t\tif (consumed) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconsumed = true;\n\n\t\t\treturn t;\n\t\t}\n\t};\n}\n\n/**\n * Helper to transform a readable stream into another stream.\n */\nexport function transform<Original, Transformed>(stream: ReadableStreamEvents<Original>, transformer: ITransformer<Original, Transformed>, reducer: IReducer<Transformed>): ReadableStream<Transformed> {\n\tconst target = newWriteableStream<Transformed>(reducer);\n\n\tstream.on('data', data => target.write(transformer.data(data)));\n\tstream.on('end', () => target.end());\n\tstream.on('error', error => target.error(transformer.error ? transformer.error(error) : error));\n\n\treturn target;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport { Constants } from 'vs/base/common/uint';\n\nexport function isFalsyOrWhitespace(str: string | undefined): boolean {\n\tif (!str || typeof str !== 'string') {\n\t\treturn true;\n\t}\n\treturn str.trim().length === 0;\n}\n\nconst _formatRegexp = /{(\\d+)}/g;\n\n/**\n * Helper to produce a string with a variable number of arguments. Insert variable segments\n * into the string using the {n} notation where N is the index of the argument following the string.\n * @param value string to which formatting is applied\n * @param args replacements for {n}-entries\n */\nexport function format(value: string, ...args: any[]): string {\n\tif (args.length === 0) {\n\t\treturn value;\n\t}\n\treturn value.replace(_formatRegexp, function (match, group) {\n\t\tconst idx = parseInt(group, 10);\n\t\treturn isNaN(idx) || idx < 0 || idx >= args.length ?\n\t\t\tmatch :\n\t\t\targs[idx];\n\t});\n}\n\n/**\n * Converts HTML characters inside the string to use entities instead. Makes the string safe from\n * being used e.g. in HTMLElement.innerHTML.\n */\nexport function escape(html: string): string {\n\treturn html.replace(/[<>&]/g, function (match) {\n\t\tswitch (match) {\n\t\t\tcase '<': return '&lt;';\n\t\t\tcase '>': return '&gt;';\n\t\t\tcase '&': return '&amp;';\n\t\t\tdefault: return match;\n\t\t}\n\t});\n}\n\n/**\n * Escapes regular expression characters in a given string\n */\nexport function escapeRegExpCharacters(value: string): string {\n\treturn value.replace(/[\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)]/g, '\\\\$&');\n}\n\n/**\n * Counts how often `character` occurs inside `value`.\n */\nexport function count(value: string, character: string): number {\n\tlet result = 0;\n\tconst ch = character.charCodeAt(0);\n\tfor (let i = value.length - 1; i >= 0; i--) {\n\t\tif (value.charCodeAt(i) === ch) {\n\t\t\tresult++;\n\t\t}\n\t}\n\treturn result;\n}\n\n/**\n * Removes all occurrences of needle from the beginning and end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim (default is a blank)\n */\nexport function trim(haystack: string, needle: string = ' '): string {\n\tconst trimmed = ltrim(haystack, needle);\n\treturn rtrim(trimmed, needle);\n}\n\n/**\n * Removes all occurrences of needle from the beginning of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function ltrim(haystack: string, needle: string): string {\n\tif (!haystack || !needle) {\n\t\treturn haystack;\n\t}\n\n\tconst needleLen = needle.length;\n\tif (needleLen === 0 || haystack.length === 0) {\n\t\treturn haystack;\n\t}\n\n\tlet offset = 0;\n\n\twhile (haystack.indexOf(needle, offset) === offset) {\n\t\toffset = offset + needleLen;\n\t}\n\treturn haystack.substring(offset);\n}\n\n/**\n * Removes all occurrences of needle from the end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function rtrim(haystack: string, needle: string): string {\n\tif (!haystack || !needle) {\n\t\treturn haystack;\n\t}\n\n\tconst needleLen = needle.length,\n\t\thaystackLen = haystack.length;\n\n\tif (needleLen === 0 || haystackLen === 0) {\n\t\treturn haystack;\n\t}\n\n\tlet offset = haystackLen,\n\t\tidx = -1;\n\n\twhile (true) {\n\t\tidx = haystack.lastIndexOf(needle, offset - 1);\n\t\tif (idx === -1 || idx + needleLen !== offset) {\n\t\t\tbreak;\n\t\t}\n\t\tif (idx === 0) {\n\t\t\treturn '';\n\t\t}\n\t\toffset = idx;\n\t}\n\n\treturn haystack.substring(0, offset);\n}\n\nexport function convertSimple2RegExpPattern(pattern: string): string {\n\treturn pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\n\nexport function stripWildcards(pattern: string): string {\n\treturn pattern.replace(/\\*/g, '');\n}\n\nexport interface RegExpOptions {\n\tmatchCase?: boolean;\n\twholeWord?: boolean;\n\tmultiline?: boolean;\n\tglobal?: boolean;\n\tunicode?: boolean;\n}\n\nexport function createRegExp(searchString: string, isRegex: boolean, options: RegExpOptions = {}): RegExp {\n\tif (!searchString) {\n\t\tthrow new Error('Cannot create regex from empty string');\n\t}\n\tif (!isRegex) {\n\t\tsearchString = escapeRegExpCharacters(searchString);\n\t}\n\tif (options.wholeWord) {\n\t\tif (!/\\B/.test(searchString.charAt(0))) {\n\t\t\tsearchString = '\\\\b' + searchString;\n\t\t}\n\t\tif (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n\t\t\tsearchString = searchString + '\\\\b';\n\t\t}\n\t}\n\tlet modifiers = '';\n\tif (options.global) {\n\t\tmodifiers += 'g';\n\t}\n\tif (!options.matchCase) {\n\t\tmodifiers += 'i';\n\t}\n\tif (options.multiline) {\n\t\tmodifiers += 'm';\n\t}\n\tif (options.unicode) {\n\t\tmodifiers += 'u';\n\t}\n\n\treturn new RegExp(searchString, modifiers);\n}\n\nexport function regExpLeadsToEndlessLoop(regexp: RegExp): boolean {\n\t// Exit early if it's one of these special cases which are meant to match\n\t// against an empty string\n\tif (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\n\t\treturn false;\n\t}\n\n\t// We check against an empty string. If the regular expression doesn't advance\n\t// (e.g. ends in an endless loop) it will match an empty string.\n\tconst match = regexp.exec('');\n\treturn !!(match && regexp.lastIndex === 0);\n}\n\nexport function regExpContainsBackreference(regexpValue: string): boolean {\n\treturn !!regexpValue.match(/([^\\\\]|^)(\\\\\\\\)*\\\\\\d+/);\n}\n\nexport function regExpFlags(regexp: RegExp): string {\n\treturn (regexp.global ? 'g' : '')\n\t\t+ (regexp.ignoreCase ? 'i' : '')\n\t\t+ (regexp.multiline ? 'm' : '')\n\t\t+ ((regexp as any /* standalone editor compilation */).unicode ? 'u' : '');\n}\n\n/**\n * Returns first index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function firstNonWhitespaceIndex(str: string): number {\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * Returns the leading whitespace of the string.\n * If the string contains only whitespaces, returns entire string\n */\nexport function getLeadingWhitespace(str: string, start: number = 0, end: number = str.length): string {\n\tfor (let i = start; i < end; i++) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn str.substring(start, i);\n\t\t}\n\t}\n\treturn str.substring(start, end);\n}\n\n/**\n * Returns last index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function lastNonWhitespaceIndex(str: string, startIndex: number = str.length - 1): number {\n\tfor (let i = startIndex; i >= 0; i--) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\nexport function compare(a: string, b: string): number {\n\tif (a < b) {\n\t\treturn -1;\n\t} else if (a > b) {\n\t\treturn 1;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\nexport function compareSubstring(a: string, b: string, aStart: number = 0, aEnd: number = a.length, bStart: number = 0, bEnd: number = b.length): number {\n\tfor (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n\t\tlet codeA = a.charCodeAt(aStart);\n\t\tlet codeB = b.charCodeAt(bStart);\n\t\tif (codeA < codeB) {\n\t\t\treturn -1;\n\t\t} else if (codeA > codeB) {\n\t\t\treturn 1;\n\t\t}\n\t}\n\tconst aLen = aEnd - aStart;\n\tconst bLen = bEnd - bStart;\n\tif (aLen < bLen) {\n\t\treturn -1;\n\t} else if (aLen > bLen) {\n\t\treturn 1;\n\t}\n\treturn 0;\n}\n\nexport function compareIgnoreCase(a: string, b: string): number {\n\treturn compareSubstringIgnoreCase(a, b, 0, a.length, 0, b.length);\n}\n\nexport function compareSubstringIgnoreCase(a: string, b: string, aStart: number = 0, aEnd: number = a.length, bStart: number = 0, bEnd: number = b.length): number {\n\n\tfor (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n\n\t\tlet codeA = a.charCodeAt(aStart);\n\t\tlet codeB = b.charCodeAt(bStart);\n\n\t\tif (codeA === codeB) {\n\t\t\t// equal\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst diff = codeA - codeB;\n\t\tif (diff === 32 && isUpperAsciiLetter(codeB)) { //codeB =[65-90] && codeA =[97-122]\n\t\t\tcontinue;\n\n\t\t} else if (diff === -32 && isUpperAsciiLetter(codeA)) {  //codeB =[97-122] && codeA =[65-90]\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (isLowerAsciiLetter(codeA) && isLowerAsciiLetter(codeB)) {\n\t\t\t//\n\t\t\treturn diff;\n\n\t\t} else {\n\t\t\treturn compareSubstring(a.toLowerCase(), b.toLowerCase(), aStart, aEnd, bStart, bEnd);\n\t\t}\n\t}\n\n\tconst aLen = aEnd - aStart;\n\tconst bLen = bEnd - bStart;\n\n\tif (aLen < bLen) {\n\t\treturn -1;\n\t} else if (aLen > bLen) {\n\t\treturn 1;\n\t}\n\n\treturn 0;\n}\n\nexport function isLowerAsciiLetter(code: number): boolean {\n\treturn code >= CharCode.a && code <= CharCode.z;\n}\n\nexport function isUpperAsciiLetter(code: number): boolean {\n\treturn code >= CharCode.A && code <= CharCode.Z;\n}\n\nfunction isAsciiLetter(code: number): boolean {\n\treturn isLowerAsciiLetter(code) || isUpperAsciiLetter(code);\n}\n\nexport function equalsIgnoreCase(a: string, b: string): boolean {\n\treturn a.length === b.length && doEqualsIgnoreCase(a, b);\n}\n\nfunction doEqualsIgnoreCase(a: string, b: string, stopAt = a.length): boolean {\n\tfor (let i = 0; i < stopAt; i++) {\n\t\tconst codeA = a.charCodeAt(i);\n\t\tconst codeB = b.charCodeAt(i);\n\n\t\tif (codeA === codeB) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// a-z A-Z\n\t\tif (isAsciiLetter(codeA) && isAsciiLetter(codeB)) {\n\t\t\tconst diff = Math.abs(codeA - codeB);\n\t\t\tif (diff !== 0 && diff !== 32) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Any other charcode\n\t\telse {\n\t\t\tif (String.fromCharCode(codeA).toLowerCase() !== String.fromCharCode(codeB).toLowerCase()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn true;\n}\n\nexport function startsWithIgnoreCase(str: string, candidate: string): boolean {\n\tconst candidateLength = candidate.length;\n\tif (candidate.length > str.length) {\n\t\treturn false;\n\t}\n\n\treturn doEqualsIgnoreCase(str, candidate, candidateLength);\n}\n\n/**\n * @returns the length of the common prefix of the two strings.\n */\nexport function commonPrefixLength(a: string, b: string): number {\n\n\tlet i: number,\n\t\tlen = Math.min(a.length, b.length);\n\n\tfor (i = 0; i < len; i++) {\n\t\tif (a.charCodeAt(i) !== b.charCodeAt(i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn len;\n}\n\n/**\n * @returns the length of the common suffix of the two strings.\n */\nexport function commonSuffixLength(a: string, b: string): number {\n\n\tlet i: number,\n\t\tlen = Math.min(a.length, b.length);\n\n\tconst aLastIndex = a.length - 1;\n\tconst bLastIndex = b.length - 1;\n\n\tfor (i = 0; i < len; i++) {\n\t\tif (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn len;\n}\n\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isHighSurrogate(charCode: number): boolean {\n\treturn (0xD800 <= charCode && charCode <= 0xDBFF);\n}\n\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isLowSurrogate(charCode: number): boolean {\n\treturn (0xDC00 <= charCode && charCode <= 0xDFFF);\n}\n\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function computeCodePoint(highSurrogate: number, lowSurrogate: number): number {\n\treturn ((highSurrogate - 0xD800) << 10) + (lowSurrogate - 0xDC00) + 0x10000;\n}\n\n/**\n * get the code point that begins at offset `offset`\n */\nexport function getNextCodePoint(str: string, len: number, offset: number): number {\n\tconst charCode = str.charCodeAt(offset);\n\tif (isHighSurrogate(charCode) && offset + 1 < len) {\n\t\tconst nextCharCode = str.charCodeAt(offset + 1);\n\t\tif (isLowSurrogate(nextCharCode)) {\n\t\t\treturn computeCodePoint(charCode, nextCharCode);\n\t\t}\n\t}\n\treturn charCode;\n}\n\n/**\n * get the code point that ends right before offset `offset`\n */\nfunction getPrevCodePoint(str: string, offset: number): number {\n\tconst charCode = str.charCodeAt(offset - 1);\n\tif (isLowSurrogate(charCode) && offset > 1) {\n\t\tconst prevCharCode = str.charCodeAt(offset - 2);\n\t\tif (isHighSurrogate(prevCharCode)) {\n\t\t\treturn computeCodePoint(prevCharCode, charCode);\n\t\t}\n\t}\n\treturn charCode;\n}\n\nexport function nextCharLength(str: string, offset: number): number {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\tconst initialOffset = offset;\n\tconst len = str.length;\n\n\tconst initialCodePoint = getNextCodePoint(str, len, offset);\n\toffset += (initialCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\tlet graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\n\twhile (offset < len) {\n\t\tconst nextCodePoint = getNextCodePoint(str, len, offset);\n\t\tconst nextGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(nextCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(graphemeBreakType, nextGraphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset += (nextCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = nextGraphemeBreakType;\n\t}\n\n\treturn (offset - initialOffset);\n}\n\nexport function prevCharLength(str: string, offset: number): number {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\tconst initialOffset = offset;\n\n\tconst initialCodePoint = getPrevCodePoint(str, offset);\n\toffset -= (initialCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\tlet graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\n\twhile (offset > 0) {\n\t\tconst prevCodePoint = getPrevCodePoint(str, offset);\n\t\tconst prevGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(prevCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(prevGraphemeBreakType, graphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset -= (prevCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = prevGraphemeBreakType;\n\t}\n\n\treturn (initialOffset - offset);\n}\n\nfunction _getCharContainingOffset(str: string, offset: number): [number, number] {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\tconst len = str.length;\n\tconst initialOffset = offset;\n\tconst initialCodePoint = getNextCodePoint(str, len, offset);\n\tconst initialGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\n\toffset += (initialCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\t// extend to the right\n\tlet graphemeBreakType = initialGraphemeBreakType;\n\twhile (offset < len) {\n\t\tconst nextCodePoint = getNextCodePoint(str, len, offset);\n\t\tconst nextGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(nextCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(graphemeBreakType, nextGraphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset += (nextCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = nextGraphemeBreakType;\n\t}\n\tconst endOffset = offset;\n\n\t// extend to the left\n\toffset = initialOffset;\n\tgraphemeBreakType = initialGraphemeBreakType;\n\twhile (offset > 0) {\n\t\tconst prevCodePoint = getPrevCodePoint(str, offset);\n\t\tconst prevGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(prevCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(prevGraphemeBreakType, graphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset -= (prevCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = prevGraphemeBreakType;\n\t}\n\n\treturn [offset, endOffset];\n}\n\nexport function getCharContainingOffset(str: string, offset: number): [number, number] {\n\tif (offset > 0 && isLowSurrogate(str.charCodeAt(offset))) {\n\t\treturn _getCharContainingOffset(str, offset - 1);\n\t}\n\treturn _getCharContainingOffset(str, offset);\n}\n\n/**\n * A manual encoding of `str` to UTF8.\n * Use only in environments which do not offer native conversion methods!\n */\nexport function encodeUTF8(str: string): Uint8Array {\n\tconst strLen = str.length;\n\n\t// See https://en.wikipedia.org/wiki/UTF-8\n\n\t// first loop to establish needed buffer size\n\tlet neededSize = 0;\n\tlet strOffset = 0;\n\twhile (strOffset < strLen) {\n\t\tconst codePoint = getNextCodePoint(str, strLen, strOffset);\n\t\tstrOffset += (codePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\t\tif (codePoint < 0x0080) {\n\t\t\tneededSize += 1;\n\t\t} else if (codePoint < 0x0800) {\n\t\t\tneededSize += 2;\n\t\t} else if (codePoint < 0x10000) {\n\t\t\tneededSize += 3;\n\t\t} else {\n\t\t\tneededSize += 4;\n\t\t}\n\t}\n\n\t// second loop to actually encode\n\tconst arr = new Uint8Array(neededSize);\n\tstrOffset = 0;\n\tlet arrOffset = 0;\n\twhile (strOffset < strLen) {\n\t\tconst codePoint = getNextCodePoint(str, strLen, strOffset);\n\t\tstrOffset += (codePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\t\tif (codePoint < 0x0080) {\n\t\t\tarr[arrOffset++] = codePoint;\n\t\t} else if (codePoint < 0x0800) {\n\t\t\tarr[arrOffset++] = 0b11000000 | ((codePoint & 0b00000000000000000000011111000000) >>> 6);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t} else if (codePoint < 0x10000) {\n\t\t\tarr[arrOffset++] = 0b11100000 | ((codePoint & 0b00000000000000001111000000000000) >>> 12);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t} else {\n\t\t\tarr[arrOffset++] = 0b11110000 | ((codePoint & 0b00000000000111000000000000000000) >>> 18);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000111111000000000000) >>> 12);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t}\n\t}\n\n\treturn arr;\n}\n\n/**\n * A manual decoding of a UTF8 string.\n * Use only in environments which do not offer native conversion methods!\n */\nexport function decodeUTF8(buffer: Uint8Array): string {\n\t// https://en.wikipedia.org/wiki/UTF-8\n\n\tconst len = buffer.byteLength;\n\tconst result: string[] = [];\n\tlet offset = 0;\n\twhile (offset < len) {\n\t\tconst v0 = buffer[offset];\n\t\tlet codePoint: number;\n\t\tif (v0 >= 0b11110000 && offset + 3 < len) {\n\t\t\t// 4 bytes\n\t\t\tcodePoint = (\n\t\t\t\t(((buffer[offset++] & 0b00000111) << 18) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 12) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 6) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 0) >>> 0)\n\t\t\t);\n\t\t} else if (v0 >= 0b11100000 && offset + 2 < len) {\n\t\t\t// 3 bytes\n\t\t\tcodePoint = (\n\t\t\t\t(((buffer[offset++] & 0b00001111) << 12) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 6) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 0) >>> 0)\n\t\t\t);\n\t\t} else if (v0 >= 0b11000000 && offset + 1 < len) {\n\t\t\t// 2 bytes\n\t\t\tcodePoint = (\n\t\t\t\t(((buffer[offset++] & 0b00011111) << 6) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 0) >>> 0)\n\t\t\t);\n\t\t} else {\n\t\t\t// 1 byte\n\t\t\tcodePoint = buffer[offset++];\n\t\t}\n\n\t\tif ((codePoint >= 0 && codePoint <= 0xD7FF) || (codePoint >= 0xE000 && codePoint <= 0xFFFF)) {\n\t\t\t// Basic Multilingual Plane\n\t\t\tresult.push(String.fromCharCode(codePoint));\n\t\t} else if (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t// Supplementary Planes\n\t\t\tconst uPrime = codePoint - 0x10000;\n\t\t\tconst w1 = 0xD800 + ((uPrime & 0b11111111110000000000) >>> 10);\n\t\t\tconst w2 = 0xDC00 + ((uPrime & 0b00000000001111111111) >>> 0);\n\t\t\tresult.push(String.fromCharCode(w1));\n\t\t\tresult.push(String.fromCharCode(w2));\n\t\t} else {\n\t\t\t// illegal code point\n\t\t\tresult.push(String.fromCharCode(0xFFFD));\n\t\t}\n\t}\n\n\treturn result.join('');\n}\n\n/**\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-rtl-test.js\n */\nconst CONTAINS_RTL = /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u08BD\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE33\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDCFF]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD50-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\n\n/**\n * Returns true if `str` contains any Unicode character that is classified as \"R\" or \"AL\".\n */\nexport function containsRTL(str: string): boolean {\n\treturn CONTAINS_RTL.test(str);\n}\n\n/**\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-emoji-test.js\n */\nconst CONTAINS_EMOJI = /(?:[\\u231A\\u231B\\u23F0\\u23F3\\u2600-\\u27BF\\u2B50\\u2B55]|\\uD83C[\\uDDE6-\\uDDFF\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDE4F\\uDE80-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD00-\\uDDFF\\uDE70-\\uDE73\\uDE78-\\uDE82\\uDE90-\\uDE95])/;\n\nexport function containsEmoji(str: string): boolean {\n\treturn CONTAINS_EMOJI.test(str);\n}\n\nconst IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\n/**\n * Returns true if `str` contains only basic ASCII characters in the range 32 - 126 (including 32 and 126) or \\n, \\r, \\t\n */\nexport function isBasicASCII(str: string): boolean {\n\treturn IS_BASIC_ASCII.test(str);\n}\n\nexport const UNUSUAL_LINE_TERMINATORS = /[\\u2028\\u2029]/; // LINE SEPARATOR (LS) or PARAGRAPH SEPARATOR (PS)\n/**\n * Returns true if `str` contains unusual line terminators, like LS or PS\n */\nexport function containsUnusualLineTerminators(str: string): boolean {\n\treturn UNUSUAL_LINE_TERMINATORS.test(str);\n}\n\nexport function containsFullWidthCharacter(str: string): boolean {\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tif (isFullWidthCharacter(str.charCodeAt(i))) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nexport function isFullWidthCharacter(charCode: number): boolean {\n\t// Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\n\t// http://jrgraphix.net/research/unicode_blocks.php\n\t//          2E80 — 2EFF   CJK Radicals Supplement\n\t//          2F00 — 2FDF   Kangxi Radicals\n\t//          2FF0 — 2FFF   Ideographic Description Characters\n\t//          3000 — 303F   CJK Symbols and Punctuation\n\t//          3040 — 309F   Hiragana\n\t//          30A0 — 30FF   Katakana\n\t//          3100 — 312F   Bopomofo\n\t//          3130 — 318F   Hangul Compatibility Jamo\n\t//          3190 — 319F   Kanbun\n\t//          31A0 — 31BF   Bopomofo Extended\n\t//          31F0 — 31FF   Katakana Phonetic Extensions\n\t//          3200 — 32FF   Enclosed CJK Letters and Months\n\t//          3300 — 33FF   CJK Compatibility\n\t//          3400 — 4DBF   CJK Unified Ideographs Extension A\n\t//          4DC0 — 4DFF   Yijing Hexagram Symbols\n\t//          4E00 — 9FFF   CJK Unified Ideographs\n\t//          A000 — A48F   Yi Syllables\n\t//          A490 — A4CF   Yi Radicals\n\t//          AC00 — D7AF   Hangul Syllables\n\t// [IGNORE] D800 — DB7F   High Surrogates\n\t// [IGNORE] DB80 — DBFF   High Private Use Surrogates\n\t// [IGNORE] DC00 — DFFF   Low Surrogates\n\t// [IGNORE] E000 — F8FF   Private Use Area\n\t//          F900 — FAFF   CJK Compatibility Ideographs\n\t// [IGNORE] FB00 — FB4F   Alphabetic Presentation Forms\n\t// [IGNORE] FB50 — FDFF   Arabic Presentation Forms-A\n\t// [IGNORE] FE00 — FE0F   Variation Selectors\n\t// [IGNORE] FE20 — FE2F   Combining Half Marks\n\t// [IGNORE] FE30 — FE4F   CJK Compatibility Forms\n\t// [IGNORE] FE50 — FE6F   Small Form Variants\n\t// [IGNORE] FE70 — FEFF   Arabic Presentation Forms-B\n\t//          FF00 — FFEF   Halfwidth and Fullwidth Forms\n\t//               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\n\t//               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\n\t// [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\n\t// [IGNORE] FFF0 — FFFF   Specials\n\tcharCode = +charCode; // @perf\n\treturn (\n\t\t(charCode >= 0x2E80 && charCode <= 0xD7AF)\n\t\t|| (charCode >= 0xF900 && charCode <= 0xFAFF)\n\t\t|| (charCode >= 0xFF01 && charCode <= 0xFF5E)\n\t);\n}\n\n/**\n * A fast function (therefore imprecise) to check if code points are emojis.\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-emoji-test.js\n */\nexport function isEmojiImprecise(x: number): boolean {\n\treturn (\n\t\t(x >= 0x1F1E6 && x <= 0x1F1FF) || (x >= 9728 && x <= 10175) || (x >= 127744 && x <= 128591)\n\t\t|| (x >= 128640 && x <= 128764) || (x >= 128992 && x <= 129003) || (x >= 129280 && x <= 129535)\n\t\t|| (x >= 129648 && x <= 129651) || (x >= 129656 && x <= 129666) || (x >= 129680 && x <= 129685)\n\t);\n}\n\n/**\n * Given a string and a max length returns a shorted version. Shorting\n * happens at favorable positions - such as whitespace or punctuation characters.\n */\nexport function lcut(text: string, n: number) {\n\tif (text.length < n) {\n\t\treturn text;\n\t}\n\n\tconst re = /\\b/g;\n\tlet i = 0;\n\twhile (re.test(text)) {\n\t\tif (text.length - re.lastIndex < n) {\n\t\t\tbreak;\n\t\t}\n\n\t\ti = re.lastIndex;\n\t\tre.lastIndex += 1;\n\t}\n\n\treturn text.substring(i).replace(/^\\s/, '');\n}\n\n// Escape codes\n// http://en.wikipedia.org/wiki/ANSI_escape_code\nconst EL = /\\x1B\\x5B[12]?K/g; // Erase in line\nconst COLOR_START = /\\x1b\\[\\d+m/g; // Color\nconst COLOR_END = /\\x1b\\[0?m/g; // Color\n\nexport function removeAnsiEscapeCodes(str: string): string {\n\tif (str) {\n\t\tstr = str.replace(EL, '');\n\t\tstr = str.replace(COLOR_START, '');\n\t\tstr = str.replace(COLOR_END, '');\n\t}\n\n\treturn str;\n}\n\n// -- UTF-8 BOM\n\nexport const UTF8_BOM_CHARACTER = String.fromCharCode(CharCode.UTF8_BOM);\n\nexport function startsWithUTF8BOM(str: string): boolean {\n\treturn !!(str && str.length > 0 && str.charCodeAt(0) === CharCode.UTF8_BOM);\n}\n\nexport function stripUTF8BOM(str: string): string {\n\treturn startsWithUTF8BOM(str) ? str.substr(1) : str;\n}\n\n/**\n * Checks if the characters of the provided query string are included in the\n * target string. The characters do not have to be contiguous within the string.\n */\nexport function fuzzyContains(target: string, query: string): boolean {\n\tif (!target || !query) {\n\t\treturn false; // return early if target or query are undefined\n\t}\n\n\tif (target.length < query.length) {\n\t\treturn false; // impossible for query to be contained in target\n\t}\n\n\tconst queryLen = query.length;\n\tconst targetLower = target.toLowerCase();\n\n\tlet index = 0;\n\tlet lastIndexOf = -1;\n\twhile (index < queryLen) {\n\t\tconst indexOf = targetLower.indexOf(query[index], lastIndexOf + 1);\n\t\tif (indexOf < 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlastIndexOf = indexOf;\n\n\t\tindex++;\n\t}\n\n\treturn true;\n}\n\nexport function containsUppercaseCharacter(target: string, ignoreEscapedChars = false): boolean {\n\tif (!target) {\n\t\treturn false;\n\t}\n\n\tif (ignoreEscapedChars) {\n\t\ttarget = target.replace(/\\\\./g, '');\n\t}\n\n\treturn target.toLowerCase() !== target;\n}\n\nexport function uppercaseFirstLetter(str: string): string {\n\treturn str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nexport function getNLines(str: string, n = 1): string {\n\tif (n === 0) {\n\t\treturn '';\n\t}\n\n\tlet idx = -1;\n\tdo {\n\t\tidx = str.indexOf('\\n', idx + 1);\n\t\tn--;\n\t} while (n > 0 && idx >= 0);\n\n\treturn idx >= 0 ?\n\t\tstr.substr(0, idx) :\n\t\tstr;\n}\n\n/**\n * Produces 'a'-'z', followed by 'A'-'Z'... followed by 'a'-'z', etc.\n */\nexport function singleLetterHash(n: number): string {\n\tconst LETTERS_CNT = (CharCode.Z - CharCode.A + 1);\n\n\tn = n % (2 * LETTERS_CNT);\n\n\tif (n < LETTERS_CNT) {\n\t\treturn String.fromCharCode(CharCode.a + n);\n\t}\n\n\treturn String.fromCharCode(CharCode.A + n - LETTERS_CNT);\n}\n\n//#region Unicode Grapheme Break\n\nexport function getGraphemeBreakType(codePoint: number): GraphemeBreakType {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\treturn graphemeBreakTree.getGraphemeBreakType(codePoint);\n}\n\nexport function breakBetweenGraphemeBreakType(breakTypeA: GraphemeBreakType, breakTypeB: GraphemeBreakType): boolean {\n\t// http://www.unicode.org/reports/tr29/#Grapheme_Cluster_Boundary_Rules\n\n\t// !!! Let's make the common case a bit faster\n\tif (breakTypeA === GraphemeBreakType.Other) {\n\t\t// see https://www.unicode.org/Public/13.0.0/ucd/auxiliary/GraphemeBreakTest-13.0.0d10.html#table\n\t\treturn (breakTypeB !== GraphemeBreakType.Extend && breakTypeB !== GraphemeBreakType.SpacingMark);\n\t}\n\n\t// Do not break between a CR and LF. Otherwise, break before and after controls.\n\t// GB3                                        CR × LF\n\t// GB4                       (Control | CR | LF) ÷\n\t// GB5                                           ÷ (Control | CR | LF)\n\tif (breakTypeA === GraphemeBreakType.CR) {\n\t\tif (breakTypeB === GraphemeBreakType.LF) {\n\t\t\treturn false; // GB3\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.Control || breakTypeA === GraphemeBreakType.CR || breakTypeA === GraphemeBreakType.LF) {\n\t\treturn true; // GB4\n\t}\n\tif (breakTypeB === GraphemeBreakType.Control || breakTypeB === GraphemeBreakType.CR || breakTypeB === GraphemeBreakType.LF) {\n\t\treturn true; // GB5\n\t}\n\n\t// Do not break Hangul syllable sequences.\n\t// GB6                                         L × (L | V | LV | LVT)\n\t// GB7                                  (LV | V) × (V | T)\n\t// GB8                                 (LVT | T) × T\n\tif (breakTypeA === GraphemeBreakType.L) {\n\t\tif (breakTypeB === GraphemeBreakType.L || breakTypeB === GraphemeBreakType.V || breakTypeB === GraphemeBreakType.LV || breakTypeB === GraphemeBreakType.LVT) {\n\t\t\treturn false; // GB6\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.LV || breakTypeA === GraphemeBreakType.V) {\n\t\tif (breakTypeB === GraphemeBreakType.V || breakTypeB === GraphemeBreakType.T) {\n\t\t\treturn false; // GB7\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.LVT || breakTypeA === GraphemeBreakType.T) {\n\t\tif (breakTypeB === GraphemeBreakType.T) {\n\t\t\treturn false; // GB8\n\t\t}\n\t}\n\n\t// Do not break before extending characters or ZWJ.\n\t// GB9                                           × (Extend | ZWJ)\n\tif (breakTypeB === GraphemeBreakType.Extend || breakTypeB === GraphemeBreakType.ZWJ) {\n\t\treturn false; // GB9\n\t}\n\n\t// The GB9a and GB9b rules only apply to extended grapheme clusters:\n\t// Do not break before SpacingMarks, or after Prepend characters.\n\t// GB9a                                          × SpacingMark\n\t// GB9b                                  Prepend ×\n\tif (breakTypeB === GraphemeBreakType.SpacingMark) {\n\t\treturn false; // GB9a\n\t}\n\tif (breakTypeA === GraphemeBreakType.Prepend) {\n\t\treturn false; // GB9b\n\t}\n\n\t// Do not break within emoji modifier sequences or emoji zwj sequences.\n\t// GB11    \\p{Extended_Pictographic} Extend* ZWJ × \\p{Extended_Pictographic}\n\tif (breakTypeA === GraphemeBreakType.ZWJ && breakTypeB === GraphemeBreakType.Extended_Pictographic) {\n\t\t// Note: we are not implementing the rule entirely here to avoid introducing states\n\t\treturn false; // GB11\n\t}\n\n\t// GB12                          sot (RI RI)* RI × RI\n\t// GB13                        [^RI] (RI RI)* RI × RI\n\tif (breakTypeA === GraphemeBreakType.Regional_Indicator && breakTypeB === GraphemeBreakType.Regional_Indicator) {\n\t\t// Note: we are not implementing the rule entirely here to avoid introducing states\n\t\treturn false; // GB12 & GB13\n\t}\n\n\t// GB999                                     Any ÷ Any\n\treturn true;\n}\n\nexport const enum GraphemeBreakType {\n\tOther = 0,\n\tPrepend = 1,\n\tCR = 2,\n\tLF = 3,\n\tControl = 4,\n\tExtend = 5,\n\tRegional_Indicator = 6,\n\tSpacingMark = 7,\n\tL = 8,\n\tV = 9,\n\tT = 10,\n\tLV = 11,\n\tLVT = 12,\n\tZWJ = 13,\n\tExtended_Pictographic = 14\n}\n\nclass GraphemeBreakTree {\n\n\tprivate static _INSTANCE: GraphemeBreakTree | null = null;\n\tpublic static getInstance(): GraphemeBreakTree {\n\t\tif (!GraphemeBreakTree._INSTANCE) {\n\t\t\tGraphemeBreakTree._INSTANCE = new GraphemeBreakTree();\n\t\t}\n\t\treturn GraphemeBreakTree._INSTANCE;\n\t}\n\n\tprivate readonly _data: number[];\n\n\tconstructor() {\n\t\tthis._data = getGraphemeBreakRawData();\n\t}\n\n\tpublic getGraphemeBreakType(codePoint: number): GraphemeBreakType {\n\t\t// !!! Let's make 7bit ASCII a bit faster: 0..31\n\t\tif (codePoint < 32) {\n\t\t\tif (codePoint === CharCode.LineFeed) {\n\t\t\t\treturn GraphemeBreakType.LF;\n\t\t\t}\n\t\t\tif (codePoint === CharCode.CarriageReturn) {\n\t\t\t\treturn GraphemeBreakType.CR;\n\t\t\t}\n\t\t\treturn GraphemeBreakType.Control;\n\t\t}\n\t\t// !!! Let's make 7bit ASCII a bit faster: 32..126\n\t\tif (codePoint < 127) {\n\t\t\treturn GraphemeBreakType.Other;\n\t\t}\n\n\t\tconst data = this._data;\n\t\tconst nodeCount = data.length / 3;\n\t\tlet nodeIndex = 1;\n\t\twhile (nodeIndex <= nodeCount) {\n\t\t\tif (codePoint < data[3 * nodeIndex]) {\n\t\t\t\t// go left\n\t\t\t\tnodeIndex = 2 * nodeIndex;\n\t\t\t} else if (codePoint > data[3 * nodeIndex + 1]) {\n\t\t\t\t// go right\n\t\t\t\tnodeIndex = 2 * nodeIndex + 1;\n\t\t\t} else {\n\t\t\t\t// hit\n\t\t\t\treturn data[3 * nodeIndex + 2];\n\t\t\t}\n\t\t}\n\n\t\treturn GraphemeBreakType.Other;\n\t}\n}\n\nfunction getGraphemeBreakRawData(): number[] {\n\t// generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-grapheme-break.js\n\treturn JSON.parse('[0,0,0,51592,51592,11,44424,44424,11,72251,72254,5,7150,7150,7,48008,48008,11,55176,55176,11,128420,128420,14,3276,3277,5,9979,9980,14,46216,46216,11,49800,49800,11,53384,53384,11,70726,70726,5,122915,122916,5,129320,129327,14,2558,2558,5,5906,5908,5,9762,9763,14,43360,43388,8,45320,45320,11,47112,47112,11,48904,48904,11,50696,50696,11,52488,52488,11,54280,54280,11,70082,70083,1,71350,71350,7,73111,73111,5,127892,127893,14,128726,128727,14,129473,129474,14,2027,2035,5,2901,2902,5,3784,3789,5,6754,6754,5,8418,8420,5,9877,9877,14,11088,11088,14,44008,44008,5,44872,44872,11,45768,45768,11,46664,46664,11,47560,47560,11,48456,48456,11,49352,49352,11,50248,50248,11,51144,51144,11,52040,52040,11,52936,52936,11,53832,53832,11,54728,54728,11,69811,69814,5,70459,70460,5,71096,71099,7,71998,71998,5,72874,72880,5,119149,119149,7,127374,127374,14,128335,128335,14,128482,128482,14,128765,128767,14,129399,129400,14,129680,129685,14,1476,1477,5,2377,2380,7,2759,2760,5,3137,3140,7,3458,3459,7,4153,4154,5,6432,6434,5,6978,6978,5,7675,7679,5,9723,9726,14,9823,9823,14,9919,9923,14,10035,10036,14,42736,42737,5,43596,43596,5,44200,44200,11,44648,44648,11,45096,45096,11,45544,45544,11,45992,45992,11,46440,46440,11,46888,46888,11,47336,47336,11,47784,47784,11,48232,48232,11,48680,48680,11,49128,49128,11,49576,49576,11,50024,50024,11,50472,50472,11,50920,50920,11,51368,51368,11,51816,51816,11,52264,52264,11,52712,52712,11,53160,53160,11,53608,53608,11,54056,54056,11,54504,54504,11,54952,54952,11,68108,68111,5,69933,69940,5,70197,70197,7,70498,70499,7,70845,70845,5,71229,71229,5,71727,71735,5,72154,72155,5,72344,72345,5,73023,73029,5,94095,94098,5,121403,121452,5,126981,127182,14,127538,127546,14,127990,127990,14,128391,128391,14,128445,128449,14,128500,128505,14,128752,128752,14,129160,129167,14,129356,129356,14,129432,129442,14,129648,129651,14,129751,131069,14,173,173,4,1757,1757,1,2274,2274,1,2494,2494,5,2641,2641,5,2876,2876,5,3014,3016,7,3262,3262,7,3393,3396,5,3570,3571,7,3968,3972,5,4228,4228,7,6086,6086,5,6679,6680,5,6912,6915,5,7080,7081,5,7380,7392,5,8252,8252,14,9096,9096,14,9748,9749,14,9784,9786,14,9833,9850,14,9890,9894,14,9938,9938,14,9999,9999,14,10085,10087,14,12349,12349,14,43136,43137,7,43454,43456,7,43755,43755,7,44088,44088,11,44312,44312,11,44536,44536,11,44760,44760,11,44984,44984,11,45208,45208,11,45432,45432,11,45656,45656,11,45880,45880,11,46104,46104,11,46328,46328,11,46552,46552,11,46776,46776,11,47000,47000,11,47224,47224,11,47448,47448,11,47672,47672,11,47896,47896,11,48120,48120,11,48344,48344,11,48568,48568,11,48792,48792,11,49016,49016,11,49240,49240,11,49464,49464,11,49688,49688,11,49912,49912,11,50136,50136,11,50360,50360,11,50584,50584,11,50808,50808,11,51032,51032,11,51256,51256,11,51480,51480,11,51704,51704,11,51928,51928,11,52152,52152,11,52376,52376,11,52600,52600,11,52824,52824,11,53048,53048,11,53272,53272,11,53496,53496,11,53720,53720,11,53944,53944,11,54168,54168,11,54392,54392,11,54616,54616,11,54840,54840,11,55064,55064,11,65438,65439,5,69633,69633,5,69837,69837,1,70018,70018,7,70188,70190,7,70368,70370,7,70465,70468,7,70712,70719,5,70835,70840,5,70850,70851,5,71132,71133,5,71340,71340,7,71458,71461,5,71985,71989,7,72002,72002,7,72193,72202,5,72281,72283,5,72766,72766,7,72885,72886,5,73104,73105,5,92912,92916,5,113824,113827,4,119173,119179,5,121505,121519,5,125136,125142,5,127279,127279,14,127489,127490,14,127570,127743,14,127900,127901,14,128254,128254,14,128369,128370,14,128400,128400,14,128425,128432,14,128468,128475,14,128489,128494,14,128715,128720,14,128745,128745,14,128759,128760,14,129004,129023,14,129296,129304,14,129340,129342,14,129388,129392,14,129404,129407,14,129454,129455,14,129485,129487,14,129659,129663,14,129719,129727,14,917536,917631,5,13,13,2,1160,1161,5,1564,1564,4,1807,1807,1,2085,2087,5,2363,2363,7,2402,2403,5,2507,2508,7,2622,2624,7,2691,2691,7,2786,2787,5,2881,2884,5,3006,3006,5,3072,3072,5,3170,3171,5,3267,3268,7,3330,3331,7,3406,3406,1,3538,3540,5,3655,3662,5,3897,3897,5,4038,4038,5,4184,4185,5,4352,4447,8,6068,6069,5,6155,6157,5,6448,6449,7,6742,6742,5,6783,6783,5,6966,6970,5,7042,7042,7,7143,7143,7,7212,7219,5,7412,7412,5,8206,8207,4,8294,8303,4,8596,8601,14,9410,9410,14,9742,9742,14,9757,9757,14,9770,9770,14,9794,9794,14,9828,9828,14,9855,9855,14,9882,9882,14,9900,9903,14,9929,9933,14,9963,9967,14,9987,9988,14,10006,10006,14,10062,10062,14,10175,10175,14,11744,11775,5,42607,42607,5,43043,43044,7,43263,43263,5,43444,43445,7,43569,43570,5,43698,43700,5,43766,43766,5,44032,44032,11,44144,44144,11,44256,44256,11,44368,44368,11,44480,44480,11,44592,44592,11,44704,44704,11,44816,44816,11,44928,44928,11,45040,45040,11,45152,45152,11,45264,45264,11,45376,45376,11,45488,45488,11,45600,45600,11,45712,45712,11,45824,45824,11,45936,45936,11,46048,46048,11,46160,46160,11,46272,46272,11,46384,46384,11,46496,46496,11,46608,46608,11,46720,46720,11,46832,46832,11,46944,46944,11,47056,47056,11,47168,47168,11,47280,47280,11,47392,47392,11,47504,47504,11,47616,47616,11,47728,47728,11,47840,47840,11,47952,47952,11,48064,48064,11,48176,48176,11,48288,48288,11,48400,48400,11,48512,48512,11,48624,48624,11,48736,48736,11,48848,48848,11,48960,48960,11,49072,49072,11,49184,49184,11,49296,49296,11,49408,49408,11,49520,49520,11,49632,49632,11,49744,49744,11,49856,49856,11,49968,49968,11,50080,50080,11,50192,50192,11,50304,50304,11,50416,50416,11,50528,50528,11,50640,50640,11,50752,50752,11,50864,50864,11,50976,50976,11,51088,51088,11,51200,51200,11,51312,51312,11,51424,51424,11,51536,51536,11,51648,51648,11,51760,51760,11,51872,51872,11,51984,51984,11,52096,52096,11,52208,52208,11,52320,52320,11,52432,52432,11,52544,52544,11,52656,52656,11,52768,52768,11,52880,52880,11,52992,52992,11,53104,53104,11,53216,53216,11,53328,53328,11,53440,53440,11,53552,53552,11,53664,53664,11,53776,53776,11,53888,53888,11,54000,54000,11,54112,54112,11,54224,54224,11,54336,54336,11,54448,54448,11,54560,54560,11,54672,54672,11,54784,54784,11,54896,54896,11,55008,55008,11,55120,55120,11,64286,64286,5,66272,66272,5,68900,68903,5,69762,69762,7,69817,69818,5,69927,69931,5,70003,70003,5,70070,70078,5,70094,70094,7,70194,70195,7,70206,70206,5,70400,70401,5,70463,70463,7,70475,70477,7,70512,70516,5,70722,70724,5,70832,70832,5,70842,70842,5,70847,70848,5,71088,71089,7,71102,71102,7,71219,71226,5,71231,71232,5,71342,71343,7,71453,71455,5,71463,71467,5,71737,71738,5,71995,71996,5,72000,72000,7,72145,72147,7,72160,72160,5,72249,72249,7,72273,72278,5,72330,72342,5,72752,72758,5,72850,72871,5,72882,72883,5,73018,73018,5,73031,73031,5,73109,73109,5,73461,73462,7,94031,94031,5,94192,94193,7,119142,119142,7,119155,119162,4,119362,119364,5,121476,121476,5,122888,122904,5,123184,123190,5,126976,126979,14,127184,127231,14,127344,127345,14,127405,127461,14,127514,127514,14,127561,127567,14,127778,127779,14,127896,127896,14,127985,127986,14,127995,127999,5,128326,128328,14,128360,128366,14,128378,128378,14,128394,128397,14,128405,128406,14,128422,128423,14,128435,128443,14,128453,128464,14,128479,128480,14,128484,128487,14,128496,128498,14,128640,128709,14,128723,128724,14,128736,128741,14,128747,128748,14,128755,128755,14,128762,128762,14,128981,128991,14,129096,129103,14,129292,129292,14,129311,129311,14,129329,129330,14,129344,129349,14,129360,129374,14,129394,129394,14,129402,129402,14,129413,129425,14,129445,129450,14,129466,129471,14,129483,129483,14,129511,129535,14,129653,129655,14,129667,129670,14,129705,129711,14,129731,129743,14,917505,917505,4,917760,917999,5,10,10,3,127,159,4,768,879,5,1471,1471,5,1536,1541,1,1648,1648,5,1767,1768,5,1840,1866,5,2070,2073,5,2137,2139,5,2307,2307,7,2366,2368,7,2382,2383,7,2434,2435,7,2497,2500,5,2519,2519,5,2563,2563,7,2631,2632,5,2677,2677,5,2750,2752,7,2763,2764,7,2817,2817,5,2879,2879,5,2891,2892,7,2914,2915,5,3008,3008,5,3021,3021,5,3076,3076,5,3146,3149,5,3202,3203,7,3264,3265,7,3271,3272,7,3298,3299,5,3390,3390,5,3402,3404,7,3426,3427,5,3535,3535,5,3544,3550,7,3635,3635,7,3763,3763,7,3893,3893,5,3953,3966,5,3981,3991,5,4145,4145,7,4157,4158,5,4209,4212,5,4237,4237,5,4520,4607,10,5970,5971,5,6071,6077,5,6089,6099,5,6277,6278,5,6439,6440,5,6451,6456,7,6683,6683,5,6744,6750,5,6765,6770,7,6846,6846,5,6964,6964,5,6972,6972,5,7019,7027,5,7074,7077,5,7083,7085,5,7146,7148,7,7154,7155,7,7222,7223,5,7394,7400,5,7416,7417,5,8204,8204,5,8233,8233,4,8288,8292,4,8413,8416,5,8482,8482,14,8986,8987,14,9193,9203,14,9654,9654,14,9733,9733,14,9745,9745,14,9752,9752,14,9760,9760,14,9766,9766,14,9774,9775,14,9792,9792,14,9800,9811,14,9825,9826,14,9831,9831,14,9852,9853,14,9872,9873,14,9880,9880,14,9885,9887,14,9896,9897,14,9906,9916,14,9926,9927,14,9936,9936,14,9941,9960,14,9974,9974,14,9982,9985,14,9992,9997,14,10002,10002,14,10017,10017,14,10055,10055,14,10071,10071,14,10145,10145,14,11013,11015,14,11503,11505,5,12334,12335,5,12951,12951,14,42612,42621,5,43014,43014,5,43047,43047,7,43204,43205,5,43335,43345,5,43395,43395,7,43450,43451,7,43561,43566,5,43573,43574,5,43644,43644,5,43710,43711,5,43758,43759,7,44005,44005,5,44012,44012,7,44060,44060,11,44116,44116,11,44172,44172,11,44228,44228,11,44284,44284,11,44340,44340,11,44396,44396,11,44452,44452,11,44508,44508,11,44564,44564,11,44620,44620,11,44676,44676,11,44732,44732,11,44788,44788,11,44844,44844,11,44900,44900,11,44956,44956,11,45012,45012,11,45068,45068,11,45124,45124,11,45180,45180,11,45236,45236,11,45292,45292,11,45348,45348,11,45404,45404,11,45460,45460,11,45516,45516,11,45572,45572,11,45628,45628,11,45684,45684,11,45740,45740,11,45796,45796,11,45852,45852,11,45908,45908,11,45964,45964,11,46020,46020,11,46076,46076,11,46132,46132,11,46188,46188,11,46244,46244,11,46300,46300,11,46356,46356,11,46412,46412,11,46468,46468,11,46524,46524,11,46580,46580,11,46636,46636,11,46692,46692,11,46748,46748,11,46804,46804,11,46860,46860,11,46916,46916,11,46972,46972,11,47028,47028,11,47084,47084,11,47140,47140,11,47196,47196,11,47252,47252,11,47308,47308,11,47364,47364,11,47420,47420,11,47476,47476,11,47532,47532,11,47588,47588,11,47644,47644,11,47700,47700,11,47756,47756,11,47812,47812,11,47868,47868,11,47924,47924,11,47980,47980,11,48036,48036,11,48092,48092,11,48148,48148,11,48204,48204,11,48260,48260,11,48316,48316,11,48372,48372,11,48428,48428,11,48484,48484,11,48540,48540,11,48596,48596,11,48652,48652,11,48708,48708,11,48764,48764,11,48820,48820,11,48876,48876,11,48932,48932,11,48988,48988,11,49044,49044,11,49100,49100,11,49156,49156,11,49212,49212,11,49268,49268,11,49324,49324,11,49380,49380,11,49436,49436,11,49492,49492,11,49548,49548,11,49604,49604,11,49660,49660,11,49716,49716,11,49772,49772,11,49828,49828,11,49884,49884,11,49940,49940,11,49996,49996,11,50052,50052,11,50108,50108,11,50164,50164,11,50220,50220,11,50276,50276,11,50332,50332,11,50388,50388,11,50444,50444,11,50500,50500,11,50556,50556,11,50612,50612,11,50668,50668,11,50724,50724,11,50780,50780,11,50836,50836,11,50892,50892,11,50948,50948,11,51004,51004,11,51060,51060,11,51116,51116,11,51172,51172,11,51228,51228,11,51284,51284,11,51340,51340,11,51396,51396,11,51452,51452,11,51508,51508,11,51564,51564,11,51620,51620,11,51676,51676,11,51732,51732,11,51788,51788,11,51844,51844,11,51900,51900,11,51956,51956,11,52012,52012,11,52068,52068,11,52124,52124,11,52180,52180,11,52236,52236,11,52292,52292,11,52348,52348,11,52404,52404,11,52460,52460,11,52516,52516,11,52572,52572,11,52628,52628,11,52684,52684,11,52740,52740,11,52796,52796,11,52852,52852,11,52908,52908,11,52964,52964,11,53020,53020,11,53076,53076,11,53132,53132,11,53188,53188,11,53244,53244,11,53300,53300,11,53356,53356,11,53412,53412,11,53468,53468,11,53524,53524,11,53580,53580,11,53636,53636,11,53692,53692,11,53748,53748,11,53804,53804,11,53860,53860,11,53916,53916,11,53972,53972,11,54028,54028,11,54084,54084,11,54140,54140,11,54196,54196,11,54252,54252,11,54308,54308,11,54364,54364,11,54420,54420,11,54476,54476,11,54532,54532,11,54588,54588,11,54644,54644,11,54700,54700,11,54756,54756,11,54812,54812,11,54868,54868,11,54924,54924,11,54980,54980,11,55036,55036,11,55092,55092,11,55148,55148,11,55216,55238,9,65056,65071,5,65529,65531,4,68097,68099,5,68159,68159,5,69446,69456,5,69688,69702,5,69808,69810,7,69815,69816,7,69821,69821,1,69888,69890,5,69932,69932,7,69957,69958,7,70016,70017,5,70067,70069,7,70079,70080,7,70089,70092,5,70095,70095,5,70191,70193,5,70196,70196,5,70198,70199,5,70367,70367,5,70371,70378,5,70402,70403,7,70462,70462,5,70464,70464,5,70471,70472,7,70487,70487,5,70502,70508,5,70709,70711,7,70720,70721,7,70725,70725,7,70750,70750,5,70833,70834,7,70841,70841,7,70843,70844,7,70846,70846,7,70849,70849,7,71087,71087,5,71090,71093,5,71100,71101,5,71103,71104,5,71216,71218,7,71227,71228,7,71230,71230,7,71339,71339,5,71341,71341,5,71344,71349,5,71351,71351,5,71456,71457,7,71462,71462,7,71724,71726,7,71736,71736,7,71984,71984,5,71991,71992,7,71997,71997,7,71999,71999,1,72001,72001,1,72003,72003,5,72148,72151,5,72156,72159,7,72164,72164,7,72243,72248,5,72250,72250,1,72263,72263,5,72279,72280,7,72324,72329,1,72343,72343,7,72751,72751,7,72760,72765,5,72767,72767,5,72873,72873,7,72881,72881,7,72884,72884,7,73009,73014,5,73020,73021,5,73030,73030,1,73098,73102,7,73107,73108,7,73110,73110,7,73459,73460,5,78896,78904,4,92976,92982,5,94033,94087,7,94180,94180,5,113821,113822,5,119141,119141,5,119143,119145,5,119150,119154,5,119163,119170,5,119210,119213,5,121344,121398,5,121461,121461,5,121499,121503,5,122880,122886,5,122907,122913,5,122918,122922,5,123628,123631,5,125252,125258,5,126980,126980,14,127183,127183,14,127245,127247,14,127340,127343,14,127358,127359,14,127377,127386,14,127462,127487,6,127491,127503,14,127535,127535,14,127548,127551,14,127568,127569,14,127744,127777,14,127780,127891,14,127894,127895,14,127897,127899,14,127902,127984,14,127987,127989,14,127991,127994,14,128000,128253,14,128255,128317,14,128329,128334,14,128336,128359,14,128367,128368,14,128371,128377,14,128379,128390,14,128392,128393,14,128398,128399,14,128401,128404,14,128407,128419,14,128421,128421,14,128424,128424,14,128433,128434,14,128444,128444,14,128450,128452,14,128465,128467,14,128476,128478,14,128481,128481,14,128483,128483,14,128488,128488,14,128495,128495,14,128499,128499,14,128506,128591,14,128710,128714,14,128721,128722,14,128725,128725,14,128728,128735,14,128742,128744,14,128746,128746,14,128749,128751,14,128753,128754,14,128756,128758,14,128761,128761,14,128763,128764,14,128884,128895,14,128992,129003,14,129036,129039,14,129114,129119,14,129198,129279,14,129293,129295,14,129305,129310,14,129312,129319,14,129328,129328,14,129331,129338,14,129343,129343,14,129351,129355,14,129357,129359,14,129375,129387,14,129393,129393,14,129395,129398,14,129401,129401,14,129403,129403,14,129408,129412,14,129426,129431,14,129443,129444,14,129451,129453,14,129456,129465,14,129472,129472,14,129475,129482,14,129484,129484,14,129488,129510,14,129536,129647,14,129652,129652,14,129656,129658,14,129664,129666,14,129671,129679,14,129686,129704,14,129712,129718,14,129728,129730,14,129744,129750,14,917504,917504,4,917506,917535,4,917632,917759,4,918000,921599,4,0,9,4,11,12,4,14,31,4,169,169,14,174,174,14,1155,1159,5,1425,1469,5,1473,1474,5,1479,1479,5,1552,1562,5,1611,1631,5,1750,1756,5,1759,1764,5,1770,1773,5,1809,1809,5,1958,1968,5,2045,2045,5,2075,2083,5,2089,2093,5,2259,2273,5,2275,2306,5,2362,2362,5,2364,2364,5,2369,2376,5,2381,2381,5,2385,2391,5,2433,2433,5,2492,2492,5,2495,2496,7,2503,2504,7,2509,2509,5,2530,2531,5,2561,2562,5,2620,2620,5,2625,2626,5,2635,2637,5,2672,2673,5,2689,2690,5,2748,2748,5,2753,2757,5,2761,2761,7,2765,2765,5,2810,2815,5,2818,2819,7,2878,2878,5,2880,2880,7,2887,2888,7,2893,2893,5,2903,2903,5,2946,2946,5,3007,3007,7,3009,3010,7,3018,3020,7,3031,3031,5,3073,3075,7,3134,3136,5,3142,3144,5,3157,3158,5,3201,3201,5,3260,3260,5,3263,3263,5,3266,3266,5,3270,3270,5,3274,3275,7,3285,3286,5,3328,3329,5,3387,3388,5,3391,3392,7,3398,3400,7,3405,3405,5,3415,3415,5,3457,3457,5,3530,3530,5,3536,3537,7,3542,3542,5,3551,3551,5,3633,3633,5,3636,3642,5,3761,3761,5,3764,3772,5,3864,3865,5,3895,3895,5,3902,3903,7,3967,3967,7,3974,3975,5,3993,4028,5,4141,4144,5,4146,4151,5,4155,4156,7,4182,4183,7,4190,4192,5,4226,4226,5,4229,4230,5,4253,4253,5,4448,4519,9,4957,4959,5,5938,5940,5,6002,6003,5,6070,6070,7,6078,6085,7,6087,6088,7,6109,6109,5,6158,6158,4,6313,6313,5,6435,6438,7,6441,6443,7,6450,6450,5,6457,6459,5,6681,6682,7,6741,6741,7,6743,6743,7,6752,6752,5,6757,6764,5,6771,6780,5,6832,6845,5,6847,6848,5,6916,6916,7,6965,6965,5,6971,6971,7,6973,6977,7,6979,6980,7,7040,7041,5,7073,7073,7,7078,7079,7,7082,7082,7,7142,7142,5,7144,7145,5,7149,7149,5,7151,7153,5,7204,7211,7,7220,7221,7,7376,7378,5,7393,7393,7,7405,7405,5,7415,7415,7,7616,7673,5,8203,8203,4,8205,8205,13,8232,8232,4,8234,8238,4,8265,8265,14,8293,8293,4,8400,8412,5,8417,8417,5,8421,8432,5,8505,8505,14,8617,8618,14,9000,9000,14,9167,9167,14,9208,9210,14,9642,9643,14,9664,9664,14,9728,9732,14,9735,9741,14,9743,9744,14,9746,9746,14,9750,9751,14,9753,9756,14,9758,9759,14,9761,9761,14,9764,9765,14,9767,9769,14,9771,9773,14,9776,9783,14,9787,9791,14,9793,9793,14,9795,9799,14,9812,9822,14,9824,9824,14,9827,9827,14,9829,9830,14,9832,9832,14,9851,9851,14,9854,9854,14,9856,9861,14,9874,9876,14,9878,9879,14,9881,9881,14,9883,9884,14,9888,9889,14,9895,9895,14,9898,9899,14,9904,9905,14,9917,9918,14,9924,9925,14,9928,9928,14,9934,9935,14,9937,9937,14,9939,9940,14,9961,9962,14,9968,9973,14,9975,9978,14,9981,9981,14,9986,9986,14,9989,9989,14,9998,9998,14,10000,10001,14,10004,10004,14,10013,10013,14,10024,10024,14,10052,10052,14,10060,10060,14,10067,10069,14,10083,10084,14,10133,10135,14,10160,10160,14,10548,10549,14,11035,11036,14,11093,11093,14,11647,11647,5,12330,12333,5,12336,12336,14,12441,12442,5,12953,12953,14,42608,42610,5,42654,42655,5,43010,43010,5,43019,43019,5,43045,43046,5,43052,43052,5,43188,43203,7,43232,43249,5,43302,43309,5,43346,43347,7,43392,43394,5,43443,43443,5,43446,43449,5,43452,43453,5,43493,43493,5,43567,43568,7,43571,43572,7,43587,43587,5,43597,43597,7,43696,43696,5,43703,43704,5,43713,43713,5,43756,43757,5,43765,43765,7,44003,44004,7,44006,44007,7,44009,44010,7,44013,44013,5,44033,44059,12,44061,44087,12,44089,44115,12,44117,44143,12,44145,44171,12,44173,44199,12,44201,44227,12,44229,44255,12,44257,44283,12,44285,44311,12,44313,44339,12,44341,44367,12,44369,44395,12,44397,44423,12,44425,44451,12,44453,44479,12,44481,44507,12,44509,44535,12,44537,44563,12,44565,44591,12,44593,44619,12,44621,44647,12,44649,44675,12,44677,44703,12,44705,44731,12,44733,44759,12,44761,44787,12,44789,44815,12,44817,44843,12,44845,44871,12,44873,44899,12,44901,44927,12,44929,44955,12,44957,44983,12,44985,45011,12,45013,45039,12,45041,45067,12,45069,45095,12,45097,45123,12,45125,45151,12,45153,45179,12,45181,45207,12,45209,45235,12,45237,45263,12,45265,45291,12,45293,45319,12,45321,45347,12,45349,45375,12,45377,45403,12,45405,45431,12,45433,45459,12,45461,45487,12,45489,45515,12,45517,45543,12,45545,45571,12,45573,45599,12,45601,45627,12,45629,45655,12,45657,45683,12,45685,45711,12,45713,45739,12,45741,45767,12,45769,45795,12,45797,45823,12,45825,45851,12,45853,45879,12,45881,45907,12,45909,45935,12,45937,45963,12,45965,45991,12,45993,46019,12,46021,46047,12,46049,46075,12,46077,46103,12,46105,46131,12,46133,46159,12,46161,46187,12,46189,46215,12,46217,46243,12,46245,46271,12,46273,46299,12,46301,46327,12,46329,46355,12,46357,46383,12,46385,46411,12,46413,46439,12,46441,46467,12,46469,46495,12,46497,46523,12,46525,46551,12,46553,46579,12,46581,46607,12,46609,46635,12,46637,46663,12,46665,46691,12,46693,46719,12,46721,46747,12,46749,46775,12,46777,46803,12,46805,46831,12,46833,46859,12,46861,46887,12,46889,46915,12,46917,46943,12,46945,46971,12,46973,46999,12,47001,47027,12,47029,47055,12,47057,47083,12,47085,47111,12,47113,47139,12,47141,47167,12,47169,47195,12,47197,47223,12,47225,47251,12,47253,47279,12,47281,47307,12,47309,47335,12,47337,47363,12,47365,47391,12,47393,47419,12,47421,47447,12,47449,47475,12,47477,47503,12,47505,47531,12,47533,47559,12,47561,47587,12,47589,47615,12,47617,47643,12,47645,47671,12,47673,47699,12,47701,47727,12,47729,47755,12,47757,47783,12,47785,47811,12,47813,47839,12,47841,47867,12,47869,47895,12,47897,47923,12,47925,47951,12,47953,47979,12,47981,48007,12,48009,48035,12,48037,48063,12,48065,48091,12,48093,48119,12,48121,48147,12,48149,48175,12,48177,48203,12,48205,48231,12,48233,48259,12,48261,48287,12,48289,48315,12,48317,48343,12,48345,48371,12,48373,48399,12,48401,48427,12,48429,48455,12,48457,48483,12,48485,48511,12,48513,48539,12,48541,48567,12,48569,48595,12,48597,48623,12,48625,48651,12,48653,48679,12,48681,48707,12,48709,48735,12,48737,48763,12,48765,48791,12,48793,48819,12,48821,48847,12,48849,48875,12,48877,48903,12,48905,48931,12,48933,48959,12,48961,48987,12,48989,49015,12,49017,49043,12,49045,49071,12,49073,49099,12,49101,49127,12,49129,49155,12,49157,49183,12,49185,49211,12,49213,49239,12,49241,49267,12,49269,49295,12,49297,49323,12,49325,49351,12,49353,49379,12,49381,49407,12,49409,49435,12,49437,49463,12,49465,49491,12,49493,49519,12,49521,49547,12,49549,49575,12,49577,49603,12,49605,49631,12,49633,49659,12,49661,49687,12,49689,49715,12,49717,49743,12,49745,49771,12,49773,49799,12,49801,49827,12,49829,49855,12,49857,49883,12,49885,49911,12,49913,49939,12,49941,49967,12,49969,49995,12,49997,50023,12,50025,50051,12,50053,50079,12,50081,50107,12,50109,50135,12,50137,50163,12,50165,50191,12,50193,50219,12,50221,50247,12,50249,50275,12,50277,50303,12,50305,50331,12,50333,50359,12,50361,50387,12,50389,50415,12,50417,50443,12,50445,50471,12,50473,50499,12,50501,50527,12,50529,50555,12,50557,50583,12,50585,50611,12,50613,50639,12,50641,50667,12,50669,50695,12,50697,50723,12,50725,50751,12,50753,50779,12,50781,50807,12,50809,50835,12,50837,50863,12,50865,50891,12,50893,50919,12,50921,50947,12,50949,50975,12,50977,51003,12,51005,51031,12,51033,51059,12,51061,51087,12,51089,51115,12,51117,51143,12,51145,51171,12,51173,51199,12,51201,51227,12,51229,51255,12,51257,51283,12,51285,51311,12,51313,51339,12,51341,51367,12,51369,51395,12,51397,51423,12,51425,51451,12,51453,51479,12,51481,51507,12,51509,51535,12,51537,51563,12,51565,51591,12,51593,51619,12,51621,51647,12,51649,51675,12,51677,51703,12,51705,51731,12,51733,51759,12,51761,51787,12,51789,51815,12,51817,51843,12,51845,51871,12,51873,51899,12,51901,51927,12,51929,51955,12,51957,51983,12,51985,52011,12,52013,52039,12,52041,52067,12,52069,52095,12,52097,52123,12,52125,52151,12,52153,52179,12,52181,52207,12,52209,52235,12,52237,52263,12,52265,52291,12,52293,52319,12,52321,52347,12,52349,52375,12,52377,52403,12,52405,52431,12,52433,52459,12,52461,52487,12,52489,52515,12,52517,52543,12,52545,52571,12,52573,52599,12,52601,52627,12,52629,52655,12,52657,52683,12,52685,52711,12,52713,52739,12,52741,52767,12,52769,52795,12,52797,52823,12,52825,52851,12,52853,52879,12,52881,52907,12,52909,52935,12,52937,52963,12,52965,52991,12,52993,53019,12,53021,53047,12,53049,53075,12,53077,53103,12,53105,53131,12,53133,53159,12,53161,53187,12,53189,53215,12,53217,53243,12,53245,53271,12,53273,53299,12,53301,53327,12,53329,53355,12,53357,53383,12,53385,53411,12,53413,53439,12,53441,53467,12,53469,53495,12,53497,53523,12,53525,53551,12,53553,53579,12,53581,53607,12,53609,53635,12,53637,53663,12,53665,53691,12,53693,53719,12,53721,53747,12,53749,53775,12,53777,53803,12,53805,53831,12,53833,53859,12,53861,53887,12,53889,53915,12,53917,53943,12,53945,53971,12,53973,53999,12,54001,54027,12,54029,54055,12,54057,54083,12,54085,54111,12,54113,54139,12,54141,54167,12,54169,54195,12,54197,54223,12,54225,54251,12,54253,54279,12,54281,54307,12,54309,54335,12,54337,54363,12,54365,54391,12,54393,54419,12,54421,54447,12,54449,54475,12,54477,54503,12,54505,54531,12,54533,54559,12,54561,54587,12,54589,54615,12,54617,54643,12,54645,54671,12,54673,54699,12,54701,54727,12,54729,54755,12,54757,54783,12,54785,54811,12,54813,54839,12,54841,54867,12,54869,54895,12,54897,54923,12,54925,54951,12,54953,54979,12,54981,55007,12,55009,55035,12,55037,55063,12,55065,55091,12,55093,55119,12,55121,55147,12,55149,55175,12,55177,55203,12,55243,55291,10,65024,65039,5,65279,65279,4,65520,65528,4,66045,66045,5,66422,66426,5,68101,68102,5,68152,68154,5,68325,68326,5,69291,69292,5,69632,69632,7,69634,69634,7,69759,69761,5]');\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as strings from 'vs/base/common/strings';\nimport * as streams from 'vs/base/common/stream';\n\ndeclare const Buffer: any;\n\nconst hasBuffer = (typeof Buffer !== 'undefined');\nconst hasTextEncoder = (typeof TextEncoder !== 'undefined');\nconst hasTextDecoder = (typeof TextDecoder !== 'undefined');\n\nlet textEncoder: TextEncoder | null;\nlet textDecoder: TextDecoder | null;\n\nexport class VSBuffer {\n\n\tstatic alloc(byteLength: number): VSBuffer {\n\t\tif (hasBuffer) {\n\t\t\treturn new VSBuffer(Buffer.allocUnsafe(byteLength));\n\t\t} else {\n\t\t\treturn new VSBuffer(new Uint8Array(byteLength));\n\t\t}\n\t}\n\n\tstatic wrap(actual: Uint8Array): VSBuffer {\n\t\tif (hasBuffer && !(Buffer.isBuffer(actual))) {\n\t\t\t// https://nodejs.org/dist/latest-v10.x/docs/api/buffer.html#buffer_class_method_buffer_from_arraybuffer_byteoffset_length\n\t\t\t// Create a zero-copy Buffer wrapper around the ArrayBuffer pointed to by the Uint8Array\n\t\t\tactual = Buffer.from(actual.buffer, actual.byteOffset, actual.byteLength);\n\t\t}\n\t\treturn new VSBuffer(actual);\n\t}\n\n\tstatic fromString(source: string): VSBuffer {\n\t\tif (hasBuffer) {\n\t\t\treturn new VSBuffer(Buffer.from(source));\n\t\t} else if (hasTextEncoder) {\n\t\t\tif (!textEncoder) {\n\t\t\t\ttextEncoder = new TextEncoder();\n\t\t\t}\n\t\t\treturn new VSBuffer(textEncoder.encode(source));\n\t\t} else {\n\t\t\treturn new VSBuffer(strings.encodeUTF8(source));\n\t\t}\n\t}\n\n\tstatic concat(buffers: VSBuffer[], totalLength?: number): VSBuffer {\n\t\tif (typeof totalLength === 'undefined') {\n\t\t\ttotalLength = 0;\n\t\t\tfor (let i = 0, len = buffers.length; i < len; i++) {\n\t\t\t\ttotalLength += buffers[i].byteLength;\n\t\t\t}\n\t\t}\n\n\t\tconst ret = VSBuffer.alloc(totalLength);\n\t\tlet offset = 0;\n\t\tfor (let i = 0, len = buffers.length; i < len; i++) {\n\t\t\tconst element = buffers[i];\n\t\t\tret.set(element, offset);\n\t\t\toffset += element.byteLength;\n\t\t}\n\n\t\treturn ret;\n\t}\n\n\treadonly buffer: Uint8Array;\n\treadonly byteLength: number;\n\n\tprivate constructor(buffer: Uint8Array) {\n\t\tthis.buffer = buffer;\n\t\tthis.byteLength = this.buffer.byteLength;\n\t}\n\n\ttoString(): string {\n\t\tif (hasBuffer) {\n\t\t\treturn this.buffer.toString();\n\t\t} else if (hasTextDecoder) {\n\t\t\tif (!textDecoder) {\n\t\t\t\ttextDecoder = new TextDecoder();\n\t\t\t}\n\t\t\treturn textDecoder.decode(this.buffer);\n\t\t} else {\n\t\t\treturn strings.decodeUTF8(this.buffer);\n\t\t}\n\t}\n\n\tslice(start?: number, end?: number): VSBuffer {\n\t\t// IMPORTANT: use subarray instead of slice because TypedArray#slice\n\t\t// creates shallow copy and NodeBuffer#slice doesn't. The use of subarray\n\t\t// ensures the same, performant, behaviour.\n\t\treturn new VSBuffer(this.buffer.subarray(start!/*bad lib.d.ts*/, end));\n\t}\n\n\tset(array: VSBuffer, offset?: number): void;\n\tset(array: Uint8Array, offset?: number): void;\n\tset(array: VSBuffer | Uint8Array, offset?: number): void {\n\t\tif (array instanceof VSBuffer) {\n\t\t\tthis.buffer.set(array.buffer, offset);\n\t\t} else {\n\t\t\tthis.buffer.set(array, offset);\n\t\t}\n\t}\n\n\treadUInt32BE(offset: number): number {\n\t\treturn readUInt32BE(this.buffer, offset);\n\t}\n\n\twriteUInt32BE(value: number, offset: number): void {\n\t\twriteUInt32BE(this.buffer, value, offset);\n\t}\n\n\treadUInt32LE(offset: number): number {\n\t\treturn readUInt32LE(this.buffer, offset);\n\t}\n\n\twriteUInt32LE(value: number, offset: number): void {\n\t\twriteUInt32LE(this.buffer, value, offset);\n\t}\n\n\treadUInt8(offset: number): number {\n\t\treturn readUInt8(this.buffer, offset);\n\t}\n\n\twriteUInt8(value: number, offset: number): void {\n\t\twriteUInt8(this.buffer, value, offset);\n\t}\n}\n\nexport function readUInt16LE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\t((source[offset + 0] << 0) >>> 0) |\n\t\t((source[offset + 1] << 8) >>> 0)\n\t);\n}\n\nexport function writeUInt16LE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 0] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = (value & 0b11111111);\n}\n\nexport function readUInt32BE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\tsource[offset] * 2 ** 24\n\t\t+ source[offset + 1] * 2 ** 16\n\t\t+ source[offset + 2] * 2 ** 8\n\t\t+ source[offset + 3]\n\t);\n}\n\nexport function writeUInt32BE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 3] = value;\n\tvalue = value >>> 8;\n\tdestination[offset + 2] = value;\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = value;\n\tvalue = value >>> 8;\n\tdestination[offset] = value;\n}\n\nexport function readUInt32LE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\t((source[offset + 0] << 0) >>> 0) |\n\t\t((source[offset + 1] << 8) >>> 0) |\n\t\t((source[offset + 2] << 16) >>> 0) |\n\t\t((source[offset + 3] << 24) >>> 0)\n\t);\n}\n\nexport function writeUInt32LE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 0] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 2] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 3] = (value & 0b11111111);\n}\n\nexport function readUInt8(source: Uint8Array, offset: number): number {\n\treturn source[offset];\n}\n\nexport function writeUInt8(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset] = value;\n}\n\nexport interface VSBufferReadable extends streams.Readable<VSBuffer> { }\n\nexport interface VSBufferReadableStream extends streams.ReadableStream<VSBuffer> { }\n\nexport interface VSBufferWriteableStream extends streams.WriteableStream<VSBuffer> { }\n\nexport interface VSBufferReadableBufferedStream extends streams.ReadableBufferedStream<VSBuffer> { }\n\nexport function readableToBuffer(readable: VSBufferReadable): VSBuffer {\n\treturn streams.consumeReadable<VSBuffer>(readable, chunks => VSBuffer.concat(chunks));\n}\n\nexport function bufferToReadable(buffer: VSBuffer): VSBufferReadable {\n\treturn streams.toReadable<VSBuffer>(buffer);\n}\n\nexport function streamToBuffer(stream: streams.ReadableStream<VSBuffer>): Promise<VSBuffer> {\n\treturn streams.consumeStream<VSBuffer>(stream, chunks => VSBuffer.concat(chunks));\n}\n\nexport async function bufferedStreamToBuffer(bufferedStream: streams.ReadableBufferedStream<VSBuffer>): Promise<VSBuffer> {\n\tif (bufferedStream.ended) {\n\t\treturn VSBuffer.concat(bufferedStream.buffer);\n\t}\n\n\treturn VSBuffer.concat([\n\n\t\t// Include already read chunks...\n\t\t...bufferedStream.buffer,\n\n\t\t// ...and all additional chunks\n\t\tawait streamToBuffer(bufferedStream.stream)\n\t]);\n}\n\nexport function bufferToStream(buffer: VSBuffer): streams.ReadableStream<VSBuffer> {\n\treturn streams.toStream<VSBuffer>(buffer, chunks => VSBuffer.concat(chunks));\n}\n\nexport function streamToBufferReadableStream(stream: streams.ReadableStreamEvents<Uint8Array | string>): streams.ReadableStream<VSBuffer> {\n\treturn streams.transform<Uint8Array | string, VSBuffer>(stream, { data: data => typeof data === 'string' ? VSBuffer.fromString(data) : VSBuffer.wrap(data) }, chunks => VSBuffer.concat(chunks));\n}\n\nexport function newWriteableBufferStream(options?: streams.WriteableStreamOptions): streams.WriteableStream<VSBuffer> {\n\treturn streams.newWriteableStream<VSBuffer>(chunks => VSBuffer.concat(chunks), options);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as strings from 'vs/base/common/strings';\n\nenum Severity {\n\tIgnore = 0,\n\tInfo = 1,\n\tWarning = 2,\n\tError = 3\n}\n\nnamespace Severity {\n\n\tconst _error = 'error';\n\tconst _warning = 'warning';\n\tconst _warn = 'warn';\n\tconst _info = 'info';\n\n\t/**\n\t * Parses 'error', 'warning', 'warn', 'info' in call casings\n\t * and falls back to ignore.\n\t */\n\texport function fromValue(value: string): Severity {\n\t\tif (!value) {\n\t\t\treturn Severity.Ignore;\n\t\t}\n\n\t\tif (strings.equalsIgnoreCase(_error, value)) {\n\t\t\treturn Severity.Error;\n\t\t}\n\n\t\tif (strings.equalsIgnoreCase(_warning, value) || strings.equalsIgnoreCase(_warn, value)) {\n\t\t\treturn Severity.Warning;\n\t\t}\n\n\t\tif (strings.equalsIgnoreCase(_info, value)) {\n\t\t\treturn Severity.Info;\n\t\t}\n\t\treturn Severity.Ignore;\n\t}\n}\n\nexport default Severity;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI, UriComponents } from 'vs/base/common/uri';\n\n/**\n * @returns whether the provided parameter is a JavaScript Array or not.\n */\nexport function isArray<T>(array: T | {}): array is T extends readonly any[] ? (unknown extends T ? never : readonly any[]) : any[] {\n\treturn Array.isArray(array);\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript String or not.\n */\nexport function isString(str: any): str is string {\n\treturn (typeof str === 'string');\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Array and each element in the array is a string.\n */\nexport function isStringArray(value: any): value is string[] {\n\treturn Array.isArray(value) && (<any[]>value).every(elem => isString(elem));\n}\n\n/**\n *\n * @returns whether the provided parameter is of type `object` but **not**\n *\t`null`, an `array`, a `regexp`, nor a `date`.\n */\nexport function isObject(obj: any): obj is Object {\n\t// The method can't do a type cast since there are type (like strings) which\n\t// are subclasses of any put not positvely matched by the function. Hence type\n\t// narrowing results in wrong results.\n\treturn typeof obj === 'object'\n\t\t&& obj !== null\n\t\t&& !Array.isArray(obj)\n\t\t&& !(obj instanceof RegExp)\n\t\t&& !(obj instanceof Date);\n}\n\n/**\n * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\n * @returns whether the provided parameter is a JavaScript Number or not.\n */\nexport function isNumber(obj: any): obj is number {\n\treturn (typeof obj === 'number' && !isNaN(obj));\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Boolean or not.\n */\nexport function isBoolean(obj: any): obj is boolean {\n\treturn (obj === true || obj === false);\n}\n\n/**\n * @returns whether the provided parameter is undefined.\n */\nexport function isUndefined(obj: any): obj is undefined {\n\treturn (typeof obj === 'undefined');\n}\n\n/**\n * @returns whether the provided parameter is defined.\n */\nexport function isDefined<T>(arg: T | null | undefined): arg is T {\n\treturn !isUndefinedOrNull(arg);\n}\n\n/**\n * @returns whether the provided parameter is undefined or null.\n */\nexport function isUndefinedOrNull(obj: any): obj is undefined | null {\n\treturn (isUndefined(obj) || obj === null);\n}\n\n\nexport function assertType(condition: any, type?: string): asserts condition {\n\tif (!condition) {\n\t\tthrow new Error(type ? `Unexpected type, expected '${type}'` : 'Unexpected type');\n\t}\n}\n\n/**\n * Asserts that the argument passed in is neither undefined nor null.\n */\nexport function assertIsDefined<T>(arg: T | null | undefined): T {\n\tif (isUndefinedOrNull(arg)) {\n\t\tthrow new Error('Assertion Failed: argument is undefined or null');\n\t}\n\n\treturn arg;\n}\n\n/**\n * Asserts that each argument passed in is neither undefined nor null.\n */\nexport function assertAllDefined<T1, T2>(t1: T1 | null | undefined, t2: T2 | null | undefined): [T1, T2];\nexport function assertAllDefined<T1, T2, T3>(t1: T1 | null | undefined, t2: T2 | null | undefined, t3: T3 | null | undefined): [T1, T2, T3];\nexport function assertAllDefined<T1, T2, T3, T4>(t1: T1 | null | undefined, t2: T2 | null | undefined, t3: T3 | null | undefined, t4: T4 | null | undefined): [T1, T2, T3, T4];\nexport function assertAllDefined(...args: (unknown | null | undefined)[]): unknown[] {\n\tconst result = [];\n\n\tfor (let i = 0; i < args.length; i++) {\n\t\tconst arg = args[i];\n\n\t\tif (isUndefinedOrNull(arg)) {\n\t\t\tthrow new Error(`Assertion Failed: argument at index ${i} is undefined or null`);\n\t\t}\n\n\t\tresult.push(arg);\n\t}\n\n\treturn result;\n}\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * @returns whether the provided parameter is an empty JavaScript Object or not.\n */\nexport function isEmptyObject(obj: any): obj is any {\n\tif (!isObject(obj)) {\n\t\treturn false;\n\t}\n\n\tfor (let key in obj) {\n\t\tif (hasOwnProperty.call(obj, key)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Function or not.\n */\nexport function isFunction(obj: any): obj is Function {\n\treturn (typeof obj === 'function');\n}\n\n/**\n * @returns whether the provided parameters is are JavaScript Function or not.\n */\nexport function areFunctions(...objects: any[]): boolean {\n\treturn objects.length > 0 && objects.every(isFunction);\n}\n\nexport type TypeConstraint = string | Function;\n\nexport function validateConstraints(args: any[], constraints: Array<TypeConstraint | undefined>): void {\n\tconst len = Math.min(args.length, constraints.length);\n\tfor (let i = 0; i < len; i++) {\n\t\tvalidateConstraint(args[i], constraints[i]);\n\t}\n}\n\nexport function validateConstraint(arg: any, constraint: TypeConstraint | undefined): void {\n\n\tif (isString(constraint)) {\n\t\tif (typeof arg !== constraint) {\n\t\t\tthrow new Error(`argument does not match constraint: typeof ${constraint}`);\n\t\t}\n\t} else if (isFunction(constraint)) {\n\t\ttry {\n\t\t\tif (arg instanceof constraint) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} catch {\n\t\t\t// ignore\n\t\t}\n\t\tif (!isUndefinedOrNull(arg) && arg.constructor === constraint) {\n\t\t\treturn;\n\t\t}\n\t\tif (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n\t\t\treturn;\n\t\t}\n\t\tthrow new Error(`argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true`);\n\t}\n}\n\nexport function getAllPropertyNames(obj: object): string[] {\n\tlet res: string[] = [];\n\tlet proto = Object.getPrototypeOf(obj);\n\twhile (Object.prototype !== proto) {\n\t\tres = res.concat(Object.getOwnPropertyNames(proto));\n\t\tproto = Object.getPrototypeOf(proto);\n\t}\n\treturn res;\n}\n\nexport function getAllMethodNames(obj: object): string[] {\n\tconst methods: string[] = [];\n\tfor (const prop of getAllPropertyNames(obj)) {\n\t\tif (typeof (obj as any)[prop] === 'function') {\n\t\t\tmethods.push(prop);\n\t\t}\n\t}\n\treturn methods;\n}\n\nexport function createProxyObject<T extends object>(methodNames: string[], invoke: (method: string, args: any[]) => any): T {\n\tconst createProxyMethod = (method: string): () => any => {\n\t\treturn function () {\n\t\t\tconst args = Array.prototype.slice.call(arguments, 0);\n\t\t\treturn invoke(method, args);\n\t\t};\n\t};\n\n\tlet result = {} as T;\n\tfor (const methodName of methodNames) {\n\t\t(<any>result)[methodName] = createProxyMethod(methodName);\n\t}\n\treturn result;\n}\n\n/**\n * Converts null to undefined, passes all other values through.\n */\nexport function withNullAsUndefined<T>(x: T | null): T | undefined {\n\treturn x === null ? undefined : x;\n}\n\n/**\n * Converts undefined to null, passes all other values through.\n */\nexport function withUndefinedAsNull<T>(x: T | undefined): T | null {\n\treturn typeof x === 'undefined' ? null : x;\n}\n\n/**\n * Allows to add a first parameter to functions of a type.\n */\nexport type AddFirstParameterToFunctions<Target, TargetFunctionsReturnType, FirstParameter> = {\n\n\t//  For every property\n\t[K in keyof Target]:\n\n\t// Function: add param to function\n\tTarget[K] extends (...args: any) => TargetFunctionsReturnType ? (firstArg: FirstParameter, ...args: Parameters<Target[K]>) => ReturnType<Target[K]> :\n\n\t// Else: just leave as is\n\tTarget[K]\n};\n\n/**\n * Mapped-type that replaces all occurrences of URI with UriComponents\n */\nexport type UriDto<T> = { [K in keyof T]: T[K] extends URI\n\t? UriComponents\n\t: UriDto<T[K]> };\n\n/**\n * Mapped-type that replaces all occurrences of URI with UriComponents and\n * drops all functions.\n */\nexport type Dto<T> = T extends { toJSON(): infer U }\n\t? U\n\t: T extends object\n\t? { [k in keyof T]: Dto<T[k]>; }\n\t: T;\n\nexport function NotImplementedProxy<T>(name: string): { new(): T } {\n\treturn <any>class {\n\t\tconstructor() {\n\t\t\treturn new Proxy({}, {\n\t\t\t\tget(target: any, prop: PropertyKey) {\n\t\t\t\t\tif (target[prop]) {\n\t\t\t\t\t\treturn target[prop];\n\t\t\t\t\t}\n\t\t\t\t\tthrow new Error(`Not Implemented: ${name}->${String(prop)}`);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows } from 'vs/base/common/platform';\nimport { startsWithIgnoreCase, equalsIgnoreCase, rtrim } from 'vs/base/common/strings';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { sep, posix, isAbsolute, join, normalize } from 'vs/base/common/path';\nimport { isNumber } from 'vs/base/common/types';\n\nexport function isPathSeparator(code: number) {\n\treturn code === CharCode.Slash || code === CharCode.Backslash;\n}\n\n/**\n * Takes a Windows OS path and changes backward slashes to forward slashes.\n * This should only be done for OS paths from Windows (or user provided paths potentially from Windows).\n * Using it on a Linux or MaxOS path might change it.\n */\nexport function toSlashes(osPath: string) {\n\treturn osPath.replace(/[\\\\/]/g, posix.sep);\n}\n\n/**\n * Computes the _root_ this path, like `getRoot('c:\\files') === c:\\`,\n * `getRoot('files:///files/path') === files:///`,\n * or `getRoot('\\\\server\\shares\\path') === \\\\server\\shares\\`\n */\nexport function getRoot(path: string, sep: string = posix.sep): string {\n\n\tif (!path) {\n\t\treturn '';\n\t}\n\n\tconst len = path.length;\n\tconst firstLetter = path.charCodeAt(0);\n\tif (isPathSeparator(firstLetter)) {\n\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t// UNC candidate \\\\localhost\\shares\\ddd\n\t\t\t//               ^^^^^^^^^^^^^^^^^^^\n\t\t\tif (!isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\tlet pos = 3;\n\t\t\t\tconst start = pos;\n\t\t\t\tfor (; pos < len; pos++) {\n\t\t\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (start !== pos && !isPathSeparator(path.charCodeAt(pos + 1))) {\n\t\t\t\t\tpos += 1;\n\t\t\t\t\tfor (; pos < len; pos++) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\t\t\t\treturn path.slice(0, pos + 1) // consume this separator\n\t\t\t\t\t\t\t\t.replace(/[\\\\/]/g, sep);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// /user/far\n\t\t// ^\n\t\treturn sep;\n\n\t} else if (isWindowsDriveLetter(firstLetter)) {\n\t\t// check for windows drive letter c:\\ or c:\n\n\t\tif (path.charCodeAt(1) === CharCode.Colon) {\n\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t// C:\\fff\n\t\t\t\t// ^^^\n\t\t\t\treturn path.slice(0, 2) + sep;\n\t\t\t} else {\n\t\t\t\t// C:\n\t\t\t\t// ^^\n\t\t\t\treturn path.slice(0, 2);\n\t\t\t}\n\t\t}\n\t}\n\n\t// check for URI\n\t// scheme://authority/path\n\t// ^^^^^^^^^^^^^^^^^^^\n\tlet pos = path.indexOf('://');\n\tif (pos !== -1) {\n\t\tpos += 3; // 3 -> \"://\".length\n\t\tfor (; pos < len; pos++) {\n\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\treturn path.slice(0, pos + 1); // consume this separator\n\t\t\t}\n\t\t}\n\t}\n\n\treturn '';\n}\n\n/**\n * Check if the path follows this pattern: `\\\\hostname\\sharename`.\n *\n * @see https://msdn.microsoft.com/en-us/library/gg465305.aspx\n * @return A boolean indication if the path is a UNC path, on none-windows\n * always false.\n */\nexport function isUNC(path: string): boolean {\n\tif (!isWindows) {\n\t\t// UNC is a windows concept\n\t\treturn false;\n\t}\n\n\tif (!path || path.length < 5) {\n\t\t// at least \\\\a\\b\n\t\treturn false;\n\t}\n\n\tlet code = path.charCodeAt(0);\n\tif (code !== CharCode.Backslash) {\n\t\treturn false;\n\t}\n\tcode = path.charCodeAt(1);\n\tif (code !== CharCode.Backslash) {\n\t\treturn false;\n\t}\n\tlet pos = 2;\n\tconst start = pos;\n\tfor (; pos < path.length; pos++) {\n\t\tcode = path.charCodeAt(pos);\n\t\tif (code === CharCode.Backslash) {\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (start === pos) {\n\t\treturn false;\n\t}\n\tcode = path.charCodeAt(pos + 1);\n\tif (isNaN(code) || code === CharCode.Backslash) {\n\t\treturn false;\n\t}\n\treturn true;\n}\n\n// Reference: https://en.wikipedia.org/wiki/Filename\nconst WINDOWS_INVALID_FILE_CHARS = /[\\\\/:\\*\\?\"<>\\|]/g;\nconst UNIX_INVALID_FILE_CHARS = /[\\\\/]/g;\nconst WINDOWS_FORBIDDEN_NAMES = /^(con|prn|aux|clock\\$|nul|lpt[0-9]|com[0-9])(\\.(.*?))?$/i;\nexport function isValidBasename(name: string | null | undefined, isWindowsOS: boolean = isWindows): boolean {\n\tconst invalidFileChars = isWindowsOS ? WINDOWS_INVALID_FILE_CHARS : UNIX_INVALID_FILE_CHARS;\n\n\tif (!name || name.length === 0 || /^\\s+$/.test(name)) {\n\t\treturn false; // require a name that is not just whitespace\n\t}\n\n\tinvalidFileChars.lastIndex = 0; // the holy grail of software development\n\tif (invalidFileChars.test(name)) {\n\t\treturn false; // check for certain invalid file characters\n\t}\n\n\tif (isWindowsOS && WINDOWS_FORBIDDEN_NAMES.test(name)) {\n\t\treturn false; // check for certain invalid file names\n\t}\n\n\tif (name === '.' || name === '..') {\n\t\treturn false; // check for reserved values\n\t}\n\n\tif (isWindowsOS && name[name.length - 1] === '.') {\n\t\treturn false; // Windows: file cannot end with a \".\"\n\t}\n\n\tif (isWindowsOS && name.length !== name.trim().length) {\n\t\treturn false; // Windows: file cannot end with a whitespace\n\t}\n\n\tif (name.length > 255) {\n\t\treturn false; // most file systems do not allow files > 255 length\n\t}\n\n\treturn true;\n}\n\nexport function isEqual(pathA: string, pathB: string, ignoreCase?: boolean): boolean {\n\tconst identityEquals = (pathA === pathB);\n\tif (!ignoreCase || identityEquals) {\n\t\treturn identityEquals;\n\t}\n\n\tif (!pathA || !pathB) {\n\t\treturn false;\n\t}\n\n\treturn equalsIgnoreCase(pathA, pathB);\n}\n\nexport function isEqualOrParent(base: string, parentCandidate: string, ignoreCase?: boolean, separator = sep): boolean {\n\tif (base === parentCandidate) {\n\t\treturn true;\n\t}\n\n\tif (!base || !parentCandidate) {\n\t\treturn false;\n\t}\n\n\tif (parentCandidate.length > base.length) {\n\t\treturn false;\n\t}\n\n\tif (ignoreCase) {\n\t\tconst beginsWith = startsWithIgnoreCase(base, parentCandidate);\n\t\tif (!beginsWith) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (parentCandidate.length === base.length) {\n\t\t\treturn true; // same path, different casing\n\t\t}\n\n\t\tlet sepOffset = parentCandidate.length;\n\t\tif (parentCandidate.charAt(parentCandidate.length - 1) === separator) {\n\t\t\tsepOffset--; // adjust the expected sep offset in case our candidate already ends in separator character\n\t\t}\n\n\t\treturn base.charAt(sepOffset) === separator;\n\t}\n\n\tif (parentCandidate.charAt(parentCandidate.length - 1) !== separator) {\n\t\tparentCandidate += separator;\n\t}\n\n\treturn base.indexOf(parentCandidate) === 0;\n}\n\nexport function isWindowsDriveLetter(char0: number): boolean {\n\treturn char0 >= CharCode.A && char0 <= CharCode.Z || char0 >= CharCode.a && char0 <= CharCode.z;\n}\n\nexport function sanitizeFilePath(candidate: string, cwd: string): string {\n\n\t// Special case: allow to open a drive letter without trailing backslash\n\tif (isWindows && candidate.endsWith(':')) {\n\t\tcandidate += sep;\n\t}\n\n\t// Ensure absolute\n\tif (!isAbsolute(candidate)) {\n\t\tcandidate = join(cwd, candidate);\n\t}\n\n\t// Ensure normalized\n\tcandidate = normalize(candidate);\n\n\t// Ensure no trailing slash/backslash\n\tif (isWindows) {\n\t\tcandidate = rtrim(candidate, sep);\n\n\t\t// Special case: allow to open drive root ('C:\\')\n\t\tif (candidate.endsWith(':')) {\n\t\t\tcandidate += sep;\n\t\t}\n\n\t} else {\n\t\tcandidate = rtrim(candidate, sep);\n\n\t\t// Special case: allow to open root ('/')\n\t\tif (!candidate) {\n\t\t\tcandidate = sep;\n\t\t}\n\t}\n\n\treturn candidate;\n}\n\nexport function isRootOrDriveLetter(path: string): boolean {\n\tconst pathNormalized = normalize(path);\n\n\tif (isWindows) {\n\t\tif (path.length > 3) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn isWindowsDriveLetter(pathNormalized.charCodeAt(0))\n\t\t\t&& pathNormalized.charCodeAt(1) === CharCode.Colon\n\t\t\t&& (path.length === 2 || pathNormalized.charCodeAt(2) === CharCode.Backslash);\n\t}\n\n\treturn pathNormalized === posix.sep;\n}\n\nexport function indexOfPath(path: string, candidate: string, ignoreCase?: boolean): number {\n\tif (candidate.length > path.length) {\n\t\treturn -1;\n\t}\n\n\tif (path === candidate) {\n\t\treturn 0;\n\t}\n\n\tif (ignoreCase) {\n\t\tpath = path.toLowerCase();\n\t\tcandidate = candidate.toLowerCase();\n\t}\n\n\treturn path.indexOf(candidate);\n}\n\nexport interface IPathWithLineAndColumn {\n\tpath: string;\n\tline?: number;\n\tcolumn?: number;\n}\n\nexport function parseLineAndColumnAware(rawPath: string): IPathWithLineAndColumn {\n\tconst segments = rawPath.split(':'); // C:\\file.txt:<line>:<column>\n\n\tlet path: string | undefined = undefined;\n\tlet line: number | undefined = undefined;\n\tlet column: number | undefined = undefined;\n\n\tsegments.forEach(segment => {\n\t\tconst segmentAsNumber = Number(segment);\n\t\tif (!isNumber(segmentAsNumber)) {\n\t\t\tpath = !!path ? [path, segment].join(':') : segment; // a colon can well be part of a path (e.g. C:\\...)\n\t\t} else if (line === undefined) {\n\t\t\tline = segmentAsNumber;\n\t\t} else if (column === undefined) {\n\t\t\tcolumn = segmentAsNumber;\n\t\t}\n\t});\n\n\tif (!path) {\n\t\tthrow new Error('Format for `--goto` should be: `FILE:LINE(:COLUMN)`');\n\t}\n\n\treturn {\n\t\tpath,\n\t\tline: line !== undefined ? line : undefined,\n\t\tcolumn: column !== undefined ? column : line !== undefined ? 1 : undefined // if we have a line, make sure column is also set\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isObject, isUndefinedOrNull, isArray } from 'vs/base/common/types';\n\nexport function deepClone<T>(obj: T): T {\n\tif (!obj || typeof obj !== 'object') {\n\t\treturn obj;\n\t}\n\tif (obj instanceof RegExp) {\n\t\t// See https://github.com/microsoft/TypeScript/issues/10990\n\t\treturn obj as any;\n\t}\n\tconst result: any = Array.isArray(obj) ? [] : {};\n\tObject.keys(<any>obj).forEach((key: string) => {\n\t\tif ((<any>obj)[key] && typeof (<any>obj)[key] === 'object') {\n\t\t\tresult[key] = deepClone((<any>obj)[key]);\n\t\t} else {\n\t\t\tresult[key] = (<any>obj)[key];\n\t\t}\n\t});\n\treturn result;\n}\n\nexport function deepFreeze<T>(obj: T): T {\n\tif (!obj || typeof obj !== 'object') {\n\t\treturn obj;\n\t}\n\tconst stack: any[] = [obj];\n\twhile (stack.length > 0) {\n\t\tconst obj = stack.shift();\n\t\tObject.freeze(obj);\n\t\tfor (const key in obj) {\n\t\t\tif (_hasOwnProperty.call(obj, key)) {\n\t\t\t\tconst prop = obj[key];\n\t\t\t\tif (typeof prop === 'object' && !Object.isFrozen(prop)) {\n\t\t\t\t\tstack.push(prop);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn obj;\n}\n\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nexport function cloneAndChange(obj: any, changer: (orig: any) => any): any {\n\treturn _cloneAndChange(obj, changer, new Set());\n}\n\nfunction _cloneAndChange(obj: any, changer: (orig: any) => any, seen: Set<any>): any {\n\tif (isUndefinedOrNull(obj)) {\n\t\treturn obj;\n\t}\n\n\tconst changed = changer(obj);\n\tif (typeof changed !== 'undefined') {\n\t\treturn changed;\n\t}\n\n\tif (isArray(obj)) {\n\t\tconst r1: any[] = [];\n\t\tfor (const e of obj) {\n\t\t\tr1.push(_cloneAndChange(e, changer, seen));\n\t\t}\n\t\treturn r1;\n\t}\n\n\tif (isObject(obj)) {\n\t\tif (seen.has(obj)) {\n\t\t\tthrow new Error('Cannot clone recursive data-structure');\n\t\t}\n\t\tseen.add(obj);\n\t\tconst r2 = {};\n\t\tfor (let i2 in obj) {\n\t\t\tif (_hasOwnProperty.call(obj, i2)) {\n\t\t\t\t(r2 as any)[i2] = _cloneAndChange(obj[i2], changer, seen);\n\t\t\t}\n\t\t}\n\t\tseen.delete(obj);\n\t\treturn r2;\n\t}\n\n\treturn obj;\n}\n\n/**\n * Copies all properties of source into destination. The optional parameter \"overwrite\" allows to control\n * if existing properties on the destination should be overwritten or not. Defaults to true (overwrite).\n */\nexport function mixin(destination: any, source: any, overwrite: boolean = true): any {\n\tif (!isObject(destination)) {\n\t\treturn source;\n\t}\n\n\tif (isObject(source)) {\n\t\tObject.keys(source).forEach(key => {\n\t\t\tif (key in destination) {\n\t\t\t\tif (overwrite) {\n\t\t\t\t\tif (isObject(destination[key]) && isObject(source[key])) {\n\t\t\t\t\t\tmixin(destination[key], source[key], overwrite);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdestination[key] = source[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdestination[key] = source[key];\n\t\t\t}\n\t\t});\n\t}\n\treturn destination;\n}\n\nexport function equals(one: any, other: any): boolean {\n\tif (one === other) {\n\t\treturn true;\n\t}\n\tif (one === null || one === undefined || other === null || other === undefined) {\n\t\treturn false;\n\t}\n\tif (typeof one !== typeof other) {\n\t\treturn false;\n\t}\n\tif (typeof one !== 'object') {\n\t\treturn false;\n\t}\n\tif ((Array.isArray(one)) !== (Array.isArray(other))) {\n\t\treturn false;\n\t}\n\n\tlet i: number;\n\tlet key: string;\n\n\tif (Array.isArray(one)) {\n\t\tif (one.length !== other.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (i = 0; i < one.length; i++) {\n\t\t\tif (!equals(one[i], other[i])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tconst oneKeys: string[] = [];\n\n\t\tfor (key in one) {\n\t\t\toneKeys.push(key);\n\t\t}\n\t\toneKeys.sort();\n\t\tconst otherKeys: string[] = [];\n\t\tfor (key in other) {\n\t\t\totherKeys.push(key);\n\t\t}\n\t\totherKeys.sort();\n\t\tif (!equals(oneKeys, otherKeys)) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (i = 0; i < oneKeys.length; i++) {\n\t\t\tif (!equals(one[oneKeys[i]], other[oneKeys[i]])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\n/**\n * Calls `JSON.Stringify` with a replacer to break apart any circular references.\n * This prevents `JSON`.stringify` from throwing the exception\n *  \"Uncaught TypeError: Converting circular structure to JSON\"\n */\nexport function safeStringify(obj: any): string {\n\tconst seen = new Set<any>();\n\treturn JSON.stringify(obj, (key, value) => {\n\t\tif (isObject(value) || Array.isArray(value)) {\n\t\t\tif (seen.has(value)) {\n\t\t\t\treturn '[Circular]';\n\t\t\t} else {\n\t\t\t\tseen.add(value);\n\t\t\t}\n\t\t}\n\t\treturn value;\n\t});\n}\n\nexport function getOrDefault<T, R>(obj: T, fn: (obj: T) => R | undefined, defaultValue: R): R {\n\tconst result = fn(obj);\n\treturn typeof result === 'undefined' ? defaultValue : result;\n}\n\ntype obj = { [key: string]: any; };\n/**\n * Returns an object that has keys for each value that is different in the base object. Keys\n * that do not exist in the target but in the base object are not considered.\n *\n * Note: This is not a deep-diffing method, so the values are strictly taken into the resulting\n * object if they differ.\n *\n * @param base the object to diff against\n * @param obj the object to use for diffing\n */\nexport function distinct(base: obj, target: obj): obj {\n\tconst result = Object.create(null);\n\n\tif (!base || !target) {\n\t\treturn result;\n\t}\n\n\tconst targetKeys = Object.keys(target);\n\ttargetKeys.forEach(k => {\n\t\tconst baseValue = base[k];\n\t\tconst targetValue = target[k];\n\n\t\tif (!equals(baseValue, targetValue)) {\n\t\t\tresult[k] = targetValue;\n\t\t}\n\t});\n\n\treturn result;\n}\n\nexport function getCaseInsensitive(target: obj, key: string): any {\n\tconst lowercaseKey = key.toLowerCase();\n\tconst equivalentKey = Object.keys(target).find(k => k.toLowerCase() === lowercaseKey);\n\treturn equivalentKey ? target[equivalentKey] : target[key];\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows } from 'vs/base/common/platform';\nimport { CharCode } from 'vs/base/common/charCode';\nimport * as paths from 'vs/base/common/path';\n\nconst _schemePattern = /^\\w[\\w\\d+.-]*$/;\nconst _singleSlashStart = /^\\//;\nconst _doubleSlashStart = /^\\/\\//;\n\nfunction _validateUri(ret: URI, _strict?: boolean): void {\n\n\t// scheme, must be set\n\tif (!ret.scheme && _strict) {\n\t\tthrow new Error(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${ret.authority}\", path: \"${ret.path}\", query: \"${ret.query}\", fragment: \"${ret.fragment}\"}`);\n\t}\n\n\t// scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n\t// ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n\tif (ret.scheme && !_schemePattern.test(ret.scheme)) {\n\t\tthrow new Error('[UriError]: Scheme contains illegal characters.');\n\t}\n\n\t// path, http://tools.ietf.org/html/rfc3986#section-3.3\n\t// If a URI contains an authority component, then the path component\n\t// must either be empty or begin with a slash (\"/\") character.  If a URI\n\t// does not contain an authority component, then the path cannot begin\n\t// with two slash characters (\"//\").\n\tif (ret.path) {\n\t\tif (ret.authority) {\n\t\t\tif (!_singleSlashStart.test(ret.path)) {\n\t\t\t\tthrow new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n\t\t\t}\n\t\t} else {\n\t\t\tif (_doubleSlashStart.test(ret.path)) {\n\t\t\t\tthrow new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n\t\t\t}\n\t\t}\n\t}\n}\n\n// for a while we allowed uris *without* schemes and this is the migration\n// for them, e.g. an uri without scheme and without strict-mode warns and falls\n// back to the file-scheme. that should cause the least carnage and still be a\n// clear warning\nfunction _schemeFix(scheme: string, _strict: boolean): string {\n\tif (!scheme && !_strict) {\n\t\treturn 'file';\n\t}\n\treturn scheme;\n}\n\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\nfunction _referenceResolution(scheme: string, path: string): string {\n\n\t// the slash-character is our 'default base' as we don't\n\t// support constructing URIs relative to other URIs. This\n\t// also means that we alter and potentially break paths.\n\t// see https://tools.ietf.org/html/rfc3986#section-5.1.4\n\tswitch (scheme) {\n\t\tcase 'https':\n\t\tcase 'http':\n\t\tcase 'file':\n\t\t\tif (!path) {\n\t\t\t\tpath = _slash;\n\t\t\t} else if (path[0] !== _slash) {\n\t\t\t\tpath = _slash + path;\n\t\t\t}\n\t\t\tbreak;\n\t}\n\treturn path;\n}\n\nconst _empty = '';\nconst _slash = '/';\nconst _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component parts\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n * ```txt\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n * ```\n */\nexport class URI implements UriComponents {\n\n\tstatic isUri(thing: any): thing is URI {\n\t\tif (thing instanceof URI) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing) {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (<URI>thing).authority === 'string'\n\t\t\t&& typeof (<URI>thing).fragment === 'string'\n\t\t\t&& typeof (<URI>thing).path === 'string'\n\t\t\t&& typeof (<URI>thing).query === 'string'\n\t\t\t&& typeof (<URI>thing).scheme === 'string'\n\t\t\t&& typeof (<URI>thing).fsPath === 'function'\n\t\t\t&& typeof (<URI>thing).with === 'function'\n\t\t\t&& typeof (<URI>thing).toString === 'function';\n\t}\n\n\t/**\n\t * scheme is the 'http' part of 'http://www.msft.com/some/path?query#fragment'.\n\t * The part before the first colon.\n\t */\n\treadonly scheme: string;\n\n\t/**\n\t * authority is the 'www.msft.com' part of 'http://www.msft.com/some/path?query#fragment'.\n\t * The part between the first double slashes and the next slash.\n\t */\n\treadonly authority: string;\n\n\t/**\n\t * path is the '/some/path' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly path: string;\n\n\t/**\n\t * query is the 'query' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly query: string;\n\n\t/**\n\t * fragment is the 'fragment' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly fragment: string;\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(scheme: string, authority?: string, path?: string, query?: string, fragment?: string, _strict?: boolean);\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(components: UriComponents);\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(schemeOrData: string | UriComponents, authority?: string, path?: string, query?: string, fragment?: string, _strict: boolean = false) {\n\n\t\tif (typeof schemeOrData === 'object') {\n\t\t\tthis.scheme = schemeOrData.scheme || _empty;\n\t\t\tthis.authority = schemeOrData.authority || _empty;\n\t\t\tthis.path = schemeOrData.path || _empty;\n\t\t\tthis.query = schemeOrData.query || _empty;\n\t\t\tthis.fragment = schemeOrData.fragment || _empty;\n\t\t\t// no validation because it's this URI\n\t\t\t// that creates uri components.\n\t\t\t// _validateUri(this);\n\t\t} else {\n\t\t\tthis.scheme = _schemeFix(schemeOrData, _strict);\n\t\t\tthis.authority = authority || _empty;\n\t\t\tthis.path = _referenceResolution(this.scheme, path || _empty);\n\t\t\tthis.query = query || _empty;\n\t\t\tthis.fragment = fragment || _empty;\n\n\t\t\t_validateUri(this, _strict);\n\t\t}\n\t}\n\n\t// ---- filesystem path -----------------------\n\n\t/**\n\t * Returns a string representing the corresponding file system path of this URI.\n\t * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the\n\t * platform specific path separator.\n\t *\n\t * * Will *not* validate the path for invalid characters and semantics.\n\t * * Will *not* look at the scheme of this URI.\n\t * * The result shall *not* be used for display purposes but for accessing a file on disk.\n\t *\n\t *\n\t * The *difference* to `URI#path` is the use of the platform specific separator and the handling\n\t * of UNC paths. See the below sample of a file-uri with an authority (UNC path).\n\t *\n\t * ```ts\n\t\tconst u = URI.parse('file://server/c$/folder/file.txt')\n\t\tu.authority === 'server'\n\t\tu.path === '/shares/c$/file.txt'\n\t\tu.fsPath === '\\\\server\\c$\\folder\\file.txt'\n\t```\n\t *\n\t * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\n\t * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\n\t * with URIs that represent files on disk (`file` scheme).\n\t */\n\tget fsPath(): string {\n\t\t// if (this.scheme !== 'file') {\n\t\t// \tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\n\t\t// }\n\t\treturn uriToFsPath(this, false);\n\t}\n\n\t// ---- modify to new -------------------------\n\n\twith(change: { scheme?: string; authority?: string | null; path?: string | null; query?: string | null; fragment?: string | null }): URI {\n\n\t\tif (!change) {\n\t\t\treturn this;\n\t\t}\n\n\t\tlet { scheme, authority, path, query, fragment } = change;\n\t\tif (scheme === undefined) {\n\t\t\tscheme = this.scheme;\n\t\t} else if (scheme === null) {\n\t\t\tscheme = _empty;\n\t\t}\n\t\tif (authority === undefined) {\n\t\t\tauthority = this.authority;\n\t\t} else if (authority === null) {\n\t\t\tauthority = _empty;\n\t\t}\n\t\tif (path === undefined) {\n\t\t\tpath = this.path;\n\t\t} else if (path === null) {\n\t\t\tpath = _empty;\n\t\t}\n\t\tif (query === undefined) {\n\t\t\tquery = this.query;\n\t\t} else if (query === null) {\n\t\t\tquery = _empty;\n\t\t}\n\t\tif (fragment === undefined) {\n\t\t\tfragment = this.fragment;\n\t\t} else if (fragment === null) {\n\t\t\tfragment = _empty;\n\t\t}\n\n\t\tif (scheme === this.scheme\n\t\t\t&& authority === this.authority\n\t\t\t&& path === this.path\n\t\t\t&& query === this.query\n\t\t\t&& fragment === this.fragment) {\n\n\t\t\treturn this;\n\t\t}\n\n\t\treturn new Uri(scheme, authority, path, query, fragment);\n\t}\n\n\t// ---- parse & validate ------------------------\n\n\t/**\n\t * Creates a new URI from a string, e.g. `http://www.msft.com/some/path`,\n\t * `file:///usr/home`, or `scheme:with/path`.\n\t *\n\t * @param value A string which represents an URI (see `URI#toString`).\n\t */\n\tstatic parse(value: string, _strict: boolean = false): URI {\n\t\tconst match = _regexp.exec(value);\n\t\tif (!match) {\n\t\t\treturn new Uri(_empty, _empty, _empty, _empty, _empty);\n\t\t}\n\t\treturn new Uri(\n\t\t\tmatch[2] || _empty,\n\t\t\tpercentDecode(match[4] || _empty),\n\t\t\tpercentDecode(match[5] || _empty),\n\t\t\tpercentDecode(match[7] || _empty),\n\t\t\tpercentDecode(match[9] || _empty),\n\t\t\t_strict\n\t\t);\n\t}\n\n\t/**\n\t * Creates a new URI from a file system path, e.g. `c:\\my\\files`,\n\t * `/usr/home`, or `\\\\server\\share\\some\\path`.\n\t *\n\t * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\n\t * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\n\t * `URI.parse('file://' + path)` because the path might contain characters that are\n\t * interpreted (# and ?). See the following sample:\n\t * ```ts\n\tconst good = URI.file('/coding/c#/project1');\n\tgood.scheme === 'file';\n\tgood.path === '/coding/c#/project1';\n\tgood.fragment === '';\n\tconst bad = URI.parse('file://' + '/coding/c#/project1');\n\tbad.scheme === 'file';\n\tbad.path === '/coding/c'; // path is now broken\n\tbad.fragment === '/project1';\n\t```\n\t *\n\t * @param path A file system path (see `URI#fsPath`)\n\t */\n\tstatic file(path: string): URI {\n\n\t\tlet authority = _empty;\n\n\t\t// normalize to fwd-slashes on windows,\n\t\t// on other systems bwd-slashes are valid\n\t\t// filename character, eg /f\\oo/ba\\r.txt\n\t\tif (isWindows) {\n\t\t\tpath = path.replace(/\\\\/g, _slash);\n\t\t}\n\n\t\t// check for authority as used in UNC shares\n\t\t// or use the path as given\n\t\tif (path[0] === _slash && path[1] === _slash) {\n\t\t\tconst idx = path.indexOf(_slash, 2);\n\t\t\tif (idx === -1) {\n\t\t\t\tauthority = path.substring(2);\n\t\t\t\tpath = _slash;\n\t\t\t} else {\n\t\t\t\tauthority = path.substring(2, idx);\n\t\t\t\tpath = path.substring(idx) || _slash;\n\t\t\t}\n\t\t}\n\n\t\treturn new Uri('file', authority, path, _empty, _empty);\n\t}\n\n\tstatic from(components: { scheme: string; authority?: string; path?: string; query?: string; fragment?: string }): URI {\n\t\treturn new Uri(\n\t\t\tcomponents.scheme,\n\t\t\tcomponents.authority,\n\t\t\tcomponents.path,\n\t\t\tcomponents.query,\n\t\t\tcomponents.fragment,\n\t\t);\n\t}\n\n\t/**\n\t * Join a URI path with path fragments and normalizes the resulting path.\n\t *\n\t * @param uri The input URI.\n\t * @param pathFragment The path fragment to add to the URI path.\n\t * @returns The resulting URI.\n\t */\n\tstatic joinPath(uri: URI, ...pathFragment: string[]): URI {\n\t\tif (!uri.path) {\n\t\t\tthrow new Error(`[UriError]: cannot call joinPaths on URI without path`);\n\t\t}\n\t\tlet newPath: string;\n\t\tif (isWindows && uri.scheme === 'file') {\n\t\t\tnewPath = URI.file(paths.win32.join(uriToFsPath(uri, true), ...pathFragment)).path;\n\t\t} else {\n\t\t\tnewPath = paths.posix.join(uri.path, ...pathFragment);\n\t\t}\n\t\treturn uri.with({ path: newPath });\n\t}\n\n\t// ---- printing/externalize ---------------------------\n\n\t/**\n\t * Creates a string representation for this URI. It's guaranteed that calling\n\t * `URI.parse` with the result of this function creates an URI which is equal\n\t * to this URI.\n\t *\n\t * * The result shall *not* be used for display purposes but for externalization or transport.\n\t * * The result will be encoded using the percentage encoding and encoding happens mostly\n\t * ignore the scheme-specific encoding rules.\n\t *\n\t * @param skipEncoding Do not encode the result, default is `false`\n\t */\n\ttoString(skipEncoding: boolean = false): string {\n\t\treturn _asFormatted(this, skipEncoding);\n\t}\n\n\ttoJSON(): UriComponents {\n\t\treturn this;\n\t}\n\n\tstatic revive(data: UriComponents | URI): URI;\n\tstatic revive(data: UriComponents | URI | undefined): URI | undefined;\n\tstatic revive(data: UriComponents | URI | null): URI | null;\n\tstatic revive(data: UriComponents | URI | undefined | null): URI | undefined | null;\n\tstatic revive(data: UriComponents | URI | undefined | null): URI | undefined | null {\n\t\tif (!data) {\n\t\t\treturn data;\n\t\t} else if (data instanceof URI) {\n\t\t\treturn data;\n\t\t} else {\n\t\t\tconst result = new Uri(data);\n\t\t\tresult._formatted = (<UriState>data).external;\n\t\t\tresult._fsPath = (<UriState>data)._sep === _pathSepMarker ? (<UriState>data).fsPath : null;\n\t\t\treturn result;\n\t\t}\n\t}\n}\n\nexport interface UriComponents {\n\tscheme: string;\n\tauthority: string;\n\tpath: string;\n\tquery: string;\n\tfragment: string;\n}\n\ninterface UriState extends UriComponents {\n\t$mid: number;\n\texternal: string;\n\tfsPath: string;\n\t_sep: 1 | undefined;\n}\n\nconst _pathSepMarker = isWindows ? 1 : undefined;\n\n// This class exists so that URI is compatibile with vscode.Uri (API).\nclass Uri extends URI {\n\n\t_formatted: string | null = null;\n\t_fsPath: string | null = null;\n\n\tget fsPath(): string {\n\t\tif (!this._fsPath) {\n\t\t\tthis._fsPath = uriToFsPath(this, false);\n\t\t}\n\t\treturn this._fsPath;\n\t}\n\n\ttoString(skipEncoding: boolean = false): string {\n\t\tif (!skipEncoding) {\n\t\t\tif (!this._formatted) {\n\t\t\t\tthis._formatted = _asFormatted(this, false);\n\t\t\t}\n\t\t\treturn this._formatted;\n\t\t} else {\n\t\t\t// we don't cache that\n\t\t\treturn _asFormatted(this, true);\n\t\t}\n\t}\n\n\ttoJSON(): UriComponents {\n\t\tconst res = <UriState>{\n\t\t\t$mid: 1\n\t\t};\n\t\t// cached state\n\t\tif (this._fsPath) {\n\t\t\tres.fsPath = this._fsPath;\n\t\t\tres._sep = _pathSepMarker;\n\t\t}\n\t\tif (this._formatted) {\n\t\t\tres.external = this._formatted;\n\t\t}\n\t\t// uri components\n\t\tif (this.path) {\n\t\t\tres.path = this.path;\n\t\t}\n\t\tif (this.scheme) {\n\t\t\tres.scheme = this.scheme;\n\t\t}\n\t\tif (this.authority) {\n\t\t\tres.authority = this.authority;\n\t\t}\n\t\tif (this.query) {\n\t\t\tres.query = this.query;\n\t\t}\n\t\tif (this.fragment) {\n\t\t\tres.fragment = this.fragment;\n\t\t}\n\t\treturn res;\n\t}\n}\n\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\nconst encodeTable: { [ch: number]: string } = {\n\t[CharCode.Colon]: '%3A', // gen-delims\n\t[CharCode.Slash]: '%2F',\n\t[CharCode.QuestionMark]: '%3F',\n\t[CharCode.Hash]: '%23',\n\t[CharCode.OpenSquareBracket]: '%5B',\n\t[CharCode.CloseSquareBracket]: '%5D',\n\t[CharCode.AtSign]: '%40',\n\n\t[CharCode.ExclamationMark]: '%21', // sub-delims\n\t[CharCode.DollarSign]: '%24',\n\t[CharCode.Ampersand]: '%26',\n\t[CharCode.SingleQuote]: '%27',\n\t[CharCode.OpenParen]: '%28',\n\t[CharCode.CloseParen]: '%29',\n\t[CharCode.Asterisk]: '%2A',\n\t[CharCode.Plus]: '%2B',\n\t[CharCode.Comma]: '%2C',\n\t[CharCode.Semicolon]: '%3B',\n\t[CharCode.Equals]: '%3D',\n\n\t[CharCode.Space]: '%20',\n};\n\nfunction encodeURIComponentFast(uriComponent: string, allowSlash: boolean): string {\n\tlet res: string | undefined = undefined;\n\tlet nativeEncodePos = -1;\n\n\tfor (let pos = 0; pos < uriComponent.length; pos++) {\n\t\tconst code = uriComponent.charCodeAt(pos);\n\n\t\t// unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\n\t\tif (\n\t\t\t(code >= CharCode.a && code <= CharCode.z)\n\t\t\t|| (code >= CharCode.A && code <= CharCode.Z)\n\t\t\t|| (code >= CharCode.Digit0 && code <= CharCode.Digit9)\n\t\t\t|| code === CharCode.Dash\n\t\t\t|| code === CharCode.Period\n\t\t\t|| code === CharCode.Underline\n\t\t\t|| code === CharCode.Tilde\n\t\t\t|| (allowSlash && code === CharCode.Slash)\n\t\t) {\n\t\t\t// check if we are delaying native encode\n\t\t\tif (nativeEncodePos !== -1) {\n\t\t\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n\t\t\t\tnativeEncodePos = -1;\n\t\t\t}\n\t\t\t// check if we write into a new string (by default we try to return the param)\n\t\t\tif (res !== undefined) {\n\t\t\t\tres += uriComponent.charAt(pos);\n\t\t\t}\n\n\t\t} else {\n\t\t\t// encoding needed, we need to allocate a new string\n\t\t\tif (res === undefined) {\n\t\t\t\tres = uriComponent.substr(0, pos);\n\t\t\t}\n\n\t\t\t// check with default table first\n\t\t\tconst escaped = encodeTable[code];\n\t\t\tif (escaped !== undefined) {\n\n\t\t\t\t// check if we are delaying native encode\n\t\t\t\tif (nativeEncodePos !== -1) {\n\t\t\t\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n\t\t\t\t\tnativeEncodePos = -1;\n\t\t\t\t}\n\n\t\t\t\t// append escaped variant to result\n\t\t\t\tres += escaped;\n\n\t\t\t} else if (nativeEncodePos === -1) {\n\t\t\t\t// use native encode only when needed\n\t\t\t\tnativeEncodePos = pos;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (nativeEncodePos !== -1) {\n\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n\t}\n\n\treturn res !== undefined ? res : uriComponent;\n}\n\nfunction encodeURIComponentMinimal(path: string): string {\n\tlet res: string | undefined = undefined;\n\tfor (let pos = 0; pos < path.length; pos++) {\n\t\tconst code = path.charCodeAt(pos);\n\t\tif (code === CharCode.Hash || code === CharCode.QuestionMark) {\n\t\t\tif (res === undefined) {\n\t\t\t\tres = path.substr(0, pos);\n\t\t\t}\n\t\t\tres += encodeTable[code];\n\t\t} else {\n\t\t\tif (res !== undefined) {\n\t\t\t\tres += path[pos];\n\t\t\t}\n\t\t}\n\t}\n\treturn res !== undefined ? res : path;\n}\n\n/**\n * Compute `fsPath` for the given uri\n */\nexport function uriToFsPath(uri: URI, keepDriveLetterCasing: boolean): string {\n\n\tlet value: string;\n\tif (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n\t\t// unc path: file://shares/c$/far/boo\n\t\tvalue = `//${uri.authority}${uri.path}`;\n\t} else if (\n\t\turi.path.charCodeAt(0) === CharCode.Slash\n\t\t&& (uri.path.charCodeAt(1) >= CharCode.A && uri.path.charCodeAt(1) <= CharCode.Z || uri.path.charCodeAt(1) >= CharCode.a && uri.path.charCodeAt(1) <= CharCode.z)\n\t\t&& uri.path.charCodeAt(2) === CharCode.Colon\n\t) {\n\t\tif (!keepDriveLetterCasing) {\n\t\t\t// windows drive letter: file:///c:/far/boo\n\t\t\tvalue = uri.path[1].toLowerCase() + uri.path.substr(2);\n\t\t} else {\n\t\t\tvalue = uri.path.substr(1);\n\t\t}\n\t} else {\n\t\t// other path\n\t\tvalue = uri.path;\n\t}\n\tif (isWindows) {\n\t\tvalue = value.replace(/\\//g, '\\\\');\n\t}\n\treturn value;\n}\n\n/**\n * Create the external version of a uri\n */\nfunction _asFormatted(uri: URI, skipEncoding: boolean): string {\n\n\tconst encoder = !skipEncoding\n\t\t? encodeURIComponentFast\n\t\t: encodeURIComponentMinimal;\n\n\tlet res = '';\n\tlet { scheme, authority, path, query, fragment } = uri;\n\tif (scheme) {\n\t\tres += scheme;\n\t\tres += ':';\n\t}\n\tif (authority || scheme === 'file') {\n\t\tres += _slash;\n\t\tres += _slash;\n\t}\n\tif (authority) {\n\t\tlet idx = authority.indexOf('@');\n\t\tif (idx !== -1) {\n\t\t\t// <user>@<auth>\n\t\t\tconst userinfo = authority.substr(0, idx);\n\t\t\tauthority = authority.substr(idx + 1);\n\t\t\tidx = userinfo.indexOf(':');\n\t\t\tif (idx === -1) {\n\t\t\t\tres += encoder(userinfo, false);\n\t\t\t} else {\n\t\t\t\t// <user>:<pass>@<auth>\n\t\t\t\tres += encoder(userinfo.substr(0, idx), false);\n\t\t\t\tres += ':';\n\t\t\t\tres += encoder(userinfo.substr(idx + 1), false);\n\t\t\t}\n\t\t\tres += '@';\n\t\t}\n\t\tauthority = authority.toLowerCase();\n\t\tidx = authority.indexOf(':');\n\t\tif (idx === -1) {\n\t\t\tres += encoder(authority, false);\n\t\t} else {\n\t\t\t// <auth>:<port>\n\t\t\tres += encoder(authority.substr(0, idx), false);\n\t\t\tres += authority.substr(idx);\n\t\t}\n\t}\n\tif (path) {\n\t\t// lower-case windows drive letters in /C:/fff or C:/fff\n\t\tif (path.length >= 3 && path.charCodeAt(0) === CharCode.Slash && path.charCodeAt(2) === CharCode.Colon) {\n\t\t\tconst code = path.charCodeAt(1);\n\t\t\tif (code >= CharCode.A && code <= CharCode.Z) {\n\t\t\t\tpath = `/${String.fromCharCode(code + 32)}:${path.substr(3)}`; // \"/c:\".length === 3\n\t\t\t}\n\t\t} else if (path.length >= 2 && path.charCodeAt(1) === CharCode.Colon) {\n\t\t\tconst code = path.charCodeAt(0);\n\t\t\tif (code >= CharCode.A && code <= CharCode.Z) {\n\t\t\t\tpath = `${String.fromCharCode(code + 32)}:${path.substr(2)}`; // \"/c:\".length === 3\n\t\t\t}\n\t\t}\n\t\t// encode the rest of the path\n\t\tres += encoder(path, true);\n\t}\n\tif (query) {\n\t\tres += '?';\n\t\tres += encoder(query, false);\n\t}\n\tif (fragment) {\n\t\tres += '#';\n\t\tres += !skipEncoding ? encodeURIComponentFast(fragment, false) : fragment;\n\t}\n\treturn res;\n}\n\n// --- decode\n\nfunction decodeURIComponentGraceful(str: string): string {\n\ttry {\n\t\treturn decodeURIComponent(str);\n\t} catch {\n\t\tif (str.length > 3) {\n\t\t\treturn str.substr(0, 3) + decodeURIComponentGraceful(str.substr(3));\n\t\t} else {\n\t\t\treturn str;\n\t\t}\n\t}\n}\n\nconst _rEncodedAsHex = /(%[0-9A-Za-z][0-9A-Za-z])+/g;\n\nfunction percentDecode(str: string): string {\n\tif (!str.match(_rEncodedAsHex)) {\n\t\treturn str;\n\t}\n\treturn str.replace(_rEncodedAsHex, (match) => decodeURIComponentGraceful(match));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\n\n/**\n * @deprecated use `FileAccess.asFileUri(relativePath, requireFn).fsPath`\n */\nexport function getPathFromAmdModule(requirefn: typeof require, relativePath: string): string {\n\treturn getUriFromAmdModule(requirefn, relativePath).fsPath;\n}\n\n/**\n * @deprecated use `FileAccess.asFileUri()` for node.js contexts or `FileAccess.asBrowserUri` for browser contexts.\n */\nexport function getUriFromAmdModule(requirefn: typeof require, relativePath: string): URI {\n\treturn URI.parse(requirefn.toUrl(relativePath));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\n\nexport interface IRemoteConsoleLog {\n\ttype: string;\n\tseverity: string;\n\targuments: string;\n}\n\ninterface IStackArgument {\n\t__$stack: string;\n}\n\nexport interface IStackFrame {\n\turi: URI;\n\tline: number;\n\tcolumn: number;\n}\n\nexport function isRemoteConsoleLog(obj: any): obj is IRemoteConsoleLog {\n\tconst entry = obj as IRemoteConsoleLog;\n\n\treturn entry && typeof entry.type === 'string' && typeof entry.severity === 'string';\n}\n\nexport function parse(entry: IRemoteConsoleLog): { args: any[], stack?: string } {\n\tconst args: any[] = [];\n\tlet stack: string | undefined;\n\n\t// Parse Entry\n\ttry {\n\t\tconst parsedArguments: any[] = JSON.parse(entry.arguments);\n\n\t\t// Check for special stack entry as last entry\n\t\tconst stackArgument = parsedArguments[parsedArguments.length - 1] as IStackArgument;\n\t\tif (stackArgument && stackArgument.__$stack) {\n\t\t\tparsedArguments.pop(); // stack is handled specially\n\t\t\tstack = stackArgument.__$stack;\n\t\t}\n\n\t\targs.push(...parsedArguments);\n\t} catch (error) {\n\t\targs.push('Unable to log remote console arguments', entry.arguments);\n\t}\n\n\treturn { args, stack };\n}\n\nexport function getFirstFrame(entry: IRemoteConsoleLog): IStackFrame | undefined;\nexport function getFirstFrame(stack: string | undefined): IStackFrame | undefined;\nexport function getFirstFrame(arg0: IRemoteConsoleLog | string | undefined): IStackFrame | undefined {\n\tif (typeof arg0 !== 'string') {\n\t\treturn getFirstFrame(parse(arg0!).stack);\n\t}\n\n\t// Parse a source information out of the stack if we have one. Format can be:\n\t// at vscode.commands.registerCommand (/Users/someone/Desktop/test-ts/out/src/extension.js:18:17)\n\t// or\n\t// at /Users/someone/Desktop/test-ts/out/src/extension.js:18:17\n\t// or\n\t// at c:\\Users\\someone\\Desktop\\end-js\\extension.js:19:17\n\t// or\n\t// at e.$executeContributedCommand(c:\\Users\\someone\\Desktop\\end-js\\extension.js:19:17)\n\tconst stack = arg0;\n\tif (stack) {\n\t\tconst topFrame = findFirstFrame(stack);\n\n\t\t// at [^\\/]* => line starts with \"at\" followed by any character except '/' (to not capture unix paths too late)\n\t\t// (?:(?:[a-zA-Z]+:)|(?:[\\/])|(?:\\\\\\\\) => windows drive letter OR unix root OR unc root\n\t\t// (?:.+) => simple pattern for the path, only works because of the line/col pattern after\n\t\t// :(?:\\d+):(?:\\d+) => :line:column data\n\t\tconst matches = /at [^\\/]*((?:(?:[a-zA-Z]+:)|(?:[\\/])|(?:\\\\\\\\))(?:.+)):(\\d+):(\\d+)/.exec(topFrame || '');\n\t\tif (matches && matches.length === 4) {\n\t\t\treturn {\n\t\t\t\turi: URI.file(matches[1]),\n\t\t\t\tline: Number(matches[2]),\n\t\t\t\tcolumn: Number(matches[3])\n\t\t\t};\n\t\t}\n\t}\n\n\treturn undefined;\n}\n\nfunction findFirstFrame(stack: string | undefined): string | undefined {\n\tif (!stack) {\n\t\treturn stack;\n\t}\n\n\tconst newlineIndex = stack.indexOf('\\n');\n\tif (newlineIndex === -1) {\n\t\treturn stack;\n\t}\n\n\treturn stack.substring(0, newlineIndex);\n}\n\nexport function log(entry: IRemoteConsoleLog, label: string): void {\n\tconst { args, stack } = parse(entry);\n\n\tconst isOneStringArg = typeof args[0] === 'string' && args.length === 1;\n\n\tlet topFrame = findFirstFrame(stack);\n\tif (topFrame) {\n\t\ttopFrame = `(${topFrame.trim()})`;\n\t}\n\n\tlet consoleArgs: string[] = [];\n\n\t// First arg is a string\n\tif (typeof args[0] === 'string') {\n\t\tif (topFrame && isOneStringArg) {\n\t\t\tconsoleArgs = [`%c[${label}] %c${args[0]} %c${topFrame}`, color('blue'), color(''), color('grey')];\n\t\t} else {\n\t\t\tconsoleArgs = [`%c[${label}] %c${args[0]}`, color('blue'), color(''), ...args.slice(1)];\n\t\t}\n\t}\n\n\t// First arg is something else, just apply all\n\telse {\n\t\tconsoleArgs = [`%c[${label}]%`, color('blue'), ...args];\n\t}\n\n\t// Stack: add to args unless already aded\n\tif (topFrame && !isOneStringArg) {\n\t\tconsoleArgs.push(topFrame);\n\t}\n\n\t// Log it\n\tif (typeof (console as any)[entry.severity] !== 'function') {\n\t\tthrow new Error('Unknown console method');\n\t}\n\t(console as any)[entry.severity].apply(console, consoleArgs);\n}\n\nfunction color(color: string): string {\n\treturn `color: ${color}`;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { regExpFlags } from 'vs/base/common/strings';\nimport { URI, UriComponents } from 'vs/base/common/uri';\n\nexport function stringify(obj: any): string {\n\treturn JSON.stringify(obj, replacer);\n}\n\nexport function parse(text: string): any {\n\tlet data = JSON.parse(text);\n\tdata = revive(data);\n\treturn data;\n}\n\nexport interface MarshalledObject {\n\t$mid: number;\n}\n\nfunction replacer(key: string, value: any): any {\n\t// URI is done via toJSON-member\n\tif (value instanceof RegExp) {\n\t\treturn {\n\t\t\t$mid: 2,\n\t\t\tsource: value.source,\n\t\t\tflags: regExpFlags(value),\n\t\t};\n\t}\n\treturn value;\n}\n\n\ntype Deserialize<T> = T extends UriComponents ? URI\n\t: T extends object\n\t? Revived<T>\n\t: T;\n\nexport type Revived<T> = { [K in keyof T]: Deserialize<T[K]> };\n\nexport function revive<T = any>(obj: any, depth = 0): Revived<T> {\n\tif (!obj || depth > 200) {\n\t\treturn obj;\n\t}\n\n\tif (typeof obj === 'object') {\n\n\t\tswitch ((<MarshalledObject>obj).$mid) {\n\t\t\tcase 1: return <any>URI.revive(obj);\n\t\t\tcase 2: return <any>new RegExp(obj.source, obj.flags);\n\t\t}\n\n\t\tif (\n\t\t\tobj instanceof VSBuffer\n\t\t\t|| obj instanceof Uint8Array\n\t\t) {\n\t\t\treturn <any>obj;\n\t\t}\n\n\t\tif (Array.isArray(obj)) {\n\t\t\tfor (let i = 0; i < obj.length; ++i) {\n\t\t\t\tobj[i] = revive(obj[i], depth + 1);\n\t\t\t}\n\t\t} else {\n\t\t\t// walk object\n\t\t\tfor (const key in obj) {\n\t\t\t\tif (Object.hasOwnProperty.call(obj, key)) {\n\t\t\t\t\tobj[key] = revive(obj[key], depth + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn obj;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport * as platform from 'vs/base/common/platform';\n\nexport namespace Schemas {\n\n\t/**\n\t * A schema that is used for models that exist in memory\n\t * only and that have no correspondence on a server or such.\n\t */\n\texport const inMemory = 'inmemory';\n\n\t/**\n\t * A schema that is used for setting files\n\t */\n\texport const vscode = 'vscode';\n\n\t/**\n\t * A schema that is used for internal private files\n\t */\n\texport const internal = 'private';\n\n\t/**\n\t * A walk-through document.\n\t */\n\texport const walkThrough = 'walkThrough';\n\n\t/**\n\t * An embedded code snippet.\n\t */\n\texport const walkThroughSnippet = 'walkThroughSnippet';\n\n\texport const http = 'http';\n\n\texport const https = 'https';\n\n\texport const file = 'file';\n\n\texport const mailto = 'mailto';\n\n\texport const untitled = 'untitled';\n\n\texport const data = 'data';\n\n\texport const command = 'command';\n\n\texport const vscodeRemote = 'vscode-remote';\n\n\texport const vscodeRemoteResource = 'vscode-remote-resource';\n\n\texport const userData = 'vscode-userdata';\n\n\texport const vscodeCustomEditor = 'vscode-custom-editor';\n\n\texport const vscodeNotebook = 'vscode-notebook';\n\n\texport const vscodeNotebookCell = 'vscode-notebook-cell';\n\n\texport const vscodeSettings = 'vscode-settings';\n\n\texport const webviewPanel = 'webview-panel';\n\n\t/**\n\t * Scheme used for loading the wrapper html and script in webviews.\n\t */\n\texport const vscodeWebview = 'vscode-webview';\n\n\t/**\n\t * Scheme used for loading resources inside of webviews.\n\t */\n\texport const vscodeWebviewResource = 'vscode-webview-resource';\n\n\t/**\n\t * Scheme used for extension pages\n\t */\n\texport const extension = 'extension';\n}\n\nclass RemoteAuthoritiesImpl {\n\tprivate readonly _hosts: { [authority: string]: string | undefined; } = Object.create(null);\n\tprivate readonly _ports: { [authority: string]: number | undefined; } = Object.create(null);\n\tprivate readonly _connectionTokens: { [authority: string]: string | undefined; } = Object.create(null);\n\tprivate _preferredWebSchema: 'http' | 'https' = 'http';\n\tprivate _delegate: ((uri: URI) => URI) | null = null;\n\n\tsetPreferredWebSchema(schema: 'http' | 'https') {\n\t\tthis._preferredWebSchema = schema;\n\t}\n\n\tsetDelegate(delegate: (uri: URI) => URI): void {\n\t\tthis._delegate = delegate;\n\t}\n\n\tset(authority: string, host: string, port: number): void {\n\t\tthis._hosts[authority] = host;\n\t\tthis._ports[authority] = port;\n\t}\n\n\tsetConnectionToken(authority: string, connectionToken: string): void {\n\t\tthis._connectionTokens[authority] = connectionToken;\n\t}\n\n\trewrite(uri: URI): URI {\n\t\tif (this._delegate) {\n\t\t\treturn this._delegate(uri);\n\t\t}\n\t\tconst authority = uri.authority;\n\t\tlet host = this._hosts[authority];\n\t\tif (host && host.indexOf(':') !== -1) {\n\t\t\thost = `[${host}]`;\n\t\t}\n\t\t// const port = this._ports[authority];\n\t\tconst connectionToken = this._connectionTokens[authority];\n\t\tlet query = `path=${encodeURIComponent(uri.path)}`;\n\t\tif (typeof connectionToken === 'string') {\n\t\t\tquery += `&tkn=${encodeURIComponent(connectionToken)}`;\n\t\t}\n\t\t// NOTE@coder: Changed this to work against the current path.\n\t\treturn URI.from({\n\t\t\tscheme: platform.isWeb ? this._preferredWebSchema : Schemas.vscodeRemoteResource,\n\t\t\tauthority: window.location.host,\n\t\t\tpath: `${window.location.pathname.replace(/\\/+$/, '')}/vscode-remote-resource`,\n\t\t\tquery\n\t\t});\n\t}\n}\n\nexport const RemoteAuthorities = new RemoteAuthoritiesImpl();\n\nclass FileAccessImpl {\n\n\t/**\n\t * Returns a URI to use in contexts where the browser is responsible\n\t * for loading (e.g. fetch()) or when used within the DOM.\n\t *\n\t * **Note:** use `dom.ts#asCSSUrl` whenever the URL is to be used in CSS context.\n\t */\n\tasBrowserUri(uri: URI): URI;\n\tasBrowserUri(moduleId: string, moduleIdToUrl: { toUrl(moduleId: string): string }): URI;\n\tasBrowserUri(uriOrModule: URI | string, moduleIdToUrl?: { toUrl(moduleId: string): string }): URI {\n\t\tconst uri = this.toUri(uriOrModule, moduleIdToUrl);\n\n\t\tif (uri.scheme === Schemas.vscodeRemote) {\n\t\t\treturn RemoteAuthorities.rewrite(uri);\n\t\t}\n\n\t\treturn uri;\n\t}\n\n\t/**\n\t * Returns the `file` URI to use in contexts where node.js\n\t * is responsible for loading.\n\t */\n\tasFileUri(uri: URI): URI;\n\tasFileUri(moduleId: string, moduleIdToUrl: { toUrl(moduleId: string): string }): URI;\n\tasFileUri(uriOrModule: URI | string, moduleIdToUrl?: { toUrl(moduleId: string): string }): URI {\n\t\tconst uri = this.toUri(uriOrModule, moduleIdToUrl);\n\n\t\treturn uri;\n\t}\n\n\tprivate toUri(uriOrModule: URI | string, moduleIdToUrl?: { toUrl(moduleId: string): string }): URI {\n\t\tif (URI.isUri(uriOrModule)) {\n\t\t\treturn uriOrModule;\n\t\t}\n\n\t\treturn URI.parse(moduleIdToUrl!.toUrl(uriOrModule));\n\t}\n}\n\nexport const FileAccess = new FileAccessImpl();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { compareSubstringIgnoreCase, compare, compareSubstring, compareIgnoreCase } from 'vs/base/common/strings';\nimport { isLinux } from 'vs/base/common/platform';\nimport { Schemas } from 'vs/base/common/network';\n\nexport function getOrSet<K, V>(map: Map<K, V>, key: K, value: V): V {\n\tlet result = map.get(key);\n\tif (result === undefined) {\n\t\tresult = value;\n\t\tmap.set(key, result);\n\t}\n\n\treturn result;\n}\n\nexport function mapToString<K, V>(map: Map<K, V>): string {\n\tconst entries: string[] = [];\n\tmap.forEach((value, key) => {\n\t\tentries.push(`${key} => ${value}`);\n\t});\n\n\treturn `Map(${map.size}) {${entries.join(', ')}}`;\n}\n\nexport function setToString<K>(set: Set<K>): string {\n\tconst entries: K[] = [];\n\tset.forEach(value => {\n\t\tentries.push(value);\n\t});\n\n\treturn `Set(${set.size}) {${entries.join(', ')}}`;\n}\n\nexport interface IKeyIterator<K> {\n\treset(key: K): this;\n\tnext(): this;\n\n\thasNext(): boolean;\n\tcmp(a: string): number;\n\tvalue(): string;\n}\n\nexport class StringIterator implements IKeyIterator<string> {\n\n\tprivate _value: string = '';\n\tprivate _pos: number = 0;\n\n\treset(key: string): this {\n\t\tthis._value = key;\n\t\tthis._pos = 0;\n\t\treturn this;\n\t}\n\n\tnext(): this {\n\t\tthis._pos += 1;\n\t\treturn this;\n\t}\n\n\thasNext(): boolean {\n\t\treturn this._pos < this._value.length - 1;\n\t}\n\n\tcmp(a: string): number {\n\t\tconst aCode = a.charCodeAt(0);\n\t\tconst thisCode = this._value.charCodeAt(this._pos);\n\t\treturn aCode - thisCode;\n\t}\n\n\tvalue(): string {\n\t\treturn this._value[this._pos];\n\t}\n}\n\nexport class PathIterator implements IKeyIterator<string> {\n\n\tprivate _value!: string;\n\tprivate _from!: number;\n\tprivate _to!: number;\n\n\tconstructor(\n\t\tprivate readonly _splitOnBackslash: boolean = true,\n\t\tprivate readonly _caseSensitive: boolean = true\n\t) { }\n\n\treset(key: string): this {\n\t\tthis._value = key.replace(/\\\\$|\\/$/, '');\n\t\tthis._from = 0;\n\t\tthis._to = 0;\n\t\treturn this.next();\n\t}\n\n\thasNext(): boolean {\n\t\treturn this._to < this._value.length;\n\t}\n\n\tnext(): this {\n\t\t// this._data = key.split(/[\\\\/]/).filter(s => !!s);\n\t\tthis._from = this._to;\n\t\tlet justSeps = true;\n\t\tfor (; this._to < this._value.length; this._to++) {\n\t\t\tconst ch = this._value.charCodeAt(this._to);\n\t\t\tif (ch === CharCode.Slash || this._splitOnBackslash && ch === CharCode.Backslash) {\n\t\t\t\tif (justSeps) {\n\t\t\t\t\tthis._from++;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tjustSeps = false;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\tcmp(a: string): number {\n\t\treturn this._caseSensitive\n\t\t\t? compareSubstring(a, this._value, 0, a.length, this._from, this._to)\n\t\t\t: compareSubstringIgnoreCase(a, this._value, 0, a.length, this._from, this._to);\n\t}\n\n\tvalue(): string {\n\t\treturn this._value.substring(this._from, this._to);\n\t}\n}\n\nconst enum UriIteratorState {\n\tScheme = 1, Authority = 2, Path = 3, Query = 4, Fragment = 5\n}\n\nexport class UriIterator implements IKeyIterator<URI> {\n\n\tprivate _pathIterator!: PathIterator;\n\tprivate _value!: URI;\n\tprivate _states: UriIteratorState[] = [];\n\tprivate _stateIdx: number = 0;\n\n\tconstructor(private readonly _ignorePathCasing: boolean | undefined) { }\n\n\treset(key: URI): this {\n\t\tthis._value = key;\n\t\tthis._states = [];\n\t\tif (this._value.scheme) {\n\t\t\tthis._states.push(UriIteratorState.Scheme);\n\t\t}\n\t\tif (this._value.authority) {\n\t\t\tthis._states.push(UriIteratorState.Authority);\n\t\t}\n\t\tif (this._value.path) {\n\t\t\tthis._pathIterator = new PathIterator(false, this._ignorePathCasing === undefined\n\t\t\t\t? key.scheme === Schemas.file && isLinux\n\t\t\t\t: !this._ignorePathCasing\n\t\t\t);\n\t\t\tthis._pathIterator.reset(key.path);\n\t\t\tif (this._pathIterator.value()) {\n\t\t\t\tthis._states.push(UriIteratorState.Path);\n\t\t\t}\n\t\t}\n\t\tif (this._value.query) {\n\t\t\tthis._states.push(UriIteratorState.Query);\n\t\t}\n\t\tif (this._value.fragment) {\n\t\t\tthis._states.push(UriIteratorState.Fragment);\n\t\t}\n\t\tthis._stateIdx = 0;\n\t\treturn this;\n\t}\n\n\tnext(): this {\n\t\tif (this._states[this._stateIdx] === UriIteratorState.Path && this._pathIterator.hasNext()) {\n\t\t\tthis._pathIterator.next();\n\t\t} else {\n\t\t\tthis._stateIdx += 1;\n\t\t}\n\t\treturn this;\n\t}\n\n\thasNext(): boolean {\n\t\treturn (this._states[this._stateIdx] === UriIteratorState.Path && this._pathIterator.hasNext())\n\t\t\t|| this._stateIdx < this._states.length - 1;\n\t}\n\n\tcmp(a: string): number {\n\t\tif (this._states[this._stateIdx] === UriIteratorState.Scheme) {\n\t\t\treturn compareIgnoreCase(a, this._value.scheme);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Authority) {\n\t\t\treturn compareIgnoreCase(a, this._value.authority);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Path) {\n\t\t\treturn this._pathIterator.cmp(a);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Query) {\n\t\t\treturn compare(a, this._value.query);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Fragment) {\n\t\t\treturn compare(a, this._value.fragment);\n\t\t}\n\t\tthrow new Error();\n\t}\n\n\tvalue(): string {\n\t\tif (this._states[this._stateIdx] === UriIteratorState.Scheme) {\n\t\t\treturn this._value.scheme;\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Authority) {\n\t\t\treturn this._value.authority;\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Path) {\n\t\t\treturn this._pathIterator.value();\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Query) {\n\t\t\treturn this._value.query;\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Fragment) {\n\t\t\treturn this._value.fragment;\n\t\t}\n\t\tthrow new Error();\n\t}\n}\n\nclass TernarySearchTreeNode<K, V> {\n\tsegment!: string;\n\tvalue: V | undefined;\n\tkey!: K;\n\tleft: TernarySearchTreeNode<K, V> | undefined;\n\tmid: TernarySearchTreeNode<K, V> | undefined;\n\tright: TernarySearchTreeNode<K, V> | undefined;\n\n\tisEmpty(): boolean {\n\t\treturn !this.left && !this.mid && !this.right && !this.value;\n\t}\n}\n\nexport class TernarySearchTree<K, V> {\n\n\tstatic forUris<E>(ignorePathCasing?: boolean): TernarySearchTree<URI, E> {\n\t\treturn new TernarySearchTree<URI, E>(new UriIterator(ignorePathCasing));\n\t}\n\n\tstatic forPaths<E>(): TernarySearchTree<string, E> {\n\t\treturn new TernarySearchTree<string, E>(new PathIterator());\n\t}\n\n\tstatic forStrings<E>(): TernarySearchTree<string, E> {\n\t\treturn new TernarySearchTree<string, E>(new StringIterator());\n\t}\n\n\tprivate _iter: IKeyIterator<K>;\n\tprivate _root: TernarySearchTreeNode<K, V> | undefined;\n\n\tconstructor(segments: IKeyIterator<K>) {\n\t\tthis._iter = segments;\n\t}\n\n\tclear(): void {\n\t\tthis._root = undefined;\n\t}\n\n\tset(key: K, element: V): V | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node: TernarySearchTreeNode<K, V>;\n\n\t\tif (!this._root) {\n\t\t\tthis._root = new TernarySearchTreeNode<K, V>();\n\t\t\tthis._root.segment = iter.value();\n\t\t}\n\n\t\tnode = this._root;\n\t\twhile (true) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tif (!node.left) {\n\t\t\t\t\tnode.left = new TernarySearchTreeNode<K, V>();\n\t\t\t\t\tnode.left.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tnode = node.left;\n\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tif (!node.right) {\n\t\t\t\t\tnode.right = new TernarySearchTreeNode<K, V>();\n\t\t\t\t\tnode.right.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tnode = node.right;\n\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tif (!node.mid) {\n\t\t\t\t\tnode.mid = new TernarySearchTreeNode<K, V>();\n\t\t\t\t\tnode.mid.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tconst oldElement = node.value;\n\t\tnode.value = element;\n\t\tnode.key = key;\n\t\treturn oldElement;\n\t}\n\n\tget(key: K): V | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn node ? node.value : undefined;\n\t}\n\n\tdelete(key: K): void {\n\t\treturn this._delete(key, false);\n\t}\n\n\tdeleteSuperstr(key: K): void {\n\t\treturn this._delete(key, true);\n\t}\n\n\tprivate _delete(key: K, superStr: boolean): void {\n\t\tconst iter = this._iter.reset(key);\n\t\tconst stack: [-1 | 0 | 1, TernarySearchTreeNode<K, V>][] = [];\n\t\tlet node = this._root;\n\n\t\t// find and unset node\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tstack.push([1, node]);\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tstack.push([-1, node]);\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tstack.push([0, node]);\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\t// remove element\n\t\t\t\tnode.value = undefined;\n\n\t\t\t\t// clean up empty nodes\n\t\t\t\twhile (stack.length > 0 && (node.isEmpty() || superStr)) {\n\t\t\t\t\tlet [dir, parent] = stack.pop()!;\n\t\t\t\t\tswitch (dir) {\n\t\t\t\t\t\tcase 1: parent.left = undefined; break;\n\t\t\t\t\t\tcase 0: parent.mid = undefined; break;\n\t\t\t\t\t\tcase -1: parent.right = undefined; break;\n\t\t\t\t\t}\n\t\t\t\t\tnode = parent;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tfindSubstr(key: K): V | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\tlet candidate: V | undefined = undefined;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tcandidate = node.value || candidate;\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn node && node.value || candidate;\n\t}\n\n\tfindSuperstr(key: K): Iterator<V> | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\t// collect\n\t\t\t\tif (!node.mid) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t} else {\n\t\t\t\t\treturn this._values(node.mid);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tforEach(callback: (value: V, index: K) => any): void {\n\t\tfor (const [key, value] of this) {\n\t\t\tcallback(value, key);\n\t\t}\n\t}\n\n\t*[Symbol.iterator](): IterableIterator<[K, V]> {\n\t\tyield* this._entries(this._root);\n\t}\n\n\tprivate *_values(node: TernarySearchTreeNode<K, V>): IterableIterator<V> {\n\t\tfor (const [, value] of this._entries(node)) {\n\t\t\tyield value;\n\t\t}\n\t}\n\n\tprivate *_entries(node: TernarySearchTreeNode<K, V> | undefined): IterableIterator<[K, V]> {\n\t\tif (node) {\n\t\t\t// left\n\t\t\tyield* this._entries(node.left);\n\n\t\t\t// node\n\t\t\tif (node.value) {\n\t\t\t\t// callback(node.value, this._iter.join(parts));\n\t\t\t\tyield [node.key, node.value];\n\t\t\t}\n\t\t\t// mid\n\t\t\tyield* this._entries(node.mid);\n\n\t\t\t// right\n\t\t\tyield* this._entries(node.right);\n\t\t}\n\t}\n}\n\ninterface ResourceMapKeyFn {\n\t(resource: URI): string;\n}\n\nexport class ResourceMap<T> implements Map<URI, T> {\n\n\tprivate static readonly defaultToKey = (resource: URI) => resource.toString();\n\n\treadonly [Symbol.toStringTag] = 'ResourceMap';\n\n\tprivate readonly map: Map<string, T>;\n\tprivate readonly toKey: ResourceMapKeyFn;\n\n\t/**\n\t *\n\t * @param toKey Custom uri identity function, e.g use an existing `IExtUri#getComparison`-util\n\t */\n\tconstructor(toKey?: ResourceMapKeyFn);\n\n\t/**\n\t *\n\t * @param other Another resource which this maps is created from\n\t * @param toKey Custom uri identity function, e.g use an existing `IExtUri#getComparison`-util\n\t */\n\tconstructor(other?: ResourceMap<T>, toKey?: ResourceMapKeyFn);\n\n\tconstructor(mapOrKeyFn?: ResourceMap<T> | ResourceMapKeyFn, toKey?: ResourceMapKeyFn) {\n\t\tif (mapOrKeyFn instanceof ResourceMap) {\n\t\t\tthis.map = new Map(mapOrKeyFn.map);\n\t\t\tthis.toKey = toKey ?? ResourceMap.defaultToKey;\n\t\t} else {\n\t\t\tthis.map = new Map();\n\t\t\tthis.toKey = mapOrKeyFn ?? ResourceMap.defaultToKey;\n\t\t}\n\t}\n\n\tset(resource: URI, value: T): this {\n\t\tthis.map.set(this.toKey(resource), value);\n\t\treturn this;\n\t}\n\n\tget(resource: URI): T | undefined {\n\t\treturn this.map.get(this.toKey(resource));\n\t}\n\n\thas(resource: URI): boolean {\n\t\treturn this.map.has(this.toKey(resource));\n\t}\n\n\tget size(): number {\n\t\treturn this.map.size;\n\t}\n\n\tclear(): void {\n\t\tthis.map.clear();\n\t}\n\n\tdelete(resource: URI): boolean {\n\t\treturn this.map.delete(this.toKey(resource));\n\t}\n\n\tforEach(clb: (value: T, key: URI, map: Map<URI, T>) => void, thisArg?: any): void {\n\t\tif (typeof thisArg !== 'undefined') {\n\t\t\tclb = clb.bind(thisArg);\n\t\t}\n\t\tfor (let [index, value] of this.map) {\n\t\t\tclb(value, URI.parse(index), <any>this);\n\t\t}\n\t}\n\n\tvalues(): IterableIterator<T> {\n\t\treturn this.map.values();\n\t}\n\n\t*keys(): IterableIterator<URI> {\n\t\tfor (let key of this.map.keys()) {\n\t\t\tyield URI.parse(key);\n\t\t}\n\t}\n\n\t*entries(): IterableIterator<[URI, T]> {\n\t\tfor (let tuple of this.map.entries()) {\n\t\t\tyield [URI.parse(tuple[0]), tuple[1]];\n\t\t}\n\t}\n\n\t*[Symbol.iterator](): IterableIterator<[URI, T]> {\n\t\tfor (let item of this.map) {\n\t\t\tyield [URI.parse(item[0]), item[1]];\n\t\t}\n\t}\n}\n\ninterface Item<K, V> {\n\tprevious: Item<K, V> | undefined;\n\tnext: Item<K, V> | undefined;\n\tkey: K;\n\tvalue: V;\n}\n\nexport const enum Touch {\n\tNone = 0,\n\tAsOld = 1,\n\tAsNew = 2\n}\n\nexport class LinkedMap<K, V> implements Map<K, V> {\n\n\treadonly [Symbol.toStringTag] = 'LinkedMap';\n\n\tprivate _map: Map<K, Item<K, V>>;\n\tprivate _head: Item<K, V> | undefined;\n\tprivate _tail: Item<K, V> | undefined;\n\tprivate _size: number;\n\n\tprivate _state: number;\n\n\tconstructor() {\n\t\tthis._map = new Map<K, Item<K, V>>();\n\t\tthis._head = undefined;\n\t\tthis._tail = undefined;\n\t\tthis._size = 0;\n\t\tthis._state = 0;\n\t}\n\n\tclear(): void {\n\t\tthis._map.clear();\n\t\tthis._head = undefined;\n\t\tthis._tail = undefined;\n\t\tthis._size = 0;\n\t\tthis._state++;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn !this._head && !this._tail;\n\t}\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tget first(): V | undefined {\n\t\treturn this._head?.value;\n\t}\n\n\tget last(): V | undefined {\n\t\treturn this._tail?.value;\n\t}\n\n\thas(key: K): boolean {\n\t\treturn this._map.has(key);\n\t}\n\n\tget(key: K, touch: Touch = Touch.None): V | undefined {\n\t\tconst item = this._map.get(key);\n\t\tif (!item) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (touch !== Touch.None) {\n\t\t\tthis.touch(item, touch);\n\t\t}\n\t\treturn item.value;\n\t}\n\n\tset(key: K, value: V, touch: Touch = Touch.None): this {\n\t\tlet item = this._map.get(key);\n\t\tif (item) {\n\t\t\titem.value = value;\n\t\t\tif (touch !== Touch.None) {\n\t\t\t\tthis.touch(item, touch);\n\t\t\t}\n\t\t} else {\n\t\t\titem = { key, value, next: undefined, previous: undefined };\n\t\t\tswitch (touch) {\n\t\t\t\tcase Touch.None:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Touch.AsOld:\n\t\t\t\t\tthis.addItemFirst(item);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Touch.AsNew:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis._map.set(key, item);\n\t\t\tthis._size++;\n\t\t}\n\t\treturn this;\n\t}\n\n\tdelete(key: K): boolean {\n\t\treturn !!this.remove(key);\n\t}\n\n\tremove(key: K): V | undefined {\n\t\tconst item = this._map.get(key);\n\t\tif (!item) {\n\t\t\treturn undefined;\n\t\t}\n\t\tthis._map.delete(key);\n\t\tthis.removeItem(item);\n\t\tthis._size--;\n\t\treturn item.value;\n\t}\n\n\tshift(): V | undefined {\n\t\tif (!this._head && !this._tail) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (!this._head || !this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t}\n\t\tconst item = this._head;\n\t\tthis._map.delete(item.key);\n\t\tthis.removeItem(item);\n\t\tthis._size--;\n\t\treturn item.value;\n\t}\n\n\tforEach(callbackfn: (value: V, key: K, map: LinkedMap<K, V>) => void, thisArg?: any): void {\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\twhile (current) {\n\t\t\tif (thisArg) {\n\t\t\t\tcallbackfn.bind(thisArg)(current.value, current.key, this);\n\t\t\t} else {\n\t\t\t\tcallbackfn(current.value, current.key, this);\n\t\t\t}\n\t\t\tif (this._state !== state) {\n\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t}\n\t\t\tcurrent = current.next;\n\t\t}\n\t}\n\n\tkeys(): IterableIterator<K> {\n\t\tconst map = this;\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\tconst iterator: IterableIterator<K> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext(): IteratorResult<K> {\n\t\t\t\tif (map._state !== state) {\n\t\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t\t}\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result = { value: current.key, done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\tvalues(): IterableIterator<V> {\n\t\tconst map = this;\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\tconst iterator: IterableIterator<V> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext(): IteratorResult<V> {\n\t\t\t\tif (map._state !== state) {\n\t\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t\t}\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result = { value: current.value, done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\tentries(): IterableIterator<[K, V]> {\n\t\tconst map = this;\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\tconst iterator: IterableIterator<[K, V]> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext(): IteratorResult<[K, V]> {\n\t\t\t\tif (map._state !== state) {\n\t\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t\t}\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result: IteratorResult<[K, V]> = { value: [current.key, current.value], done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\t[Symbol.iterator](): IterableIterator<[K, V]> {\n\t\treturn this.entries();\n\t}\n\n\tprotected trimOld(newSize: number) {\n\t\tif (newSize >= this.size) {\n\t\t\treturn;\n\t\t}\n\t\tif (newSize === 0) {\n\t\t\tthis.clear();\n\t\t\treturn;\n\t\t}\n\t\tlet current = this._head;\n\t\tlet currentSize = this.size;\n\t\twhile (current && currentSize > newSize) {\n\t\t\tthis._map.delete(current.key);\n\t\t\tcurrent = current.next;\n\t\t\tcurrentSize--;\n\t\t}\n\t\tthis._head = current;\n\t\tthis._size = currentSize;\n\t\tif (current) {\n\t\t\tcurrent.previous = undefined;\n\t\t}\n\t\tthis._state++;\n\t}\n\n\tprivate addItemFirst(item: Item<K, V>): void {\n\t\t// First time Insert\n\t\tif (!this._head && !this._tail) {\n\t\t\tthis._tail = item;\n\t\t} else if (!this._head) {\n\t\t\tthrow new Error('Invalid list');\n\t\t} else {\n\t\t\titem.next = this._head;\n\t\t\tthis._head.previous = item;\n\t\t}\n\t\tthis._head = item;\n\t\tthis._state++;\n\t}\n\n\tprivate addItemLast(item: Item<K, V>): void {\n\t\t// First time Insert\n\t\tif (!this._head && !this._tail) {\n\t\t\tthis._head = item;\n\t\t} else if (!this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t} else {\n\t\t\titem.previous = this._tail;\n\t\t\tthis._tail.next = item;\n\t\t}\n\t\tthis._tail = item;\n\t\tthis._state++;\n\t}\n\n\tprivate removeItem(item: Item<K, V>): void {\n\t\tif (item === this._head && item === this._tail) {\n\t\t\tthis._head = undefined;\n\t\t\tthis._tail = undefined;\n\t\t}\n\t\telse if (item === this._head) {\n\t\t\t// This can only happend if size === 1 which is handle\n\t\t\t// by the case above.\n\t\t\tif (!item.next) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\titem.next.previous = undefined;\n\t\t\tthis._head = item.next;\n\t\t}\n\t\telse if (item === this._tail) {\n\t\t\t// This can only happend if size === 1 which is handle\n\t\t\t// by the case above.\n\t\t\tif (!item.previous) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\titem.previous.next = undefined;\n\t\t\tthis._tail = item.previous;\n\t\t}\n\t\telse {\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\t\t\tif (!next || !previous) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\tnext.previous = previous;\n\t\t\tprevious.next = next;\n\t\t}\n\t\titem.next = undefined;\n\t\titem.previous = undefined;\n\t\tthis._state++;\n\t}\n\n\tprivate touch(item: Item<K, V>, touch: Touch): void {\n\t\tif (!this._head || !this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t}\n\t\tif ((touch !== Touch.AsOld && touch !== Touch.AsNew)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (touch === Touch.AsOld) {\n\t\t\tif (item === this._head) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\n\t\t\t// Unlink the item\n\t\t\tif (item === this._tail) {\n\t\t\t\t// previous must be defined since item was not head but is tail\n\t\t\t\t// So there are more than on item in the map\n\t\t\t\tprevious!.next = undefined;\n\t\t\t\tthis._tail = previous;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Both next and previous are not undefined since item was neither head nor tail.\n\t\t\t\tnext!.previous = previous;\n\t\t\t\tprevious!.next = next;\n\t\t\t}\n\n\t\t\t// Insert the node at head\n\t\t\titem.previous = undefined;\n\t\t\titem.next = this._head;\n\t\t\tthis._head.previous = item;\n\t\t\tthis._head = item;\n\t\t\tthis._state++;\n\t\t} else if (touch === Touch.AsNew) {\n\t\t\tif (item === this._tail) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\n\t\t\t// Unlink the item.\n\t\t\tif (item === this._head) {\n\t\t\t\t// next must be defined since item was not tail but is head\n\t\t\t\t// So there are more than on item in the map\n\t\t\t\tnext!.previous = undefined;\n\t\t\t\tthis._head = next;\n\t\t\t} else {\n\t\t\t\t// Both next and previous are not undefined since item was neither head nor tail.\n\t\t\t\tnext!.previous = previous;\n\t\t\t\tprevious!.next = next;\n\t\t\t}\n\t\t\titem.next = undefined;\n\t\t\titem.previous = this._tail;\n\t\t\tthis._tail.next = item;\n\t\t\tthis._tail = item;\n\t\t\tthis._state++;\n\t\t}\n\t}\n\n\ttoJSON(): [K, V][] {\n\t\tconst data: [K, V][] = [];\n\n\t\tthis.forEach((value, key) => {\n\t\t\tdata.push([key, value]);\n\t\t});\n\n\t\treturn data;\n\t}\n\n\tfromJSON(data: [K, V][]): void {\n\t\tthis.clear();\n\n\t\tfor (const [key, value] of data) {\n\t\t\tthis.set(key, value);\n\t\t}\n\t}\n}\n\nexport class LRUCache<K, V> extends LinkedMap<K, V> {\n\n\tprivate _limit: number;\n\tprivate _ratio: number;\n\n\tconstructor(limit: number, ratio: number = 1) {\n\t\tsuper();\n\t\tthis._limit = limit;\n\t\tthis._ratio = Math.min(Math.max(0, ratio), 1);\n\t}\n\n\tget limit(): number {\n\t\treturn this._limit;\n\t}\n\n\tset limit(limit: number) {\n\t\tthis._limit = limit;\n\t\tthis.checkTrim();\n\t}\n\n\tget ratio(): number {\n\t\treturn this._ratio;\n\t}\n\n\tset ratio(ratio: number) {\n\t\tthis._ratio = Math.min(Math.max(0, ratio), 1);\n\t\tthis.checkTrim();\n\t}\n\n\tget(key: K, touch: Touch = Touch.AsNew): V | undefined {\n\t\treturn super.get(key, touch);\n\t}\n\n\tpeek(key: K): V | undefined {\n\t\treturn super.get(key, Touch.None);\n\t}\n\n\tset(key: K, value: V): this {\n\t\tsuper.set(key, value, Touch.AsNew);\n\t\tthis.checkTrim();\n\t\treturn this;\n\t}\n\n\tprivate checkTrim() {\n\t\tif (this.size > this._limit) {\n\t\t\tthis.trimOld(Math.round(this._limit * this._ratio));\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as strings from 'vs/base/common/strings';\nimport * as extpath from 'vs/base/common/extpath';\nimport * as paths from 'vs/base/common/path';\nimport { LRUCache } from 'vs/base/common/map';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { isThenable } from 'vs/base/common/async';\n\nexport interface IExpression {\n\t[pattern: string]: boolean | SiblingClause;\n}\n\nexport interface IRelativePattern {\n\tbase: string;\n\tpattern: string;\n}\n\nexport function getEmptyExpression(): IExpression {\n\treturn Object.create(null);\n}\n\nexport interface SiblingClause {\n\twhen: string;\n}\n\nconst GLOBSTAR = '**';\nconst GLOB_SPLIT = '/';\nconst PATH_REGEX = '[/\\\\\\\\]';\t\t// any slash or backslash\nconst NO_PATH_REGEX = '[^/\\\\\\\\]';\t// any non-slash and non-backslash\nconst ALL_FORWARD_SLASHES = /\\//g;\n\nfunction starsToRegExp(starCount: number): string {\n\tswitch (starCount) {\n\t\tcase 0:\n\t\t\treturn '';\n\t\tcase 1:\n\t\t\treturn `${NO_PATH_REGEX}*?`; // 1 star matches any number of characters except path separator (/ and \\) - non greedy (?)\n\t\tdefault:\n\t\t\t// Matches:  (Path Sep OR Path Val followed by Path Sep OR Path Sep followed by Path Val) 0-many times\n\t\t\t// Group is non capturing because we don't need to capture at all (?:...)\n\t\t\t// Overall we use non-greedy matching because it could be that we match too much\n\t\t\treturn `(?:${PATH_REGEX}|${NO_PATH_REGEX}+${PATH_REGEX}|${PATH_REGEX}${NO_PATH_REGEX}+)*?`;\n\t}\n}\n\nexport function splitGlobAware(pattern: string, splitChar: string): string[] {\n\tif (!pattern) {\n\t\treturn [];\n\t}\n\n\tconst segments: string[] = [];\n\n\tlet inBraces = false;\n\tlet inBrackets = false;\n\n\tlet curVal = '';\n\tfor (const char of pattern) {\n\t\tswitch (char) {\n\t\t\tcase splitChar:\n\t\t\t\tif (!inBraces && !inBrackets) {\n\t\t\t\t\tsegments.push(curVal);\n\t\t\t\t\tcurVal = '';\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase '{':\n\t\t\t\tinBraces = true;\n\t\t\t\tbreak;\n\t\t\tcase '}':\n\t\t\t\tinBraces = false;\n\t\t\t\tbreak;\n\t\t\tcase '[':\n\t\t\t\tinBrackets = true;\n\t\t\t\tbreak;\n\t\t\tcase ']':\n\t\t\t\tinBrackets = false;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tcurVal += char;\n\t}\n\n\t// Tail\n\tif (curVal) {\n\t\tsegments.push(curVal);\n\t}\n\n\treturn segments;\n}\n\nfunction parseRegExp(pattern: string): string {\n\tif (!pattern) {\n\t\treturn '';\n\t}\n\n\tlet regEx = '';\n\n\t// Split up into segments for each slash found\n\tconst segments = splitGlobAware(pattern, GLOB_SPLIT);\n\n\t// Special case where we only have globstars\n\tif (segments.every(s => s === GLOBSTAR)) {\n\t\tregEx = '.*';\n\t}\n\n\t// Build regex over segments\n\telse {\n\t\tlet previousSegmentWasGlobStar = false;\n\t\tsegments.forEach((segment, index) => {\n\n\t\t\t// Globstar is special\n\t\t\tif (segment === GLOBSTAR) {\n\n\t\t\t\t// if we have more than one globstar after another, just ignore it\n\t\t\t\tif (!previousSegmentWasGlobStar) {\n\t\t\t\t\tregEx += starsToRegExp(2);\n\t\t\t\t\tpreviousSegmentWasGlobStar = true;\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// States\n\t\t\tlet inBraces = false;\n\t\t\tlet braceVal = '';\n\n\t\t\tlet inBrackets = false;\n\t\t\tlet bracketVal = '';\n\n\t\t\tfor (const char of segment) {\n\t\t\t\t// Support brace expansion\n\t\t\t\tif (char !== '}' && inBraces) {\n\t\t\t\t\tbraceVal += char;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Support brackets\n\t\t\t\tif (inBrackets && (char !== ']' || !bracketVal) /* ] is literally only allowed as first character in brackets to match it */) {\n\t\t\t\t\tlet res: string;\n\n\t\t\t\t\t// range operator\n\t\t\t\t\tif (char === '-') {\n\t\t\t\t\t\tres = char;\n\t\t\t\t\t}\n\n\t\t\t\t\t// negation operator (only valid on first index in bracket)\n\t\t\t\t\telse if ((char === '^' || char === '!') && !bracketVal) {\n\t\t\t\t\t\tres = '^';\n\t\t\t\t\t}\n\n\t\t\t\t\t// glob split matching is not allowed within character ranges\n\t\t\t\t\t// see http://man7.org/linux/man-pages/man7/glob.7.html\n\t\t\t\t\telse if (char === GLOB_SPLIT) {\n\t\t\t\t\t\tres = '';\n\t\t\t\t\t}\n\n\t\t\t\t\t// anything else gets escaped\n\t\t\t\t\telse {\n\t\t\t\t\t\tres = strings.escapeRegExpCharacters(char);\n\t\t\t\t\t}\n\n\t\t\t\t\tbracketVal += res;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tswitch (char) {\n\t\t\t\t\tcase '{':\n\t\t\t\t\t\tinBraces = true;\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tcase '[':\n\t\t\t\t\t\tinBrackets = true;\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tcase '}':\n\t\t\t\t\t\tconst choices = splitGlobAware(braceVal, ',');\n\n\t\t\t\t\t\t// Converts {foo,bar} => [foo|bar]\n\t\t\t\t\t\tconst braceRegExp = `(?:${choices.map(c => parseRegExp(c)).join('|')})`;\n\n\t\t\t\t\t\tregEx += braceRegExp;\n\n\t\t\t\t\t\tinBraces = false;\n\t\t\t\t\t\tbraceVal = '';\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase ']':\n\t\t\t\t\t\tregEx += ('[' + bracketVal + ']');\n\n\t\t\t\t\t\tinBrackets = false;\n\t\t\t\t\t\tbracketVal = '';\n\n\t\t\t\t\t\tbreak;\n\n\n\t\t\t\t\tcase '?':\n\t\t\t\t\t\tregEx += NO_PATH_REGEX; // 1 ? matches any single character except path separator (/ and \\)\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tcase '*':\n\t\t\t\t\t\tregEx += starsToRegExp(1);\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tregEx += strings.escapeRegExpCharacters(char);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Tail: Add the slash we had split on if there is more to come and the remaining pattern is not a globstar\n\t\t\t// For example if pattern: some/**/*.js we want the \"/\" after some to be included in the RegEx to prevent\n\t\t\t// a folder called \"something\" to match as well.\n\t\t\t// However, if pattern: some/**, we tolerate that we also match on \"something\" because our globstar behaviour\n\t\t\t// is to match 0-N segments.\n\t\t\tif (index < segments.length - 1 && (segments[index + 1] !== GLOBSTAR || index + 2 < segments.length)) {\n\t\t\t\tregEx += PATH_REGEX;\n\t\t\t}\n\n\t\t\t// reset state\n\t\t\tpreviousSegmentWasGlobStar = false;\n\t\t});\n\t}\n\n\treturn regEx;\n}\n\n// regexes to check for trival glob patterns that just check for String#endsWith\nconst T1 = /^\\*\\*\\/\\*\\.[\\w\\.-]+$/; \t\t\t\t\t\t   \t\t\t// **/*.something\nconst T2 = /^\\*\\*\\/([\\w\\.-]+)\\/?$/; \t\t\t\t\t\t\t   \t\t\t// **/something\nconst T3 = /^{\\*\\*\\/[\\*\\.]?[\\w\\.-]+\\/?(,\\*\\*\\/[\\*\\.]?[\\w\\.-]+\\/?)*}$/; \t// {**/*.something,**/*.else} or {**/package.json,**/project.json}\nconst T3_2 = /^{\\*\\*\\/[\\*\\.]?[\\w\\.-]+(\\/(\\*\\*)?)?(,\\*\\*\\/[\\*\\.]?[\\w\\.-]+(\\/(\\*\\*)?)?)*}$/; \t// Like T3, with optional trailing /**\nconst T4 = /^\\*\\*((\\/[\\w\\.-]+)+)\\/?$/; \t\t\t\t\t\t   \t\t\t// **/something/else\nconst T5 = /^([\\w\\.-]+(\\/[\\w\\.-]+)*)\\/?$/; \t\t\t\t\t\t   \t\t// something/else\n\nexport type ParsedPattern = (path: string, basename?: string) => boolean;\n\n// The ParsedExpression returns a Promise iff hasSibling returns a Promise.\nexport type ParsedExpression = (path: string, basename?: string, hasSibling?: (name: string) => boolean | Promise<boolean>) => string | null | Promise<string | null> /* the matching pattern */;\n\nexport interface IGlobOptions {\n\t/**\n\t * Simplify patterns for use as exclusion filters during tree traversal to skip entire subtrees. Cannot be used outside of a tree traversal.\n\t */\n\ttrimForExclusions?: boolean;\n}\n\ninterface ParsedStringPattern {\n\t(path: string, basename?: string): string | null | Promise<string | null> /* the matching pattern */;\n\tbasenames?: string[];\n\tpatterns?: string[];\n\tallBasenames?: string[];\n\tallPaths?: string[];\n}\ninterface ParsedExpressionPattern {\n\t(path: string, basename?: string, name?: string, hasSibling?: (name: string) => boolean | Promise<boolean>): string | null | Promise<string | null> /* the matching pattern */;\n\trequiresSiblings?: boolean;\n\tallBasenames?: string[];\n\tallPaths?: string[];\n}\n\nconst CACHE = new LRUCache<string, ParsedStringPattern>(10000); // bounded to 10000 elements\n\nconst FALSE = function () {\n\treturn false;\n};\n\nconst NULL = function (): string | null {\n\treturn null;\n};\n\nfunction parsePattern(arg1: string | IRelativePattern, options: IGlobOptions): ParsedStringPattern {\n\tif (!arg1) {\n\t\treturn NULL;\n\t}\n\n\t// Handle IRelativePattern\n\tlet pattern: string;\n\tif (typeof arg1 !== 'string') {\n\t\tpattern = arg1.pattern;\n\t} else {\n\t\tpattern = arg1;\n\t}\n\n\t// Whitespace trimming\n\tpattern = pattern.trim();\n\n\t// Check cache\n\tconst patternKey = `${pattern}_${!!options.trimForExclusions}`;\n\tlet parsedPattern = CACHE.get(patternKey);\n\tif (parsedPattern) {\n\t\treturn wrapRelativePattern(parsedPattern, arg1);\n\t}\n\n\t// Check for Trivias\n\tlet match: RegExpExecArray | null;\n\tif (T1.test(pattern)) { // common pattern: **/*.txt just need endsWith check\n\t\tconst base = pattern.substr(4); // '**/*'.length === 4\n\t\tparsedPattern = function (path, basename) {\n\t\t\treturn typeof path === 'string' && path.endsWith(base) ? pattern : null;\n\t\t};\n\t} else if (match = T2.exec(trimForExclusions(pattern, options))) { // common pattern: **/some.txt just need basename check\n\t\tparsedPattern = trivia2(match[1], pattern);\n\t} else if ((options.trimForExclusions ? T3_2 : T3).test(pattern)) { // repetition of common patterns (see above) {**/*.txt,**/*.png}\n\t\tparsedPattern = trivia3(pattern, options);\n\t} else if (match = T4.exec(trimForExclusions(pattern, options))) { // common pattern: **/something/else just need endsWith check\n\t\tparsedPattern = trivia4and5(match[1].substr(1), pattern, true);\n\t} else if (match = T5.exec(trimForExclusions(pattern, options))) { // common pattern: something/else just need equals check\n\t\tparsedPattern = trivia4and5(match[1], pattern, false);\n\t}\n\n\t// Otherwise convert to pattern\n\telse {\n\t\tparsedPattern = toRegExp(pattern);\n\t}\n\n\t// Cache\n\tCACHE.set(patternKey, parsedPattern);\n\n\treturn wrapRelativePattern(parsedPattern, arg1);\n}\n\nfunction wrapRelativePattern(parsedPattern: ParsedStringPattern, arg2: string | IRelativePattern): ParsedStringPattern {\n\tif (typeof arg2 === 'string') {\n\t\treturn parsedPattern;\n\t}\n\n\treturn function (path, basename) {\n\t\tif (!extpath.isEqualOrParent(path, arg2.base)) {\n\t\t\treturn null;\n\t\t}\n\t\treturn parsedPattern(paths.relative(arg2.base, path), basename);\n\t};\n}\n\nfunction trimForExclusions(pattern: string, options: IGlobOptions): string {\n\treturn options.trimForExclusions && pattern.endsWith('/**') ? pattern.substr(0, pattern.length - 2) : pattern; // dropping **, tailing / is dropped later\n}\n\n// common pattern: **/some.txt just need basename check\nfunction trivia2(base: string, originalPattern: string): ParsedStringPattern {\n\tconst slashBase = `/${base}`;\n\tconst backslashBase = `\\\\${base}`;\n\tconst parsedPattern: ParsedStringPattern = function (path, basename) {\n\t\tif (typeof path !== 'string') {\n\t\t\treturn null;\n\t\t}\n\t\tif (basename) {\n\t\t\treturn basename === base ? originalPattern : null;\n\t\t}\n\t\treturn path === base || path.endsWith(slashBase) || path.endsWith(backslashBase) ? originalPattern : null;\n\t};\n\tconst basenames = [base];\n\tparsedPattern.basenames = basenames;\n\tparsedPattern.patterns = [originalPattern];\n\tparsedPattern.allBasenames = basenames;\n\treturn parsedPattern;\n}\n\n// repetition of common patterns (see above) {**/*.txt,**/*.png}\nfunction trivia3(pattern: string, options: IGlobOptions): ParsedStringPattern {\n\tconst parsedPatterns = aggregateBasenameMatches(pattern.slice(1, -1).split(',')\n\t\t.map(pattern => parsePattern(pattern, options))\n\t\t.filter(pattern => pattern !== NULL), pattern);\n\tconst n = parsedPatterns.length;\n\tif (!n) {\n\t\treturn NULL;\n\t}\n\tif (n === 1) {\n\t\treturn <ParsedStringPattern>parsedPatterns[0];\n\t}\n\tconst parsedPattern: ParsedStringPattern = function (path: string, basename?: string) {\n\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\tif ((<ParsedStringPattern>parsedPatterns[i])(path, basename)) {\n\t\t\t\treturn pattern;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\tconst withBasenames = parsedPatterns.find(pattern => !!(<ParsedStringPattern>pattern).allBasenames);\n\tif (withBasenames) {\n\t\tparsedPattern.allBasenames = (<ParsedStringPattern>withBasenames).allBasenames;\n\t}\n\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, <string[]>[]);\n\tif (allPaths.length) {\n\t\tparsedPattern.allPaths = allPaths;\n\t}\n\treturn parsedPattern;\n}\n\n// common patterns: **/something/else just need endsWith check, something/else just needs and equals check\nfunction trivia4and5(path: string, pattern: string, matchPathEnds: boolean): ParsedStringPattern {\n\tconst nativePath = paths.sep !== paths.posix.sep ? path.replace(ALL_FORWARD_SLASHES, paths.sep) : path;\n\tconst nativePathEnd = paths.sep + nativePath;\n\tconst parsedPattern: ParsedStringPattern = matchPathEnds ? function (path, basename) {\n\t\treturn typeof path === 'string' && (path === nativePath || path.endsWith(nativePathEnd)) ? pattern : null;\n\t} : function (path, basename) {\n\t\treturn typeof path === 'string' && path === nativePath ? pattern : null;\n\t};\n\tparsedPattern.allPaths = [(matchPathEnds ? '*/' : './') + path];\n\treturn parsedPattern;\n}\n\nfunction toRegExp(pattern: string): ParsedStringPattern {\n\ttry {\n\t\tconst regExp = new RegExp(`^${parseRegExp(pattern)}$`);\n\t\treturn function (path: string) {\n\t\t\tregExp.lastIndex = 0; // reset RegExp to its initial state to reuse it!\n\t\t\treturn typeof path === 'string' && regExp.test(path) ? pattern : null;\n\t\t};\n\t} catch (error) {\n\t\treturn NULL;\n\t}\n}\n\n/**\n * Simplified glob matching. Supports a subset of glob patterns:\n * - * matches anything inside a path segment\n * - ? matches 1 character inside a path segment\n * - ** matches anything including an empty path segment\n * - simple brace expansion ({js,ts} => js or ts)\n * - character ranges (using [...])\n */\nexport function match(pattern: string | IRelativePattern, path: string): boolean;\nexport function match(expression: IExpression, path: string, hasSibling?: (name: string) => boolean): string /* the matching pattern */;\nexport function match(arg1: string | IExpression | IRelativePattern, path: string, hasSibling?: (name: string) => boolean): boolean | string | null | Promise<string | null> {\n\tif (!arg1 || typeof path !== 'string') {\n\t\treturn false;\n\t}\n\n\treturn parse(<IExpression>arg1)(path, undefined, hasSibling);\n}\n\n/**\n * Simplified glob matching. Supports a subset of glob patterns:\n * - * matches anything inside a path segment\n * - ? matches 1 character inside a path segment\n * - ** matches anything including an empty path segment\n * - simple brace expansion ({js,ts} => js or ts)\n * - character ranges (using [...])\n */\nexport function parse(pattern: string | IRelativePattern, options?: IGlobOptions): ParsedPattern;\nexport function parse(expression: IExpression, options?: IGlobOptions): ParsedExpression;\nexport function parse(arg1: string | IExpression | IRelativePattern, options: IGlobOptions = {}): ParsedPattern | ParsedExpression {\n\tif (!arg1) {\n\t\treturn FALSE;\n\t}\n\n\t// Glob with String\n\tif (typeof arg1 === 'string' || isRelativePattern(arg1)) {\n\t\tconst parsedPattern = parsePattern(arg1, options);\n\t\tif (parsedPattern === NULL) {\n\t\t\treturn FALSE;\n\t\t}\n\t\tconst resultPattern: ParsedPattern & { allBasenames?: string[]; allPaths?: string[]; } = function (path: string, basename?: string) {\n\t\t\treturn !!parsedPattern(path, basename);\n\t\t};\n\t\tif (parsedPattern.allBasenames) {\n\t\t\tresultPattern.allBasenames = parsedPattern.allBasenames;\n\t\t}\n\t\tif (parsedPattern.allPaths) {\n\t\t\tresultPattern.allPaths = parsedPattern.allPaths;\n\t\t}\n\t\treturn resultPattern;\n\t}\n\n\t// Glob with Expression\n\treturn parsedExpression(<IExpression>arg1, options);\n}\n\nexport function hasSiblingPromiseFn(siblingsFn?: () => Promise<string[]>) {\n\tif (!siblingsFn) {\n\t\treturn undefined;\n\t}\n\n\tlet siblings: Promise<Record<string, true>>;\n\treturn (name: string) => {\n\t\tif (!siblings) {\n\t\t\tsiblings = (siblingsFn() || Promise.resolve([]))\n\t\t\t\t.then(list => list ? listToMap(list) : {});\n\t\t}\n\t\treturn siblings.then(map => !!map[name]);\n\t};\n}\n\nexport function hasSiblingFn(siblingsFn?: () => string[]) {\n\tif (!siblingsFn) {\n\t\treturn undefined;\n\t}\n\n\tlet siblings: Record<string, true>;\n\treturn (name: string) => {\n\t\tif (!siblings) {\n\t\t\tconst list = siblingsFn();\n\t\t\tsiblings = list ? listToMap(list) : {};\n\t\t}\n\t\treturn !!siblings[name];\n\t};\n}\n\nfunction listToMap(list: string[]) {\n\tconst map: Record<string, true> = {};\n\tfor (const key of list) {\n\t\tmap[key] = true;\n\t}\n\treturn map;\n}\n\nexport function isRelativePattern(obj: unknown): obj is IRelativePattern {\n\tconst rp = obj as IRelativePattern;\n\n\treturn rp && typeof rp.base === 'string' && typeof rp.pattern === 'string';\n}\n\nexport function getBasenameTerms(patternOrExpression: ParsedPattern | ParsedExpression): string[] {\n\treturn (<ParsedStringPattern>patternOrExpression).allBasenames || [];\n}\n\nexport function getPathTerms(patternOrExpression: ParsedPattern | ParsedExpression): string[] {\n\treturn (<ParsedStringPattern>patternOrExpression).allPaths || [];\n}\n\nfunction parsedExpression(expression: IExpression, options: IGlobOptions): ParsedExpression {\n\tconst parsedPatterns = aggregateBasenameMatches(Object.getOwnPropertyNames(expression)\n\t\t.map(pattern => parseExpressionPattern(pattern, expression[pattern], options))\n\t\t.filter(pattern => pattern !== NULL));\n\n\tconst n = parsedPatterns.length;\n\tif (!n) {\n\t\treturn NULL;\n\t}\n\n\tif (!parsedPatterns.some(parsedPattern => !!(<ParsedExpressionPattern>parsedPattern).requiresSiblings)) {\n\t\tif (n === 1) {\n\t\t\treturn <ParsedStringPattern>parsedPatterns[0];\n\t\t}\n\n\t\tconst resultExpression: ParsedStringPattern = function (path: string, basename?: string) {\n\t\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\t\t// Pattern matches path\n\t\t\t\tconst result = (<ParsedStringPattern>parsedPatterns[i])(path, basename);\n\t\t\t\tif (result) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\n\t\tconst withBasenames = parsedPatterns.find(pattern => !!(<ParsedStringPattern>pattern).allBasenames);\n\t\tif (withBasenames) {\n\t\t\tresultExpression.allBasenames = (<ParsedStringPattern>withBasenames).allBasenames;\n\t\t}\n\n\t\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, <string[]>[]);\n\t\tif (allPaths.length) {\n\t\t\tresultExpression.allPaths = allPaths;\n\t\t}\n\n\t\treturn resultExpression;\n\t}\n\n\tconst resultExpression: ParsedStringPattern = function (path: string, basename?: string, hasSibling?: (name: string) => boolean | Promise<boolean>) {\n\t\tlet name: string | undefined = undefined;\n\n\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\t// Pattern matches path\n\t\t\tconst parsedPattern = (<ParsedExpressionPattern>parsedPatterns[i]);\n\t\t\tif (parsedPattern.requiresSiblings && hasSibling) {\n\t\t\t\tif (!basename) {\n\t\t\t\t\tbasename = paths.basename(path);\n\t\t\t\t}\n\t\t\t\tif (!name) {\n\t\t\t\t\tname = basename.substr(0, basename.length - paths.extname(path).length);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst result = parsedPattern(path, basename, name, hasSibling);\n\t\t\tif (result) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t};\n\n\tconst withBasenames = parsedPatterns.find(pattern => !!(<ParsedStringPattern>pattern).allBasenames);\n\tif (withBasenames) {\n\t\tresultExpression.allBasenames = (<ParsedStringPattern>withBasenames).allBasenames;\n\t}\n\n\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, <string[]>[]);\n\tif (allPaths.length) {\n\t\tresultExpression.allPaths = allPaths;\n\t}\n\n\treturn resultExpression;\n}\n\nfunction parseExpressionPattern(pattern: string, value: boolean | SiblingClause, options: IGlobOptions): (ParsedStringPattern | ParsedExpressionPattern) {\n\tif (value === false) {\n\t\treturn NULL; // pattern is disabled\n\t}\n\n\tconst parsedPattern = parsePattern(pattern, options);\n\tif (parsedPattern === NULL) {\n\t\treturn NULL;\n\t}\n\n\t// Expression Pattern is <boolean>\n\tif (typeof value === 'boolean') {\n\t\treturn parsedPattern;\n\t}\n\n\t// Expression Pattern is <SiblingClause>\n\tif (value) {\n\t\tconst when = (<SiblingClause>value).when;\n\t\tif (typeof when === 'string') {\n\t\t\tconst result: ParsedExpressionPattern = (path: string, basename?: string, name?: string, hasSibling?: (name: string) => boolean | Promise<boolean>) => {\n\t\t\t\tif (!hasSibling || !parsedPattern(path, basename)) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tconst clausePattern = when.replace('$(basename)', name!);\n\t\t\t\tconst matched = hasSibling(clausePattern);\n\t\t\t\treturn isThenable(matched) ?\n\t\t\t\t\tmatched.then(m => m ? pattern : null) :\n\t\t\t\t\tmatched ? pattern : null;\n\t\t\t};\n\t\t\tresult.requiresSiblings = true;\n\t\t\treturn result;\n\t\t}\n\t}\n\n\t// Expression is Anything\n\treturn parsedPattern;\n}\n\nfunction aggregateBasenameMatches(parsedPatterns: Array<ParsedStringPattern | ParsedExpressionPattern>, result?: string): Array<ParsedStringPattern | ParsedExpressionPattern> {\n\tconst basenamePatterns = parsedPatterns.filter(parsedPattern => !!(<ParsedStringPattern>parsedPattern).basenames);\n\tif (basenamePatterns.length < 2) {\n\t\treturn parsedPatterns;\n\t}\n\n\tconst basenames = basenamePatterns.reduce<string[]>((all, current) => {\n\t\tconst basenames = (<ParsedStringPattern>current).basenames;\n\t\treturn basenames ? all.concat(basenames) : all;\n\t}, <string[]>[]);\n\tlet patterns: string[];\n\tif (result) {\n\t\tpatterns = [];\n\t\tfor (let i = 0, n = basenames.length; i < n; i++) {\n\t\t\tpatterns.push(result);\n\t\t}\n\t} else {\n\t\tpatterns = basenamePatterns.reduce((all, current) => {\n\t\t\tconst patterns = (<ParsedStringPattern>current).patterns;\n\t\t\treturn patterns ? all.concat(patterns) : all;\n\t\t}, <string[]>[]);\n\t}\n\tconst aggregate: ParsedStringPattern = function (path, basename) {\n\t\tif (typeof path !== 'string') {\n\t\t\treturn null;\n\t\t}\n\t\tif (!basename) {\n\t\t\tlet i: number;\n\t\t\tfor (i = path.length; i > 0; i--) {\n\t\t\t\tconst ch = path.charCodeAt(i - 1);\n\t\t\t\tif (ch === CharCode.Slash || ch === CharCode.Backslash) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbasename = path.substr(i);\n\t\t}\n\t\tconst index = basenames.indexOf(basename);\n\t\treturn index !== -1 ? patterns[index] : null;\n\t};\n\taggregate.basenames = basenames;\n\taggregate.patterns = patterns;\n\taggregate.allBasenames = basenames;\n\n\tconst aggregatedPatterns = parsedPatterns.filter(parsedPattern => !(<ParsedStringPattern>parsedPattern).basenames);\n\taggregatedPatterns.push(aggregate);\n\treturn aggregatedPatterns;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { LRUCache } from 'vs/base/common/map';\n\n/**\n * The normalize() method returns the Unicode Normalization Form of a given string. The form will be\n * the Normalization Form Canonical Composition.\n *\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize}\n */\nexport const canNormalize = typeof (String.prototype as any /* standalone editor compilation */).normalize === 'function';\n\nconst nfcCache = new LRUCache<string, string>(10000); // bounded to 10000 elements\nexport function normalizeNFC(str: string): string {\n\treturn normalize(str, 'NFC', nfcCache);\n}\n\nconst nfdCache = new LRUCache<string, string>(10000); // bounded to 10000 elements\nexport function normalizeNFD(str: string): string {\n\treturn normalize(str, 'NFD', nfdCache);\n}\n\nconst nonAsciiCharactersPattern = /[^\\u0000-\\u0080]/;\nfunction normalize(str: string, form: string, normalizedCache: LRUCache<string, string>): string {\n\tif (!canNormalize || !str) {\n\t\treturn str;\n\t}\n\n\tconst cached = normalizedCache.get(str);\n\tif (cached) {\n\t\treturn cached;\n\t}\n\n\tlet res: string;\n\tif (nonAsciiCharactersPattern.test(str)) {\n\t\tres = (<any>str).normalize(form);\n\t} else {\n\t\tres = str;\n\t}\n\n\t// Use the cache for fast lookup\n\tnormalizedCache.set(str, res);\n\n\treturn res;\n}\n\nexport const removeAccents: (str: string) => string = (function () {\n\tif (!canNormalize) {\n\t\t// no ES6 features...\n\t\treturn function (str: string) { return str; };\n\t} else {\n\t\t// transform into NFD form and remove accents\n\t\t// see: https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript/37511463#37511463\n\t\tconst regex = /[\\u0300-\\u036f]/g;\n\t\treturn function (str: string) {\n\t\t\treturn normalizeNFD(str).replace(regex, '');\n\t\t};\n\t}\n})();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as extpath from 'vs/base/common/extpath';\nimport * as paths from 'vs/base/common/path';\nimport { URI, uriToFsPath } from 'vs/base/common/uri';\nimport { equalsIgnoreCase, compare as strCompare } from 'vs/base/common/strings';\nimport { Schemas } from 'vs/base/common/network';\nimport { isWindows, isLinux } from 'vs/base/common/platform';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { ParsedExpression, IExpression, parse } from 'vs/base/common/glob';\nimport { TernarySearchTree } from 'vs/base/common/map';\n\nexport function originalFSPath(uri: URI): string {\n\treturn uriToFsPath(uri, true);\n}\n\n//#region IExtUri\n\nexport interface IExtUri {\n\n\t// --- identity\n\n\t/**\n\t * Compares two uris.\n\t *\n\t * @param uri1 Uri\n\t * @param uri2 Uri\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tcompare(uri1: URI, uri2: URI, ignoreFragment?: boolean): number;\n\n\t/**\n\t * Tests whether two uris are equal\n\t *\n\t * @param uri1 Uri\n\t * @param uri2 Uri\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tisEqual(uri1: URI | undefined, uri2: URI | undefined, ignoreFragment?: boolean): boolean;\n\n\t/**\n\t * Tests whether a `candidate` URI is a parent or equal of a given `base` URI.\n\t *\n\t * @param base A uri which is \"longer\"\n\t * @param parentCandidate A uri which is \"shorter\" then `base`\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tisEqualOrParent(base: URI, parentCandidate: URI, ignoreFragment?: boolean): boolean;\n\n\t/**\n\t * Creates a key from a resource URI to be used to resource comparison and for resource maps.\n\t * @see ResourceMap\n\t * @param uri Uri\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tgetComparisonKey(uri: URI, ignoreFragment?: boolean): string;\n\n\t// --- path math\n\n\tbasenameOrAuthority(resource: URI): string;\n\n\t/**\n\t * Returns the basename of the path component of an uri.\n\t * @param resource\n\t */\n\tbasename(resource: URI): string;\n\n\t/**\n\t * Returns the extension of the path component of an uri.\n\t * @param resource\n\t */\n\textname(resource: URI): string;\n\t/**\n\t * Return a URI representing the directory of a URI path.\n\t *\n\t * @param resource The input URI.\n\t * @returns The URI representing the directory of the input URI.\n\t */\n\tdirname(resource: URI): URI;\n\t/**\n\t * Join a URI path with path fragments and normalizes the resulting path.\n\t *\n\t * @param resource The input URI.\n\t * @param pathFragment The path fragment to add to the URI path.\n\t * @returns The resulting URI.\n\t */\n\tjoinPath(resource: URI, ...pathFragment: string[]): URI\n\t/**\n\t * Normalizes the path part of a URI: Resolves `.` and `..` elements with directory names.\n\t *\n\t * @param resource The URI to normalize the path.\n\t * @returns The URI with the normalized path.\n\t */\n\tnormalizePath(resource: URI): URI;\n\t/**\n\t *\n\t * @param from\n\t * @param to\n\t */\n\trelativePath(from: URI, to: URI): string | undefined;\n\t/**\n\t * Resolves an absolute or relative path against a base URI.\n\t * The path can be relative or absolute posix or a Windows path\n\t */\n\tresolvePath(base: URI, path: string): URI;\n\n\t// --- misc\n\n\t/**\n\t * Returns true if the URI path is absolute.\n\t */\n\tisAbsolutePath(resource: URI): boolean;\n\t/**\n\t * Tests whether the two authorities are the same\n\t */\n\tisEqualAuthority(a1: string, a2: string): boolean;\n\t/**\n\t * Returns true if the URI path has a trailing path separator\n\t */\n\thasTrailingPathSeparator(resource: URI, sep?: string): boolean;\n\t/**\n\t * Removes a trailing path separator, if there's one.\n\t * Important: Doesn't remove the first slash, it would make the URI invalid\n\t */\n\tremoveTrailingPathSeparator(resource: URI, sep?: string): URI;\n\t/**\n\t * Adds a trailing path separator to the URI if there isn't one already.\n\t * For example, c:\\ would be unchanged, but c:\\users would become c:\\users\\\n\t */\n\taddTrailingPathSeparator(resource: URI, sep?: string): URI;\n}\n\nexport class ExtUri implements IExtUri {\n\n\tconstructor(private _ignorePathCasing: (uri: URI) => boolean) { }\n\n\tcompare(uri1: URI, uri2: URI, ignoreFragment: boolean = false): number {\n\t\tif (uri1 === uri2) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn strCompare(this.getComparisonKey(uri1, ignoreFragment), this.getComparisonKey(uri2, ignoreFragment));\n\t}\n\n\tisEqual(uri1: URI | undefined, uri2: URI | undefined, ignoreFragment: boolean = false): boolean {\n\t\tif (uri1 === uri2) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!uri1 || !uri2) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.getComparisonKey(uri1, ignoreFragment) === this.getComparisonKey(uri2, ignoreFragment);\n\t}\n\n\tgetComparisonKey(uri: URI, ignoreFragment: boolean = false): string {\n\t\treturn uri.with({\n\t\t\tpath: this._ignorePathCasing(uri) ? uri.path.toLowerCase() : undefined,\n\t\t\tfragment: ignoreFragment ? null : undefined\n\t\t}).toString();\n\t}\n\n\tisEqualOrParent(base: URI, parentCandidate: URI, ignoreFragment: boolean = false): boolean {\n\t\tif (base.scheme === parentCandidate.scheme) {\n\t\t\tif (base.scheme === Schemas.file) {\n\t\t\t\treturn extpath.isEqualOrParent(originalFSPath(base), originalFSPath(parentCandidate), this._ignorePathCasing(base)) && base.query === parentCandidate.query && (ignoreFragment || base.fragment === parentCandidate.fragment);\n\t\t\t}\n\t\t\tif (isEqualAuthority(base.authority, parentCandidate.authority)) {\n\t\t\t\treturn extpath.isEqualOrParent(base.path, parentCandidate.path, this._ignorePathCasing(base), '/') && base.query === parentCandidate.query && (ignoreFragment || base.fragment === parentCandidate.fragment);\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t// --- path math\n\n\tjoinPath(resource: URI, ...pathFragment: string[]): URI {\n\t\treturn URI.joinPath(resource, ...pathFragment);\n\t}\n\n\tbasenameOrAuthority(resource: URI): string {\n\t\treturn basename(resource) || resource.authority;\n\t}\n\n\tbasename(resource: URI): string {\n\t\treturn paths.posix.basename(resource.path);\n\t}\n\n\textname(resource: URI): string {\n\t\treturn paths.posix.extname(resource.path);\n\t}\n\n\tdirname(resource: URI): URI {\n\t\tif (resource.path.length === 0) {\n\t\t\treturn resource;\n\t\t}\n\t\tlet dirname;\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tdirname = URI.file(paths.dirname(originalFSPath(resource))).path;\n\t\t} else {\n\t\t\tdirname = paths.posix.dirname(resource.path);\n\t\t\tif (resource.authority && dirname.length && dirname.charCodeAt(0) !== CharCode.Slash) {\n\t\t\t\tconsole.error(`dirname(\"${resource.toString})) resulted in a relative path`);\n\t\t\t\tdirname = '/'; // If a URI contains an authority component, then the path component must either be empty or begin with a CharCode.Slash (\"/\") character\n\t\t\t}\n\t\t}\n\t\treturn resource.with({\n\t\t\tpath: dirname\n\t\t});\n\t}\n\n\tnormalizePath(resource: URI): URI {\n\t\tif (!resource.path.length) {\n\t\t\treturn resource;\n\t\t}\n\t\tlet normalizedPath: string;\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tnormalizedPath = URI.file(paths.normalize(originalFSPath(resource))).path;\n\t\t} else {\n\t\t\tnormalizedPath = paths.posix.normalize(resource.path);\n\t\t}\n\t\treturn resource.with({\n\t\t\tpath: normalizedPath\n\t\t});\n\t}\n\n\trelativePath(from: URI, to: URI): string | undefined {\n\t\tif (from.scheme !== to.scheme || !isEqualAuthority(from.authority, to.authority)) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (from.scheme === Schemas.file) {\n\t\t\tconst relativePath = paths.relative(originalFSPath(from), originalFSPath(to));\n\t\t\treturn isWindows ? extpath.toSlashes(relativePath) : relativePath;\n\t\t}\n\t\tlet fromPath = from.path || '/', toPath = to.path || '/';\n\t\tif (this._ignorePathCasing(from)) {\n\t\t\t// make casing of fromPath match toPath\n\t\t\tlet i = 0;\n\t\t\tfor (const len = Math.min(fromPath.length, toPath.length); i < len; i++) {\n\t\t\t\tif (fromPath.charCodeAt(i) !== toPath.charCodeAt(i)) {\n\t\t\t\t\tif (fromPath.charAt(i).toLowerCase() !== toPath.charAt(i).toLowerCase()) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfromPath = toPath.substr(0, i) + fromPath.substr(i);\n\t\t}\n\t\treturn paths.posix.relative(fromPath, toPath);\n\t}\n\n\tresolvePath(base: URI, path: string): URI {\n\t\tif (base.scheme === Schemas.file) {\n\t\t\tconst newURI = URI.file(paths.resolve(originalFSPath(base), path));\n\t\t\treturn base.with({\n\t\t\t\tauthority: newURI.authority,\n\t\t\t\tpath: newURI.path\n\t\t\t});\n\t\t}\n\t\tif (path.indexOf('/') === -1) { // no slashes? it's likely a Windows path\n\t\t\tpath = extpath.toSlashes(path);\n\t\t\tif (/^[a-zA-Z]:(\\/|$)/.test(path)) { // starts with a drive letter\n\t\t\t\tpath = '/' + path;\n\t\t\t}\n\t\t}\n\t\treturn base.with({\n\t\t\tpath: paths.posix.resolve(base.path, path)\n\t\t});\n\t}\n\n\t// --- misc\n\n\tisAbsolutePath(resource: URI): boolean {\n\t\treturn !!resource.path && resource.path[0] === '/';\n\t}\n\n\tisEqualAuthority(a1: string, a2: string) {\n\t\treturn a1 === a2 || equalsIgnoreCase(a1, a2);\n\t}\n\n\thasTrailingPathSeparator(resource: URI, sep: string = paths.sep): boolean {\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tconst fsp = originalFSPath(resource);\n\t\t\treturn fsp.length > extpath.getRoot(fsp).length && fsp[fsp.length - 1] === sep;\n\t\t} else {\n\t\t\tconst p = resource.path;\n\t\t\treturn (p.length > 1 && p.charCodeAt(p.length - 1) === CharCode.Slash) && !(/^[a-zA-Z]:(\\/$|\\\\$)/.test(resource.fsPath)); // ignore the slash at offset 0\n\t\t}\n\t}\n\n\tremoveTrailingPathSeparator(resource: URI, sep: string = paths.sep): URI {\n\t\t// Make sure that the path isn't a drive letter. A trailing separator there is not removable.\n\t\tif (hasTrailingPathSeparator(resource, sep)) {\n\t\t\treturn resource.with({ path: resource.path.substr(0, resource.path.length - 1) });\n\t\t}\n\t\treturn resource;\n\t}\n\n\taddTrailingPathSeparator(resource: URI, sep: string = paths.sep): URI {\n\t\tlet isRootSep: boolean = false;\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tconst fsp = originalFSPath(resource);\n\t\t\tisRootSep = ((fsp !== undefined) && (fsp.length === extpath.getRoot(fsp).length) && (fsp[fsp.length - 1] === sep));\n\t\t} else {\n\t\t\tsep = '/';\n\t\t\tconst p = resource.path;\n\t\t\tisRootSep = p.length === 1 && p.charCodeAt(p.length - 1) === CharCode.Slash;\n\t\t}\n\t\tif (!isRootSep && !hasTrailingPathSeparator(resource, sep)) {\n\t\t\treturn resource.with({ path: resource.path + '/' });\n\t\t}\n\t\treturn resource;\n\t}\n}\n\n\n/**\n * Unbiased utility that takes uris \"as they are\". This means it can be interchanged with\n * uri#toString() usages. The following is true\n * ```\n * assertEqual(aUri.toString() === bUri.toString(), exturi.isEqual(aUri, bUri))\n * ```\n */\nexport const extUri = new ExtUri(() => false);\n\n/**\n * BIASED utility that _mostly_ ignored the case of urs paths. ONLY use this util if you\n * understand what you are doing.\n *\n * This utility is INCOMPATIBLE with `uri.toString()`-usages and both CANNOT be used interchanged.\n *\n * When dealing with uris from files or documents, `extUri` (the unbiased friend)is sufficient\n * because those uris come from a \"trustworthy source\". When creating unknown uris it's always\n * better to use `IUriIdentityService` which exposes an `IExtUri`-instance which knows when path\n * casing matters.\n */\nexport const extUriBiasedIgnorePathCase = new ExtUri(uri => {\n\t// A file scheme resource is in the same platform as code, so ignore case for non linux platforms\n\t// Resource can be from another platform. Lowering the case as an hack. Should come from File system provider\n\treturn uri.scheme === Schemas.file ? !isLinux : true;\n});\n\n\n/**\n * BIASED utility that always ignores the casing of uris paths. ONLY use this util if you\n * understand what you are doing.\n *\n * This utility is INCOMPATIBLE with `uri.toString()`-usages and both CANNOT be used interchanged.\n *\n * When dealing with uris from files or documents, `extUri` (the unbiased friend)is sufficient\n * because those uris come from a \"trustworthy source\". When creating unknown uris it's always\n * better to use `IUriIdentityService` which exposes an `IExtUri`-instance which knows when path\n * casing matters.\n */\nexport const extUriIgnorePathCase = new ExtUri(_ => true);\n\nexport const isEqual = extUri.isEqual.bind(extUri);\nexport const isEqualOrParent = extUri.isEqualOrParent.bind(extUri);\nexport const getComparisonKey = extUri.getComparisonKey.bind(extUri);\nexport const basenameOrAuthority = extUri.basenameOrAuthority.bind(extUri);\nexport const basename = extUri.basename.bind(extUri);\nexport const extname = extUri.extname.bind(extUri);\nexport const dirname = extUri.dirname.bind(extUri);\nexport const joinPath = extUri.joinPath.bind(extUri);\nexport const normalizePath = extUri.normalizePath.bind(extUri);\nexport const relativePath = extUri.relativePath.bind(extUri);\nexport const resolvePath = extUri.resolvePath.bind(extUri);\nexport const isAbsolutePath = extUri.isAbsolutePath.bind(extUri);\nexport const isEqualAuthority = extUri.isEqualAuthority.bind(extUri);\nexport const hasTrailingPathSeparator = extUri.hasTrailingPathSeparator.bind(extUri);\nexport const removeTrailingPathSeparator = extUri.removeTrailingPathSeparator.bind(extUri);\nexport const addTrailingPathSeparator = extUri.addTrailingPathSeparator.bind(extUri);\n\n//#endregion\n\nexport function distinctParents<T>(items: T[], resourceAccessor: (item: T) => URI): T[] {\n\tconst distinctParents: T[] = [];\n\tfor (let i = 0; i < items.length; i++) {\n\t\tconst candidateResource = resourceAccessor(items[i]);\n\t\tif (items.some((otherItem, index) => {\n\t\t\tif (index === i) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn isEqualOrParent(candidateResource, resourceAccessor(otherItem));\n\t\t})) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tdistinctParents.push(items[i]);\n\t}\n\n\treturn distinctParents;\n}\n\n/**\n * Data URI related helpers.\n */\nexport namespace DataUri {\n\n\texport const META_DATA_LABEL = 'label';\n\texport const META_DATA_DESCRIPTION = 'description';\n\texport const META_DATA_SIZE = 'size';\n\texport const META_DATA_MIME = 'mime';\n\n\texport function parseMetaData(dataUri: URI): Map<string, string> {\n\t\tconst metadata = new Map<string, string>();\n\n\t\t// Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n\t\t// the metadata is: size:2313;label:SomeLabel;description:SomeDescription\n\t\tconst meta = dataUri.path.substring(dataUri.path.indexOf(';') + 1, dataUri.path.lastIndexOf(';'));\n\t\tmeta.split(';').forEach(property => {\n\t\t\tconst [key, value] = property.split(':');\n\t\t\tif (key && value) {\n\t\t\t\tmetadata.set(key, value);\n\t\t\t}\n\t\t});\n\n\t\t// Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n\t\t// the mime is: image/png\n\t\tconst mime = dataUri.path.substring(0, dataUri.path.indexOf(';'));\n\t\tif (mime) {\n\t\t\tmetadata.set(META_DATA_MIME, mime);\n\t\t}\n\n\t\treturn metadata;\n\t}\n}\n\nexport class ResourceGlobMatcher {\n\n\tprivate readonly globalExpression: ParsedExpression;\n\tprivate readonly expressionsByRoot: TernarySearchTree<URI, { root: URI, expression: ParsedExpression }> = TernarySearchTree.forUris<{ root: URI, expression: ParsedExpression }>();\n\n\tconstructor(\n\t\tglobalExpression: IExpression,\n\t\trootExpressions: { root: URI, expression: IExpression }[]\n\t) {\n\t\tthis.globalExpression = parse(globalExpression);\n\t\tfor (const expression of rootExpressions) {\n\t\t\tthis.expressionsByRoot.set(expression.root, { root: expression.root, expression: parse(expression.expression) });\n\t\t}\n\t}\n\n\tmatches(resource: URI): boolean {\n\t\tconst rootExpression = this.expressionsByRoot.findSubstr(resource);\n\t\tif (rootExpression) {\n\t\t\tconst path = relativePath(rootExpression.root, resource);\n\t\t\tif (path && !!rootExpression.expression(path)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn !!this.globalExpression(resource.path);\n\t}\n}\n\nexport function toLocalResource(resource: URI, authority: string | undefined, localScheme: string): URI {\n\tif (authority) {\n\t\tlet path = resource.path;\n\t\tif (path && path[0] !== paths.posix.sep) {\n\t\t\tpath = paths.posix.sep + path;\n\t\t}\n\n\t\treturn resource.with({ scheme: localScheme, authority, path });\n\t}\n\n\treturn resource.with({ scheme: localScheme });\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { posix, normalize, win32, sep } from 'vs/base/common/path';\nimport { startsWithIgnoreCase, rtrim } from 'vs/base/common/strings';\nimport { Schemas } from 'vs/base/common/network';\nimport { isLinux, isWindows, isMacintosh } from 'vs/base/common/platform';\nimport { isEqual, basename, relativePath } from 'vs/base/common/resources';\n\nexport interface IWorkspaceFolderProvider {\n\tgetWorkspaceFolder(resource: URI): { uri: URI, name?: string } | null;\n\tgetWorkspace(): {\n\t\tfolders: { uri: URI, name?: string }[];\n\t};\n}\n\nexport interface IUserHomeProvider {\n\tuserHome?: URI;\n}\n\n/**\n * @deprecated use LabelService instead\n */\nexport function getPathLabel(resource: URI | string, userHomeProvider?: IUserHomeProvider, rootProvider?: IWorkspaceFolderProvider): string {\n\tif (typeof resource === 'string') {\n\t\tresource = URI.file(resource);\n\t}\n\n\t// return early if we can resolve a relative path label from the root\n\tif (rootProvider) {\n\t\tconst baseResource = rootProvider.getWorkspaceFolder(resource);\n\t\tif (baseResource) {\n\t\t\tconst hasMultipleRoots = rootProvider.getWorkspace().folders.length > 1;\n\n\t\t\tlet pathLabel: string;\n\t\t\tif (isEqual(baseResource.uri, resource)) {\n\t\t\t\tpathLabel = ''; // no label if paths are identical\n\t\t\t} else {\n\t\t\t\tpathLabel = relativePath(baseResource.uri, resource)!;\n\t\t\t}\n\n\t\t\tif (hasMultipleRoots) {\n\t\t\t\tconst rootName = baseResource.name ? baseResource.name : basename(baseResource.uri);\n\t\t\t\tpathLabel = pathLabel ? (rootName + ' • ' + pathLabel) : rootName; // always show root basename if there are multiple\n\t\t\t}\n\n\t\t\treturn pathLabel;\n\t\t}\n\t}\n\n\t// return if the resource is neither file:// nor untitled:// and no baseResource was provided\n\tif (resource.scheme !== Schemas.file && resource.scheme !== Schemas.untitled) {\n\t\treturn resource.with({ query: null, fragment: null }).toString(true);\n\t}\n\n\t// convert c:\\something => C:\\something\n\tif (hasDriveLetter(resource.fsPath)) {\n\t\treturn normalize(normalizeDriveLetter(resource.fsPath));\n\t}\n\n\t// normalize and tildify (macOS, Linux only)\n\tlet res = normalize(resource.fsPath);\n\tif (!isWindows && userHomeProvider?.userHome) {\n\t\tres = tildify(res, userHomeProvider.userHome.fsPath);\n\t}\n\n\treturn res;\n}\n\nexport function getBaseLabel(resource: URI | string): string;\nexport function getBaseLabel(resource: URI | string | undefined): string | undefined;\nexport function getBaseLabel(resource: URI | string | undefined): string | undefined {\n\tif (!resource) {\n\t\treturn undefined;\n\t}\n\n\tif (typeof resource === 'string') {\n\t\tresource = URI.file(resource);\n\t}\n\n\tconst base = basename(resource) || (resource.scheme === Schemas.file ? resource.fsPath : resource.path) /* can be empty string if '/' is passed in */;\n\n\t// convert c: => C:\n\tif (hasDriveLetter(base)) {\n\t\treturn normalizeDriveLetter(base);\n\t}\n\n\treturn base;\n}\n\nfunction hasDriveLetter(path: string): boolean {\n\treturn !!(isWindows && path && path[1] === ':');\n}\n\nexport function normalizeDriveLetter(path: string): string {\n\tif (hasDriveLetter(path)) {\n\t\treturn path.charAt(0).toUpperCase() + path.slice(1);\n\t}\n\n\treturn path;\n}\n\nlet normalizedUserHomeCached: { original: string; normalized: string } = Object.create(null);\nexport function tildify(path: string, userHome: string): string {\n\tif (isWindows || !path || !userHome) {\n\t\treturn path; // unsupported\n\t}\n\n\t// Keep a normalized user home path as cache to prevent accumulated string creation\n\tlet normalizedUserHome = normalizedUserHomeCached.original === userHome ? normalizedUserHomeCached.normalized : undefined;\n\tif (!normalizedUserHome) {\n\t\tnormalizedUserHome = `${rtrim(userHome, posix.sep)}${posix.sep}`;\n\t\tnormalizedUserHomeCached = { original: userHome, normalized: normalizedUserHome };\n\t}\n\n\t// Linux: case sensitive, macOS: case insensitive\n\tif (isLinux ? path.startsWith(normalizedUserHome) : startsWithIgnoreCase(path, normalizedUserHome)) {\n\t\tpath = `~/${path.substr(normalizedUserHome.length)}`;\n\t}\n\n\treturn path;\n}\n\nexport function untildify(path: string, userHome: string): string {\n\treturn path.replace(/^~($|\\/|\\\\)/, `${userHome}$1`);\n}\n\n/**\n * Shortens the paths but keeps them easy to distinguish.\n * Replaces not important parts with ellipsis.\n * Every shorten path matches only one original path and vice versa.\n *\n * Algorithm for shortening paths is as follows:\n * 1. For every path in list, find unique substring of that path.\n * 2. Unique substring along with ellipsis is shortened path of that path.\n * 3. To find unique substring of path, consider every segment of length from 1 to path.length of path from end of string\n *    and if present segment is not substring to any other paths then present segment is unique path,\n *    else check if it is not present as suffix of any other path and present segment is suffix of path itself,\n *    if it is true take present segment as unique path.\n * 4. Apply ellipsis to unique segment according to whether segment is present at start/in-between/end of path.\n *\n * Example 1\n * 1. consider 2 paths i.e. ['a\\\\b\\\\c\\\\d', 'a\\\\f\\\\b\\\\c\\\\d']\n * 2. find unique path of first path,\n * \ta. 'd' is present in path2 and is suffix of path2, hence not unique of present path.\n * \tb. 'c' is present in path2 and 'c' is not suffix of present path, similarly for 'b' and 'a' also.\n * \tc. 'd\\\\c' is suffix of path2.\n *  d. 'b\\\\c' is not suffix of present path.\n *  e. 'a\\\\b' is not present in path2, hence unique path is 'a\\\\b...'.\n * 3. for path2, 'f' is not present in path1 hence unique is '...\\\\f\\\\...'.\n *\n * Example 2\n * 1. consider 2 paths i.e. ['a\\\\b', 'a\\\\b\\\\c'].\n * \ta. Even if 'b' is present in path2, as 'b' is suffix of path1 and is not suffix of path2, unique path will be '...\\\\b'.\n * 2. for path2, 'c' is not present in path1 hence unique path is '..\\\\c'.\n */\nconst ellipsis = '\\u2026';\nconst unc = '\\\\\\\\';\nconst home = '~';\nexport function shorten(paths: string[], pathSeparator: string = sep): string[] {\n\tconst shortenedPaths: string[] = new Array(paths.length);\n\n\t// for every path\n\tlet match = false;\n\tfor (let pathIndex = 0; pathIndex < paths.length; pathIndex++) {\n\t\tlet path = paths[pathIndex];\n\n\t\tif (path === '') {\n\t\t\tshortenedPaths[pathIndex] = `.${pathSeparator}`;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!path) {\n\t\t\tshortenedPaths[pathIndex] = path;\n\t\t\tcontinue;\n\t\t}\n\n\t\tmatch = true;\n\n\t\t// trim for now and concatenate unc path (e.g. \\\\network) or root path (/etc, ~/etc) later\n\t\tlet prefix = '';\n\t\tif (path.indexOf(unc) === 0) {\n\t\t\tprefix = path.substr(0, path.indexOf(unc) + unc.length);\n\t\t\tpath = path.substr(path.indexOf(unc) + unc.length);\n\t\t} else if (path.indexOf(pathSeparator) === 0) {\n\t\t\tprefix = path.substr(0, path.indexOf(pathSeparator) + pathSeparator.length);\n\t\t\tpath = path.substr(path.indexOf(pathSeparator) + pathSeparator.length);\n\t\t} else if (path.indexOf(home) === 0) {\n\t\t\tprefix = path.substr(0, path.indexOf(home) + home.length);\n\t\t\tpath = path.substr(path.indexOf(home) + home.length);\n\t\t}\n\n\t\t// pick the first shortest subpath found\n\t\tconst segments: string[] = path.split(pathSeparator);\n\t\tfor (let subpathLength = 1; match && subpathLength <= segments.length; subpathLength++) {\n\t\t\tfor (let start = segments.length - subpathLength; match && start >= 0; start--) {\n\t\t\t\tmatch = false;\n\t\t\t\tlet subpath = segments.slice(start, start + subpathLength).join(pathSeparator);\n\n\t\t\t\t// that is unique to any other path\n\t\t\t\tfor (let otherPathIndex = 0; !match && otherPathIndex < paths.length; otherPathIndex++) {\n\n\t\t\t\t\t// suffix subpath treated specially as we consider no match 'x' and 'x/...'\n\t\t\t\t\tif (otherPathIndex !== pathIndex && paths[otherPathIndex] && paths[otherPathIndex].indexOf(subpath) > -1) {\n\t\t\t\t\t\tconst isSubpathEnding: boolean = (start + subpathLength === segments.length);\n\n\t\t\t\t\t\t// Adding separator as prefix for subpath, such that 'endsWith(src, trgt)' considers subpath as directory name instead of plain string.\n\t\t\t\t\t\t// prefix is not added when either subpath is root directory or path[otherPathIndex] does not have multiple directories.\n\t\t\t\t\t\tconst subpathWithSep: string = (start > 0 && paths[otherPathIndex].indexOf(pathSeparator) > -1) ? pathSeparator + subpath : subpath;\n\t\t\t\t\t\tconst isOtherPathEnding: boolean = paths[otherPathIndex].endsWith(subpathWithSep);\n\n\t\t\t\t\t\tmatch = !isSubpathEnding || isOtherPathEnding;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// found unique subpath\n\t\t\t\tif (!match) {\n\t\t\t\t\tlet result = '';\n\n\t\t\t\t\t// preserve disk drive or root prefix\n\t\t\t\t\tif (segments[0].endsWith(':') || prefix !== '') {\n\t\t\t\t\t\tif (start === 1) {\n\t\t\t\t\t\t\t// extend subpath to include disk drive prefix\n\t\t\t\t\t\t\tstart = 0;\n\t\t\t\t\t\t\tsubpathLength++;\n\t\t\t\t\t\t\tsubpath = segments[0] + pathSeparator + subpath;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (start > 0) {\n\t\t\t\t\t\t\tresult = segments[0] + pathSeparator;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresult = prefix + result;\n\t\t\t\t\t}\n\n\t\t\t\t\t// add ellipsis at the beginning if neeeded\n\t\t\t\t\tif (start > 0) {\n\t\t\t\t\t\tresult = result + ellipsis + pathSeparator;\n\t\t\t\t\t}\n\n\t\t\t\t\tresult = result + subpath;\n\n\t\t\t\t\t// add ellipsis at the end if needed\n\t\t\t\t\tif (start + subpathLength < segments.length) {\n\t\t\t\t\t\tresult = result + pathSeparator + ellipsis;\n\t\t\t\t\t}\n\n\t\t\t\t\tshortenedPaths[pathIndex] = result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (match) {\n\t\t\tshortenedPaths[pathIndex] = path; // use full path if no unique subpaths found\n\t\t}\n\t}\n\n\treturn shortenedPaths;\n}\n\nexport interface ISeparator {\n\tlabel: string;\n}\n\nenum Type {\n\tTEXT,\n\tVARIABLE,\n\tSEPARATOR\n}\n\ninterface ISegment {\n\tvalue: string;\n\ttype: Type;\n}\n\n/**\n * Helper to insert values for specific template variables into the string. E.g. \"this $(is) a $(template)\" can be\n * passed to this function together with an object that maps \"is\" and \"template\" to strings to have them replaced.\n * @param value string to which templating is applied\n * @param values the values of the templates to use\n */\nexport function template(template: string, values: { [key: string]: string | ISeparator | undefined | null } = Object.create(null)): string {\n\tconst segments: ISegment[] = [];\n\n\tlet inVariable = false;\n\tlet curVal = '';\n\tfor (const char of template) {\n\t\t// Beginning of variable\n\t\tif (char === '$' || (inVariable && char === '{')) {\n\t\t\tif (curVal) {\n\t\t\t\tsegments.push({ value: curVal, type: Type.TEXT });\n\t\t\t}\n\n\t\t\tcurVal = '';\n\t\t\tinVariable = true;\n\t\t}\n\n\t\t// End of variable\n\t\telse if (char === '}' && inVariable) {\n\t\t\tconst resolved = values[curVal];\n\n\t\t\t// Variable\n\t\t\tif (typeof resolved === 'string') {\n\t\t\t\tif (resolved.length) {\n\t\t\t\t\tsegments.push({ value: resolved, type: Type.VARIABLE });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Separator\n\t\t\telse if (resolved) {\n\t\t\t\tconst prevSegment = segments[segments.length - 1];\n\t\t\t\tif (!prevSegment || prevSegment.type !== Type.SEPARATOR) {\n\t\t\t\t\tsegments.push({ value: resolved.label, type: Type.SEPARATOR }); // prevent duplicate separators\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcurVal = '';\n\t\t\tinVariable = false;\n\t\t}\n\n\t\t// Text or Variable Name\n\t\telse {\n\t\t\tcurVal += char;\n\t\t}\n\t}\n\n\t// Tail\n\tif (curVal && !inVariable) {\n\t\tsegments.push({ value: curVal, type: Type.TEXT });\n\t}\n\n\treturn segments.filter((segment, index) => {\n\n\t\t// Only keep separator if we have values to the left and right\n\t\tif (segment.type === Type.SEPARATOR) {\n\t\t\tconst left = segments[index - 1];\n\t\t\tconst right = segments[index + 1];\n\n\t\t\treturn [left, right].every(segment => segment && (segment.type === Type.VARIABLE || segment.type === Type.TEXT) && segment.value.length > 0);\n\t\t}\n\n\t\t// accept any TEXT and VARIABLE\n\t\treturn true;\n\t}).map(segment => segment.value).join('');\n}\n\n/**\n * Handles mnemonics for menu items. Depending on OS:\n * - Windows: Supported via & character (replace && with &)\n * -   Linux: Supported via & character (replace && with &)\n * -   macOS: Unsupported (replace && with empty string)\n */\nexport function mnemonicMenuLabel(label: string, forceDisableMnemonics?: boolean): string {\n\tif (isMacintosh || forceDisableMnemonics) {\n\t\treturn label.replace(/\\(&&\\w\\)|&&/g, '').replace(/&/g, isMacintosh ? '&' : '&&');\n\t}\n\n\treturn label.replace(/&&|&/g, m => m === '&' ? '&&' : '&');\n}\n\n/**\n * Handles mnemonics for buttons. Depending on OS:\n * - Windows: Supported via & character (replace && with & and & with && for escaping)\n * -   Linux: Supported via _ character (replace && with _)\n * -   macOS: Unsupported (replace && with empty string)\n */\nexport function mnemonicButtonLabel(label: string, forceDisableMnemonics?: boolean): string {\n\tif (isMacintosh || forceDisableMnemonics) {\n\t\treturn label.replace(/\\(&&\\w\\)|&&/g, '');\n\t}\n\n\tif (isWindows) {\n\t\treturn label.replace(/&&|&/g, m => m === '&' ? '&&' : '&');\n\t}\n\n\treturn label.replace(/&&/g, '_');\n}\n\nexport function unmnemonicLabel(label: string): string {\n\treturn label.replace(/&/g, '&&');\n}\n\n/**\n * Splits a path in name and parent path, supporting both '/' and '\\'\n */\nexport function splitName(fullPath: string): { name: string, parentPath: string } {\n\tconst p = fullPath.indexOf('/') !== -1 ? posix : win32;\n\tconst name = p.basename(fullPath);\n\tconst parentPath = p.dirname(fullPath);\n\tif (name.length) {\n\t\treturn { name, parentPath };\n\t}\n\t// only the root segment\n\treturn { name: parentPath, parentPath: '' };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { MarshalledObject } from 'vs/base/common/marshalling';\nimport { Schemas } from './network';\n\nexport interface IURITransformer {\n\ttransformIncoming(uri: UriComponents): UriComponents;\n\ttransformOutgoing(uri: UriComponents): UriComponents;\n\ttransformOutgoingURI(uri: URI): URI;\n\ttransformOutgoingScheme(scheme: string): string;\n}\n\nexport interface UriParts {\n\tscheme: string;\n\tauthority?: string;\n\tpath?: string;\n}\n\nexport interface IRawURITransformer {\n\ttransformIncoming(uri: UriParts): UriParts;\n\ttransformOutgoing(uri: UriParts): UriParts;\n\ttransformOutgoingScheme(scheme: string): string;\n}\n\nfunction toJSON(uri: URI): UriComponents {\n\treturn <UriComponents><any>uri.toJSON();\n}\n\nexport class URITransformer implements IURITransformer {\n\n\tconstructor(private readonly remoteAuthority: string) {\n\t}\n\n\t// NOTE@coder: Coming in from the browser it'll be vscode-remote so it needs\n\t// to be transformed into file.\n\tpublic transformIncoming(uri: UriComponents): UriComponents {\n\t\treturn uri.scheme === Schemas.vscodeRemote\n\t\t\t? toJSON(URI.file(uri.path))\n\t\t\t: uri;\n\t}\n\n\t// NOTE@coder: Going out to the browser it'll be file so it needs to be\n\t// transformed into vscode-remote.\n\tpublic transformOutgoing(uri: UriComponents): UriComponents {\n\t\treturn uri.scheme === Schemas.file\n\t\t\t? toJSON(URI.from({ authority: this.remoteAuthority, scheme: Schemas.vscodeRemote, path: uri.path }))\n\t\t\t: uri;\n\t}\n\n\tpublic transformOutgoingURI(uri: URI): URI {\n\t\treturn uri.scheme === Schemas.file\n\t\t\t? URI.from({ authority: this.remoteAuthority, scheme: Schemas.vscodeRemote, path:uri.path })\n\t\t\t: uri;\n\t}\n\n\tpublic transformOutgoingScheme(scheme: string): string {\n\t\treturn scheme === Schemas.file\n\t\t\t? Schemas.vscodeRemote\n\t\t\t: scheme;\n\t}\n}\n\nexport const DefaultURITransformer: IURITransformer = new class {\n\ttransformIncoming(uri: UriComponents) {\n\t\treturn uri;\n\t}\n\n\ttransformOutgoing(uri: UriComponents): UriComponents {\n\t\treturn uri;\n\t}\n\n\ttransformOutgoingURI(uri: URI): URI {\n\t\treturn uri;\n\t}\n\n\ttransformOutgoingScheme(scheme: string): string {\n\t\treturn scheme;\n\t}\n};\n\nfunction _transformOutgoingURIs(obj: any, transformer: IURITransformer, depth: number): any {\n\n\tif (!obj || depth > 200) {\n\t\treturn null;\n\t}\n\n\tif (typeof obj === 'object') {\n\t\tif (obj instanceof URI) {\n\t\t\treturn transformer.transformOutgoing(obj);\n\t\t}\n\n\t\t// walk object (or array)\n\t\tfor (let key in obj) {\n\t\t\tif (Object.hasOwnProperty.call(obj, key)) {\n\t\t\t\tconst r = _transformOutgoingURIs(obj[key], transformer, depth + 1);\n\t\t\t\tif (r !== null) {\n\t\t\t\t\tobj[key] = r;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n}\n\nexport function transformOutgoingURIs<T>(obj: T, transformer: IURITransformer): T {\n\tconst result = _transformOutgoingURIs(obj, transformer, 0);\n\tif (result === null) {\n\t\t// no change\n\t\treturn obj;\n\t}\n\treturn result;\n}\n\n\nfunction _transformIncomingURIs(obj: any, transformer: IURITransformer, revive: boolean, depth: number): any {\n\n\tif (!obj || depth > 200) {\n\t\treturn null;\n\t}\n\n\tif (typeof obj === 'object') {\n\n\t\tif ((<MarshalledObject>obj).$mid === 1) {\n\t\t\treturn revive ? URI.revive(transformer.transformIncoming(obj)) : transformer.transformIncoming(obj);\n\t\t}\n\n\t\t// walk object (or array)\n\t\tfor (let key in obj) {\n\t\t\tif (Object.hasOwnProperty.call(obj, key)) {\n\t\t\t\tconst r = _transformIncomingURIs(obj[key], transformer, revive, depth + 1);\n\t\t\t\tif (r !== null) {\n\t\t\t\t\tobj[key] = r;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n}\n\nexport function transformIncomingURIs<T>(obj: T, transformer: IURITransformer): T {\n\tconst result = _transformIncomingURIs(obj, transformer, false, 0);\n\tif (result === null) {\n\t\t// no change\n\t\treturn obj;\n\t}\n\treturn result;\n}\n\nexport function transformAndReviveIncomingURIs<T>(obj: T, transformer: IURITransformer): T {\n\tconst result = _transformIncomingURIs(obj, transformer, true, 0);\n\tif (result === null) {\n\t\t// no change\n\t\treturn obj;\n\t}\n\treturn result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\nconst _UUIDPattern = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\n\nexport function isUUID(value: string): boolean {\n\treturn _UUIDPattern.test(value);\n}\n\n// prep-work\nconst _data = new Uint8Array(16);\nconst _hex: string[] = [];\nfor (let i = 0; i < 256; i++) {\n\t_hex.push(i.toString(16).padStart(2, '0'));\n}\n\n// todo@joh node nodejs use `crypto#randomBytes`, see: https://nodejs.org/docs/latest/api/crypto.html#crypto_crypto_randombytes_size_callback\n// todo@joh use browser-crypto\nconst _fillRandomValues = function (bucket: Uint8Array): Uint8Array {\n\tfor (let i = 0; i < bucket.length; i++) {\n\t\tbucket[i] = Math.floor(Math.random() * 256);\n\t}\n\treturn bucket;\n};\n\nexport function generateUuid(): string {\n\t// get data\n\t_fillRandomValues(_data);\n\n\t// set version bits\n\t_data[6] = (_data[6] & 0x0f) | 0x40;\n\t_data[8] = (_data[8] & 0x3f) | 0x80;\n\n\t// print as string\n\tlet i = 0;\n\tlet result = '';\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += '-';\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += '-';\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += '-';\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += '-';\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\treturn result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as sd from 'string_decoder';\nimport { CharCode } from 'vs/base/common/charCode';\n\n/**\n * Convenient way to iterate over output line by line. This helper accommodates for the fact that\n * a buffer might not end with new lines all the way.\n *\n * To use:\n * - call the write method\n * - forEach() over the result to get the lines\n */\nexport class LineDecoder {\n\tprivate stringDecoder: sd.StringDecoder;\n\tprivate remaining: string | null;\n\n\tconstructor(encoding: string = 'utf8') {\n\t\tthis.stringDecoder = new sd.StringDecoder(encoding);\n\t\tthis.remaining = null;\n\t}\n\n\twrite(buffer: Buffer): string[] {\n\t\tconst result: string[] = [];\n\t\tconst value = this.remaining\n\t\t\t? this.remaining + this.stringDecoder.write(buffer)\n\t\t\t: this.stringDecoder.write(buffer);\n\n\t\tif (value.length < 1) {\n\t\t\treturn result;\n\t\t}\n\t\tlet start = 0;\n\t\tlet ch: number;\n\t\tlet idx = start;\n\t\twhile (idx < value.length) {\n\t\t\tch = value.charCodeAt(idx);\n\t\t\tif (ch === CharCode.CarriageReturn || ch === CharCode.LineFeed) {\n\t\t\t\tresult.push(value.substring(start, idx));\n\t\t\t\tidx++;\n\t\t\t\tif (idx < value.length) {\n\t\t\t\t\tconst lastChar = ch;\n\t\t\t\t\tch = value.charCodeAt(idx);\n\t\t\t\t\tif ((lastChar === CharCode.CarriageReturn && ch === CharCode.LineFeed) || (lastChar === CharCode.LineFeed && ch === CharCode.CarriageReturn)) {\n\t\t\t\t\t\tidx++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstart = idx;\n\t\t\t} else {\n\t\t\t\tidx++;\n\t\t\t}\n\t\t}\n\t\tthis.remaining = start < value.length ? value.substr(start) : null;\n\t\treturn result;\n\t}\n\n\tend(): string | null {\n\t\treturn this.remaining;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { networkInterfaces } from 'os';\n\nconst invalidMacAddresses = new Set([\n\t'00:00:00:00:00:00',\n\t'ff:ff:ff:ff:ff:ff',\n\t'ac:de:48:00:11:22'\n]);\n\nfunction validateMacAddress(candidate: string): boolean {\n\tconst tempCandidate = candidate.replace(/\\-/g, ':').toLowerCase();\n\treturn !invalidMacAddresses.has(tempCandidate);\n}\n\nexport function getMac(): Promise<string> {\n\treturn new Promise(async (resolve, reject) => {\n\t\tconst timeout = setTimeout(() => reject('Unable to retrieve mac address (timeout after 10s)'), 10000);\n\n\t\ttry {\n\t\t\tresolve(await doGetMac());\n\t\t} catch (error) {\n\t\t\treject(error);\n\t\t} finally {\n\t\t\tclearTimeout(timeout);\n\t\t}\n\t});\n}\n\nfunction doGetMac(): Promise<string> {\n\treturn new Promise((resolve, reject) => {\n\t\ttry {\n\t\t\tconst ifaces = networkInterfaces();\n\t\t\tfor (const [, infos] of Object.entries(ifaces)) {\n\t\t\t\tfor (const info of infos) {\n\t\t\t\t\tif (validateMacAddress(info.mac)) {\n\t\t\t\t\t\treturn resolve(info.mac);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treject('Unable to retrieve mac address (unexpected format)');\n\t\t} catch (err) {\n\t\t\treject(err);\n\t\t}\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as errors from 'vs/base/common/errors';\nimport * as uuid from 'vs/base/common/uuid';\nimport { networkInterfaces } from 'os';\nimport { TernarySearchTree } from 'vs/base/common/map';\nimport { getMac } from 'vs/base/node/macAddress';\n\n// http://www.techrepublic.com/blog/data-center/mac-address-scorecard-for-common-virtual-machine-platforms/\n// VMware ESX 3, Server, Workstation, Player\t00-50-56, 00-0C-29, 00-05-69\n// Microsoft Hyper-V, Virtual Server, Virtual PC\t00-03-FF\n// Parallels Desktop, Workstation, Server, Virtuozzo\t00-1C-42\n// Virtual Iron 4\t00-0F-4B\n// Red Hat Xen\t00-16-3E\n// Oracle VM\t00-16-3E\n// XenSource\t00-16-3E\n// Novell Xen\t00-16-3E\n// Sun xVM VirtualBox\t08-00-27\nexport const virtualMachineHint: { value(): number } = new class {\n\n\tprivate _virtualMachineOUIs?: TernarySearchTree<string, boolean>;\n\tprivate _value?: number;\n\n\tprivate _isVirtualMachineMacAdress(mac: string): boolean {\n\t\tif (!this._virtualMachineOUIs) {\n\t\t\tthis._virtualMachineOUIs = TernarySearchTree.forStrings<boolean>();\n\n\t\t\t// dash-separated\n\t\t\tthis._virtualMachineOUIs.set('00-50-56', true);\n\t\t\tthis._virtualMachineOUIs.set('00-0C-29', true);\n\t\t\tthis._virtualMachineOUIs.set('00-05-69', true);\n\t\t\tthis._virtualMachineOUIs.set('00-03-FF', true);\n\t\t\tthis._virtualMachineOUIs.set('00-1C-42', true);\n\t\t\tthis._virtualMachineOUIs.set('00-16-3E', true);\n\t\t\tthis._virtualMachineOUIs.set('08-00-27', true);\n\n\t\t\t// colon-separated\n\t\t\tthis._virtualMachineOUIs.set('00:50:56', true);\n\t\t\tthis._virtualMachineOUIs.set('00:0C:29', true);\n\t\t\tthis._virtualMachineOUIs.set('00:05:69', true);\n\t\t\tthis._virtualMachineOUIs.set('00:03:FF', true);\n\t\t\tthis._virtualMachineOUIs.set('00:1C:42', true);\n\t\t\tthis._virtualMachineOUIs.set('00:16:3E', true);\n\t\t\tthis._virtualMachineOUIs.set('08:00:27', true);\n\t\t}\n\t\treturn !!this._virtualMachineOUIs.findSubstr(mac);\n\t}\n\n\tvalue(): number {\n\t\tif (this._value === undefined) {\n\t\t\tlet vmOui = 0;\n\t\t\tlet interfaceCount = 0;\n\n\t\t\tconst interfaces = networkInterfaces();\n\t\t\tfor (let name in interfaces) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(interfaces, name)) {\n\t\t\t\t\tfor (const { mac, internal } of interfaces[name]) {\n\t\t\t\t\t\tif (!internal) {\n\t\t\t\t\t\t\tinterfaceCount += 1;\n\t\t\t\t\t\t\tif (this._isVirtualMachineMacAdress(mac.toUpperCase())) {\n\t\t\t\t\t\t\t\tvmOui += 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._value = interfaceCount > 0\n\t\t\t\t? vmOui / interfaceCount\n\t\t\t\t: 0;\n\t\t}\n\n\t\treturn this._value;\n\t}\n};\n\nlet machineId: Promise<string>;\nexport async function getMachineId(): Promise<string> {\n\tif (!machineId) {\n\t\tmachineId = (async () => {\n\t\t\tconst id = await getMacMachineId();\n\n\t\t\treturn id || uuid.generateUuid(); // fallback, generate a UUID\n\t\t})();\n\t}\n\n\treturn machineId;\n}\n\nasync function getMacMachineId(): Promise<string | undefined> {\n\ttry {\n\t\tconst crypto = await import('crypto');\n\t\tconst macAddress = await getMac();\n\t\treturn crypto.createHash('sha256').update(macAddress, 'utf8').digest('hex');\n\t} catch (err) {\n\t\terrors.onUnexpectedError(err);\n\t\treturn undefined;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { FileAccess } from 'vs/base/common/network';\n\ninterface IPaths {\n\tgetAppDataPath(platform: string): string;\n\tgetDefaultUserDataPath(platform: string): string;\n}\n\nconst pathsPath = FileAccess.asFileUri('paths', require).fsPath;\nconst paths = require.__$__nodeRequire<IPaths>(pathsPath);\nexport const getAppDataPath = paths.getAppDataPath;\nexport const getDefaultUserDataPath = paths.getDefaultUserDataPath;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { join } from 'vs/base/common/path';\nimport { Queue } from 'vs/base/common/async';\nimport * as fs from 'fs';\nimport * as os from 'os';\nimport * as platform from 'vs/base/common/platform';\nimport { Event } from 'vs/base/common/event';\nimport { promisify } from 'util';\nimport { isRootOrDriveLetter } from 'vs/base/common/extpath';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { normalizeNFC } from 'vs/base/common/normalization';\n\n// See https://github.com/microsoft/vscode/issues/30180\nconst WIN32_MAX_FILE_SIZE = 300 * 1024 * 1024; // 300 MB\nconst GENERAL_MAX_FILE_SIZE = 16 * 1024 * 1024 * 1024; // 16 GB\n\n// See https://github.com/v8/v8/blob/5918a23a3d571b9625e5cce246bdd5b46ff7cd8b/src/heap/heap.cc#L149\nconst WIN32_MAX_HEAP_SIZE = 700 * 1024 * 1024; // 700 MB\nconst GENERAL_MAX_HEAP_SIZE = 700 * 2 * 1024 * 1024; // 1400 MB\n\nexport const MAX_FILE_SIZE = process.arch === 'ia32' ? WIN32_MAX_FILE_SIZE : GENERAL_MAX_FILE_SIZE;\nexport const MAX_HEAP_SIZE = process.arch === 'ia32' ? WIN32_MAX_HEAP_SIZE : GENERAL_MAX_HEAP_SIZE;\n\nexport enum RimRafMode {\n\n\t/**\n\t * Slow version that unlinks each file and folder.\n\t */\n\tUNLINK,\n\n\t/**\n\t * Fast version that first moves the file/folder\n\t * into a temp directory and then deletes that\n\t * without waiting for it.\n\t */\n\tMOVE\n}\n\nexport async function rimraf(path: string, mode = RimRafMode.UNLINK): Promise<void> {\n\tif (isRootOrDriveLetter(path)) {\n\t\tthrow new Error('rimraf - will refuse to recursively delete root');\n\t}\n\n\t// delete: via unlink\n\tif (mode === RimRafMode.UNLINK) {\n\t\treturn rimrafUnlink(path);\n\t}\n\n\t// delete: via move\n\treturn rimrafMove(path);\n}\n\nasync function rimrafUnlink(path: string): Promise<void> {\n\ttry {\n\t\tconst stat = await lstat(path);\n\n\t\t// Folder delete (recursive) - NOT for symbolic links though!\n\t\tif (stat.isDirectory() && !stat.isSymbolicLink()) {\n\n\t\t\t// Children\n\t\t\tconst children = await readdir(path);\n\t\t\tawait Promise.all(children.map(child => rimrafUnlink(join(path, child))));\n\n\t\t\t// Folder\n\t\t\tawait promisify(fs.rmdir)(path);\n\t\t}\n\n\t\t// Single file delete\n\t\telse {\n\n\t\t\t// chmod as needed to allow for unlink\n\t\t\tconst mode = stat.mode;\n\t\t\tif (!(mode & 128)) { // 128 === 0200\n\t\t\t\tawait chmod(path, mode | 128);\n\t\t\t}\n\n\t\t\treturn unlink(path);\n\t\t}\n\t} catch (error) {\n\t\tif (error.code !== 'ENOENT') {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nasync function rimrafMove(path: string): Promise<void> {\n\ttry {\n\t\tconst pathInTemp = join(os.tmpdir(), generateUuid());\n\t\ttry {\n\t\t\tawait rename(path, pathInTemp);\n\t\t} catch (error) {\n\t\t\treturn rimrafUnlink(path); // if rename fails, delete without tmp dir\n\t\t}\n\n\t\t// Delete but do not return as promise\n\t\trimrafUnlink(pathInTemp);\n\t} catch (error) {\n\t\tif (error.code !== 'ENOENT') {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nexport function rimrafSync(path: string): void {\n\tif (isRootOrDriveLetter(path)) {\n\t\tthrow new Error('rimraf - will refuse to recursively delete root');\n\t}\n\n\ttry {\n\t\tconst stat = fs.lstatSync(path);\n\n\t\t// Folder delete (recursive) - NOT for symbolic links though!\n\t\tif (stat.isDirectory() && !stat.isSymbolicLink()) {\n\n\t\t\t// Children\n\t\t\tconst children = readdirSync(path);\n\t\t\tchildren.map(child => rimrafSync(join(path, child)));\n\n\t\t\t// Folder\n\t\t\tfs.rmdirSync(path);\n\t\t}\n\n\t\t// Single file delete\n\t\telse {\n\n\t\t\t// chmod as needed to allow for unlink\n\t\t\tconst mode = stat.mode;\n\t\t\tif (!(mode & 128)) { // 128 === 0200\n\t\t\t\tfs.chmodSync(path, mode | 128);\n\t\t\t}\n\n\t\t\treturn fs.unlinkSync(path);\n\t\t}\n\t} catch (error) {\n\t\tif (error.code !== 'ENOENT') {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nexport async function readdir(path: string): Promise<string[]> {\n\treturn handleDirectoryChildren(await promisify(fs.readdir)(path));\n}\n\nexport async function readdirWithFileTypes(path: string): Promise<fs.Dirent[]> {\n\tconst children = await promisify(fs.readdir)(path, { withFileTypes: true });\n\n\t// Mac: uses NFD unicode form on disk, but we want NFC\n\t// See also https://github.com/nodejs/node/issues/2165\n\tif (platform.isMacintosh) {\n\t\tfor (const child of children) {\n\t\t\tchild.name = normalizeNFC(child.name);\n\t\t}\n\t}\n\n\treturn children;\n}\n\nexport function readdirSync(path: string): string[] {\n\treturn handleDirectoryChildren(fs.readdirSync(path));\n}\n\nfunction handleDirectoryChildren(children: string[]): string[] {\n\t// Mac: uses NFD unicode form on disk, but we want NFC\n\t// See also https://github.com/nodejs/node/issues/2165\n\tif (platform.isMacintosh) {\n\t\treturn children.map(child => normalizeNFC(child));\n\t}\n\n\treturn children;\n}\n\nexport function exists(path: string): Promise<boolean> {\n\treturn promisify(fs.exists)(path);\n}\n\nexport function chmod(path: string, mode: number): Promise<void> {\n\treturn promisify(fs.chmod)(path, mode);\n}\n\nexport function stat(path: string): Promise<fs.Stats> {\n\treturn promisify(fs.stat)(path);\n}\n\nexport interface IStatAndLink {\n\n\t// The stats of the file. If the file is a symbolic\n\t// link, the stats will be of that target file and\n\t// not the link itself.\n\t// If the file is a symbolic link pointing to a non\n\t// existing file, the stat will be of the link and\n\t// the `dangling` flag will indicate this.\n\tstat: fs.Stats;\n\n\t// Will be provided if the resource is a symbolic link\n\t// on disk. Use the `dangling` flag to find out if it\n\t// points to a resource that does not exist on disk.\n\tsymbolicLink?: { dangling: boolean };\n}\n\nexport async function statLink(path: string): Promise<IStatAndLink> {\n\n\t// First stat the link\n\tlet lstats: fs.Stats | undefined;\n\ttry {\n\t\tlstats = await lstat(path);\n\n\t\t// Return early if the stat is not a symbolic link at all\n\t\tif (!lstats.isSymbolicLink()) {\n\t\t\treturn { stat: lstats };\n\t\t}\n\t} catch (error) {\n\t\t/* ignore - use stat() instead */\n\t}\n\n\t// If the stat is a symbolic link or failed to stat, use fs.stat()\n\t// which for symbolic links will stat the target they point to\n\ttry {\n\t\tconst stats = await stat(path);\n\n\t\treturn { stat: stats, symbolicLink: lstats?.isSymbolicLink() ? { dangling: false } : undefined };\n\t} catch (error) {\n\n\t\t// If the link points to a non-existing file we still want\n\t\t// to return it as result while setting dangling: true flag\n\t\tif (error.code === 'ENOENT' && lstats) {\n\t\t\treturn { stat: lstats, symbolicLink: { dangling: true } };\n\t\t}\n\n\t\tthrow error;\n\t}\n}\n\nexport function lstat(path: string): Promise<fs.Stats> {\n\treturn promisify(fs.lstat)(path);\n}\n\nexport function rename(oldPath: string, newPath: string): Promise<void> {\n\treturn promisify(fs.rename)(oldPath, newPath);\n}\n\nexport function renameIgnoreError(oldPath: string, newPath: string): Promise<void> {\n\treturn new Promise(resolve => fs.rename(oldPath, newPath, () => resolve()));\n}\n\nexport function unlink(path: string): Promise<void> {\n\treturn promisify(fs.unlink)(path);\n}\n\nexport function symlink(target: string, path: string, type?: string): Promise<void> {\n\treturn promisify(fs.symlink)(target, path, type);\n}\n\nexport function truncate(path: string, len: number): Promise<void> {\n\treturn promisify(fs.truncate)(path, len);\n}\n\nexport function readFile(path: string): Promise<Buffer>;\nexport function readFile(path: string, encoding: string): Promise<string>;\nexport function readFile(path: string, encoding?: string): Promise<Buffer | string> {\n\treturn promisify(fs.readFile)(path, encoding);\n}\n\nexport async function mkdirp(path: string, mode?: number): Promise<void> {\n\treturn promisify(fs.mkdir)(path, { mode, recursive: true });\n}\n\n// According to node.js docs (https://nodejs.org/docs/v6.5.0/api/fs.html#fs_fs_writefile_file_data_options_callback)\n// it is not safe to call writeFile() on the same path multiple times without waiting for the callback to return.\n// Therefor we use a Queue on the path that is given to us to sequentialize calls to the same path properly.\nconst writeFilePathQueues: Map<string, Queue<void>> = new Map();\n\nexport function writeFile(path: string, data: string, options?: IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: Buffer, options?: IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: Uint8Array, options?: IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: string | Buffer | Uint8Array, options?: IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: string | Buffer | Uint8Array, options?: IWriteFileOptions): Promise<void> {\n\tconst queueKey = toQueueKey(path);\n\n\treturn ensureWriteFileQueue(queueKey).queue(() => {\n\t\tconst ensuredOptions = ensureWriteOptions(options);\n\n\t\treturn new Promise((resolve, reject) => doWriteFileAndFlush(path, data, ensuredOptions, error => error ? reject(error) : resolve()));\n\t});\n}\n\nfunction toQueueKey(path: string): string {\n\tlet queueKey = path;\n\tif (platform.isWindows || platform.isMacintosh) {\n\t\tqueueKey = queueKey.toLowerCase(); // accommodate for case insensitive file systems\n\t}\n\n\treturn queueKey;\n}\n\nfunction ensureWriteFileQueue(queueKey: string): Queue<void> {\n\tconst existingWriteFileQueue = writeFilePathQueues.get(queueKey);\n\tif (existingWriteFileQueue) {\n\t\treturn existingWriteFileQueue;\n\t}\n\n\tconst writeFileQueue = new Queue<void>();\n\twriteFilePathQueues.set(queueKey, writeFileQueue);\n\n\tconst onFinish = Event.once(writeFileQueue.onFinished);\n\tonFinish(() => {\n\t\twriteFilePathQueues.delete(queueKey);\n\t\twriteFileQueue.dispose();\n\t});\n\n\treturn writeFileQueue;\n}\n\nexport interface IWriteFileOptions {\n\tmode?: number;\n\tflag?: string;\n}\n\ninterface IEnsuredWriteFileOptions extends IWriteFileOptions {\n\tmode: number;\n\tflag: string;\n}\n\nlet canFlush = true;\n\n// Calls fs.writeFile() followed by a fs.sync() call to flush the changes to disk\n// We do this in cases where we want to make sure the data is really on disk and\n// not in some cache.\n//\n// See https://github.com/nodejs/node/blob/v5.10.0/lib/fs.js#L1194\nfunction doWriteFileAndFlush(path: string, data: string | Buffer | Uint8Array, options: IEnsuredWriteFileOptions, callback: (error: Error | null) => void): void {\n\tif (!canFlush) {\n\t\treturn fs.writeFile(path, data, { mode: options.mode, flag: options.flag }, callback);\n\t}\n\n\t// Open the file with same flags and mode as fs.writeFile()\n\tfs.open(path, options.flag, options.mode, (openError, fd) => {\n\t\tif (openError) {\n\t\t\treturn callback(openError);\n\t\t}\n\n\t\t// It is valid to pass a fd handle to fs.writeFile() and this will keep the handle open!\n\t\tfs.writeFile(fd, data, writeError => {\n\t\t\tif (writeError) {\n\t\t\t\treturn fs.close(fd, () => callback(writeError)); // still need to close the handle on error!\n\t\t\t}\n\n\t\t\t// Flush contents (not metadata) of the file to disk\n\t\t\tfs.fdatasync(fd, (syncError: Error | null) => {\n\n\t\t\t\t// In some exotic setups it is well possible that node fails to sync\n\t\t\t\t// In that case we disable flushing and warn to the console\n\t\t\t\tif (syncError) {\n\t\t\t\t\tconsole.warn('[node.js fs] fdatasync is now disabled for this session because it failed: ', syncError);\n\t\t\t\t\tcanFlush = false;\n\t\t\t\t}\n\n\t\t\t\treturn fs.close(fd, closeError => callback(closeError));\n\t\t\t});\n\t\t});\n\t});\n}\n\nexport function writeFileSync(path: string, data: string | Buffer, options?: IWriteFileOptions): void {\n\tconst ensuredOptions = ensureWriteOptions(options);\n\n\tif (!canFlush) {\n\t\treturn fs.writeFileSync(path, data, { mode: ensuredOptions.mode, flag: ensuredOptions.flag });\n\t}\n\n\t// Open the file with same flags and mode as fs.writeFile()\n\tconst fd = fs.openSync(path, ensuredOptions.flag, ensuredOptions.mode);\n\n\ttry {\n\n\t\t// It is valid to pass a fd handle to fs.writeFile() and this will keep the handle open!\n\t\tfs.writeFileSync(fd, data);\n\n\t\t// Flush contents (not metadata) of the file to disk\n\t\ttry {\n\t\t\tfs.fdatasyncSync(fd);\n\t\t} catch (syncError) {\n\t\t\tconsole.warn('[node.js fs] fdatasyncSync is now disabled for this session because it failed: ', syncError);\n\t\t\tcanFlush = false;\n\t\t}\n\t} finally {\n\t\tfs.closeSync(fd);\n\t}\n}\n\nfunction ensureWriteOptions(options?: IWriteFileOptions): IEnsuredWriteFileOptions {\n\tif (!options) {\n\t\treturn { mode: 0o666, flag: 'w' };\n\t}\n\n\treturn {\n\t\tmode: typeof options.mode === 'number' ? options.mode : 0o666,\n\t\tflag: typeof options.flag === 'string' ? options.flag : 'w'\n\t};\n}\n\nexport async function readDirsInDir(dirPath: string): Promise<string[]> {\n\tconst children = await readdir(dirPath);\n\tconst directories: string[] = [];\n\n\tfor (const child of children) {\n\t\tif (await dirExists(join(dirPath, child))) {\n\t\t\tdirectories.push(child);\n\t\t}\n\t}\n\n\treturn directories;\n}\n\nexport async function dirExists(path: string): Promise<boolean> {\n\ttry {\n\t\tconst fileStat = await stat(path);\n\n\t\treturn fileStat.isDirectory();\n\t} catch (error) {\n\t\treturn false;\n\t}\n}\n\nexport async function fileExists(path: string): Promise<boolean> {\n\ttry {\n\t\tconst fileStat = await stat(path);\n\n\t\treturn fileStat.isFile();\n\t} catch (error) {\n\t\treturn false;\n\t}\n}\n\nexport function whenDeleted(path: string): Promise<void> {\n\n\t// Complete when wait marker file is deleted\n\treturn new Promise<void>(resolve => {\n\t\tlet running = false;\n\t\tconst interval = setInterval(() => {\n\t\t\tif (!running) {\n\t\t\t\trunning = true;\n\t\t\t\tfs.exists(path, exists => {\n\t\t\t\t\trunning = false;\n\n\t\t\t\t\tif (!exists) {\n\t\t\t\t\t\tclearInterval(interval);\n\t\t\t\t\t\tresolve(undefined);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}, 1000);\n\t});\n}\n\nexport async function move(source: string, target: string): Promise<void> {\n\tif (source === target) {\n\t\treturn Promise.resolve();\n\t}\n\n\tasync function updateMtime(path: string): Promise<void> {\n\t\tconst stat = await lstat(path);\n\t\tif (stat.isDirectory() || stat.isSymbolicLink()) {\n\t\t\treturn Promise.resolve(); // only for files\n\t\t}\n\n\t\tconst fd = await promisify(fs.open)(path, 'a');\n\t\ttry {\n\t\t\tawait promisify(fs.futimes)(fd, stat.atime, new Date());\n\t\t} catch (error) {\n\t\t\t//ignore\n\t\t}\n\n\t\treturn promisify(fs.close)(fd);\n\t}\n\n\ttry {\n\t\tawait rename(source, target);\n\t\tawait updateMtime(target);\n\t} catch (error) {\n\n\t\t// In two cases we fallback to classic copy and delete:\n\t\t//\n\t\t// 1.) The EXDEV error indicates that source and target are on different devices\n\t\t// In this case, fallback to using a copy() operation as there is no way to\n\t\t// rename() between different devices.\n\t\t//\n\t\t// 2.) The user tries to rename a file/folder that ends with a dot. This is not\n\t\t// really possible to move then, at least on UNC devices.\n\t\tif (source.toLowerCase() !== target.toLowerCase() && error.code === 'EXDEV' || source.endsWith('.')) {\n\t\t\tawait copy(source, target);\n\t\t\tawait rimraf(source, RimRafMode.MOVE);\n\t\t\tawait updateMtime(target);\n\t\t} else {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nexport async function copy(source: string, target: string, copiedSourcesIn?: { [path: string]: boolean }): Promise<void> {\n\tconst copiedSources = copiedSourcesIn ? copiedSourcesIn : Object.create(null);\n\n\tconst fileStat = await stat(source);\n\tif (!fileStat.isDirectory()) {\n\t\treturn doCopyFile(source, target, fileStat.mode & 511);\n\t}\n\n\tif (copiedSources[source]) {\n\t\treturn Promise.resolve(); // escape when there are cycles (can happen with symlinks)\n\t}\n\n\tcopiedSources[source] = true; // remember as copied\n\n\t// Create folder\n\tawait mkdirp(target, fileStat.mode & 511);\n\n\t// Copy each file recursively\n\tconst files = await readdir(source);\n\tfor (let i = 0; i < files.length; i++) {\n\t\tconst file = files[i];\n\t\tawait copy(join(source, file), join(target, file), copiedSources);\n\t}\n}\n\nasync function doCopyFile(source: string, target: string, mode: number): Promise<void> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst reader = fs.createReadStream(source);\n\t\tconst writer = fs.createWriteStream(target, { mode });\n\n\t\tlet finished = false;\n\t\tconst finish = (error?: Error) => {\n\t\t\tif (!finished) {\n\t\t\t\tfinished = true;\n\n\t\t\t\t// in error cases, pass to callback\n\t\t\t\tif (error) {\n\t\t\t\t\treturn reject(error);\n\t\t\t\t}\n\n\t\t\t\t// we need to explicitly chmod because of https://github.com/nodejs/node/issues/1104\n\t\t\t\tfs.chmod(target, mode, error => error ? reject(error) : resolve());\n\t\t\t}\n\t\t};\n\n\t\t// handle errors properly\n\t\treader.once('error', error => finish(error));\n\t\twriter.once('error', error => finish(error));\n\n\t\t// we are done (underlying fd has been closed)\n\t\twriter.once('close', () => finish());\n\n\t\t// start piping\n\t\treader.pipe(writer);\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as fs from 'fs';\nimport { rtrim } from 'vs/base/common/strings';\nimport { sep, join, normalize, dirname, basename } from 'vs/base/common/path';\nimport { readdirSync } from 'vs/base/node/pfs';\nimport { promisify } from 'util';\n\n/**\n * Copied from: https://github.com/microsoft/vscode-node-debug/blob/master/src/node/pathUtilities.ts#L83\n *\n * Given an absolute, normalized, and existing file path 'realcase' returns the exact path that the file has on disk.\n * On a case insensitive file system, the returned path might differ from the original path by character casing.\n * On a case sensitive file system, the returned path will always be identical to the original path.\n * In case of errors, null is returned. But you cannot use this function to verify that a path exists.\n * realcaseSync does not handle '..' or '.' path segments and it does not take the locale into account.\n */\nexport function realcaseSync(path: string): string | null {\n\tconst dir = dirname(path);\n\tif (path === dir) {\t// end recursion\n\t\treturn path;\n\t}\n\n\tconst name = (basename(path) /* can be '' for windows drive letters */ || path).toLowerCase();\n\ttry {\n\t\tconst entries = readdirSync(dir);\n\t\tconst found = entries.filter(e => e.toLowerCase() === name);\t// use a case insensitive search\n\t\tif (found.length === 1) {\n\t\t\t// on a case sensitive filesystem we cannot determine here, whether the file exists or not, hence we need the 'file exists' precondition\n\t\t\tconst prefix = realcaseSync(dir);   // recurse\n\t\t\tif (prefix) {\n\t\t\t\treturn join(prefix, found[0]);\n\t\t\t}\n\t\t} else if (found.length > 1) {\n\t\t\t// must be a case sensitive $filesystem\n\t\t\tconst ix = found.indexOf(name);\n\t\t\tif (ix >= 0) {\t// case sensitive\n\t\t\t\tconst prefix = realcaseSync(dir);   // recurse\n\t\t\t\tif (prefix) {\n\t\t\t\t\treturn join(prefix, found[ix]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} catch (error) {\n\t\t// silently ignore error\n\t}\n\n\treturn null;\n}\n\nexport async function realpath(path: string): Promise<string> {\n\ttry {\n\t\treturn await promisify(fs.realpath)(path);\n\t} catch (error) {\n\n\t\t// We hit an error calling fs.realpath(). Since fs.realpath() is doing some path normalization\n\t\t// we now do a similar normalization and then try again if we can access the path with read\n\t\t// permissions at least. If that succeeds, we return that path.\n\t\t// fs.realpath() is resolving symlinks and that can fail in certain cases. The workaround is\n\t\t// to not resolve links but to simply see if the path is read accessible or not.\n\t\tconst normalizedPath = normalizePath(path);\n\n\t\tawait promisify(fs.access)(normalizedPath, fs.constants.R_OK);\n\n\t\treturn normalizedPath;\n\t}\n}\n\nexport function realpathSync(path: string): string {\n\ttry {\n\t\treturn fs.realpathSync(path);\n\t} catch (error) {\n\n\t\t// We hit an error calling fs.realpathSync(). Since fs.realpathSync() is doing some path normalization\n\t\t// we now do a similar normalization and then try again if we can access the path with read\n\t\t// permissions at least. If that succeeds, we return that path.\n\t\t// fs.realpath() is resolving symlinks and that can fail in certain cases. The workaround is\n\t\t// to not resolve links but to simply see if the path is read accessible or not.\n\t\tconst normalizedPath = normalizePath(path);\n\t\tfs.accessSync(normalizedPath, fs.constants.R_OK); // throws in case of an error\n\n\t\treturn normalizedPath;\n\t}\n}\n\nfunction normalizePath(path: string): string {\n\treturn rtrim(normalize(path), sep);\n}\n","import { logger } from \"@coder/logger\"\nimport * as http from \"http\"\nimport * as proxyAgent from \"proxy-agent\"\nimport * as proxyFromEnv from \"proxy-from-env\"\n\n/**\n * This file has nothing to do with the code-server proxy.\n * It is to support $HTTP_PROXY, $HTTPS_PROXY and $NO_PROXY.\n *\n * - https://github.com/cdr/code-server/issues/124\n * - https://www.npmjs.com/package/proxy-agent\n * - https://www.npmjs.com/package/proxy-from-env\n *\n * This file exists in two locations:\n * - src/node/proxy_agent.ts\n * - lib/vscode/src/vs/base/node/proxy_agent.ts\n * The second is a symlink to the first.\n */\n\n/**\n * monkeyPatch patches the node http,https modules to route all requests through the\n * agent we get from the proxy-agent package.\n *\n * This approach only works if there is no code specifying an explicit agent when making\n * a request.\n *\n * None of our code ever passes in a explicit agent to the http,https modules.\n * VS Code's does sometimes but only when a user sets the http.proxy configuration.\n * See https://code.visualstudio.com/docs/setup/network#_legacy-proxy-server-support\n *\n * Even if they do, it's probably the same proxy so we should be fine! And those knobs\n * are deprecated anyway.\n */\nexport function monkeyPatch(inVSCode: boolean): void {\n  if (shouldEnableProxy()) {\n    const http = require(\"http\")\n    const https = require(\"https\")\n\n    // If we do not pass in a proxy URL, proxy-agent will get the URL from the environment.\n    // See https://www.npmjs.com/package/proxy-from-env.\n    // Also see shouldEnableProxy.\n    const pa = newProxyAgent(inVSCode)\n    http.globalAgent = pa\n    https.globalAgent = pa\n  }\n}\n\nfunction newProxyAgent(inVSCode: boolean): http.Agent {\n  // The reasoning for this split is that VS Code's build process does not have\n  // esModuleInterop enabled but the code-server one does. As a result depending on where\n  // we execute, we either have a default attribute or we don't.\n  //\n  // I can't enable esModuleInterop in VS Code's build process as it breaks and spits out\n  // a huge number of errors. And we can't use require as otherwise the modules won't be\n  // included in the final product.\n  if (inVSCode) {\n    return new (proxyAgent as any)()\n  } else {\n    return new (proxyAgent as any).default()\n  }\n}\n\n// If they have $NO_PROXY set to example.com then this check won't work!\n// But that's drastically unlikely.\nfunction shouldEnableProxy(): boolean {\n  let shouldEnable = false\n\n  const httpProxy = proxyFromEnv.getProxyForUrl(`http://example.com`)\n  if (httpProxy) {\n    shouldEnable = true\n    logger.debug(`using $HTTP_PROXY ${httpProxy}`)\n  }\n\n  const httpsProxy = proxyFromEnv.getProxyForUrl(`https://example.com`)\n  if (httpsProxy) {\n    shouldEnable = true\n    logger.debug(`using $HTTPS_PROXY ${httpsProxy}`)\n  }\n\n  return shouldEnable\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { join, basename } from 'vs/base/common/path';\nimport { watch } from 'fs';\nimport { isMacintosh } from 'vs/base/common/platform';\nimport { normalizeNFC } from 'vs/base/common/normalization';\nimport { toDisposable, IDisposable, dispose } from 'vs/base/common/lifecycle';\nimport { exists, readdir } from 'vs/base/node/pfs';\n\nexport function watchFile(path: string, onChange: (type: 'added' | 'changed' | 'deleted', path: string) => void, onError: (error: string) => void): IDisposable {\n\treturn doWatchNonRecursive({ path, isDirectory: false }, onChange, onError);\n}\n\nexport function watchFolder(path: string, onChange: (type: 'added' | 'changed' | 'deleted', path: string) => void, onError: (error: string) => void): IDisposable {\n\treturn doWatchNonRecursive({ path, isDirectory: true }, onChange, onError);\n}\n\nexport const CHANGE_BUFFER_DELAY = 100;\n\nfunction doWatchNonRecursive(file: { path: string, isDirectory: boolean }, onChange: (type: 'added' | 'changed' | 'deleted', path: string) => void, onError: (error: string) => void): IDisposable {\n\tconst originalFileName = basename(file.path);\n\tconst mapPathToStatDisposable = new Map<string, IDisposable>();\n\n\tlet disposed = false;\n\tlet watcherDisposables: IDisposable[] = [toDisposable(() => {\n\t\tmapPathToStatDisposable.forEach(disposable => dispose(disposable));\n\t\tmapPathToStatDisposable.clear();\n\t})];\n\n\ttry {\n\n\t\t// Creating watcher can fail with an exception\n\t\tconst watcher = watch(file.path);\n\t\twatcherDisposables.push(toDisposable(() => {\n\t\t\twatcher.removeAllListeners();\n\t\t\twatcher.close();\n\t\t}));\n\n\t\t// Folder: resolve children to emit proper events\n\t\tconst folderChildren: Set<string> = new Set<string>();\n\t\tif (file.isDirectory) {\n\t\t\treaddir(file.path).then(children => children.forEach(child => folderChildren.add(child)));\n\t\t}\n\n\t\twatcher.on('error', (code: number, signal: string) => {\n\t\t\tif (!disposed) {\n\t\t\t\tonError(`Failed to watch ${file.path} for changes using fs.watch() (${code}, ${signal})`);\n\t\t\t}\n\t\t});\n\n\t\twatcher.on('change', (type, raw) => {\n\t\t\tif (disposed) {\n\t\t\t\treturn; // ignore if already disposed\n\t\t\t}\n\n\t\t\t// Normalize file name\n\t\t\tlet changedFileName: string = '';\n\t\t\tif (raw) { // https://github.com/microsoft/vscode/issues/38191\n\t\t\t\tchangedFileName = raw.toString();\n\t\t\t\tif (isMacintosh) {\n\t\t\t\t\t// Mac: uses NFD unicode form on disk, but we want NFC\n\t\t\t\t\t// See also https://github.com/nodejs/node/issues/2165\n\t\t\t\t\tchangedFileName = normalizeNFC(changedFileName);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!changedFileName || (type !== 'change' && type !== 'rename')) {\n\t\t\t\treturn; // ignore unexpected events\n\t\t\t}\n\n\t\t\t// File path: use path directly for files and join with changed file name otherwise\n\t\t\tconst changedFilePath = file.isDirectory ? join(file.path, changedFileName) : file.path;\n\n\t\t\t// File\n\t\t\tif (!file.isDirectory) {\n\t\t\t\tif (type === 'rename' || changedFileName !== originalFileName) {\n\t\t\t\t\t// The file was either deleted or renamed. Many tools apply changes to files in an\n\t\t\t\t\t// atomic way (\"Atomic Save\") by first renaming the file to a temporary name and then\n\t\t\t\t\t// renaming it back to the original name. Our watcher will detect this as a rename\n\t\t\t\t\t// and then stops to work on Mac and Linux because the watcher is applied to the\n\t\t\t\t\t// inode and not the name. The fix is to detect this case and trying to watch the file\n\t\t\t\t\t// again after a certain delay.\n\t\t\t\t\t// In addition, we send out a delete event if after a timeout we detect that the file\n\t\t\t\t\t// does indeed not exist anymore.\n\n\t\t\t\t\tconst timeoutHandle = setTimeout(async () => {\n\t\t\t\t\t\tconst fileExists = await exists(changedFilePath);\n\n\t\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\t\treturn; // ignore if disposed by now\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// File still exists, so emit as change event and reapply the watcher\n\t\t\t\t\t\tif (fileExists) {\n\t\t\t\t\t\t\tonChange('changed', changedFilePath);\n\n\t\t\t\t\t\t\twatcherDisposables = [doWatchNonRecursive(file, onChange, onError)];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// File seems to be really gone, so emit a deleted event\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tonChange('deleted', changedFilePath);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, CHANGE_BUFFER_DELAY);\n\n\t\t\t\t\t// Very important to dispose the watcher which now points to a stale inode\n\t\t\t\t\t// and wire in a new disposable that tracks our timeout that is installed\n\t\t\t\t\tdispose(watcherDisposables);\n\t\t\t\t\twatcherDisposables = [toDisposable(() => clearTimeout(timeoutHandle))];\n\t\t\t\t} else {\n\t\t\t\t\tonChange('changed', changedFilePath);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Folder\n\t\t\telse {\n\n\t\t\t\t// Children add/delete\n\t\t\t\tif (type === 'rename') {\n\n\t\t\t\t\t// Cancel any previous stats for this file path if existing\n\t\t\t\t\tconst statDisposable = mapPathToStatDisposable.get(changedFilePath);\n\t\t\t\t\tif (statDisposable) {\n\t\t\t\t\t\tdispose(statDisposable);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Wait a bit and try see if the file still exists on disk to decide on the resulting event\n\t\t\t\t\tconst timeoutHandle = setTimeout(async () => {\n\t\t\t\t\t\tmapPathToStatDisposable.delete(changedFilePath);\n\n\t\t\t\t\t\tconst fileExists = await exists(changedFilePath);\n\n\t\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\t\treturn; // ignore if disposed by now\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Figure out the correct event type:\n\t\t\t\t\t\t// File Exists: either 'added' or 'changed' if known before\n\t\t\t\t\t\t// File Does not Exist: always 'deleted'\n\t\t\t\t\t\tlet type: 'added' | 'deleted' | 'changed';\n\t\t\t\t\t\tif (fileExists) {\n\t\t\t\t\t\t\tif (folderChildren.has(changedFileName)) {\n\t\t\t\t\t\t\t\ttype = 'changed';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ttype = 'added';\n\t\t\t\t\t\t\t\tfolderChildren.add(changedFileName);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfolderChildren.delete(changedFileName);\n\t\t\t\t\t\t\ttype = 'deleted';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tonChange(type, changedFilePath);\n\t\t\t\t\t}, CHANGE_BUFFER_DELAY);\n\n\t\t\t\t\tmapPathToStatDisposable.set(changedFilePath, toDisposable(() => clearTimeout(timeoutHandle)));\n\t\t\t\t}\n\n\t\t\t\t// Other events\n\t\t\t\telse {\n\n\t\t\t\t\t// Figure out the correct event type: if this is the\n\t\t\t\t\t// first time we see this child, it can only be added\n\t\t\t\t\tlet type: 'added' | 'changed';\n\t\t\t\t\tif (folderChildren.has(changedFileName)) {\n\t\t\t\t\t\ttype = 'changed';\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttype = 'added';\n\t\t\t\t\t\tfolderChildren.add(changedFileName);\n\t\t\t\t\t}\n\n\t\t\t\t\tonChange(type, changedFilePath);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t} catch (error) {\n\t\texists(file.path).then(exists => {\n\t\t\tif (exists && !disposed) {\n\t\t\t\tonError(`Failed to watch ${file.path} for changes using fs.watch() (${error.toString()})`);\n\t\t\t}\n\t\t});\n\t}\n\n\treturn toDisposable(() => {\n\t\tdisposed = true;\n\n\t\twatcherDisposables = dispose(watcherDisposables);\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event, Emitter, Relay, EventMultiplexer } from 'vs/base/common/event';\nimport { IDisposable, toDisposable, combinedDisposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { CancelablePromise, createCancelablePromise, timeout } from 'vs/base/common/async';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport * as errors from 'vs/base/common/errors';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { getRandomElement } from 'vs/base/common/arrays';\nimport { isFunction, isUndefinedOrNull } from 'vs/base/common/types';\nimport { revive } from 'vs/base/common/marshalling';\nimport * as strings from 'vs/base/common/strings';\n\n/**\n * An `IChannel` is an abstraction over a collection of commands.\n * You can `call` several commands on a channel, each taking at\n * most one single argument. A `call` always returns a promise\n * with at most one single return value.\n */\nexport interface IChannel {\n\tcall<T>(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T>;\n\tlisten<T>(event: string, arg?: any): Event<T>;\n}\n\n/**\n * An `IServerChannel` is the counter part to `IChannel`,\n * on the server-side. You should implement this interface\n * if you'd like to handle remote promises or events.\n */\nexport interface IServerChannel<TContext = string> {\n\tcall<T>(ctx: TContext, command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T>;\n\tlisten<T>(ctx: TContext, event: string, arg?: any): Event<T>;\n}\n\nexport const enum RequestType {\n\tPromise = 100,\n\tPromiseCancel = 101,\n\tEventListen = 102,\n\tEventDispose = 103\n}\n\nfunction requestTypeToStr(type: RequestType): string {\n\tswitch (type) {\n\t\tcase RequestType.Promise:\n\t\t\treturn 'req';\n\t\tcase RequestType.PromiseCancel:\n\t\t\treturn 'cancel';\n\t\tcase RequestType.EventListen:\n\t\t\treturn 'subscribe';\n\t\tcase RequestType.EventDispose:\n\t\t\treturn 'unsubscribe';\n\t}\n}\n\ntype IRawPromiseRequest = { type: RequestType.Promise; id: number; channelName: string; name: string; arg: any; };\ntype IRawPromiseCancelRequest = { type: RequestType.PromiseCancel, id: number };\ntype IRawEventListenRequest = { type: RequestType.EventListen; id: number; channelName: string; name: string; arg: any; };\ntype IRawEventDisposeRequest = { type: RequestType.EventDispose, id: number };\ntype IRawRequest = IRawPromiseRequest | IRawPromiseCancelRequest | IRawEventListenRequest | IRawEventDisposeRequest;\n\nexport const enum ResponseType {\n\tInitialize = 200,\n\tPromiseSuccess = 201,\n\tPromiseError = 202,\n\tPromiseErrorObj = 203,\n\tEventFire = 204\n}\n\nfunction responseTypeToStr(type: ResponseType): string {\n\tswitch (type) {\n\t\tcase ResponseType.Initialize:\n\t\t\treturn `init`;\n\t\tcase ResponseType.PromiseSuccess:\n\t\t\treturn `reply:`;\n\t\tcase ResponseType.PromiseError:\n\t\tcase ResponseType.PromiseErrorObj:\n\t\t\treturn `replyErr:`;\n\t\tcase ResponseType.EventFire:\n\t\t\treturn `event:`;\n\t}\n}\n\ntype IRawInitializeResponse = { type: ResponseType.Initialize };\ntype IRawPromiseSuccessResponse = { type: ResponseType.PromiseSuccess; id: number; data: any };\ntype IRawPromiseErrorResponse = { type: ResponseType.PromiseError; id: number; data: { message: string, name: string, stack: string[] | undefined } };\ntype IRawPromiseErrorObjResponse = { type: ResponseType.PromiseErrorObj; id: number; data: any };\ntype IRawEventFireResponse = { type: ResponseType.EventFire; id: number; data: any };\ntype IRawResponse = IRawInitializeResponse | IRawPromiseSuccessResponse | IRawPromiseErrorResponse | IRawPromiseErrorObjResponse | IRawEventFireResponse;\n\ninterface IHandler {\n\t(response: IRawResponse): void;\n}\n\nexport interface IMessagePassingProtocol {\n\tsend(buffer: VSBuffer): void;\n\tonMessage: Event<VSBuffer>;\n\t/**\n\t * Wait for the write buffer (if applicable) to become empty.\n\t */\n\tdrain?(): Promise<void>;\n}\n\nenum State {\n\tUninitialized,\n\tIdle\n}\n\n/**\n * An `IChannelServer` hosts a collection of channels. You are\n * able to register channels onto it, provided a channel name.\n */\nexport interface IChannelServer<TContext = string> {\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void;\n}\n\n/**\n * An `IChannelClient` has access to a collection of channels. You\n * are able to get those channels, given their channel name.\n */\nexport interface IChannelClient {\n\tgetChannel<T extends IChannel>(channelName: string): T;\n}\n\nexport interface Client<TContext> {\n\treadonly ctx: TContext;\n}\n\nexport interface IConnectionHub<TContext> {\n\treadonly connections: Connection<TContext>[];\n\treadonly onDidAddConnection: Event<Connection<TContext>>;\n\treadonly onDidRemoveConnection: Event<Connection<TContext>>;\n}\n\n/**\n * An `IClientRouter` is responsible for routing calls to specific\n * channels, in scenarios in which there are multiple possible\n * channels (each from a separate client) to pick from.\n */\nexport interface IClientRouter<TContext = string> {\n\trouteCall(hub: IConnectionHub<TContext>, command: string, arg?: any, cancellationToken?: CancellationToken): Promise<Client<TContext>>;\n\trouteEvent(hub: IConnectionHub<TContext>, event: string, arg?: any): Promise<Client<TContext>>;\n}\n\n/**\n * Similar to the `IChannelClient`, you can get channels from this\n * collection of channels. The difference being that in the\n * `IRoutingChannelClient`, there are multiple clients providing\n * the same channel. You'll need to pass in an `IClientRouter` in\n * order to pick the right one.\n */\nexport interface IRoutingChannelClient<TContext = string> {\n\tgetChannel<T extends IChannel>(channelName: string, router?: IClientRouter<TContext>): T;\n}\n\ninterface IReader {\n\tread(bytes: number): VSBuffer;\n}\n\ninterface IWriter {\n\twrite(buffer: VSBuffer): void;\n}\n\nclass BufferReader implements IReader {\n\n\tprivate pos = 0;\n\n\tconstructor(private buffer: VSBuffer) { }\n\n\tread(bytes: number): VSBuffer {\n\t\tconst result = this.buffer.slice(this.pos, this.pos + bytes);\n\t\tthis.pos += result.byteLength;\n\t\treturn result;\n\t}\n}\n\nclass BufferWriter implements IWriter {\n\n\tprivate buffers: VSBuffer[] = [];\n\n\tget buffer(): VSBuffer {\n\t\treturn VSBuffer.concat(this.buffers);\n\t}\n\n\twrite(buffer: VSBuffer): void {\n\t\tthis.buffers.push(buffer);\n\t}\n}\n\nenum DataType {\n\tUndefined = 0,\n\tString = 1,\n\tBuffer = 2,\n\tVSBuffer = 3,\n\tArray = 4,\n\tObject = 5\n}\n\nfunction createSizeBuffer(size: number): VSBuffer {\n\tconst result = VSBuffer.alloc(4);\n\tresult.writeUInt32BE(size, 0);\n\treturn result;\n}\n\nfunction readSizeBuffer(reader: IReader): number {\n\treturn reader.read(4).readUInt32BE(0);\n}\n\nfunction createOneByteBuffer(value: number): VSBuffer {\n\tconst result = VSBuffer.alloc(1);\n\tresult.writeUInt8(value, 0);\n\treturn result;\n}\n\nconst BufferPresets = {\n\tUndefined: createOneByteBuffer(DataType.Undefined),\n\tString: createOneByteBuffer(DataType.String),\n\tBuffer: createOneByteBuffer(DataType.Buffer),\n\tVSBuffer: createOneByteBuffer(DataType.VSBuffer),\n\tArray: createOneByteBuffer(DataType.Array),\n\tObject: createOneByteBuffer(DataType.Object),\n};\n\ndeclare const Buffer: any;\nconst hasBuffer = (typeof Buffer !== 'undefined');\n\nfunction serialize(writer: IWriter, data: any): void {\n\tif (typeof data === 'undefined') {\n\t\twriter.write(BufferPresets.Undefined);\n\t} else if (typeof data === 'string') {\n\t\tconst buffer = VSBuffer.fromString(data);\n\t\twriter.write(BufferPresets.String);\n\t\twriter.write(createSizeBuffer(buffer.byteLength));\n\t\twriter.write(buffer);\n\t} else if (hasBuffer && Buffer.isBuffer(data)) {\n\t\tconst buffer = VSBuffer.wrap(data);\n\t\twriter.write(BufferPresets.Buffer);\n\t\twriter.write(createSizeBuffer(buffer.byteLength));\n\t\twriter.write(buffer);\n\t} else if (data instanceof VSBuffer) {\n\t\twriter.write(BufferPresets.VSBuffer);\n\t\twriter.write(createSizeBuffer(data.byteLength));\n\t\twriter.write(data);\n\t} else if (Array.isArray(data)) {\n\t\twriter.write(BufferPresets.Array);\n\t\twriter.write(createSizeBuffer(data.length));\n\n\t\tfor (const el of data) {\n\t\t\tserialize(writer, el);\n\t\t}\n\t} else {\n\t\tconst buffer = VSBuffer.fromString(JSON.stringify(data));\n\t\twriter.write(BufferPresets.Object);\n\t\twriter.write(createSizeBuffer(buffer.byteLength));\n\t\twriter.write(buffer);\n\t}\n}\n\nfunction deserialize(reader: IReader): any {\n\tconst type = reader.read(1).readUInt8(0);\n\n\tswitch (type) {\n\t\tcase DataType.Undefined: return undefined;\n\t\tcase DataType.String: return reader.read(readSizeBuffer(reader)).toString();\n\t\tcase DataType.Buffer: return reader.read(readSizeBuffer(reader)).buffer;\n\t\tcase DataType.VSBuffer: return reader.read(readSizeBuffer(reader));\n\t\tcase DataType.Array: {\n\t\t\tconst length = readSizeBuffer(reader);\n\t\t\tconst result: any[] = [];\n\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tresult.push(deserialize(reader));\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\t\tcase DataType.Object: return JSON.parse(reader.read(readSizeBuffer(reader)).toString());\n\t}\n}\n\ninterface PendingRequest {\n\trequest: IRawPromiseRequest | IRawEventListenRequest;\n\ttimeoutTimer: any;\n}\n\nexport class ChannelServer<TContext = string> implements IChannelServer<TContext>, IDisposable {\n\n\tprivate channels = new Map<string, IServerChannel<TContext>>();\n\tprivate activeRequests = new Map<number, IDisposable>();\n\tprivate protocolListener: IDisposable | null;\n\n\t// Requests might come in for channels which are not yet registered.\n\t// They will timeout after `timeoutDelay`.\n\tprivate pendingRequests = new Map<string, PendingRequest[]>();\n\n\tconstructor(private protocol: IMessagePassingProtocol, private ctx: TContext, private logger: IIPCLogger | null = null, private timeoutDelay: number = 1000) {\n\t\tthis.protocolListener = this.protocol.onMessage(msg => this.onRawMessage(msg));\n\t\tthis.sendResponse({ type: ResponseType.Initialize });\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void {\n\t\tthis.channels.set(channelName, channel);\n\n\t\t// https://github.com/microsoft/vscode/issues/72531\n\t\tsetTimeout(() => this.flushPendingRequests(channelName), 0);\n\t}\n\n\tprivate sendResponse(response: IRawResponse): void {\n\t\tswitch (response.type) {\n\t\t\tcase ResponseType.Initialize: {\n\t\t\t\tconst msgLength = this.send([response.type]);\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logOutgoing(msgLength, 0, RequestInitiator.OtherSide, responseTypeToStr(response.type));\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcase ResponseType.PromiseSuccess:\n\t\t\tcase ResponseType.PromiseError:\n\t\t\tcase ResponseType.EventFire:\n\t\t\tcase ResponseType.PromiseErrorObj: {\n\t\t\t\tconst msgLength = this.send([response.type, response.id], response.data);\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logOutgoing(msgLength, response.id, RequestInitiator.OtherSide, responseTypeToStr(response.type), response.data);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate send(header: any, body: any = undefined): number {\n\t\tconst writer = new BufferWriter();\n\t\tserialize(writer, header);\n\t\tserialize(writer, body);\n\t\treturn this.sendBuffer(writer.buffer);\n\t}\n\n\tprivate sendBuffer(message: VSBuffer): number {\n\t\ttry {\n\t\t\tthis.protocol.send(message);\n\t\t\treturn message.byteLength;\n\t\t} catch (err) {\n\t\t\t// noop\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\tprivate onRawMessage(message: VSBuffer): void {\n\t\tconst reader = new BufferReader(message);\n\t\tconst header = deserialize(reader);\n\t\tconst body = deserialize(reader);\n\t\tconst type = header[0] as RequestType;\n\n\t\tswitch (type) {\n\t\t\tcase RequestType.Promise:\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logIncoming(message.byteLength, header[1], RequestInitiator.OtherSide, `${requestTypeToStr(type)}: ${header[2]}.${header[3]}`, body);\n\t\t\t\t}\n\t\t\t\treturn this.onPromise({ type, id: header[1], channelName: header[2], name: header[3], arg: body });\n\t\t\tcase RequestType.EventListen:\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logIncoming(message.byteLength, header[1], RequestInitiator.OtherSide, `${requestTypeToStr(type)}: ${header[2]}.${header[3]}`, body);\n\t\t\t\t}\n\t\t\t\treturn this.onEventListen({ type, id: header[1], channelName: header[2], name: header[3], arg: body });\n\t\t\tcase RequestType.PromiseCancel:\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logIncoming(message.byteLength, header[1], RequestInitiator.OtherSide, `${requestTypeToStr(type)}`);\n\t\t\t\t}\n\t\t\t\treturn this.disposeActiveRequest({ type, id: header[1] });\n\t\t\tcase RequestType.EventDispose:\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logIncoming(message.byteLength, header[1], RequestInitiator.OtherSide, `${requestTypeToStr(type)}`);\n\t\t\t\t}\n\t\t\t\treturn this.disposeActiveRequest({ type, id: header[1] });\n\t\t}\n\t}\n\n\tprivate onPromise(request: IRawPromiseRequest): void {\n\t\tconst channel = this.channels.get(request.channelName);\n\n\t\tif (!channel) {\n\t\t\tthis.collectPendingRequest(request);\n\t\t\treturn;\n\t\t}\n\n\t\tconst cancellationTokenSource = new CancellationTokenSource();\n\t\tlet promise: Promise<any>;\n\n\t\ttry {\n\t\t\tpromise = channel.call(this.ctx, request.name, request.arg, cancellationTokenSource.token);\n\t\t} catch (err) {\n\t\t\tpromise = Promise.reject(err);\n\t\t}\n\n\t\tconst id = request.id;\n\n\t\tpromise.then(data => {\n\t\t\tthis.sendResponse(<IRawResponse>{ id, data, type: ResponseType.PromiseSuccess });\n\t\t\tthis.activeRequests.delete(request.id);\n\t\t}, err => {\n\t\t\tif (err instanceof Error) {\n\t\t\t\tthis.sendResponse(<IRawResponse>{\n\t\t\t\t\tid, data: {\n\t\t\t\t\t\tmessage: err.message,\n\t\t\t\t\t\tname: err.name,\n\t\t\t\t\t\tstack: err.stack ? (err.stack.split ? err.stack.split('\\n') : err.stack) : undefined\n\t\t\t\t\t}, type: ResponseType.PromiseError\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.sendResponse(<IRawResponse>{ id, data: err, type: ResponseType.PromiseErrorObj });\n\t\t\t}\n\n\t\t\tthis.activeRequests.delete(request.id);\n\t\t});\n\n\t\tconst disposable = toDisposable(() => cancellationTokenSource.cancel());\n\t\tthis.activeRequests.set(request.id, disposable);\n\t}\n\n\tprivate onEventListen(request: IRawEventListenRequest): void {\n\t\tconst channel = this.channels.get(request.channelName);\n\n\t\tif (!channel) {\n\t\t\tthis.collectPendingRequest(request);\n\t\t\treturn;\n\t\t}\n\n\t\tconst id = request.id;\n\t\tconst event = channel.listen(this.ctx, request.name, request.arg);\n\t\tconst disposable = event(data => this.sendResponse(<IRawResponse>{ id, data, type: ResponseType.EventFire }));\n\n\t\tthis.activeRequests.set(request.id, disposable);\n\t}\n\n\tprivate disposeActiveRequest(request: IRawRequest): void {\n\t\tconst disposable = this.activeRequests.get(request.id);\n\n\t\tif (disposable) {\n\t\t\tdisposable.dispose();\n\t\t\tthis.activeRequests.delete(request.id);\n\t\t}\n\t}\n\n\tprivate collectPendingRequest(request: IRawPromiseRequest | IRawEventListenRequest): void {\n\t\tlet pendingRequests = this.pendingRequests.get(request.channelName);\n\n\t\tif (!pendingRequests) {\n\t\t\tpendingRequests = [];\n\t\t\tthis.pendingRequests.set(request.channelName, pendingRequests);\n\t\t}\n\n\t\tconst timer = setTimeout(() => {\n\t\t\tconsole.error(`Unknown channel: ${request.channelName}`);\n\n\t\t\tif (request.type === RequestType.Promise) {\n\t\t\t\tthis.sendResponse(<IRawResponse>{\n\t\t\t\t\tid: request.id,\n\t\t\t\t\tdata: { name: 'Unknown channel', message: `Channel name '${request.channelName}' timed out after ${this.timeoutDelay}ms`, stack: undefined },\n\t\t\t\t\ttype: ResponseType.PromiseError\n\t\t\t\t});\n\t\t\t}\n\t\t}, this.timeoutDelay);\n\n\t\tpendingRequests.push({ request, timeoutTimer: timer });\n\t}\n\n\tprivate flushPendingRequests(channelName: string): void {\n\t\tconst requests = this.pendingRequests.get(channelName);\n\n\t\tif (requests) {\n\t\t\tfor (const request of requests) {\n\t\t\t\tclearTimeout(request.timeoutTimer);\n\n\t\t\t\tswitch (request.request.type) {\n\t\t\t\t\tcase RequestType.Promise: this.onPromise(request.request); break;\n\t\t\t\t\tcase RequestType.EventListen: this.onEventListen(request.request); break;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.pendingRequests.delete(channelName);\n\t\t}\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this.protocolListener) {\n\t\t\tthis.protocolListener.dispose();\n\t\t\tthis.protocolListener = null;\n\t\t}\n\t\tthis.activeRequests.forEach(d => d.dispose());\n\t\tthis.activeRequests.clear();\n\t}\n}\n\nexport const enum RequestInitiator {\n\tLocalSide = 0,\n\tOtherSide = 1\n}\n\nexport interface IIPCLogger {\n\tlogIncoming(msgLength: number, requestId: number, initiator: RequestInitiator, str: string, data?: any): void;\n\tlogOutgoing(msgLength: number, requestId: number, initiator: RequestInitiator, str: string, data?: any): void;\n}\n\nexport class ChannelClient implements IChannelClient, IDisposable {\n\n\tprivate state: State = State.Uninitialized;\n\tprivate activeRequests = new Set<IDisposable>();\n\tprivate handlers = new Map<number, IHandler>();\n\tprivate lastRequestId: number = 0;\n\tprivate protocolListener: IDisposable | null;\n\tprivate logger: IIPCLogger | null;\n\n\tprivate readonly _onDidInitialize = new Emitter<void>();\n\treadonly onDidInitialize = this._onDidInitialize.event;\n\n\tconstructor(private protocol: IMessagePassingProtocol, logger: IIPCLogger | null = null) {\n\t\tthis.protocolListener = this.protocol.onMessage(msg => this.onBuffer(msg));\n\t\tthis.logger = logger;\n\t}\n\n\tgetChannel<T extends IChannel>(channelName: string): T {\n\t\tconst that = this;\n\n\t\treturn {\n\t\t\tcall(command: string, arg?: any, cancellationToken?: CancellationToken) {\n\t\t\t\treturn that.requestPromise(channelName, command, arg, cancellationToken);\n\t\t\t},\n\t\t\tlisten(event: string, arg: any) {\n\t\t\t\treturn that.requestEvent(channelName, event, arg);\n\t\t\t}\n\t\t} as T;\n\t}\n\n\tprivate requestPromise(channelName: string, name: string, arg?: any, cancellationToken = CancellationToken.None): Promise<any> {\n\t\tconst id = this.lastRequestId++;\n\t\tconst type = RequestType.Promise;\n\t\tconst request: IRawRequest = { id, type, channelName, name, arg };\n\n\t\tif (cancellationToken.isCancellationRequested) {\n\t\t\treturn Promise.reject(errors.canceled());\n\t\t}\n\n\t\tlet disposable: IDisposable;\n\n\t\tconst result = new Promise((c, e) => {\n\t\t\tif (cancellationToken.isCancellationRequested) {\n\t\t\t\treturn e(errors.canceled());\n\t\t\t}\n\n\t\t\tconst doRequest = () => {\n\t\t\t\tconst handler: IHandler = response => {\n\t\t\t\t\tswitch (response.type) {\n\t\t\t\t\t\tcase ResponseType.PromiseSuccess:\n\t\t\t\t\t\t\tthis.handlers.delete(id);\n\t\t\t\t\t\t\tc(response.data);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase ResponseType.PromiseError:\n\t\t\t\t\t\t\tthis.handlers.delete(id);\n\t\t\t\t\t\t\tconst error = new Error(response.data.message);\n\t\t\t\t\t\t\t(<any>error).stack = response.data.stack;\n\t\t\t\t\t\t\terror.name = response.data.name;\n\t\t\t\t\t\t\te(error);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase ResponseType.PromiseErrorObj:\n\t\t\t\t\t\t\tthis.handlers.delete(id);\n\t\t\t\t\t\t\te(response.data);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.handlers.set(id, handler);\n\t\t\t\tthis.sendRequest(request);\n\t\t\t};\n\n\t\t\tlet uninitializedPromise: CancelablePromise<void> | null = null;\n\t\t\tif (this.state === State.Idle) {\n\t\t\t\tdoRequest();\n\t\t\t} else {\n\t\t\t\tuninitializedPromise = createCancelablePromise(_ => this.whenInitialized());\n\t\t\t\tuninitializedPromise.then(() => {\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t\tdoRequest();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst cancel = () => {\n\t\t\t\tif (uninitializedPromise) {\n\t\t\t\t\tuninitializedPromise.cancel();\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t} else {\n\t\t\t\t\tthis.sendRequest({ id, type: RequestType.PromiseCancel });\n\t\t\t\t}\n\n\t\t\t\te(errors.canceled());\n\t\t\t};\n\n\t\t\tconst cancellationTokenListener = cancellationToken.onCancellationRequested(cancel);\n\t\t\tdisposable = combinedDisposable(toDisposable(cancel), cancellationTokenListener);\n\t\t\tthis.activeRequests.add(disposable);\n\t\t});\n\n\t\treturn result.finally(() => { this.activeRequests.delete(disposable); });\n\t}\n\n\tprivate requestEvent(channelName: string, name: string, arg?: any): Event<any> {\n\t\tconst id = this.lastRequestId++;\n\t\tconst type = RequestType.EventListen;\n\t\tconst request: IRawRequest = { id, type, channelName, name, arg };\n\n\t\tlet uninitializedPromise: CancelablePromise<void> | null = null;\n\n\t\tconst emitter = new Emitter<any>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tuninitializedPromise = createCancelablePromise(_ => this.whenInitialized());\n\t\t\t\tuninitializedPromise.then(() => {\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t\tthis.activeRequests.add(emitter);\n\t\t\t\t\tthis.sendRequest(request);\n\t\t\t\t});\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tif (uninitializedPromise) {\n\t\t\t\t\tuninitializedPromise.cancel();\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t} else {\n\t\t\t\t\tthis.activeRequests.delete(emitter);\n\t\t\t\t\tthis.sendRequest({ id, type: RequestType.EventDispose });\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tconst handler: IHandler = (res: IRawResponse) => emitter.fire((res as IRawEventFireResponse).data);\n\t\tthis.handlers.set(id, handler);\n\n\t\treturn emitter.event;\n\t}\n\n\tprivate sendRequest(request: IRawRequest): void {\n\t\tswitch (request.type) {\n\t\t\tcase RequestType.Promise:\n\t\t\tcase RequestType.EventListen: {\n\t\t\t\tconst msgLength = this.send([request.type, request.id, request.channelName, request.name], request.arg);\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logOutgoing(msgLength, request.id, RequestInitiator.LocalSide, `${requestTypeToStr(request.type)}: ${request.channelName}.${request.name}`, request.arg);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcase RequestType.PromiseCancel:\n\t\t\tcase RequestType.EventDispose: {\n\t\t\t\tconst msgLength = this.send([request.type, request.id]);\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logOutgoing(msgLength, request.id, RequestInitiator.LocalSide, requestTypeToStr(request.type));\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate send(header: any, body: any = undefined): number {\n\t\tconst writer = new BufferWriter();\n\t\tserialize(writer, header);\n\t\tserialize(writer, body);\n\t\treturn this.sendBuffer(writer.buffer);\n\t}\n\n\tprivate sendBuffer(message: VSBuffer): number {\n\t\ttry {\n\t\t\tthis.protocol.send(message);\n\t\t\treturn message.byteLength;\n\t\t} catch (err) {\n\t\t\t// noop\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\tprivate onBuffer(message: VSBuffer): void {\n\t\tconst reader = new BufferReader(message);\n\t\tconst header = deserialize(reader);\n\t\tconst body = deserialize(reader);\n\t\tconst type: ResponseType = header[0];\n\n\t\tswitch (type) {\n\t\t\tcase ResponseType.Initialize:\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logIncoming(message.byteLength, 0, RequestInitiator.LocalSide, responseTypeToStr(type));\n\t\t\t\t}\n\t\t\t\treturn this.onResponse({ type: header[0] });\n\n\t\t\tcase ResponseType.PromiseSuccess:\n\t\t\tcase ResponseType.PromiseError:\n\t\t\tcase ResponseType.EventFire:\n\t\t\tcase ResponseType.PromiseErrorObj:\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logIncoming(message.byteLength, header[1], RequestInitiator.LocalSide, responseTypeToStr(type), body);\n\t\t\t\t}\n\t\t\t\treturn this.onResponse({ type: header[0], id: header[1], data: body });\n\t\t}\n\t}\n\n\tprivate onResponse(response: IRawResponse): void {\n\t\tif (response.type === ResponseType.Initialize) {\n\t\t\tthis.state = State.Idle;\n\t\t\tthis._onDidInitialize.fire();\n\t\t\treturn;\n\t\t}\n\n\t\tconst handler = this.handlers.get(response.id);\n\n\t\tif (handler) {\n\t\t\thandler(response);\n\t\t}\n\t}\n\n\tprivate whenInitialized(): Promise<void> {\n\t\tif (this.state === State.Idle) {\n\t\t\treturn Promise.resolve();\n\t\t} else {\n\t\t\treturn Event.toPromise(this.onDidInitialize);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tif (this.protocolListener) {\n\t\t\tthis.protocolListener.dispose();\n\t\t\tthis.protocolListener = null;\n\t\t}\n\t\tthis.activeRequests.forEach(p => p.dispose());\n\t\tthis.activeRequests.clear();\n\t}\n}\n\nexport interface ClientConnectionEvent {\n\tprotocol: IMessagePassingProtocol;\n\tonDidClientDisconnect: Event<void>;\n}\n\ninterface Connection<TContext> extends Client<TContext> {\n\treadonly channelServer: ChannelServer<TContext>;\n\treadonly channelClient: ChannelClient;\n}\n\n/**\n * An `IPCServer` is both a channel server and a routing channel\n * client.\n *\n * As the owner of a protocol, you should extend both this\n * and the `IPCClient` classes to get IPC implementations\n * for your protocol.\n */\nexport class IPCServer<TContext = string> implements IChannelServer<TContext>, IRoutingChannelClient<TContext>, IConnectionHub<TContext>, IDisposable {\n\n\tprivate channels = new Map<string, IServerChannel<TContext>>();\n\tprivate _connections = new Set<Connection<TContext>>();\n\n\tprivate readonly _onDidAddConnection = new Emitter<Connection<TContext>>();\n\treadonly onDidAddConnection: Event<Connection<TContext>> = this._onDidAddConnection.event;\n\n\tprivate readonly _onDidRemoveConnection = new Emitter<Connection<TContext>>();\n\treadonly onDidRemoveConnection: Event<Connection<TContext>> = this._onDidRemoveConnection.event;\n\n\tget connections(): Connection<TContext>[] {\n\t\tconst result: Connection<TContext>[] = [];\n\t\tthis._connections.forEach(ctx => result.push(ctx));\n\t\treturn result;\n\t}\n\n\tconstructor(onDidClientConnect: Event<ClientConnectionEvent>) {\n\t\tonDidClientConnect(({ protocol, onDidClientDisconnect }) => {\n\t\t\tconst onFirstMessage = Event.once(protocol.onMessage);\n\n\t\t\tonFirstMessage(msg => {\n\t\t\t\tconst reader = new BufferReader(msg);\n\t\t\t\tconst ctx = deserialize(reader) as TContext;\n\n\t\t\t\tconst channelServer = new ChannelServer(protocol, ctx);\n\t\t\t\tconst channelClient = new ChannelClient(protocol);\n\n\t\t\t\tthis.channels.forEach((channel, name) => channelServer.registerChannel(name, channel));\n\n\t\t\t\tconst connection: Connection<TContext> = { channelServer, channelClient, ctx };\n\t\t\t\tthis._connections.add(connection);\n\t\t\t\tthis._onDidAddConnection.fire(connection);\n\n\t\t\t\tonDidClientDisconnect(() => {\n\t\t\t\t\tchannelServer.dispose();\n\t\t\t\t\tchannelClient.dispose();\n\t\t\t\t\tthis._connections.delete(connection);\n\t\t\t\t\tthis._onDidRemoveConnection.fire(connection);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Get a channel from a remote client. When passed a router,\n\t * one can specify which client it wants to call and listen to/from.\n\t * Otherwise, when calling without a router, a random client will\n\t * be selected and when listening without a router, every client\n\t * will be listened to.\n\t */\n\tgetChannel<T extends IChannel>(channelName: string, router: IClientRouter<TContext>): T;\n\tgetChannel<T extends IChannel>(channelName: string, clientFilter: (client: Client<TContext>) => boolean): T;\n\tgetChannel<T extends IChannel>(channelName: string, routerOrClientFilter: IClientRouter<TContext> | ((client: Client<TContext>) => boolean)): T {\n\t\tconst that = this;\n\n\t\treturn {\n\t\t\tcall(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\t\tlet connectionPromise: Promise<Client<TContext>>;\n\n\t\t\t\tif (isFunction(routerOrClientFilter)) {\n\t\t\t\t\t// when no router is provided, we go random client picking\n\t\t\t\t\tlet connection = getRandomElement(that.connections.filter(routerOrClientFilter));\n\n\t\t\t\t\tconnectionPromise = connection\n\t\t\t\t\t\t// if we found a client, let's call on it\n\t\t\t\t\t\t? Promise.resolve(connection)\n\t\t\t\t\t\t// else, let's wait for a client to come along\n\t\t\t\t\t\t: Event.toPromise(Event.filter(that.onDidAddConnection, routerOrClientFilter));\n\t\t\t\t} else {\n\t\t\t\t\tconnectionPromise = routerOrClientFilter.routeCall(that, command, arg);\n\t\t\t\t}\n\n\t\t\t\tconst channelPromise = connectionPromise\n\t\t\t\t\t.then(connection => (connection as Connection<TContext>).channelClient.getChannel(channelName));\n\n\t\t\t\treturn getDelayedChannel(channelPromise)\n\t\t\t\t\t.call(command, arg, cancellationToken);\n\t\t\t},\n\t\t\tlisten(event: string, arg: any): Event<T> {\n\t\t\t\tif (isFunction(routerOrClientFilter)) {\n\t\t\t\t\treturn that.getMulticastEvent(channelName, routerOrClientFilter, event, arg);\n\t\t\t\t}\n\n\t\t\t\tconst channelPromise = routerOrClientFilter.routeEvent(that, event, arg)\n\t\t\t\t\t.then(connection => (connection as Connection<TContext>).channelClient.getChannel(channelName));\n\n\t\t\t\treturn getDelayedChannel(channelPromise)\n\t\t\t\t\t.listen(event, arg);\n\t\t\t}\n\t\t} as T;\n\t}\n\n\tprivate getMulticastEvent<T extends IChannel>(channelName: string, clientFilter: (client: Client<TContext>) => boolean, eventName: string, arg: any): Event<T> {\n\t\tconst that = this;\n\t\tlet disposables = new DisposableStore();\n\n\t\t// Create an emitter which hooks up to all clients\n\t\t// as soon as first listener is added. It also\n\t\t// disconnects from all clients as soon as the last listener\n\t\t// is removed.\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tdisposables = new DisposableStore();\n\n\t\t\t\t// The event multiplexer is useful since the active\n\t\t\t\t// client list is dynamic. We need to hook up and disconnection\n\t\t\t\t// to/from clients as they come and go.\n\t\t\t\tconst eventMultiplexer = new EventMultiplexer<T>();\n\t\t\t\tconst map = new Map<Connection<TContext>, IDisposable>();\n\n\t\t\t\tconst onDidAddConnection = (connection: Connection<TContext>) => {\n\t\t\t\t\tconst channel = connection.channelClient.getChannel(channelName);\n\t\t\t\t\tconst event = channel.listen<T>(eventName, arg);\n\t\t\t\t\tconst disposable = eventMultiplexer.add(event);\n\n\t\t\t\t\tmap.set(connection, disposable);\n\t\t\t\t};\n\n\t\t\t\tconst onDidRemoveConnection = (connection: Connection<TContext>) => {\n\t\t\t\t\tconst disposable = map.get(connection);\n\n\t\t\t\t\tif (!disposable) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tdisposable.dispose();\n\t\t\t\t\tmap.delete(connection);\n\t\t\t\t};\n\n\t\t\t\tthat.connections.filter(clientFilter).forEach(onDidAddConnection);\n\t\t\t\tEvent.filter(that.onDidAddConnection, clientFilter)(onDidAddConnection, undefined, disposables);\n\t\t\t\tthat.onDidRemoveConnection(onDidRemoveConnection, undefined, disposables);\n\t\t\t\teventMultiplexer.event(emitter.fire, emitter, disposables);\n\n\t\t\t\tdisposables.add(eventMultiplexer);\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tdisposables.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void {\n\t\tthis.channels.set(channelName, channel);\n\n\t\tthis._connections.forEach(connection => {\n\t\t\tconnection.channelServer.registerChannel(channelName, channel);\n\t\t});\n\t}\n\n\tdispose(): void {\n\t\tthis.channels.clear();\n\t\tthis._connections.clear();\n\t\tthis._onDidAddConnection.dispose();\n\t\tthis._onDidRemoveConnection.dispose();\n\t}\n}\n\n/**\n * An `IPCClient` is both a channel client and a channel server.\n *\n * As the owner of a protocol, you should extend both this\n * and the `IPCClient` classes to get IPC implementations\n * for your protocol.\n */\nexport class IPCClient<TContext = string> implements IChannelClient, IChannelServer<TContext>, IDisposable {\n\n\tprivate channelClient: ChannelClient;\n\tprivate channelServer: ChannelServer<TContext>;\n\n\tconstructor(protocol: IMessagePassingProtocol, ctx: TContext, ipcLogger: IIPCLogger | null = null) {\n\t\tconst writer = new BufferWriter();\n\t\tserialize(writer, ctx);\n\t\tprotocol.send(writer.buffer);\n\n\t\tthis.channelClient = new ChannelClient(protocol, ipcLogger);\n\t\tthis.channelServer = new ChannelServer(protocol, ctx, ipcLogger);\n\t}\n\n\tgetChannel<T extends IChannel>(channelName: string): T {\n\t\treturn this.channelClient.getChannel(channelName) as T;\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void {\n\t\tthis.channelServer.registerChannel(channelName, channel);\n\t}\n\n\tdispose(): void {\n\t\tthis.channelClient.dispose();\n\t\tthis.channelServer.dispose();\n\t}\n}\n\nexport function getDelayedChannel<T extends IChannel>(promise: Promise<T>): T {\n\treturn {\n\t\tcall(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\treturn promise.then(c => c.call<T>(command, arg, cancellationToken));\n\t\t},\n\n\t\tlisten<T>(event: string, arg?: any): Event<T> {\n\t\t\tconst relay = new Relay<any>();\n\t\t\tpromise.then(c => relay.input = c.listen(event, arg));\n\t\t\treturn relay.event;\n\t\t}\n\t} as T;\n}\n\nexport function getNextTickChannel<T extends IChannel>(channel: T): T {\n\tlet didTick = false;\n\n\treturn {\n\t\tcall<T>(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\tif (didTick) {\n\t\t\t\treturn channel.call(command, arg, cancellationToken);\n\t\t\t}\n\n\t\t\treturn timeout(0)\n\t\t\t\t.then(() => didTick = true)\n\t\t\t\t.then(() => channel.call<T>(command, arg, cancellationToken));\n\t\t},\n\t\tlisten<T>(event: string, arg?: any): Event<T> {\n\t\t\tif (didTick) {\n\t\t\t\treturn channel.listen<T>(event, arg);\n\t\t\t}\n\n\t\t\tconst relay = new Relay<T>();\n\n\t\t\ttimeout(0)\n\t\t\t\t.then(() => didTick = true)\n\t\t\t\t.then(() => relay.input = channel.listen<T>(event, arg));\n\n\t\t\treturn relay.event;\n\t\t}\n\t} as T;\n}\n\nexport class StaticRouter<TContext = string> implements IClientRouter<TContext> {\n\n\tconstructor(private fn: (ctx: TContext) => boolean | Promise<boolean>) { }\n\n\trouteCall(hub: IConnectionHub<TContext>): Promise<Client<TContext>> {\n\t\treturn this.route(hub);\n\t}\n\n\trouteEvent(hub: IConnectionHub<TContext>): Promise<Client<TContext>> {\n\t\treturn this.route(hub);\n\t}\n\n\tprivate async route(hub: IConnectionHub<TContext>): Promise<Client<TContext>> {\n\t\tfor (const connection of hub.connections) {\n\t\t\tif (await Promise.resolve(this.fn(connection.ctx))) {\n\t\t\t\treturn Promise.resolve(connection);\n\t\t\t}\n\t\t}\n\n\t\tawait Event.toPromise(hub.onDidAddConnection);\n\t\treturn await this.route(hub);\n\t}\n}\n\n\n//#region createChannelReceiver / createChannelSender\n\n/**\n * Use both `createChannelReceiver` and `createChannelSender`\n * for automated process <=> process communication over methods\n * and events. You do not need to spell out each method on both\n * sides, a proxy will take care of this.\n *\n * Rules:\n * - if marshalling is enabled, only `URI` and `RegExp` is converted\n *   automatically for you\n * - events must follow the naming convention `onUppercase`\n * - `CancellationToken` is currently not supported\n * - if a context is provided, you can use `AddFirstParameterToFunctions`\n *   utility to signal this in the receiving side type\n */\n\nexport interface IBaseChannelOptions {\n\n\t/**\n\t * Disables automatic marshalling of `URI`.\n\t * If marshalling is disabled, `UriComponents`\n\t * must be used instead.\n\t */\n\tdisableMarshalling?: boolean;\n}\n\nexport interface IChannelReceiverOptions extends IBaseChannelOptions { }\n\nexport function createChannelReceiver(service: unknown, options?: IChannelReceiverOptions): IServerChannel {\n\tconst handler = service as { [key: string]: unknown };\n\tconst disableMarshalling = options && options.disableMarshalling;\n\n\t// Buffer any event that should be supported by\n\t// iterating over all property keys and finding them\n\tconst mapEventNameToEvent = new Map<string, Event<unknown>>();\n\tfor (const key in handler) {\n\t\tif (propertyIsEvent(key)) {\n\t\t\tmapEventNameToEvent.set(key, Event.buffer(handler[key] as Event<unknown>, true));\n\t\t}\n\t}\n\n\treturn new class implements IServerChannel {\n\n\t\tlisten<T>(_: unknown, event: string): Event<T> {\n\t\t\tconst eventImpl = mapEventNameToEvent.get(event);\n\t\t\tif (eventImpl) {\n\t\t\t\treturn eventImpl as Event<T>;\n\t\t\t}\n\n\t\t\tthrow new Error(`Event not found: ${event}`);\n\t\t}\n\n\t\tcall(_: unknown, command: string, args?: any[]): Promise<any> {\n\t\t\tconst target = handler[command];\n\t\t\tif (typeof target === 'function') {\n\n\t\t\t\t// Revive unless marshalling disabled\n\t\t\t\tif (!disableMarshalling && Array.isArray(args)) {\n\t\t\t\t\tfor (let i = 0; i < args.length; i++) {\n\t\t\t\t\t\targs[i] = revive(args[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn target.apply(handler, args);\n\t\t\t}\n\n\t\t\tthrow new Error(`Method not found: ${command}`);\n\t\t}\n\t};\n}\n\nexport interface IChannelSenderOptions extends IBaseChannelOptions {\n\n\t/**\n\t * If provided, will add the value of `context`\n\t * to each method call to the target.\n\t */\n\tcontext?: unknown;\n\n\t/**\n\t * If provided, will not proxy any of the properties\n\t * that are part of the Map but rather return that value.\n\t */\n\tproperties?: Map<string, unknown>;\n}\n\nexport function createChannelSender<T>(channel: IChannel, options?: IChannelSenderOptions): T {\n\tconst disableMarshalling = options && options.disableMarshalling;\n\n\treturn new Proxy({}, {\n\t\tget(_target: T, propKey: PropertyKey) {\n\t\t\tif (typeof propKey === 'string') {\n\n\t\t\t\t// Check for predefined values\n\t\t\t\tif (options?.properties?.has(propKey)) {\n\t\t\t\t\treturn options.properties.get(propKey);\n\t\t\t\t}\n\n\t\t\t\t// Event\n\t\t\t\tif (propertyIsEvent(propKey)) {\n\t\t\t\t\treturn channel.listen(propKey);\n\t\t\t\t}\n\n\t\t\t\t// Function\n\t\t\t\treturn async function (...args: any[]) {\n\n\t\t\t\t\t// Add context if any\n\t\t\t\t\tlet methodArgs: any[];\n\t\t\t\t\tif (options && !isUndefinedOrNull(options.context)) {\n\t\t\t\t\t\tmethodArgs = [options.context, ...args];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmethodArgs = args;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = await channel.call(propKey, methodArgs);\n\n\t\t\t\t\t// Revive unless marshalling disabled\n\t\t\t\t\tif (!disableMarshalling) {\n\t\t\t\t\t\treturn revive(result);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn result;\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tthrow new Error(`Property not found: ${String(propKey)}`);\n\t\t}\n\t}) as T;\n}\n\nfunction propertyIsEvent(name: string): boolean {\n\t// Assume a property is an event if it has a form of \"onSomething\"\n\treturn name[0] === 'o' && name[1] === 'n' && strings.isUpperAsciiLetter(name.charCodeAt(2));\n}\n\n//#endregion\n\n\nconst colorTables = [\n\t['#2977B1', '#FC802D', '#34A13A', '#D3282F', '#9366BA'],\n\t['#8B564C', '#E177C0', '#7F7F7F', '#BBBE3D', '#2EBECD']\n];\n\nfunction prettyWithoutArrays(data: any): any {\n\tif (Array.isArray(data)) {\n\t\treturn data;\n\t}\n\tif (data && typeof data === 'object' && typeof data.toString === 'function') {\n\t\tlet result = data.toString();\n\t\tif (result !== '[object Object]') {\n\t\t\treturn result;\n\t\t}\n\t}\n\treturn data;\n}\n\nfunction pretty(data: any): any {\n\tif (Array.isArray(data)) {\n\t\treturn data.map(prettyWithoutArrays);\n\t}\n\treturn prettyWithoutArrays(data);\n}\n\nexport function logWithColors(direction: string, totalLength: number, msgLength: number, req: number, initiator: RequestInitiator, str: string, data: any): void {\n\tdata = pretty(data);\n\n\tconst colorTable = colorTables[initiator];\n\tconst color = colorTable[req % colorTable.length];\n\tlet args = [`%c[${direction}]%c[${String(totalLength).padStart(7, ' ')}]%c[len: ${String(msgLength).padStart(5, ' ')}]%c${String(req).padStart(5, ' ')} - ${str}`, 'color: darkgreen', 'color: grey', 'color: grey', `color: ${color}`];\n\tif (/\\($/.test(str)) {\n\t\targs = args.concat(data);\n\t\targs.push(')');\n\t} else {\n\t\targs.push(data);\n\t}\n\tconsole.log.apply(console, args as [string, ...string[]]);\n}\n\nexport class IPCLogger implements IIPCLogger {\n\tprivate _totalIncoming = 0;\n\tprivate _totalOutgoing = 0;\n\n\tconstructor(\n\t\tprivate readonly _outgoingPrefix: string,\n\t\tprivate readonly _incomingPrefix: string,\n\t) { }\n\n\tpublic logOutgoing(msgLength: number, requestId: number, initiator: RequestInitiator, str: string, data?: any): void {\n\t\tthis._totalOutgoing += msgLength;\n\t\tlogWithColors(this._outgoingPrefix, this._totalOutgoing, msgLength, requestId, initiator, str, data);\n\t}\n\n\tpublic logIncoming(msgLength: number, requestId: number, initiator: RequestInitiator, str: string, data?: any): void {\n\t\tthis._totalIncoming += msgLength;\n\t\tlogWithColors(this._incomingPrefix, this._totalIncoming, msgLength, requestId, initiator, str, data);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { IMessagePassingProtocol, IPCClient, IIPCLogger } from 'vs/base/parts/ipc/common/ipc';\nimport { IDisposable, Disposable, dispose } from 'vs/base/common/lifecycle';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport * as platform from 'vs/base/common/platform';\nimport * as process from 'vs/base/common/process';\n\nexport interface ISocket extends IDisposable {\n\tonData(listener: (e: VSBuffer) => void): IDisposable;\n\tonClose(listener: () => void): IDisposable;\n\tonEnd(listener: () => void): IDisposable;\n\twrite(buffer: VSBuffer): void;\n\tend(): void;\n\tdrain(): Promise<void>;\n}\n\nlet emptyBuffer: VSBuffer | null = null;\nfunction getEmptyBuffer(): VSBuffer {\n\tif (!emptyBuffer) {\n\t\temptyBuffer = VSBuffer.alloc(0);\n\t}\n\treturn emptyBuffer;\n}\n\nexport class ChunkStream {\n\n\tprivate _chunks: VSBuffer[];\n\tprivate _totalLength: number;\n\n\tpublic get byteLength() {\n\t\treturn this._totalLength;\n\t}\n\n\tconstructor() {\n\t\tthis._chunks = [];\n\t\tthis._totalLength = 0;\n\t}\n\n\tpublic acceptChunk(buff: VSBuffer) {\n\t\tthis._chunks.push(buff);\n\t\tthis._totalLength += buff.byteLength;\n\t}\n\n\tpublic read(byteCount: number): VSBuffer {\n\t\treturn this._read(byteCount, true);\n\t}\n\n\tpublic peek(byteCount: number): VSBuffer {\n\t\treturn this._read(byteCount, false);\n\t}\n\n\tprivate _read(byteCount: number, advance: boolean): VSBuffer {\n\n\t\tif (byteCount === 0) {\n\t\t\treturn getEmptyBuffer();\n\t\t}\n\n\t\tif (byteCount > this._totalLength) {\n\t\t\tthrow new Error(`Cannot read so many bytes!`);\n\t\t}\n\n\t\tif (this._chunks[0].byteLength === byteCount) {\n\t\t\t// super fast path, precisely first chunk must be returned\n\t\t\tconst result = this._chunks[0];\n\t\t\tif (advance) {\n\t\t\t\tthis._chunks.shift();\n\t\t\t\tthis._totalLength -= byteCount;\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\tif (this._chunks[0].byteLength > byteCount) {\n\t\t\t// fast path, the reading is entirely within the first chunk\n\t\t\tconst result = this._chunks[0].slice(0, byteCount);\n\t\t\tif (advance) {\n\t\t\t\tthis._chunks[0] = this._chunks[0].slice(byteCount);\n\t\t\t\tthis._totalLength -= byteCount;\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\tlet result = VSBuffer.alloc(byteCount);\n\t\tlet resultOffset = 0;\n\t\tlet chunkIndex = 0;\n\t\twhile (byteCount > 0) {\n\t\t\tconst chunk = this._chunks[chunkIndex];\n\t\t\tif (chunk.byteLength > byteCount) {\n\t\t\t\t// this chunk will survive\n\t\t\t\tconst chunkPart = chunk.slice(0, byteCount);\n\t\t\t\tresult.set(chunkPart, resultOffset);\n\t\t\t\tresultOffset += byteCount;\n\n\t\t\t\tif (advance) {\n\t\t\t\t\tthis._chunks[chunkIndex] = chunk.slice(byteCount);\n\t\t\t\t\tthis._totalLength -= byteCount;\n\t\t\t\t}\n\n\t\t\t\tbyteCount -= byteCount;\n\t\t\t} else {\n\t\t\t\t// this chunk will be entirely read\n\t\t\t\tresult.set(chunk, resultOffset);\n\t\t\t\tresultOffset += chunk.byteLength;\n\n\t\t\t\tif (advance) {\n\t\t\t\t\tthis._chunks.shift();\n\t\t\t\t\tthis._totalLength -= chunk.byteLength;\n\t\t\t\t} else {\n\t\t\t\t\tchunkIndex++;\n\t\t\t\t}\n\n\t\t\t\tbyteCount -= chunk.byteLength;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n}\n\nconst enum ProtocolMessageType {\n\tNone = 0,\n\tRegular = 1,\n\tControl = 2,\n\tAck = 3,\n\tKeepAlive = 4,\n\tDisconnect = 5\n}\n\nexport const enum ProtocolConstants {\n\tHeaderLength = 13,\n\t/**\n\t * Send an Acknowledge message at most 2 seconds later...\n\t */\n\tAcknowledgeTime = 2000, // 2 seconds\n\t/**\n\t * If there is a message that has been unacknowledged for 10 seconds, consider the connection closed...\n\t */\n\tAcknowledgeTimeoutTime = 20000, // 20 seconds\n\t/**\n\t * Send at least a message every 5s for keep alive reasons.\n\t */\n\tKeepAliveTime = 5000, // 5 seconds\n\t/**\n\t * If there is no message received for 10 seconds, consider the connection closed...\n\t */\n\tKeepAliveTimeoutTime = 20000, // 20 seconds\n\t/**\n\t * If there is no reconnection within this time-frame, consider the connection permanently closed...\n\t */\n\tReconnectionGraceTime = 3 * 60 * 60 * 1000, // 3hrs\n\t/**\n\t * Maximal grace time between the first and the last reconnection...\n\t */\n\tReconnectionShortGraceTime = 5 * 60 * 1000, // 5min\n}\n\nclass ProtocolMessage {\n\n\tpublic writtenTime: number;\n\n\tconstructor(\n\t\tpublic readonly type: ProtocolMessageType,\n\t\tpublic readonly id: number,\n\t\tpublic readonly ack: number,\n\t\tpublic readonly data: VSBuffer\n\t) {\n\t\tthis.writtenTime = 0;\n\t}\n\n\tpublic get size(): number {\n\t\treturn this.data.byteLength;\n\t}\n}\n\nclass ProtocolReader extends Disposable {\n\n\tprivate readonly _socket: ISocket;\n\tprivate _isDisposed: boolean;\n\tprivate readonly _incomingData: ChunkStream;\n\tpublic lastReadTime: number;\n\n\tprivate readonly _onMessage = this._register(new Emitter<ProtocolMessage>());\n\tpublic readonly onMessage: Event<ProtocolMessage> = this._onMessage.event;\n\n\tprivate readonly _state = {\n\t\treadHead: true,\n\t\treadLen: ProtocolConstants.HeaderLength,\n\t\tmessageType: ProtocolMessageType.None,\n\t\tid: 0,\n\t\tack: 0\n\t};\n\n\tconstructor(socket: ISocket) {\n\t\tsuper();\n\t\tthis._socket = socket;\n\t\tthis._isDisposed = false;\n\t\tthis._incomingData = new ChunkStream();\n\t\tthis._register(this._socket.onData(data => this.acceptChunk(data)));\n\t\tthis.lastReadTime = Date.now();\n\t}\n\n\tpublic acceptChunk(data: VSBuffer | null): void {\n\t\tif (!data || data.byteLength === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.lastReadTime = Date.now();\n\n\t\tthis._incomingData.acceptChunk(data);\n\n\t\twhile (this._incomingData.byteLength >= this._state.readLen) {\n\n\t\t\tconst buff = this._incomingData.read(this._state.readLen);\n\n\t\t\tif (this._state.readHead) {\n\t\t\t\t// buff is the header\n\n\t\t\t\t// save new state => next time will read the body\n\t\t\t\tthis._state.readHead = false;\n\t\t\t\tthis._state.readLen = buff.readUInt32BE(9);\n\t\t\t\tthis._state.messageType = buff.readUInt8(0);\n\t\t\t\tthis._state.id = buff.readUInt32BE(1);\n\t\t\t\tthis._state.ack = buff.readUInt32BE(5);\n\t\t\t} else {\n\t\t\t\t// buff is the body\n\t\t\t\tconst messageType = this._state.messageType;\n\t\t\t\tconst id = this._state.id;\n\t\t\t\tconst ack = this._state.ack;\n\n\t\t\t\t// save new state => next time will read the header\n\t\t\t\tthis._state.readHead = true;\n\t\t\t\tthis._state.readLen = ProtocolConstants.HeaderLength;\n\t\t\t\tthis._state.messageType = ProtocolMessageType.None;\n\t\t\t\tthis._state.id = 0;\n\t\t\t\tthis._state.ack = 0;\n\n\t\t\t\tthis._onMessage.fire(new ProtocolMessage(messageType, id, ack, buff));\n\n\t\t\t\tif (this._isDisposed) {\n\t\t\t\t\t// check if an event listener lead to our disposal\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic readEntireBuffer(): VSBuffer {\n\t\treturn this._incomingData.read(this._incomingData.byteLength);\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._isDisposed = true;\n\t\tsuper.dispose();\n\t}\n}\n\nclass ProtocolWriter {\n\n\tprivate _isDisposed: boolean;\n\tprivate readonly _socket: ISocket;\n\tprivate _data: VSBuffer[];\n\tprivate _totalLength: number;\n\tpublic lastWriteTime: number;\n\n\tconstructor(socket: ISocket) {\n\t\tthis._isDisposed = false;\n\t\tthis._socket = socket;\n\t\tthis._data = [];\n\t\tthis._totalLength = 0;\n\t\tthis.lastWriteTime = 0;\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.flush();\n\t\tthis._isDisposed = true;\n\t}\n\n\tpublic drain(): Promise<void> {\n\t\tthis.flush();\n\t\treturn this._socket.drain();\n\t}\n\n\tpublic flush(): void {\n\t\t// flush\n\t\tthis._writeNow();\n\t}\n\n\tpublic write(msg: ProtocolMessage) {\n\t\tif (this._isDisposed) {\n\t\t\t// ignore: there could be left-over promises which complete and then\n\t\t\t// decide to write a response, etc...\n\t\t\treturn;\n\t\t}\n\t\tmsg.writtenTime = Date.now();\n\t\tthis.lastWriteTime = Date.now();\n\t\tconst header = VSBuffer.alloc(ProtocolConstants.HeaderLength);\n\t\theader.writeUInt8(msg.type, 0);\n\t\theader.writeUInt32BE(msg.id, 1);\n\t\theader.writeUInt32BE(msg.ack, 5);\n\t\theader.writeUInt32BE(msg.data.byteLength, 9);\n\t\tthis._writeSoon(header, msg.data);\n\t}\n\n\tprivate _bufferAdd(head: VSBuffer, body: VSBuffer): boolean {\n\t\tconst wasEmpty = this._totalLength === 0;\n\t\tthis._data.push(head, body);\n\t\tthis._totalLength += head.byteLength + body.byteLength;\n\t\treturn wasEmpty;\n\t}\n\n\tprivate _bufferTake(): VSBuffer {\n\t\tconst ret = VSBuffer.concat(this._data, this._totalLength);\n\t\tthis._data.length = 0;\n\t\tthis._totalLength = 0;\n\t\treturn ret;\n\t}\n\n\tprivate _writeSoon(header: VSBuffer, data: VSBuffer): void {\n\t\tif (this._bufferAdd(header, data)) {\n\t\t\tplatform.setImmediate(() => {\n\t\t\t\tthis._writeNow();\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate _writeNow(): void {\n\t\tif (this._totalLength === 0) {\n\t\t\treturn;\n\t\t}\n\t\tthis._socket.write(this._bufferTake());\n\t}\n}\n\n/**\n * A message has the following format:\n * ```\n *     /-------------------------------|------\\\n *     |             HEADER            |      |\n *     |-------------------------------| DATA |\n *     | TYPE | ID | ACK | DATA_LENGTH |      |\n *     \\-------------------------------|------/\n * ```\n * The header is 9 bytes and consists of:\n *  - TYPE is 1 byte (ProtocolMessageType) - the message type\n *  - ID is 4 bytes (u32be) - the message id (can be 0 to indicate to be ignored)\n *  - ACK is 4 bytes (u32be) - the acknowledged message id (can be 0 to indicate to be ignored)\n *  - DATA_LENGTH is 4 bytes (u32be) - the length in bytes of DATA\n *\n * Only Regular messages are counted, other messages are not counted, nor acknowledged.\n */\nexport class Protocol extends Disposable implements IMessagePassingProtocol {\n\n\tprivate _socket: ISocket;\n\tprivate _socketWriter: ProtocolWriter;\n\tprivate _socketReader: ProtocolReader;\n\n\tprivate readonly _onMessage = new Emitter<VSBuffer>();\n\treadonly onMessage: Event<VSBuffer> = this._onMessage.event;\n\n\tprivate readonly _onClose = new Emitter<void>();\n\treadonly onClose: Event<void> = this._onClose.event;\n\n\tconstructor(socket: ISocket) {\n\t\tsuper();\n\t\tthis._socket = socket;\n\t\tthis._socketWriter = this._register(new ProtocolWriter(this._socket));\n\t\tthis._socketReader = this._register(new ProtocolReader(this._socket));\n\n\t\tthis._register(this._socketReader.onMessage((msg) => {\n\t\t\tif (msg.type === ProtocolMessageType.Regular) {\n\t\t\t\tthis._onMessage.fire(msg.data);\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this._socket.onClose(() => this._onClose.fire()));\n\t}\n\n\tdrain(): Promise<void> {\n\t\treturn this._socketWriter.drain();\n\t}\n\n\tgetSocket(): ISocket {\n\t\treturn this._socket;\n\t}\n\n\tsendDisconnect(): void {\n\t\t// Nothing to do...\n\t}\n\n\tsend(buffer: VSBuffer): void {\n\t\tthis._socketWriter.write(new ProtocolMessage(ProtocolMessageType.Regular, 0, 0, buffer));\n\t}\n}\n\nexport class Client<TContext = string> extends IPCClient<TContext> {\n\n\tstatic fromSocket<TContext = string>(socket: ISocket, id: TContext): Client<TContext> {\n\t\treturn new Client(new Protocol(socket), id);\n\t}\n\n\tget onClose(): Event<void> { return this.protocol.onClose; }\n\n\tconstructor(private protocol: Protocol | PersistentProtocol, id: TContext, ipcLogger: IIPCLogger | null = null) {\n\t\tsuper(protocol, id, ipcLogger);\n\t}\n\n\tdispose(): void {\n\t\tsuper.dispose();\n\t\tconst socket = this.protocol.getSocket();\n\t\tthis.protocol.sendDisconnect();\n\t\tthis.protocol.dispose();\n\t\tsocket.end();\n\t}\n}\n\n/**\n * Will ensure no messages are lost if there are no event listeners.\n */\nexport class BufferedEmitter<T> {\n\tprivate _emitter: Emitter<T>;\n\tpublic readonly event: Event<T>;\n\n\tprivate _hasListeners = false;\n\tprivate _isDeliveringMessages = false;\n\tprivate _bufferedMessages: T[] = [];\n\n\tconstructor() {\n\t\tthis._emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tthis._hasListeners = true;\n\t\t\t\t// it is important to deliver these messages after this call, but before\n\t\t\t\t// other messages have a chance to be received (to guarantee in order delivery)\n\t\t\t\t// that's why we're using here nextTick and not other types of timeouts\n\t\t\t\tprocess.nextTick(() => this._deliverMessages());\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tthis._hasListeners = false;\n\t\t\t}\n\t\t});\n\n\t\tthis.event = this._emitter.event;\n\t}\n\n\tprivate _deliverMessages(): void {\n\t\tif (this._isDeliveringMessages) {\n\t\t\treturn;\n\t\t}\n\t\tthis._isDeliveringMessages = true;\n\t\twhile (this._hasListeners && this._bufferedMessages.length > 0) {\n\t\t\tthis._emitter.fire(this._bufferedMessages.shift()!);\n\t\t}\n\t\tthis._isDeliveringMessages = false;\n\t}\n\n\tpublic fire(event: T): void {\n\t\tif (this._hasListeners) {\n\t\t\tif (this._bufferedMessages.length > 0) {\n\t\t\t\tthis._bufferedMessages.push(event);\n\t\t\t} else {\n\t\t\t\tthis._emitter.fire(event);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._bufferedMessages.push(event);\n\t\t}\n\t}\n\n\tpublic flushBuffer(): void {\n\t\tthis._bufferedMessages = [];\n\t}\n}\n\nclass QueueElement<T> {\n\tpublic readonly data: T;\n\tpublic next: QueueElement<T> | null;\n\n\tconstructor(data: T) {\n\t\tthis.data = data;\n\t\tthis.next = null;\n\t}\n}\n\nclass Queue<T> {\n\n\tprivate _first: QueueElement<T> | null;\n\tprivate _last: QueueElement<T> | null;\n\n\tconstructor() {\n\t\tthis._first = null;\n\t\tthis._last = null;\n\t}\n\n\tpublic peek(): T | null {\n\t\tif (!this._first) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this._first.data;\n\t}\n\n\tpublic toArray(): T[] {\n\t\tlet result: T[] = [], resultLen = 0;\n\t\tlet it = this._first;\n\t\twhile (it) {\n\t\t\tresult[resultLen++] = it.data;\n\t\t\tit = it.next;\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic pop(): void {\n\t\tif (!this._first) {\n\t\t\treturn;\n\t\t}\n\t\tif (this._first === this._last) {\n\t\t\tthis._first = null;\n\t\t\tthis._last = null;\n\t\t\treturn;\n\t\t}\n\t\tthis._first = this._first.next;\n\t}\n\n\tpublic push(item: T): void {\n\t\tconst element = new QueueElement(item);\n\t\tif (!this._first) {\n\t\t\tthis._first = element;\n\t\t\tthis._last = element;\n\t\t\treturn;\n\t\t}\n\t\tthis._last!.next = element;\n\t\tthis._last = element;\n\t}\n}\n\nclass LoadEstimator {\n\n\tprivate static _HISTORY_LENGTH = 10;\n\tprivate static _INSTANCE: LoadEstimator | null = null;\n\tpublic static getInstance(): LoadEstimator {\n\t\tif (!LoadEstimator._INSTANCE) {\n\t\t\tLoadEstimator._INSTANCE = new LoadEstimator();\n\t\t}\n\t\treturn LoadEstimator._INSTANCE;\n\t}\n\n\tprivate lastRuns: number[];\n\n\tconstructor() {\n\t\tthis.lastRuns = [];\n\t\tconst now = Date.now();\n\t\tfor (let i = 0; i < LoadEstimator._HISTORY_LENGTH; i++) {\n\t\t\tthis.lastRuns[i] = now - 1000 * i;\n\t\t}\n\t\tsetInterval(() => {\n\t\t\tfor (let i = LoadEstimator._HISTORY_LENGTH; i >= 1; i--) {\n\t\t\t\tthis.lastRuns[i] = this.lastRuns[i - 1];\n\t\t\t}\n\t\t\tthis.lastRuns[0] = Date.now();\n\t\t}, 1000);\n\t}\n\n\t/**\n\t * returns an estimative number, from 0 (low load) to 1 (high load)\n\t */\n\tpublic load(): number {\n\t\tconst now = Date.now();\n\t\tconst historyLimit = (1 + LoadEstimator._HISTORY_LENGTH) * 1000;\n\t\tlet score = 0;\n\t\tfor (let i = 0; i < LoadEstimator._HISTORY_LENGTH; i++) {\n\t\t\tif (now - this.lastRuns[i] <= historyLimit) {\n\t\t\t\tscore++;\n\t\t\t}\n\t\t}\n\t\treturn 1 - score / LoadEstimator._HISTORY_LENGTH;\n\t}\n\n\tpublic hasHighLoad(): boolean {\n\t\treturn this.load() >= 0.5;\n\t}\n}\n\n/**\n * Same as Protocol, but will actually track messages and acks.\n * Moreover, it will ensure no messages are lost if there are no event listeners.\n */\nexport class PersistentProtocol implements IMessagePassingProtocol {\n\n\tprivate _isReconnecting: boolean;\n\n\tprivate _outgoingUnackMsg: Queue<ProtocolMessage>;\n\tprivate _outgoingMsgId: number;\n\tprivate _outgoingAckId: number;\n\tprivate _outgoingAckTimeout: any | null;\n\n\tprivate _incomingMsgId: number;\n\tprivate _incomingAckId: number;\n\tprivate _incomingMsgLastTime: number;\n\tprivate _incomingAckTimeout: any | null;\n\n\tprivate _outgoingKeepAliveTimeout: any | null;\n\tprivate _incomingKeepAliveTimeout: any | null;\n\n\tprivate _socket: ISocket;\n\tprivate _socketWriter: ProtocolWriter;\n\tprivate _socketReader: ProtocolReader;\n\tprivate _socketDisposables: IDisposable[];\n\n\tprivate readonly _loadEstimator = LoadEstimator.getInstance();\n\n\tprivate readonly _onControlMessage = new BufferedEmitter<VSBuffer>();\n\treadonly onControlMessage: Event<VSBuffer> = this._onControlMessage.event;\n\n\tprivate readonly _onMessage = new BufferedEmitter<VSBuffer>();\n\treadonly onMessage: Event<VSBuffer> = this._onMessage.event;\n\n\tprivate readonly _onClose = new BufferedEmitter<void>();\n\treadonly onClose: Event<void> = this._onClose.event;\n\n\tprivate readonly _onSocketClose = new BufferedEmitter<void>();\n\treadonly onSocketClose: Event<void> = this._onSocketClose.event;\n\n\tprivate readonly _onSocketTimeout = new BufferedEmitter<void>();\n\treadonly onSocketTimeout: Event<void> = this._onSocketTimeout.event;\n\n\tpublic get unacknowledgedCount(): number {\n\t\treturn this._outgoingMsgId - this._outgoingAckId;\n\t}\n\n\tconstructor(socket: ISocket, initialChunk: VSBuffer | null = null) {\n\t\tthis._isReconnecting = false;\n\t\tthis._outgoingUnackMsg = new Queue<ProtocolMessage>();\n\t\tthis._outgoingMsgId = 0;\n\t\tthis._outgoingAckId = 0;\n\t\tthis._outgoingAckTimeout = null;\n\n\t\tthis._incomingMsgId = 0;\n\t\tthis._incomingAckId = 0;\n\t\tthis._incomingMsgLastTime = 0;\n\t\tthis._incomingAckTimeout = null;\n\n\t\tthis._outgoingKeepAliveTimeout = null;\n\t\tthis._incomingKeepAliveTimeout = null;\n\n\t\tthis._socketDisposables = [];\n\t\tthis._socket = socket;\n\t\tthis._socketWriter = new ProtocolWriter(this._socket);\n\t\tthis._socketDisposables.push(this._socketWriter);\n\t\tthis._socketReader = new ProtocolReader(this._socket);\n\t\tthis._socketDisposables.push(this._socketReader);\n\t\tthis._socketDisposables.push(this._socketReader.onMessage(msg => this._receiveMessage(msg)));\n\t\tthis._socketDisposables.push(this._socket.onClose(() => this._onSocketClose.fire()));\n\t\tif (initialChunk) {\n\t\t\tthis._socketReader.acceptChunk(initialChunk);\n\t\t}\n\n\t\tthis._sendKeepAliveCheck();\n\t\tthis._recvKeepAliveCheck();\n\t}\n\n\tdispose(): void {\n\t\tif (this._outgoingAckTimeout) {\n\t\t\tclearTimeout(this._outgoingAckTimeout);\n\t\t\tthis._outgoingAckTimeout = null;\n\t\t}\n\t\tif (this._incomingAckTimeout) {\n\t\t\tclearTimeout(this._incomingAckTimeout);\n\t\t\tthis._incomingAckTimeout = null;\n\t\t}\n\t\tif (this._outgoingKeepAliveTimeout) {\n\t\t\tclearTimeout(this._outgoingKeepAliveTimeout);\n\t\t\tthis._outgoingKeepAliveTimeout = null;\n\t\t}\n\t\tif (this._incomingKeepAliveTimeout) {\n\t\t\tclearTimeout(this._incomingKeepAliveTimeout);\n\t\t\tthis._incomingKeepAliveTimeout = null;\n\t\t}\n\t\tthis._socketDisposables = dispose(this._socketDisposables);\n\t}\n\n\tdrain(): Promise<void> {\n\t\treturn this._socketWriter.drain();\n\t}\n\n\tsendDisconnect(): void {\n\t\tconst msg = new ProtocolMessage(ProtocolMessageType.Disconnect, 0, 0, getEmptyBuffer());\n\t\tthis._socketWriter.write(msg);\n\t\tthis._socketWriter.flush();\n\t}\n\n\tprivate _sendKeepAliveCheck(): void {\n\t\tif (this._outgoingKeepAliveTimeout) {\n\t\t\t// there will be a check in the near future\n\t\t\treturn;\n\t\t}\n\n\t\tconst timeSinceLastOutgoingMsg = Date.now() - this._socketWriter.lastWriteTime;\n\t\tif (timeSinceLastOutgoingMsg >= ProtocolConstants.KeepAliveTime) {\n\t\t\t// sufficient time has passed since last message was written,\n\t\t\t// and no message from our side needed to be sent in the meantime,\n\t\t\t// so we will send a message containing only a keep alive.\n\t\t\tconst msg = new ProtocolMessage(ProtocolMessageType.KeepAlive, 0, 0, getEmptyBuffer());\n\t\t\tthis._socketWriter.write(msg);\n\t\t\tthis._sendKeepAliveCheck();\n\t\t\treturn;\n\t\t}\n\n\t\tthis._outgoingKeepAliveTimeout = setTimeout(() => {\n\t\t\tthis._outgoingKeepAliveTimeout = null;\n\t\t\tthis._sendKeepAliveCheck();\n\t\t}, ProtocolConstants.KeepAliveTime - timeSinceLastOutgoingMsg + 5);\n\t}\n\n\tprivate _recvKeepAliveCheck(): void {\n\t\tif (this._incomingKeepAliveTimeout) {\n\t\t\t// there will be a check in the near future\n\t\t\treturn;\n\t\t}\n\n\t\tconst timeSinceLastIncomingMsg = Date.now() - this._socketReader.lastReadTime;\n\t\tif (timeSinceLastIncomingMsg >= ProtocolConstants.KeepAliveTimeoutTime) {\n\t\t\t// It's been a long time since we received a server message\n\t\t\t// But this might be caused by the event loop being busy and failing to read messages\n\t\t\tif (!this._loadEstimator.hasHighLoad()) {\n\t\t\t\t// Trash the socket\n\t\t\t\tthis._onSocketTimeout.fire(undefined);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis._incomingKeepAliveTimeout = setTimeout(() => {\n\t\t\tthis._incomingKeepAliveTimeout = null;\n\t\t\tthis._recvKeepAliveCheck();\n\t\t}, Math.max(ProtocolConstants.KeepAliveTimeoutTime - timeSinceLastIncomingMsg, 0) + 5);\n\t}\n\n\tpublic getSocket(): ISocket {\n\t\treturn this._socket;\n\t}\n\n\tpublic beginAcceptReconnection(socket: ISocket, initialDataChunk: VSBuffer | null): void {\n\t\tthis._isReconnecting = true;\n\n\t\tthis._socketDisposables = dispose(this._socketDisposables);\n\t\tthis._onControlMessage.flushBuffer();\n\t\tthis._onSocketClose.flushBuffer();\n\t\tthis._onSocketTimeout.flushBuffer();\n\t\tthis._socket.dispose();\n\n\t\tthis._socket = socket;\n\t\tthis._socketWriter = new ProtocolWriter(this._socket);\n\t\tthis._socketDisposables.push(this._socketWriter);\n\t\tthis._socketReader = new ProtocolReader(this._socket);\n\t\tthis._socketDisposables.push(this._socketReader);\n\t\tthis._socketDisposables.push(this._socketReader.onMessage(msg => this._receiveMessage(msg)));\n\t\tthis._socketDisposables.push(this._socket.onClose(() => this._onSocketClose.fire()));\n\t\tthis._socketReader.acceptChunk(initialDataChunk);\n\t}\n\n\tpublic endAcceptReconnection(): void {\n\t\tthis._isReconnecting = false;\n\n\t\t// Send again all unacknowledged messages\n\t\tconst toSend = this._outgoingUnackMsg.toArray();\n\t\tfor (let i = 0, len = toSend.length; i < len; i++) {\n\t\t\tthis._socketWriter.write(toSend[i]);\n\t\t}\n\t\tthis._recvAckCheck();\n\n\t\tthis._sendKeepAliveCheck();\n\t\tthis._recvKeepAliveCheck();\n\t}\n\n\tpublic acceptDisconnect(): void {\n\t\tthis._onClose.fire();\n\t}\n\n\tprivate _receiveMessage(msg: ProtocolMessage): void {\n\t\tif (msg.ack > this._outgoingAckId) {\n\t\t\tthis._outgoingAckId = msg.ack;\n\t\t\tdo {\n\t\t\t\tconst first = this._outgoingUnackMsg.peek();\n\t\t\t\tif (first && first.id <= msg.ack) {\n\t\t\t\t\t// this message has been confirmed, remove it\n\t\t\t\t\tthis._outgoingUnackMsg.pop();\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} while (true);\n\t\t}\n\n\t\tif (msg.type === ProtocolMessageType.Regular) {\n\t\t\tif (msg.id > this._incomingMsgId) {\n\t\t\t\tif (msg.id !== this._incomingMsgId + 1) {\n\t\t\t\t\tconsole.error(`PROTOCOL CORRUPTION, LAST SAW MSG ${this._incomingMsgId} AND HAVE NOW RECEIVED MSG ${msg.id}`);\n\t\t\t\t}\n\t\t\t\tthis._incomingMsgId = msg.id;\n\t\t\t\tthis._incomingMsgLastTime = Date.now();\n\t\t\t\tthis._sendAckCheck();\n\t\t\t\tthis._onMessage.fire(msg.data);\n\t\t\t}\n\t\t} else if (msg.type === ProtocolMessageType.Control) {\n\t\t\tthis._onControlMessage.fire(msg.data);\n\t\t} else if (msg.type === ProtocolMessageType.Disconnect) {\n\t\t\tthis._onClose.fire();\n\t\t}\n\t}\n\n\treadEntireBuffer(): VSBuffer {\n\t\treturn this._socketReader.readEntireBuffer();\n\t}\n\n\tflush(): void {\n\t\tthis._socketWriter.flush();\n\t}\n\n\tsend(buffer: VSBuffer): void {\n\t\tconst myId = ++this._outgoingMsgId;\n\t\tthis._incomingAckId = this._incomingMsgId;\n\t\tconst msg = new ProtocolMessage(ProtocolMessageType.Regular, myId, this._incomingAckId, buffer);\n\t\tthis._outgoingUnackMsg.push(msg);\n\t\tif (!this._isReconnecting) {\n\t\t\tthis._socketWriter.write(msg);\n\t\t\tthis._recvAckCheck();\n\t\t}\n\t}\n\n\t/**\n\t * Send a message which will not be part of the regular acknowledge flow.\n\t * Use this for early control messages which are repeated in case of reconnection.\n\t */\n\tsendControl(buffer: VSBuffer): void {\n\t\tconst msg = new ProtocolMessage(ProtocolMessageType.Control, 0, 0, buffer);\n\t\tthis._socketWriter.write(msg);\n\t}\n\n\tprivate _sendAckCheck(): void {\n\t\tif (this._incomingMsgId <= this._incomingAckId) {\n\t\t\t// nothink to acknowledge\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._incomingAckTimeout) {\n\t\t\t// there will be a check in the near future\n\t\t\treturn;\n\t\t}\n\n\t\tconst timeSinceLastIncomingMsg = Date.now() - this._incomingMsgLastTime;\n\t\tif (timeSinceLastIncomingMsg >= ProtocolConstants.AcknowledgeTime) {\n\t\t\t// sufficient time has passed since this message has been received,\n\t\t\t// and no message from our side needed to be sent in the meantime,\n\t\t\t// so we will send a message containing only an ack.\n\t\t\tthis._sendAck();\n\t\t\treturn;\n\t\t}\n\n\t\tthis._incomingAckTimeout = setTimeout(() => {\n\t\t\tthis._incomingAckTimeout = null;\n\t\t\tthis._sendAckCheck();\n\t\t}, ProtocolConstants.AcknowledgeTime - timeSinceLastIncomingMsg + 5);\n\t}\n\n\tprivate _recvAckCheck(): void {\n\t\tif (this._outgoingMsgId <= this._outgoingAckId) {\n\t\t\t// everything has been acknowledged\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._outgoingAckTimeout) {\n\t\t\t// there will be a check in the near future\n\t\t\treturn;\n\t\t}\n\n\t\tconst oldestUnacknowledgedMsg = this._outgoingUnackMsg.peek()!;\n\t\tconst timeSinceOldestUnacknowledgedMsg = Date.now() - oldestUnacknowledgedMsg.writtenTime;\n\t\tif (timeSinceOldestUnacknowledgedMsg >= ProtocolConstants.AcknowledgeTimeoutTime) {\n\t\t\t// It's been a long time since our sent message was acknowledged\n\t\t\t// But this might be caused by the event loop being busy and failing to read messages\n\t\t\tif (!this._loadEstimator.hasHighLoad()) {\n\t\t\t\t// Trash the socket\n\t\t\t\tthis._onSocketTimeout.fire(undefined);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis._outgoingAckTimeout = setTimeout(() => {\n\t\t\tthis._outgoingAckTimeout = null;\n\t\t\tthis._recvAckCheck();\n\t\t}, Math.max(ProtocolConstants.AcknowledgeTimeoutTime - timeSinceOldestUnacknowledgedMsg, 0) + 5);\n\t}\n\n\tprivate _sendAck(): void {\n\t\tif (this._incomingMsgId <= this._incomingAckId) {\n\t\t\t// nothink to acknowledge\n\t\t\treturn;\n\t\t}\n\n\t\tthis._incomingAckId = this._incomingMsgId;\n\t\tconst msg = new ProtocolMessage(ProtocolMessageType.Ack, 0, this._incomingAckId, getEmptyBuffer());\n\t\tthis._socketWriter.write(msg);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createHash } from 'crypto';\nimport { Socket, Server as NetServer, createConnection, createServer } from 'net';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { ClientConnectionEvent, IPCServer } from 'vs/base/parts/ipc/common/ipc';\nimport { join } from 'vs/base/common/path';\nimport { tmpdir } from 'os';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { IDisposable, Disposable } from 'vs/base/common/lifecycle';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { ISocket, Protocol, Client, ChunkStream } from 'vs/base/parts/ipc/common/ipc.net';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { Platform, platform } from 'vs/base/common/platform';\n\nexport class NodeSocket implements ISocket {\n\tpublic readonly socket: Socket;\n\n\tconstructor(socket: Socket) {\n\t\tthis.socket = socket;\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.socket.destroy();\n\t}\n\n\tpublic onData(_listener: (e: VSBuffer) => void): IDisposable {\n\t\tconst listener = (buff: Buffer) => _listener(VSBuffer.wrap(buff));\n\t\tthis.socket.on('data', listener);\n\t\treturn {\n\t\t\tdispose: () => this.socket.off('data', listener)\n\t\t};\n\t}\n\n\tpublic onClose(listener: () => void): IDisposable {\n\t\tthis.socket.on('close', listener);\n\t\treturn {\n\t\t\tdispose: () => this.socket.off('close', listener)\n\t\t};\n\t}\n\n\tpublic onEnd(listener: () => void): IDisposable {\n\t\tthis.socket.on('end', listener);\n\t\treturn {\n\t\t\tdispose: () => this.socket.off('end', listener)\n\t\t};\n\t}\n\n\tpublic write(buffer: VSBuffer): void {\n\t\t// return early if socket has been destroyed in the meantime\n\t\tif (this.socket.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// we ignore the returned value from `write` because we would have to cached the data\n\t\t// anyways and nodejs is already doing that for us:\n\t\t// > https://nodejs.org/api/stream.html#stream_writable_write_chunk_encoding_callback\n\t\t// > However, the false return value is only advisory and the writable stream will unconditionally\n\t\t// > accept and buffer chunk even if it has not been allowed to drain.\n\t\ttry {\n\t\t\tthis.socket.write(<Buffer>buffer.buffer);\n\t\t} catch (err) {\n\t\t\tif (err.code === 'EPIPE') {\n\t\t\t\t// An EPIPE exception at the wrong time can lead to a renderer process crash\n\t\t\t\t// so ignore the error since the socket will fire the close event soon anyways:\n\t\t\t\t// > https://nodejs.org/api/errors.html#errors_common_system_errors\n\t\t\t\t// > EPIPE (Broken pipe): A write on a pipe, socket, or FIFO for which there is no\n\t\t\t\t// > process to read the data. Commonly encountered at the net and http layers,\n\t\t\t\t// > indicative that the remote side of the stream being written to has been closed.\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tonUnexpectedError(err);\n\t\t}\n\t}\n\n\tpublic end(): void {\n\t\tthis.socket.end();\n\t}\n\n\tpublic drain(): Promise<void> {\n\t\treturn new Promise<void>((resolve, reject) => {\n\t\t\tif (this.socket.bufferSize === 0) {\n\t\t\t\tresolve();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst finished = () => {\n\t\t\t\tthis.socket.off('close', finished);\n\t\t\t\tthis.socket.off('end', finished);\n\t\t\t\tthis.socket.off('error', finished);\n\t\t\t\tthis.socket.off('timeout', finished);\n\t\t\t\tthis.socket.off('drain', finished);\n\t\t\t\tresolve();\n\t\t\t};\n\t\t\tthis.socket.on('close', finished);\n\t\t\tthis.socket.on('end', finished);\n\t\t\tthis.socket.on('error', finished);\n\t\t\tthis.socket.on('timeout', finished);\n\t\t\tthis.socket.on('drain', finished);\n\t\t});\n\t}\n}\n\nconst enum Constants {\n\tMinHeaderByteSize = 2\n}\n\nconst enum ReadState {\n\tPeekHeader = 1,\n\tReadHeader = 2,\n\tReadBody = 3,\n\tFin = 4\n}\n\n/**\n * See https://tools.ietf.org/html/rfc6455#section-5.2\n */\nexport class WebSocketNodeSocket extends Disposable implements ISocket {\n\n\tpublic readonly socket: NodeSocket;\n\tprivate readonly _incomingData: ChunkStream;\n\tprivate readonly _onData = this._register(new Emitter<VSBuffer>());\n\n\tprivate readonly _state = {\n\t\tstate: ReadState.PeekHeader,\n\t\treadLen: Constants.MinHeaderByteSize,\n\t\tmask: 0\n\t};\n\n\tconstructor(socket: NodeSocket) {\n\t\tsuper();\n\t\tthis.socket = socket;\n\t\tthis._incomingData = new ChunkStream();\n\t\tthis._register(this.socket.onData(data => this._acceptChunk(data)));\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.socket.dispose();\n\t}\n\n\tpublic onData(listener: (e: VSBuffer) => void): IDisposable {\n\t\treturn this._onData.event(listener);\n\t}\n\n\tpublic onClose(listener: () => void): IDisposable {\n\t\treturn this.socket.onClose(listener);\n\t}\n\n\tpublic onEnd(listener: () => void): IDisposable {\n\t\treturn this.socket.onEnd(listener);\n\t}\n\n\tpublic write(buffer: VSBuffer): void {\n\t\tlet headerLen = Constants.MinHeaderByteSize;\n\t\tif (buffer.byteLength < 126) {\n\t\t\theaderLen += 0;\n\t\t} else if (buffer.byteLength < 2 ** 16) {\n\t\t\theaderLen += 2;\n\t\t} else {\n\t\t\theaderLen += 8;\n\t\t}\n\t\tconst header = VSBuffer.alloc(headerLen);\n\n\t\theader.writeUInt8(0b10000010, 0);\n\t\tif (buffer.byteLength < 126) {\n\t\t\theader.writeUInt8(buffer.byteLength, 1);\n\t\t} else if (buffer.byteLength < 2 ** 16) {\n\t\t\theader.writeUInt8(126, 1);\n\t\t\tlet offset = 1;\n\t\t\theader.writeUInt8((buffer.byteLength >>> 8) & 0b11111111, ++offset);\n\t\t\theader.writeUInt8((buffer.byteLength >>> 0) & 0b11111111, ++offset);\n\t\t} else {\n\t\t\theader.writeUInt8(127, 1);\n\t\t\tlet offset = 1;\n\t\t\theader.writeUInt8(0, ++offset);\n\t\t\theader.writeUInt8(0, ++offset);\n\t\t\theader.writeUInt8(0, ++offset);\n\t\t\theader.writeUInt8(0, ++offset);\n\t\t\theader.writeUInt8((buffer.byteLength >>> 24) & 0b11111111, ++offset);\n\t\t\theader.writeUInt8((buffer.byteLength >>> 16) & 0b11111111, ++offset);\n\t\t\theader.writeUInt8((buffer.byteLength >>> 8) & 0b11111111, ++offset);\n\t\t\theader.writeUInt8((buffer.byteLength >>> 0) & 0b11111111, ++offset);\n\t\t}\n\n\t\tthis.socket.write(VSBuffer.concat([header, buffer]));\n\t}\n\n\tpublic end(): void {\n\t\tthis.socket.end();\n\t}\n\n\tprivate _acceptChunk(data: VSBuffer): void {\n\t\tif (data.byteLength === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._incomingData.acceptChunk(data);\n\n\t\twhile (this._incomingData.byteLength >= this._state.readLen) {\n\n\t\t\tif (this._state.state === ReadState.PeekHeader) {\n\t\t\t\t// peek to see if we can read the entire header\n\t\t\t\tconst peekHeader = this._incomingData.peek(this._state.readLen);\n\t\t\t\t// const firstByte = peekHeader.readUInt8(0);\n\t\t\t\t// const finBit = (firstByte & 0b10000000) >>> 7;\n\t\t\t\tconst secondByte = peekHeader.readUInt8(1);\n\t\t\t\tconst hasMask = (secondByte & 0b10000000) >>> 7;\n\t\t\t\tconst len = (secondByte & 0b01111111);\n\n\t\t\t\tthis._state.state = ReadState.ReadHeader;\n\t\t\t\tthis._state.readLen = Constants.MinHeaderByteSize + (hasMask ? 4 : 0) + (len === 126 ? 2 : 0) + (len === 127 ? 8 : 0);\n\t\t\t\tthis._state.mask = 0;\n\n\t\t\t} else if (this._state.state === ReadState.ReadHeader) {\n\t\t\t\t// read entire header\n\t\t\t\tconst header = this._incomingData.read(this._state.readLen);\n\t\t\t\tconst secondByte = header.readUInt8(1);\n\t\t\t\tconst hasMask = (secondByte & 0b10000000) >>> 7;\n\t\t\t\tlet len = (secondByte & 0b01111111);\n\n\t\t\t\tlet offset = 1;\n\t\t\t\tif (len === 126) {\n\t\t\t\t\tlen = (\n\t\t\t\t\t\theader.readUInt8(++offset) * 2 ** 8\n\t\t\t\t\t\t+ header.readUInt8(++offset)\n\t\t\t\t\t);\n\t\t\t\t} else if (len === 127) {\n\t\t\t\t\tlen = (\n\t\t\t\t\t\theader.readUInt8(++offset) * 0\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 0\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 0\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 0\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 2 ** 24\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 2 ** 16\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 2 ** 8\n\t\t\t\t\t\t+ header.readUInt8(++offset)\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tlet mask = 0;\n\t\t\t\tif (hasMask) {\n\t\t\t\t\tmask = (\n\t\t\t\t\t\theader.readUInt8(++offset) * 2 ** 24\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 2 ** 16\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 2 ** 8\n\t\t\t\t\t\t+ header.readUInt8(++offset)\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tthis._state.state = ReadState.ReadBody;\n\t\t\t\tthis._state.readLen = len;\n\t\t\t\tthis._state.mask = mask;\n\n\t\t\t} else if (this._state.state === ReadState.ReadBody) {\n\t\t\t\t// read body\n\n\t\t\t\tconst body = this._incomingData.read(this._state.readLen);\n\t\t\t\tunmask(body, this._state.mask);\n\n\t\t\t\tthis._state.state = ReadState.PeekHeader;\n\t\t\t\tthis._state.readLen = Constants.MinHeaderByteSize;\n\t\t\t\tthis._state.mask = 0;\n\n\t\t\t\tthis._onData.fire(body);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic drain(): Promise<void> {\n\t\treturn this.socket.drain();\n\t}\n}\n\nfunction unmask(buffer: VSBuffer, mask: number): void {\n\tif (mask === 0) {\n\t\treturn;\n\t}\n\tlet cnt = buffer.byteLength >>> 2;\n\tfor (let i = 0; i < cnt; i++) {\n\t\tconst v = buffer.readUInt32BE(i * 4);\n\t\tbuffer.writeUInt32BE(v ^ mask, i * 4);\n\t}\n\tlet offset = cnt * 4;\n\tlet bytesLeft = buffer.byteLength - offset;\n\tconst m3 = (mask >>> 24) & 0b11111111;\n\tconst m2 = (mask >>> 16) & 0b11111111;\n\tconst m1 = (mask >>> 8) & 0b11111111;\n\tif (bytesLeft >= 1) {\n\t\tbuffer.writeUInt8(buffer.readUInt8(offset) ^ m3, offset);\n\t}\n\tif (bytesLeft >= 2) {\n\t\tbuffer.writeUInt8(buffer.readUInt8(offset + 1) ^ m2, offset + 1);\n\t}\n\tif (bytesLeft >= 3) {\n\t\tbuffer.writeUInt8(buffer.readUInt8(offset + 2) ^ m1, offset + 2);\n\t}\n}\n\n// Read this before there's any chance it is overwritten\n// Related to https://github.com/microsoft/vscode/issues/30624\nexport const XDG_RUNTIME_DIR = <string | undefined>process.env['XDG_RUNTIME_DIR'];\n\nconst safeIpcPathLengths: { [platform: number]: number } = {\n\t[Platform.Linux]: 107,\n\t[Platform.Mac]: 103\n};\n\nexport function createRandomIPCHandle(): string {\n\tconst randomSuffix = generateUuid();\n\n\t// Windows: use named pipe\n\tif (process.platform === 'win32') {\n\t\treturn `\\\\\\\\.\\\\pipe\\\\vscode-ipc-${randomSuffix}-sock`;\n\t}\n\n\t// Mac/Unix: use socket file and prefer\n\t// XDG_RUNTIME_DIR over tmpDir\n\tlet result: string;\n\tif (XDG_RUNTIME_DIR) {\n\t\tresult = join(XDG_RUNTIME_DIR, `vscode-ipc-${randomSuffix}.sock`);\n\t} else {\n\t\tresult = join(tmpdir(), `vscode-ipc-${randomSuffix}.sock`);\n\t}\n\n\t// Validate length\n\tvalidateIPCHandleLength(result);\n\n\treturn result;\n}\n\nexport function createStaticIPCHandle(directoryPath: string, type: string, version: string): string {\n\tconst scope = createHash('md5').update(directoryPath).digest('hex');\n\n\t// Windows: use named pipe\n\tif (process.platform === 'win32') {\n\t\treturn `\\\\\\\\.\\\\pipe\\\\${scope}-${version}-${type}-sock`;\n\t}\n\n\t// Mac/Unix: use socket file and prefer\n\t// XDG_RUNTIME_DIR over user data path\n\t// unless portable\n\tlet result: string;\n\tif (XDG_RUNTIME_DIR && !process.env['VSCODE_PORTABLE']) {\n\t\tresult = join(XDG_RUNTIME_DIR, `vscode-${scope.substr(0, 8)}-${version}-${type}.sock`);\n\t} else {\n\t\tresult = join(directoryPath, `${version}-${type}.sock`);\n\t}\n\n\t// Validate length\n\tvalidateIPCHandleLength(result);\n\n\treturn result;\n}\n\nfunction validateIPCHandleLength(handle: string): void {\n\tconst limit = safeIpcPathLengths[platform];\n\tif (typeof limit === 'number' && handle.length >= limit) {\n\t\t// https://nodejs.org/api/net.html#net_identifying_paths_for_ipc_connections\n\t\tconsole.warn(`WARNING: IPC handle \"${handle}\" is longer than ${limit} chars, try a shorter --user-data-dir`);\n\t}\n}\n\nexport class Server extends IPCServer {\n\n\tprivate static toClientConnectionEvent(server: NetServer): Event<ClientConnectionEvent> {\n\t\tconst onConnection = Event.fromNodeEventEmitter<Socket>(server, 'connection');\n\n\t\treturn Event.map(onConnection, socket => ({\n\t\t\tprotocol: new Protocol(new NodeSocket(socket)),\n\t\t\tonDidClientDisconnect: Event.once(Event.fromNodeEventEmitter<void>(socket, 'close'))\n\t\t}));\n\t}\n\n\tprivate server: NetServer | null;\n\n\tconstructor(server: NetServer) {\n\t\tsuper(Server.toClientConnectionEvent(server));\n\t\tthis.server = server;\n\t}\n\n\tdispose(): void {\n\t\tsuper.dispose();\n\t\tif (this.server) {\n\t\t\tthis.server.close();\n\t\t\tthis.server = null;\n\t\t}\n\t}\n}\n\nexport function serve(port: number): Promise<Server>;\nexport function serve(namedPipe: string): Promise<Server>;\nexport function serve(hook: any): Promise<Server> {\n\treturn new Promise<Server>((c, e) => {\n\t\tconst server = createServer();\n\n\t\tserver.on('error', e);\n\t\tserver.listen(hook, () => {\n\t\t\tserver.removeListener('error', e);\n\t\t\tc(new Server(server));\n\t\t});\n\t});\n}\n\nexport function connect(options: { host: string, port: number }, clientId: string): Promise<Client>;\nexport function connect(port: number, clientId: string): Promise<Client>;\nexport function connect(namedPipe: string, clientId: string): Promise<Client>;\nexport function connect(hook: any, clientId: string): Promise<Client> {\n\treturn new Promise<Client>((c, e) => {\n\t\tconst socket = createConnection(hook, () => {\n\t\t\tsocket.removeListener('error', e);\n\t\t\tc(Client.fromSocket(new NodeSocket(socket), clientId));\n\t\t});\n\n\t\tsocket.once('error', e);\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { IDisposable, Disposable } from 'vs/base/common/lifecycle';\nimport { Event, Emitter } from 'vs/base/common/event';\n\nexport interface ITelemetryData {\n\treadonly from?: string;\n\treadonly target?: string;\n\t[key: string]: any;\n}\n\nexport type WorkbenchActionExecutedClassification = {\n\tid: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\tfrom: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n};\n\nexport type WorkbenchActionExecutedEvent = {\n\tid: string;\n\tfrom: string;\n};\n\nexport interface IAction extends IDisposable {\n\treadonly id: string;\n\tlabel: string;\n\ttooltip: string;\n\tclass: string | undefined;\n\tenabled: boolean;\n\tchecked: boolean;\n\trun(event?: any): Promise<any>;\n}\n\nexport interface IActionRunner extends IDisposable {\n\trun(action: IAction, context?: any): Promise<any>;\n\treadonly onDidRun: Event<IRunEvent>;\n\treadonly onDidBeforeRun: Event<IRunEvent>;\n}\n\nexport interface IActionViewItem extends IDisposable {\n\tactionRunner: IActionRunner;\n\tsetActionContext(context: any): void;\n\trender(element: any /* HTMLElement */): void;\n\tisEnabled(): boolean;\n\tfocus(fromRight?: boolean): void; // TODO@isidorn what is this?\n\tblur(): void;\n}\n\nexport interface IActionViewItemProvider {\n\t(action: IAction): IActionViewItem | undefined;\n}\n\nexport interface IActionChangeEvent {\n\treadonly label?: string;\n\treadonly tooltip?: string;\n\treadonly class?: string;\n\treadonly enabled?: boolean;\n\treadonly checked?: boolean;\n}\n\nexport class Action extends Disposable implements IAction {\n\n\tprotected _onDidChange = this._register(new Emitter<IActionChangeEvent>());\n\treadonly onDidChange: Event<IActionChangeEvent> = this._onDidChange.event;\n\n\tprotected readonly _id: string;\n\tprotected _label: string;\n\tprotected _tooltip: string | undefined;\n\tprotected _cssClass: string | undefined;\n\tprotected _enabled: boolean = true;\n\tprotected _checked: boolean = false;\n\tprotected readonly _actionCallback?: (event?: any) => Promise<any>;\n\n\tconstructor(id: string, label: string = '', cssClass: string = '', enabled: boolean = true, actionCallback?: (event?: any) => Promise<any>) {\n\t\tsuper();\n\t\tthis._id = id;\n\t\tthis._label = label;\n\t\tthis._cssClass = cssClass;\n\t\tthis._enabled = enabled;\n\t\tthis._actionCallback = actionCallback;\n\t}\n\n\tget id(): string {\n\t\treturn this._id;\n\t}\n\n\tget label(): string {\n\t\treturn this._label;\n\t}\n\n\tset label(value: string) {\n\t\tthis._setLabel(value);\n\t}\n\n\tprivate _setLabel(value: string): void {\n\t\tif (this._label !== value) {\n\t\t\tthis._label = value;\n\t\t\tthis._onDidChange.fire({ label: value });\n\t\t}\n\t}\n\n\tget tooltip(): string {\n\t\treturn this._tooltip || '';\n\t}\n\n\tset tooltip(value: string) {\n\t\tthis._setTooltip(value);\n\t}\n\n\tprotected _setTooltip(value: string): void {\n\t\tif (this._tooltip !== value) {\n\t\t\tthis._tooltip = value;\n\t\t\tthis._onDidChange.fire({ tooltip: value });\n\t\t}\n\t}\n\n\tget class(): string | undefined {\n\t\treturn this._cssClass;\n\t}\n\n\tset class(value: string | undefined) {\n\t\tthis._setClass(value);\n\t}\n\n\tprotected _setClass(value: string | undefined): void {\n\t\tif (this._cssClass !== value) {\n\t\t\tthis._cssClass = value;\n\t\t\tthis._onDidChange.fire({ class: value });\n\t\t}\n\t}\n\n\tget enabled(): boolean {\n\t\treturn this._enabled;\n\t}\n\n\tset enabled(value: boolean) {\n\t\tthis._setEnabled(value);\n\t}\n\n\tprotected _setEnabled(value: boolean): void {\n\t\tif (this._enabled !== value) {\n\t\t\tthis._enabled = value;\n\t\t\tthis._onDidChange.fire({ enabled: value });\n\t\t}\n\t}\n\n\tget checked(): boolean {\n\t\treturn this._checked;\n\t}\n\n\tset checked(value: boolean) {\n\t\tthis._setChecked(value);\n\t}\n\n\tprotected _setChecked(value: boolean): void {\n\t\tif (this._checked !== value) {\n\t\t\tthis._checked = value;\n\t\t\tthis._onDidChange.fire({ checked: value });\n\t\t}\n\t}\n\n\trun(event?: any, _data?: ITelemetryData): Promise<any> {\n\t\tif (this._actionCallback) {\n\t\t\treturn this._actionCallback(event);\n\t\t}\n\n\t\treturn Promise.resolve(true);\n\t}\n}\n\nexport interface IRunEvent {\n\treadonly action: IAction;\n\treadonly result?: any;\n\treadonly error?: any;\n}\n\nexport class ActionRunner extends Disposable implements IActionRunner {\n\n\tprivate _onDidBeforeRun = this._register(new Emitter<IRunEvent>());\n\treadonly onDidBeforeRun: Event<IRunEvent> = this._onDidBeforeRun.event;\n\n\tprivate _onDidRun = this._register(new Emitter<IRunEvent>());\n\treadonly onDidRun: Event<IRunEvent> = this._onDidRun.event;\n\n\tasync run(action: IAction, context?: any): Promise<any> {\n\t\tif (!action.enabled) {\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\n\t\tthis._onDidBeforeRun.fire({ action: action });\n\n\t\ttry {\n\t\t\tconst result = await this.runAction(action, context);\n\t\t\tthis._onDidRun.fire({ action: action, result: result });\n\t\t} catch (error) {\n\t\t\tthis._onDidRun.fire({ action: action, error: error });\n\t\t}\n\t}\n\n\tprotected runAction(action: IAction, context?: any): Promise<any> {\n\t\tconst res = context ? action.run(context) : action.run();\n\t\treturn Promise.resolve(res);\n\t}\n}\n\nexport class RadioGroup extends Disposable {\n\n\tconstructor(readonly actions: Action[]) {\n\t\tsuper();\n\n\t\tfor (const action of actions) {\n\t\t\tthis._register(action.onDidChange(e => {\n\t\t\t\tif (e.checked && action.checked) {\n\t\t\t\t\tfor (const candidate of actions) {\n\t\t\t\t\t\tif (candidate !== action) {\n\t\t\t\t\t\t\tcandidate.checked = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\t}\n}\n\nexport class Separator extends Action {\n\n\tstatic readonly ID = 'vs.actions.separator';\n\n\tconstructor(label?: string) {\n\t\tsuper(Separator.ID, label, label ? 'separator text' : 'separator');\n\t\tthis.checked = false;\n\t\tthis.enabled = false;\n\t}\n}\n\nexport class SubmenuAction extends Action {\n\n\tget actions(): IAction[] {\n\t\treturn this._actions;\n\t}\n\n\tconstructor(id: string, label: string, private _actions: IAction[], cssClass?: string) {\n\t\tsuper(id, label, cssClass, true);\n\t}\n}\n\nexport class EmptySubmenuAction extends Action {\n\tstatic readonly ID = 'vs.actions.empty';\n\tconstructor() {\n\t\tsuper(EmptySubmenuAction.ID, nls.localize('submenu.empty', '(empty)'), undefined, false);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\n\nconst minute = 60;\nconst hour = minute * 60;\nconst day = hour * 24;\nconst week = day * 7;\nconst month = day * 30;\nconst year = day * 365;\n\nexport function fromNow(date: number | Date, appendAgoLabel?: boolean): string {\n\tif (typeof date !== 'number') {\n\t\tdate = date.getTime();\n\t}\n\n\tconst seconds = Math.round((new Date().getTime() - date) / 1000);\n\tif (seconds < -30) {\n\t\treturn localize('date.fromNow.in', 'in {0}', fromNow(new Date().getTime() + seconds * 1000, false));\n\t}\n\n\tif (seconds < 30) {\n\t\treturn localize('date.fromNow.now', 'now');\n\t}\n\n\tlet value: number;\n\tif (seconds < minute) {\n\t\tvalue = seconds;\n\n\t\tif (appendAgoLabel) {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.seconds.singular.ago', '{0} sec ago', value)\n\t\t\t\t: localize('date.fromNow.seconds.plural.ago', '{0} secs ago', value);\n\t\t} else {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.seconds.singular', '{0} sec', value)\n\t\t\t\t: localize('date.fromNow.seconds.plural', '{0} secs', value);\n\t\t}\n\t}\n\n\tif (seconds < hour) {\n\t\tvalue = Math.floor(seconds / minute);\n\t\tif (appendAgoLabel) {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.minutes.singular.ago', '{0} min ago', value)\n\t\t\t\t: localize('date.fromNow.minutes.plural.ago', '{0} mins ago', value);\n\t\t} else {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.minutes.singular', '{0} min', value)\n\t\t\t\t: localize('date.fromNow.minutes.plural', '{0} mins', value);\n\t\t}\n\t}\n\n\tif (seconds < day) {\n\t\tvalue = Math.floor(seconds / hour);\n\t\tif (appendAgoLabel) {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.hours.singular.ago', '{0} hr ago', value)\n\t\t\t\t: localize('date.fromNow.hours.plural.ago', '{0} hrs ago', value);\n\t\t} else {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.hours.singular', '{0} hr', value)\n\t\t\t\t: localize('date.fromNow.hours.plural', '{0} hrs', value);\n\t\t}\n\t}\n\n\tif (seconds < week) {\n\t\tvalue = Math.floor(seconds / day);\n\t\tif (appendAgoLabel) {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.days.singular.ago', '{0} day ago', value)\n\t\t\t\t: localize('date.fromNow.days.plural.ago', '{0} days ago', value);\n\t\t} else {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.days.singular', '{0} day', value)\n\t\t\t\t: localize('date.fromNow.days.plural', '{0} days', value);\n\t\t}\n\t}\n\n\tif (seconds < month) {\n\t\tvalue = Math.floor(seconds / week);\n\t\tif (appendAgoLabel) {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.weeks.singular.ago', '{0} wk ago', value)\n\t\t\t\t: localize('date.fromNow.weeks.plural.ago', '{0} wks ago', value);\n\t\t} else {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.weeks.singular', '{0} wk', value)\n\t\t\t\t: localize('date.fromNow.weeks.plural', '{0} wks', value);\n\t\t}\n\t}\n\n\tif (seconds < year) {\n\t\tvalue = Math.floor(seconds / month);\n\t\tif (appendAgoLabel) {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.months.singular.ago', '{0} mo ago', value)\n\t\t\t\t: localize('date.fromNow.months.plural.ago', '{0} mos ago', value);\n\t\t} else {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.months.singular', '{0} mo', value)\n\t\t\t\t: localize('date.fromNow.months.plural', '{0} mos', value);\n\t\t}\n\t}\n\n\tvalue = Math.floor(seconds / year);\n\tif (appendAgoLabel) {\n\t\treturn value === 1\n\t\t\t? localize('date.fromNow.years.singular.ago', '{0} yr ago', value)\n\t\t\t: localize('date.fromNow.years.plural.ago', '{0} yrs ago', value);\n\t} else {\n\t\treturn value === 1\n\t\t\t? localize('date.fromNow.years.singular', '{0} yr', value)\n\t\t\t: localize('date.fromNow.years.plural', '{0} yrs', value);\n\t}\n}\n\nexport function toLocalISOString(date: Date): string {\n\treturn date.getFullYear() +\n\t\t'-' + String(date.getMonth() + 1).padStart(2, '0') +\n\t\t'-' + String(date.getDate()).padStart(2, '0') +\n\t\t'T' + String(date.getHours()).padStart(2, '0') +\n\t\t':' + String(date.getMinutes()).padStart(2, '0') +\n\t\t':' + String(date.getSeconds()).padStart(2, '0') +\n\t\t'.' + (date.getMilliseconds() / 1000).toFixed(3).slice(2, 5) +\n\t\t'Z';\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as types from 'vs/base/common/types';\nimport * as arrays from 'vs/base/common/arrays';\n\nfunction exceptionToErrorMessage(exception: any, verbose: boolean): string {\n\tif (verbose && (exception.stack || exception.stacktrace)) {\n\t\treturn nls.localize('stackTrace.format', \"{0}: {1}\", detectSystemErrorMessage(exception), stackToString(exception.stack) || stackToString(exception.stacktrace));\n\t}\n\n\treturn detectSystemErrorMessage(exception);\n}\n\nfunction stackToString(stack: string[] | string | undefined): string | undefined {\n\tif (Array.isArray(stack)) {\n\t\treturn stack.join('\\n');\n\t}\n\n\treturn stack;\n}\n\nfunction detectSystemErrorMessage(exception: any): string {\n\n\t// See https://nodejs.org/api/errors.html#errors_class_system_error\n\tif (typeof exception.code === 'string' && typeof exception.errno === 'number' && typeof exception.syscall === 'string') {\n\t\treturn nls.localize('nodeExceptionMessage', \"A system error occurred ({0})\", exception.message);\n\t}\n\n\treturn exception.message || nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n}\n\n/**\n * Tries to generate a human readable error message out of the error. If the verbose parameter\n * is set to true, the error message will include stacktrace details if provided.\n *\n * @returns A string containing the error message.\n */\nexport function toErrorMessage(error: any = null, verbose: boolean = false): string {\n\tif (!error) {\n\t\treturn nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n\t}\n\n\tif (Array.isArray(error)) {\n\t\tconst errors: any[] = arrays.coalesce(error);\n\t\tconst msg = toErrorMessage(errors[0], verbose);\n\n\t\tif (errors.length > 1) {\n\t\t\treturn nls.localize('error.moreErrors', \"{0} ({1} errors in total)\", msg, errors.length);\n\t\t}\n\n\t\treturn msg;\n\t}\n\n\tif (types.isString(error)) {\n\t\treturn error;\n\t}\n\n\tif (error.detail) {\n\t\tconst detail = error.detail;\n\n\t\tif (detail.error) {\n\t\t\treturn exceptionToErrorMessage(detail.error, verbose);\n\t\t}\n\n\t\tif (detail.exception) {\n\t\t\treturn exceptionToErrorMessage(detail.exception, verbose);\n\t\t}\n\t}\n\n\tif (error.stack) {\n\t\treturn exceptionToErrorMessage(error, verbose);\n\t}\n\n\tif (error.message) {\n\t\treturn error.message;\n\t}\n\n\treturn nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Extracted from json.ts to keep json nls free.\n */\nimport { localize } from 'vs/nls';\nimport { ParseErrorCode } from './json';\n\nexport function getParseErrorMessage(errorCode: ParseErrorCode): string {\n\tswitch (errorCode) {\n\t\tcase ParseErrorCode.InvalidSymbol: return localize('error.invalidSymbol', 'Invalid symbol');\n\t\tcase ParseErrorCode.InvalidNumberFormat: return localize('error.invalidNumberFormat', 'Invalid number format');\n\t\tcase ParseErrorCode.PropertyNameExpected: return localize('error.propertyNameExpected', 'Property name expected');\n\t\tcase ParseErrorCode.ValueExpected: return localize('error.valueExpected', 'Value expected');\n\t\tcase ParseErrorCode.ColonExpected: return localize('error.colonExpected', 'Colon expected');\n\t\tcase ParseErrorCode.CommaExpected: return localize('error.commaExpected', 'Comma expected');\n\t\tcase ParseErrorCode.CloseBraceExpected: return localize('error.closeBraceExpected', 'Closing brace expected');\n\t\tcase ParseErrorCode.CloseBracketExpected: return localize('error.closeBracketExpected', 'Closing bracket expected');\n\t\tcase ParseErrorCode.EndOfFileExpected: return localize('error.endOfFileExpected', 'End of file expected');\n\t\tdefault:\n\t\t\treturn '';\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as path from 'vs/base/common/path';\nimport * as fs from 'fs';\nimport { promisify } from 'util';\nimport * as cp from 'child_process';\nimport * as nls from 'vs/nls';\nimport * as Types from 'vs/base/common/types';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport * as Objects from 'vs/base/common/objects';\nimport * as extpath from 'vs/base/common/extpath';\nimport * as Platform from 'vs/base/common/platform';\nimport { LineDecoder } from 'vs/base/node/decoder';\nimport { CommandOptions, ForkOptions, SuccessData, Source, TerminateResponse, TerminateResponseCode, Executable } from 'vs/base/common/processes';\nimport { FileAccess } from 'vs/base/common/network';\nexport { CommandOptions, ForkOptions, SuccessData, Source, TerminateResponse, TerminateResponseCode };\n\nexport type ValueCallback<T> = (value: T | Promise<T>) => void;\nexport type ErrorCallback = (error?: any) => void;\nexport type ProgressCallback<T> = (progress: T) => void;\n\nexport interface LineData {\n\tline: string;\n\tsource: Source;\n}\n\nfunction getWindowsCode(status: number): TerminateResponseCode {\n\tswitch (status) {\n\t\tcase 0:\n\t\t\treturn TerminateResponseCode.Success;\n\t\tcase 1:\n\t\t\treturn TerminateResponseCode.AccessDenied;\n\t\tcase 128:\n\t\t\treturn TerminateResponseCode.ProcessNotFound;\n\t\tdefault:\n\t\t\treturn TerminateResponseCode.Unknown;\n\t}\n}\n\nfunction terminateProcess(process: cp.ChildProcess, cwd?: string): Promise<TerminateResponse> {\n\tif (Platform.isWindows) {\n\t\ttry {\n\t\t\tconst options: any = {\n\t\t\t\tstdio: ['pipe', 'pipe', 'ignore']\n\t\t\t};\n\t\t\tif (cwd) {\n\t\t\t\toptions.cwd = cwd;\n\t\t\t}\n\t\t\tconst killProcess = cp.execFile('taskkill', ['/T', '/F', '/PID', process.pid.toString()], options);\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tkillProcess.once('error', (err) => {\n\t\t\t\t\tresolve({ success: false, error: err });\n\t\t\t\t});\n\t\t\t\tkillProcess.once('exit', (code, signal) => {\n\t\t\t\t\tif (code === 0) {\n\t\t\t\t\t\tresolve({ success: true });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve({ success: false, code: code !== null ? code : TerminateResponseCode.Unknown });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t} catch (err) {\n\t\t\treturn Promise.resolve({ success: false, error: err, code: err.status ? getWindowsCode(err.status) : TerminateResponseCode.Unknown });\n\t\t}\n\t} else if (Platform.isLinux || Platform.isMacintosh) {\n\t\ttry {\n\t\t\tconst cmd = FileAccess.asFileUri('vs/base/node/terminateProcess.sh', require).fsPath;\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tcp.execFile(cmd, [process.pid.toString()], { encoding: 'utf8', shell: true } as cp.ExecFileOptions, (err, stdout, stderr) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tresolve({ success: false, error: err });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve({ success: true });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t} catch (err) {\n\t\t\treturn Promise.resolve({ success: false, error: err });\n\t\t}\n\t} else {\n\t\tprocess.kill('SIGKILL');\n\t}\n\treturn Promise.resolve({ success: true });\n}\n\nexport function getWindowsShell(environment: Platform.IProcessEnvironment = process.env as Platform.IProcessEnvironment): string {\n\treturn environment['comspec'] || 'cmd.exe';\n}\n\nexport abstract class AbstractProcess<TProgressData> {\n\tprivate cmd: string;\n\tprivate args: string[];\n\tprivate options: CommandOptions | ForkOptions;\n\tprotected shell: boolean;\n\n\tprivate childProcess: cp.ChildProcess | null;\n\tprotected childProcessPromise: Promise<cp.ChildProcess> | null;\n\tprivate pidResolve: ValueCallback<number> | undefined;\n\tprotected terminateRequested: boolean;\n\n\tprivate static WellKnowCommands: IStringDictionary<boolean> = {\n\t\t'ant': true,\n\t\t'cmake': true,\n\t\t'eslint': true,\n\t\t'gradle': true,\n\t\t'grunt': true,\n\t\t'gulp': true,\n\t\t'jake': true,\n\t\t'jenkins': true,\n\t\t'jshint': true,\n\t\t'make': true,\n\t\t'maven': true,\n\t\t'msbuild': true,\n\t\t'msc': true,\n\t\t'nmake': true,\n\t\t'npm': true,\n\t\t'rake': true,\n\t\t'tsc': true,\n\t\t'xbuild': true\n\t};\n\n\tpublic constructor(executable: Executable);\n\tpublic constructor(cmd: string, args: string[] | undefined, shell: boolean, options: CommandOptions | undefined);\n\tpublic constructor(arg1: string | Executable, arg2?: string[], arg3?: boolean, arg4?: CommandOptions) {\n\t\tif (arg2 !== undefined && arg3 !== undefined && arg4 !== undefined) {\n\t\t\tthis.cmd = <string>arg1;\n\t\t\tthis.args = arg2;\n\t\t\tthis.shell = arg3;\n\t\t\tthis.options = arg4;\n\t\t} else {\n\t\t\tconst executable = <Executable>arg1;\n\t\t\tthis.cmd = executable.command;\n\t\t\tthis.shell = executable.isShellCommand;\n\t\t\tthis.args = executable.args.slice(0);\n\t\t\tthis.options = executable.options || {};\n\t\t}\n\n\t\tthis.childProcess = null;\n\t\tthis.childProcessPromise = null;\n\t\tthis.terminateRequested = false;\n\n\t\tif (this.options.env) {\n\t\t\tconst newEnv: IStringDictionary<string> = Object.create(null);\n\t\t\tObject.keys(process.env).forEach((key) => {\n\t\t\t\tnewEnv[key] = process.env[key]!;\n\t\t\t});\n\t\t\tObject.keys(this.options.env).forEach((key) => {\n\t\t\t\tnewEnv[key] = this.options.env![key]!;\n\t\t\t});\n\t\t\tthis.options.env = newEnv;\n\t\t}\n\t}\n\n\tpublic getSanitizedCommand(): string {\n\t\tlet result = this.cmd.toLowerCase();\n\t\tconst index = result.lastIndexOf(path.sep);\n\t\tif (index !== -1) {\n\t\t\tresult = result.substring(index + 1);\n\t\t}\n\t\tif (AbstractProcess.WellKnowCommands[result]) {\n\t\t\treturn result;\n\t\t}\n\t\treturn 'other';\n\t}\n\n\tpublic start(pp: ProgressCallback<TProgressData>): Promise<SuccessData> {\n\t\tif (Platform.isWindows && ((this.options && this.options.cwd && extpath.isUNC(this.options.cwd)) || !this.options && extpath.isUNC(process.cwd()))) {\n\t\t\treturn Promise.reject(new Error(nls.localize('TaskRunner.UNC', 'Can\\'t execute a shell command on a UNC drive.')));\n\t\t}\n\t\treturn this.useExec().then((useExec) => {\n\t\t\tlet cc: ValueCallback<SuccessData>;\n\t\t\tlet ee: ErrorCallback;\n\t\t\tconst result = new Promise<any>((c, e) => {\n\t\t\t\tcc = c;\n\t\t\t\tee = e;\n\t\t\t});\n\n\t\t\tif (useExec) {\n\t\t\t\tlet cmd: string = this.cmd;\n\t\t\t\tif (this.args) {\n\t\t\t\t\tcmd = cmd + ' ' + this.args.join(' ');\n\t\t\t\t}\n\t\t\t\tthis.childProcess = cp.exec(cmd, this.options, (error, stdout, stderr) => {\n\t\t\t\t\tthis.childProcess = null;\n\t\t\t\t\tconst err: any = error;\n\t\t\t\t\t// This is tricky since executing a command shell reports error back in case the executed command return an\n\t\t\t\t\t// error or the command didn't exist at all. So we can't blindly treat an error as a failed command. So we\n\t\t\t\t\t// always parse the output and report success unless the job got killed.\n\t\t\t\t\tif (err && err.killed) {\n\t\t\t\t\t\tee({ killed: this.terminateRequested, stdout: stdout.toString(), stderr: stderr.toString() });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.handleExec(cc, pp, error, stdout as any, stderr as any);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tlet childProcess: cp.ChildProcess | null = null;\n\t\t\t\tconst closeHandler = (data: any) => {\n\t\t\t\t\tthis.childProcess = null;\n\t\t\t\t\tthis.childProcessPromise = null;\n\t\t\t\t\tthis.handleClose(data, cc, pp, ee);\n\t\t\t\t\tconst result: SuccessData = {\n\t\t\t\t\t\tterminated: this.terminateRequested\n\t\t\t\t\t};\n\t\t\t\t\tif (Types.isNumber(data)) {\n\t\t\t\t\t\tresult.cmdCode = <number>data;\n\t\t\t\t\t}\n\t\t\t\t\tcc(result);\n\t\t\t\t};\n\t\t\t\tif (this.shell && Platform.isWindows) {\n\t\t\t\t\tconst options: any = Objects.deepClone(this.options);\n\t\t\t\t\toptions.windowsVerbatimArguments = true;\n\t\t\t\t\toptions.detached = false;\n\t\t\t\t\tlet quotedCommand: boolean = false;\n\t\t\t\t\tlet quotedArg: boolean = false;\n\t\t\t\t\tconst commandLine: string[] = [];\n\t\t\t\t\tlet quoted = this.ensureQuotes(this.cmd);\n\t\t\t\t\tcommandLine.push(quoted.value);\n\t\t\t\t\tquotedCommand = quoted.quoted;\n\t\t\t\t\tif (this.args) {\n\t\t\t\t\t\tthis.args.forEach((elem) => {\n\t\t\t\t\t\t\tquoted = this.ensureQuotes(elem);\n\t\t\t\t\t\t\tcommandLine.push(quoted.value);\n\t\t\t\t\t\t\tquotedArg = quotedArg && quoted.quoted;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tconst args: string[] = [\n\t\t\t\t\t\t'/s',\n\t\t\t\t\t\t'/c',\n\t\t\t\t\t];\n\t\t\t\t\tif (quotedCommand) {\n\t\t\t\t\t\tif (quotedArg) {\n\t\t\t\t\t\t\targs.push('\"' + commandLine.join(' ') + '\"');\n\t\t\t\t\t\t} else if (commandLine.length > 1) {\n\t\t\t\t\t\t\targs.push('\"' + commandLine[0] + '\"' + ' ' + commandLine.slice(1).join(' '));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\targs.push('\"' + commandLine[0] + '\"');\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\targs.push(commandLine.join(' '));\n\t\t\t\t\t}\n\t\t\t\t\tchildProcess = cp.spawn(getWindowsShell(), args, options);\n\t\t\t\t} else {\n\t\t\t\t\tif (this.cmd) {\n\t\t\t\t\t\tchildProcess = cp.spawn(this.cmd, this.args, this.options);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (childProcess) {\n\t\t\t\t\tthis.childProcess = childProcess;\n\t\t\t\t\tthis.childProcessPromise = Promise.resolve(childProcess);\n\t\t\t\t\tif (this.pidResolve) {\n\t\t\t\t\t\tthis.pidResolve(Types.isNumber(childProcess.pid) ? childProcess.pid : -1);\n\t\t\t\t\t\tthis.pidResolve = undefined;\n\t\t\t\t\t}\n\t\t\t\t\tchildProcess.on('error', (error: Error) => {\n\t\t\t\t\t\tthis.childProcess = null;\n\t\t\t\t\t\tee({ terminated: this.terminateRequested, error: error });\n\t\t\t\t\t});\n\t\t\t\t\tif (childProcess.pid) {\n\t\t\t\t\t\tthis.childProcess.on('close', closeHandler);\n\t\t\t\t\t\tthis.handleSpawn(childProcess, cc!, pp, ee!, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t});\n\t}\n\n\tprotected abstract handleExec(cc: ValueCallback<SuccessData>, pp: ProgressCallback<TProgressData>, error: Error | null, stdout: Buffer, stderr: Buffer): void;\n\tprotected abstract handleSpawn(childProcess: cp.ChildProcess, cc: ValueCallback<SuccessData>, pp: ProgressCallback<TProgressData>, ee: ErrorCallback, sync: boolean): void;\n\n\tprotected handleClose(data: any, cc: ValueCallback<SuccessData>, pp: ProgressCallback<TProgressData>, ee: ErrorCallback): void {\n\t\t// Default is to do nothing.\n\t}\n\n\tprivate static readonly regexp = /^[^\"].* .*[^\"]/;\n\tprivate ensureQuotes(value: string) {\n\t\tif (AbstractProcess.regexp.test(value)) {\n\t\t\treturn {\n\t\t\t\tvalue: '\"' + value + '\"', //`\"${value}\"`,\n\t\t\t\tquoted: true\n\t\t\t};\n\t\t} else {\n\t\t\treturn {\n\t\t\t\tvalue: value,\n\t\t\t\tquoted: value.length > 0 && value[0] === '\"' && value[value.length - 1] === '\"'\n\t\t\t};\n\t\t}\n\t}\n\n\tpublic get pid(): Promise<number> {\n\t\tif (this.childProcessPromise) {\n\t\t\treturn this.childProcessPromise.then(childProcess => childProcess.pid, err => -1);\n\t\t} else {\n\t\t\treturn new Promise<number>((resolve) => {\n\t\t\t\tthis.pidResolve = resolve;\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic terminate(): Promise<TerminateResponse> {\n\t\tif (!this.childProcessPromise) {\n\t\t\treturn Promise.resolve<TerminateResponse>({ success: true });\n\t\t}\n\t\treturn this.childProcessPromise.then((childProcess) => {\n\t\t\tthis.terminateRequested = true;\n\t\t\treturn terminateProcess(childProcess, this.options.cwd).then(response => {\n\t\t\t\tif (response.success) {\n\t\t\t\t\tthis.childProcess = null;\n\t\t\t\t}\n\t\t\t\treturn response;\n\t\t\t});\n\t\t}, (err) => {\n\t\t\treturn { success: true };\n\t\t});\n\t}\n\n\tprivate useExec(): Promise<boolean> {\n\t\treturn new Promise<boolean>(resolve => {\n\t\t\tif (!this.shell || !Platform.isWindows) {\n\t\t\t\treturn resolve(false);\n\t\t\t}\n\t\t\tconst cmdShell = cp.spawn(getWindowsShell(), ['/s', '/c']);\n\t\t\tcmdShell.on('error', (error: Error) => {\n\t\t\t\treturn resolve(true);\n\t\t\t});\n\t\t\tcmdShell.on('exit', (data: any) => {\n\t\t\t\treturn resolve(false);\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport class LineProcess extends AbstractProcess<LineData> {\n\n\tprivate stdoutLineDecoder: LineDecoder | null;\n\tprivate stderrLineDecoder: LineDecoder | null;\n\n\tpublic constructor(executable: Executable);\n\tpublic constructor(cmd: string, args: string[], shell: boolean, options: CommandOptions);\n\tpublic constructor(arg1: string | Executable, arg2?: string[], arg3?: boolean | ForkOptions, arg4?: CommandOptions) {\n\t\tsuper(<any>arg1, arg2, <any>arg3, arg4);\n\n\t\tthis.stdoutLineDecoder = null;\n\t\tthis.stderrLineDecoder = null;\n\t}\n\n\tprotected handleExec(cc: ValueCallback<SuccessData>, pp: ProgressCallback<LineData>, error: Error, stdout: Buffer, stderr: Buffer) {\n\t\t[stdout, stderr].forEach((buffer: Buffer, index: number) => {\n\t\t\tconst lineDecoder = new LineDecoder();\n\t\t\tconst lines = lineDecoder.write(buffer);\n\t\t\tlines.forEach((line) => {\n\t\t\t\tpp({ line: line, source: index === 0 ? Source.stdout : Source.stderr });\n\t\t\t});\n\t\t\tconst line = lineDecoder.end();\n\t\t\tif (line) {\n\t\t\t\tpp({ line: line, source: index === 0 ? Source.stdout : Source.stderr });\n\t\t\t}\n\t\t});\n\t\tcc({ terminated: this.terminateRequested, error: error });\n\t}\n\n\tprotected handleSpawn(childProcess: cp.ChildProcess, cc: ValueCallback<SuccessData>, pp: ProgressCallback<LineData>, ee: ErrorCallback, sync: boolean): void {\n\t\tconst stdoutLineDecoder = new LineDecoder();\n\t\tconst stderrLineDecoder = new LineDecoder();\n\t\tchildProcess.stdout!.on('data', (data: Buffer) => {\n\t\t\tconst lines = stdoutLineDecoder.write(data);\n\t\t\tlines.forEach(line => pp({ line: line, source: Source.stdout }));\n\t\t});\n\t\tchildProcess.stderr!.on('data', (data: Buffer) => {\n\t\t\tconst lines = stderrLineDecoder.write(data);\n\t\t\tlines.forEach(line => pp({ line: line, source: Source.stderr }));\n\t\t});\n\n\t\tthis.stdoutLineDecoder = stdoutLineDecoder;\n\t\tthis.stderrLineDecoder = stderrLineDecoder;\n\t}\n\n\tprotected handleClose(data: any, cc: ValueCallback<SuccessData>, pp: ProgressCallback<LineData>, ee: ErrorCallback): void {\n\t\tconst stdoutLine = this.stdoutLineDecoder ? this.stdoutLineDecoder.end() : null;\n\t\tif (stdoutLine) {\n\t\t\tpp({ line: stdoutLine, source: Source.stdout });\n\t\t}\n\t\tconst stderrLine = this.stderrLineDecoder ? this.stderrLineDecoder.end() : null;\n\t\tif (stderrLine) {\n\t\t\tpp({ line: stderrLine, source: Source.stderr });\n\t\t}\n\t}\n}\n\nexport interface IQueuedSender {\n\tsend: (msg: any) => void;\n}\n\n// Wrapper around process.send() that will queue any messages if the internal node.js\n// queue is filled with messages and only continue sending messages when the internal\n// queue is free again to consume messages.\n// On Windows we always wait for the send() method to return before sending the next message\n// to workaround https://github.com/nodejs/node/issues/7657 (IPC can freeze process)\nexport function createQueuedSender(childProcess: cp.ChildProcess): IQueuedSender {\n\tlet msgQueue: string[] = [];\n\tlet useQueue = false;\n\n\tconst send = function (msg: any): void {\n\t\tif (useQueue) {\n\t\t\tmsgQueue.push(msg); // add to the queue if the process cannot handle more messages\n\t\t\treturn;\n\t\t}\n\n\t\tconst result = childProcess.send(msg, (error: Error | null) => {\n\t\t\tif (error) {\n\t\t\t\tconsole.error(error); // unlikely to happen, best we can do is log this error\n\t\t\t}\n\n\t\t\tuseQueue = false; // we are good again to send directly without queue\n\n\t\t\t// now send all the messages that we have in our queue and did not send yet\n\t\t\tif (msgQueue.length > 0) {\n\t\t\t\tconst msgQueueCopy = msgQueue.slice(0);\n\t\t\t\tmsgQueue = [];\n\t\t\t\tmsgQueueCopy.forEach(entry => send(entry));\n\t\t\t}\n\t\t});\n\n\t\tif (!result || Platform.isWindows /* workaround https://github.com/nodejs/node/issues/7657 */) {\n\t\t\tuseQueue = true;\n\t\t}\n\t};\n\n\treturn { send };\n}\n\nexport namespace win32 {\n\texport async function findExecutable(command: string, cwd?: string, paths?: string[]): Promise<string> {\n\t\t// If we have an absolute path then we take it.\n\t\tif (path.isAbsolute(command)) {\n\t\t\treturn command;\n\t\t}\n\t\tif (cwd === undefined) {\n\t\t\tcwd = process.cwd();\n\t\t}\n\t\tconst dir = path.dirname(command);\n\t\tif (dir !== '.') {\n\t\t\t// We have a directory and the directory is relative (see above). Make the path absolute\n\t\t\t// to the current working directory.\n\t\t\treturn path.join(cwd, command);\n\t\t}\n\t\tif (paths === undefined && Types.isString(process.env.PATH)) {\n\t\t\tpaths = process.env.PATH.split(path.delimiter);\n\t\t}\n\t\t// No PATH environment. Make path absolute to the cwd.\n\t\tif (paths === undefined || paths.length === 0) {\n\t\t\treturn path.join(cwd, command);\n\t\t}\n\n\t\tasync function fileExists(path: string): Promise<boolean> {\n\t\t\tif (await promisify(fs.exists)(path)) {\n\t\t\t\treturn !((await promisify(fs.stat)(path)).isDirectory());\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\t// We have a simple file name. We get the path variable from the env\n\t\t// and try to find the executable on the path.\n\t\tfor (let pathEntry of paths) {\n\t\t\t// The path entry is absolute.\n\t\t\tlet fullPath: string;\n\t\t\tif (path.isAbsolute(pathEntry)) {\n\t\t\t\tfullPath = path.join(pathEntry, command);\n\t\t\t} else {\n\t\t\t\tfullPath = path.join(cwd, pathEntry, command);\n\t\t\t}\n\t\t\tif (await fileExists(fullPath)) {\n\t\t\t\treturn fullPath;\n\t\t\t}\n\t\t\tlet withExtension = fullPath + '.com';\n\t\t\tif (await fileExists(withExtension)) {\n\t\t\t\treturn withExtension;\n\t\t\t}\n\t\t\twithExtension = fullPath + '.exe';\n\t\t\tif (await fileExists(withExtension)) {\n\t\t\t\treturn withExtension;\n\t\t\t}\n\t\t}\n\t\treturn path.join(cwd, command);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ChildProcess, fork, ForkOptions } from 'child_process';\nimport { IDisposable, toDisposable, dispose } from 'vs/base/common/lifecycle';\nimport { Delayer, createCancelablePromise } from 'vs/base/common/async';\nimport { deepClone } from 'vs/base/common/objects';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { createQueuedSender } from 'vs/base/node/processes';\nimport { IChannel, ChannelServer as IPCServer, ChannelClient as IPCClient, IChannelClient } from 'vs/base/parts/ipc/common/ipc';\nimport { isRemoteConsoleLog, log } from 'vs/base/common/console';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport * as errors from 'vs/base/common/errors';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { isMacintosh } from 'vs/base/common/platform';\n\n/**\n * This implementation doesn't perform well since it uses base64 encoding for buffers.\n * We should move all implementations to use named ipc.net, so we stop depending on cp.fork.\n */\n\nexport class Server<TContext extends string> extends IPCServer<TContext> {\n\tconstructor(ctx: TContext) {\n\t\tsuper({\n\t\t\tsend: r => {\n\t\t\t\ttry {\n\t\t\t\t\tif (process.send) {\n\t\t\t\t\t\tprocess.send((<Buffer>r.buffer).toString('base64'));\n\t\t\t\t\t}\n\t\t\t\t} catch (e) { /* not much to do */ }\n\t\t\t},\n\t\t\tonMessage: Event.fromNodeEventEmitter(process, 'message', msg => VSBuffer.wrap(Buffer.from(msg, 'base64')))\n\t\t}, ctx);\n\n\t\tprocess.once('disconnect', () => this.dispose());\n\t}\n}\n\nexport interface IIPCOptions {\n\n\t/**\n\t * A descriptive name for the server this connection is to. Used in logging.\n\t */\n\tserverName: string;\n\n\t/**\n\t * Time in millies before killing the ipc process. The next request after killing will start it again.\n\t */\n\ttimeout?: number;\n\n\t/**\n\t * Arguments to the module to execute.\n\t */\n\targs?: string[];\n\n\t/**\n\t * Environment key-value pairs to be passed to the process that gets spawned for the ipc.\n\t */\n\tenv?: any;\n\n\t/**\n\t * Allows to assign a debug port for debugging the application executed.\n\t */\n\tdebug?: number;\n\n\t/**\n\t * Allows to assign a debug port for debugging the application and breaking it on the first line.\n\t */\n\tdebugBrk?: number;\n\n\t/**\n\t * See https://github.com/microsoft/vscode/issues/27665\n\t * Allows to pass in fresh execArgv to the forked process such that it doesn't inherit them from `process.execArgv`.\n\t * e.g. Launching the extension host process with `--inspect-brk=xxx` and then forking a process from the extension host\n\t * results in the forked process inheriting `--inspect-brk=xxx`.\n\t */\n\tfreshExecArgv?: boolean;\n\n\t/**\n\t * Enables our createQueuedSender helper for this Client. Uses a queue when the internal Node.js queue is\n\t * full of messages - see notes on that method.\n\t */\n\tuseQueue?: boolean;\n}\n\nexport class Client implements IChannelClient, IDisposable {\n\n\tprivate disposeDelayer: Delayer<void> | undefined;\n\tprivate activeRequests = new Set<IDisposable>();\n\tprivate child: ChildProcess | null;\n\tprivate _client: IPCClient | null;\n\tprivate channels = new Map<string, IChannel>();\n\n\tprivate readonly _onDidProcessExit = new Emitter<{ code: number, signal: string }>();\n\treadonly onDidProcessExit = this._onDidProcessExit.event;\n\n\tconstructor(private modulePath: string, private options: IIPCOptions) {\n\t\tconst timeout = options && options.timeout ? options.timeout : 60000;\n\t\tthis.disposeDelayer = new Delayer<void>(timeout);\n\t\tthis.child = null;\n\t\tthis._client = null;\n\t}\n\n\tgetChannel<T extends IChannel>(channelName: string): T {\n\t\tconst that = this;\n\n\t\treturn {\n\t\t\tcall<T>(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\t\treturn that.requestPromise<T>(channelName, command, arg, cancellationToken);\n\t\t\t},\n\t\t\tlisten(event: string, arg?: any) {\n\t\t\t\treturn that.requestEvent(channelName, event, arg);\n\t\t\t}\n\t\t} as T;\n\t}\n\n\tprotected requestPromise<T>(channelName: string, name: string, arg?: any, cancellationToken = CancellationToken.None): Promise<T> {\n\t\tif (!this.disposeDelayer) {\n\t\t\treturn Promise.reject(new Error('disposed'));\n\t\t}\n\n\t\tif (cancellationToken.isCancellationRequested) {\n\t\t\treturn Promise.reject(errors.canceled());\n\t\t}\n\n\t\tthis.disposeDelayer.cancel();\n\n\t\tconst channel = this.getCachedChannel(channelName);\n\t\tconst result = createCancelablePromise(token => channel.call<T>(name, arg, token));\n\t\tconst cancellationTokenListener = cancellationToken.onCancellationRequested(() => result.cancel());\n\n\t\tconst disposable = toDisposable(() => result.cancel());\n\t\tthis.activeRequests.add(disposable);\n\n\t\tresult.finally(() => {\n\t\t\tcancellationTokenListener.dispose();\n\t\t\tthis.activeRequests.delete(disposable);\n\n\t\t\tif (this.activeRequests.size === 0 && this.disposeDelayer) {\n\t\t\t\tthis.disposeDelayer.trigger(() => this.disposeClient());\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tprotected requestEvent<T>(channelName: string, name: string, arg?: any): Event<T> {\n\t\tif (!this.disposeDelayer) {\n\t\t\treturn Event.None;\n\t\t}\n\n\t\tthis.disposeDelayer.cancel();\n\n\t\tlet listener: IDisposable;\n\t\tconst emitter = new Emitter<any>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tconst channel = this.getCachedChannel(channelName);\n\t\t\t\tconst event: Event<T> = channel.listen(name, arg);\n\n\t\t\t\tlistener = event(emitter.fire, emitter);\n\t\t\t\tthis.activeRequests.add(listener);\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tthis.activeRequests.delete(listener);\n\t\t\t\tlistener.dispose();\n\n\t\t\t\tif (this.activeRequests.size === 0 && this.disposeDelayer) {\n\t\t\t\t\tthis.disposeDelayer.trigger(() => this.disposeClient());\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\tprivate get client(): IPCClient {\n\t\tif (!this._client) {\n\t\t\tconst args = this.options && this.options.args ? this.options.args : [];\n\t\t\tconst forkOpts: ForkOptions = Object.create(null);\n\n\t\t\tforkOpts.env = { ...deepClone(process.env), 'VSCODE_PARENT_PID': String(process.pid) };\n\n\t\t\tif (this.options && this.options.env) {\n\t\t\t\tforkOpts.env = { ...forkOpts.env, ...this.options.env };\n\t\t\t}\n\n\t\t\tif (this.options && this.options.freshExecArgv) {\n\t\t\t\tforkOpts.execArgv = [];\n\t\t\t}\n\n\t\t\tif (this.options && typeof this.options.debug === 'number') {\n\t\t\t\tforkOpts.execArgv = ['--nolazy', '--inspect=' + this.options.debug];\n\t\t\t}\n\n\t\t\tif (this.options && typeof this.options.debugBrk === 'number') {\n\t\t\t\tforkOpts.execArgv = ['--nolazy', '--inspect-brk=' + this.options.debugBrk];\n\t\t\t}\n\n\t\t\tif (isMacintosh && forkOpts.env) {\n\t\t\t\t// Unset `DYLD_LIBRARY_PATH`, as it leads to process crashes\n\t\t\t\t// See https://github.com/microsoft/vscode/issues/105848\n\t\t\t\tdelete forkOpts.env['DYLD_LIBRARY_PATH'];\n\t\t\t}\n\n\t\t\tthis.child = fork(this.modulePath, args, forkOpts);\n\n\t\t\tconst onMessageEmitter = new Emitter<VSBuffer>();\n\t\t\tconst onRawMessage = Event.fromNodeEventEmitter(this.child, 'message', msg => msg);\n\n\t\t\tonRawMessage(msg => {\n\n\t\t\t\t// Handle remote console logs specially\n\t\t\t\tif (isRemoteConsoleLog(msg)) {\n\t\t\t\t\tlog(msg, `IPC Library: ${this.options.serverName}`);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Anything else goes to the outside\n\t\t\t\tonMessageEmitter.fire(VSBuffer.wrap(Buffer.from(msg, 'base64')));\n\t\t\t});\n\n\t\t\tconst sender = this.options.useQueue ? createQueuedSender(this.child) : this.child;\n\t\t\tconst send = (r: VSBuffer) => this.child && this.child.connected && sender.send((<Buffer>r.buffer).toString('base64'));\n\t\t\tconst onMessage = onMessageEmitter.event;\n\t\t\tconst protocol = { send, onMessage };\n\n\t\t\tthis._client = new IPCClient(protocol);\n\n\t\t\tconst onExit = () => this.disposeClient();\n\t\t\tprocess.once('exit', onExit);\n\n\t\t\tthis.child.on('error', err => console.warn('IPC \"' + this.options.serverName + '\" errored with ' + err));\n\n\t\t\tthis.child.on('exit', (code: any, signal: any) => {\n\t\t\t\tprocess.removeListener('exit' as 'loaded', onExit); // https://github.com/electron/electron/issues/21475\n\n\t\t\t\tthis.activeRequests.forEach(r => dispose(r));\n\t\t\t\tthis.activeRequests.clear();\n\n\t\t\t\tif (code !== 0 && signal !== 'SIGTERM') {\n\t\t\t\t\tconsole.warn('IPC \"' + this.options.serverName + '\" crashed with exit code ' + code + ' and signal ' + signal);\n\t\t\t\t}\n\n\t\t\t\tif (this.disposeDelayer) {\n\t\t\t\t\tthis.disposeDelayer.cancel();\n\t\t\t\t}\n\t\t\t\tthis.disposeClient();\n\t\t\t\tthis._onDidProcessExit.fire({ code, signal });\n\t\t\t});\n\t\t}\n\n\t\treturn this._client;\n\t}\n\n\tprivate getCachedChannel(name: string): IChannel {\n\t\tlet channel = this.channels.get(name);\n\n\t\tif (!channel) {\n\t\t\tchannel = this.client.getChannel(name);\n\t\t\tthis.channels.set(name, channel);\n\t\t}\n\n\t\treturn channel;\n\t}\n\n\tprivate disposeClient() {\n\t\tif (this._client) {\n\t\t\tif (this.child) {\n\t\t\t\tthis.child.kill();\n\t\t\t\tthis.child = null;\n\t\t\t}\n\t\t\tthis._client = null;\n\t\t\tthis.channels.clear();\n\t\t}\n\t}\n\n\tdispose() {\n\t\tthis._onDidProcessExit.dispose();\n\t\tif (this.disposeDelayer) {\n\t\t\tthis.disposeDelayer.cancel();\n\t\t\tthis.disposeDelayer = undefined;\n\t\t}\n\t\tthis.disposeClient();\n\t\tthis.activeRequests.clear();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServerChannel, IChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IReloadSessionEvent, ICloseSessionEvent, IAttachSessionEvent, ILogToSessionEvent, ITerminateSessionEvent, IExtensionHostDebugService, IOpenExtensionWindowResult } from 'vs/platform/debug/common/extensionHostDebug';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { IRemoteConsoleLog } from 'vs/base/common/console';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IProcessEnvironment } from 'vs/base/common/platform';\n\nexport class ExtensionHostDebugBroadcastChannel<TContext> implements IServerChannel<TContext> {\n\n\tstatic readonly ChannelName = 'extensionhostdebugservice';\n\n\tprivate readonly _onCloseEmitter = new Emitter<ICloseSessionEvent>();\n\tprivate readonly _onReloadEmitter = new Emitter<IReloadSessionEvent>();\n\tprivate readonly _onTerminateEmitter = new Emitter<ITerminateSessionEvent>();\n\tprivate readonly _onLogToEmitter = new Emitter<ILogToSessionEvent>();\n\tprivate readonly _onAttachEmitter = new Emitter<IAttachSessionEvent>();\n\n\tcall(ctx: TContext, command: string, arg?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'close':\n\t\t\t\treturn Promise.resolve(this._onCloseEmitter.fire({ sessionId: arg[0] }));\n\t\t\tcase 'reload':\n\t\t\t\treturn Promise.resolve(this._onReloadEmitter.fire({ sessionId: arg[0] }));\n\t\t\tcase 'terminate':\n\t\t\t\treturn Promise.resolve(this._onTerminateEmitter.fire({ sessionId: arg[0] }));\n\t\t\tcase 'log':\n\t\t\t\treturn Promise.resolve(this._onLogToEmitter.fire({ sessionId: arg[0], log: arg[1] }));\n\t\t\tcase 'attach':\n\t\t\t\treturn Promise.resolve(this._onAttachEmitter.fire({ sessionId: arg[0], port: arg[1], subId: arg[2] }));\n\t\t}\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tlisten(ctx: TContext, event: string, arg?: any): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase 'close':\n\t\t\t\treturn this._onCloseEmitter.event;\n\t\t\tcase 'reload':\n\t\t\t\treturn this._onReloadEmitter.event;\n\t\t\tcase 'terminate':\n\t\t\t\treturn this._onTerminateEmitter.event;\n\t\t\tcase 'log':\n\t\t\t\treturn this._onLogToEmitter.event;\n\t\t\tcase 'attach':\n\t\t\t\treturn this._onAttachEmitter.event;\n\t\t}\n\t\tthrow new Error('Method not implemented.');\n\t}\n}\n\nexport class ExtensionHostDebugChannelClient extends Disposable implements IExtensionHostDebugService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(private channel: IChannel) {\n\t\tsuper();\n\t}\n\n\treload(sessionId: string): void {\n\t\tthis.channel.call('reload', [sessionId]);\n\t}\n\n\tget onReload(): Event<IReloadSessionEvent> {\n\t\treturn this.channel.listen('reload');\n\t}\n\n\tclose(sessionId: string): void {\n\t\tthis.channel.call('close', [sessionId]);\n\t}\n\n\tget onClose(): Event<ICloseSessionEvent> {\n\t\treturn this.channel.listen('close');\n\t}\n\n\tattachSession(sessionId: string, port: number, subId?: string): void {\n\t\tthis.channel.call('attach', [sessionId, port, subId]);\n\t}\n\n\tget onAttachSession(): Event<IAttachSessionEvent> {\n\t\treturn this.channel.listen('attach');\n\t}\n\n\tlogToSession(sessionId: string, log: IRemoteConsoleLog): void {\n\t\tthis.channel.call('log', [sessionId, log]);\n\t}\n\n\tget onLogToSession(): Event<ILogToSessionEvent> {\n\t\treturn this.channel.listen('log');\n\t}\n\n\tterminateSession(sessionId: string, subId?: string): void {\n\t\tthis.channel.call('terminate', [sessionId, subId]);\n\t}\n\n\tget onTerminateSession(): Event<ITerminateSessionEvent> {\n\t\treturn this.channel.listen('terminate');\n\t}\n\n\topenExtensionDevelopmentHostWindow(args: string[], env: IProcessEnvironment, debugRenderer: boolean): Promise<IOpenExtensionWindowResult> {\n\t\treturn this.channel.call('openExtensionDevelopmentHostWindow', [args, env, debugRenderer]);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IExtensionManagementService, ILocalExtension, InstallExtensionEvent, DidInstallExtensionEvent, IGalleryExtension, DidUninstallExtensionEvent, IExtensionIdentifier, IGalleryMetadata, IReportedExtension, IExtensionTipsService, InstallOptions } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { Event } from 'vs/base/common/event';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { IURITransformer, DefaultURITransformer, transformAndReviveIncomingURIs } from 'vs/base/common/uriIpc';\nimport { cloneAndChange } from 'vs/base/common/objects';\nimport { ExtensionType, IExtensionManifest } from 'vs/platform/extensions/common/extensions';\n\nfunction transformIncomingURI(uri: UriComponents, transformer: IURITransformer | null): URI {\n\treturn URI.revive(transformer ? transformer.transformIncoming(uri) : uri);\n}\n\nfunction transformOutgoingURI(uri: URI, transformer: IURITransformer | null): URI {\n\treturn transformer ? transformer.transformOutgoingURI(uri) : uri;\n}\n\nfunction transformIncomingExtension(extension: ILocalExtension, transformer: IURITransformer | null): ILocalExtension {\n\ttransformer = transformer ? transformer : DefaultURITransformer;\n\tconst manifest = extension.manifest;\n\tconst transformed = transformAndReviveIncomingURIs({ ...extension, ...{ manifest: undefined } }, transformer);\n\treturn { ...transformed, ...{ manifest } };\n}\n\nfunction transformOutgoingExtension(extension: ILocalExtension, transformer: IURITransformer | null): ILocalExtension {\n\treturn transformer ? cloneAndChange(extension, value => value instanceof URI ? transformer.transformOutgoingURI(value) : undefined) : extension;\n}\n\nexport class ExtensionManagementChannel implements IServerChannel {\n\n\tonInstallExtension: Event<InstallExtensionEvent>;\n\tonDidInstallExtension: Event<DidInstallExtensionEvent>;\n\tonUninstallExtension: Event<IExtensionIdentifier>;\n\tonDidUninstallExtension: Event<DidUninstallExtensionEvent>;\n\n\tconstructor(private service: IExtensionManagementService, private getUriTransformer: (requestContext: any) => IURITransformer | null) {\n\t\tthis.onInstallExtension = Event.buffer(service.onInstallExtension, true);\n\t\tthis.onDidInstallExtension = Event.buffer(service.onDidInstallExtension, true);\n\t\tthis.onUninstallExtension = Event.buffer(service.onUninstallExtension, true);\n\t\tthis.onDidUninstallExtension = Event.buffer(service.onDidUninstallExtension, true);\n\t}\n\n\tlisten(context: any, event: string): Event<any> {\n\t\tconst uriTransformer = this.getUriTransformer(context);\n\t\tswitch (event) {\n\t\t\tcase 'onInstallExtension': return this.onInstallExtension;\n\t\t\tcase 'onDidInstallExtension': return Event.map(this.onDidInstallExtension, i => ({ ...i, local: i.local ? transformOutgoingExtension(i.local, uriTransformer) : i.local }));\n\t\t\tcase 'onUninstallExtension': return this.onUninstallExtension;\n\t\t\tcase 'onDidUninstallExtension': return this.onDidUninstallExtension;\n\t\t}\n\n\t\tthrow new Error('Invalid listen');\n\t}\n\n\tcall(context: any, command: string, args?: any): Promise<any> {\n\t\tconst uriTransformer: IURITransformer | null = this.getUriTransformer(context);\n\t\tswitch (command) {\n\t\t\tcase 'zip': return this.service.zip(transformIncomingExtension(args[0], uriTransformer)).then(uri => transformOutgoingURI(uri, uriTransformer));\n\t\t\tcase 'unzip': return this.service.unzip(transformIncomingURI(args[0], uriTransformer));\n\t\t\tcase 'install': return this.service.install(transformIncomingURI(args[0], uriTransformer));\n\t\t\tcase 'getManifest': return this.service.getManifest(transformIncomingURI(args[0], uriTransformer));\n\t\t\tcase 'canInstall': return this.service.canInstall(args[0]);\n\t\t\tcase 'installFromGallery': return this.service.installFromGallery(args[0], args[1]);\n\t\t\tcase 'uninstall': return this.service.uninstall(transformIncomingExtension(args[0], uriTransformer), args[1]);\n\t\t\tcase 'reinstallFromGallery': return this.service.reinstallFromGallery(transformIncomingExtension(args[0], uriTransformer));\n\t\t\tcase 'getInstalled': return this.service.getInstalled(args[0]).then(extensions => extensions.map(e => transformOutgoingExtension(e, uriTransformer)));\n\t\t\tcase 'updateMetadata': return this.service.updateMetadata(transformIncomingExtension(args[0], uriTransformer), args[1]).then(e => transformOutgoingExtension(e, uriTransformer));\n\t\t\tcase 'updateExtensionScope': return this.service.updateExtensionScope(transformIncomingExtension(args[0], uriTransformer), args[1]).then(e => transformOutgoingExtension(e, uriTransformer));\n\t\t\tcase 'getExtensionsReport': return this.service.getExtensionsReport();\n\t\t}\n\n\t\tthrow new Error('Invalid call');\n\t}\n}\n\nexport class ExtensionManagementChannelClient implements IExtensionManagementService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(\n\t\tprivate readonly channel: IChannel,\n\t) { }\n\n\tget onInstallExtension(): Event<InstallExtensionEvent> { return this.channel.listen('onInstallExtension'); }\n\tget onDidInstallExtension(): Event<DidInstallExtensionEvent> { return Event.map(this.channel.listen<DidInstallExtensionEvent>('onDidInstallExtension'), i => ({ ...i, local: i.local ? transformIncomingExtension(i.local, null) : i.local })); }\n\tget onUninstallExtension(): Event<IExtensionIdentifier> { return this.channel.listen('onUninstallExtension'); }\n\tget onDidUninstallExtension(): Event<DidUninstallExtensionEvent> { return this.channel.listen('onDidUninstallExtension'); }\n\n\tzip(extension: ILocalExtension): Promise<URI> {\n\t\treturn Promise.resolve(this.channel.call('zip', [extension]).then(result => URI.revive(<UriComponents>result)));\n\t}\n\n\tunzip(zipLocation: URI): Promise<IExtensionIdentifier> {\n\t\treturn Promise.resolve(this.channel.call('unzip', [zipLocation]));\n\t}\n\n\tinstall(vsix: URI): Promise<ILocalExtension> {\n\t\treturn Promise.resolve(this.channel.call<ILocalExtension>('install', [vsix])).then(local => transformIncomingExtension(local, null));\n\t}\n\n\tgetManifest(vsix: URI): Promise<IExtensionManifest> {\n\t\treturn Promise.resolve(this.channel.call<IExtensionManifest>('getManifest', [vsix]));\n\t}\n\n\tasync canInstall(extension: IGalleryExtension): Promise<boolean> {\n\t\treturn true;\n\t}\n\n\tinstallFromGallery(extension: IGalleryExtension, installOptions?: InstallOptions): Promise<ILocalExtension> {\n\t\treturn Promise.resolve(this.channel.call<ILocalExtension>('installFromGallery', [extension, installOptions])).then(local => transformIncomingExtension(local, null));\n\t}\n\n\tuninstall(extension: ILocalExtension, force = false): Promise<void> {\n\t\treturn Promise.resolve(this.channel.call('uninstall', [extension!, force]));\n\t}\n\n\treinstallFromGallery(extension: ILocalExtension): Promise<void> {\n\t\treturn Promise.resolve(this.channel.call('reinstallFromGallery', [extension]));\n\t}\n\n\tgetInstalled(type: ExtensionType | null = null): Promise<ILocalExtension[]> {\n\t\treturn Promise.resolve(this.channel.call<ILocalExtension[]>('getInstalled', [type]))\n\t\t\t.then(extensions => extensions.map(extension => transformIncomingExtension(extension, null)));\n\t}\n\n\tupdateMetadata(local: ILocalExtension, metadata: IGalleryMetadata): Promise<ILocalExtension> {\n\t\treturn Promise.resolve(this.channel.call<ILocalExtension>('updateMetadata', [local, metadata]))\n\t\t\t.then(extension => transformIncomingExtension(extension, null));\n\t}\n\n\tupdateExtensionScope(local: ILocalExtension, isMachineScoped: boolean): Promise<ILocalExtension> {\n\t\treturn Promise.resolve(this.channel.call<ILocalExtension>('updateExtensionScope', [local, isMachineScoped]))\n\t\t\t.then(extension => transformIncomingExtension(extension, null));\n\t}\n\n\tgetExtensionsReport(): Promise<IReportedExtension[]> {\n\t\treturn Promise.resolve(this.channel.call('getExtensionsReport'));\n\t}\n}\n\nexport class ExtensionTipsChannel implements IServerChannel {\n\n\tconstructor(private service: IExtensionTipsService) {\n\t}\n\n\tlisten(context: any, event: string): Event<any> {\n\t\tthrow new Error('Invalid listen');\n\t}\n\n\tcall(context: any, command: string, args?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'getConfigBasedTips': return this.service.getConfigBasedTips(URI.revive(args[0]));\n\t\t\tcase 'getImportantExecutableBasedTips': return this.service.getImportantExecutableBasedTips();\n\t\t\tcase 'getOtherExecutableBasedTips': return this.service.getOtherExecutableBasedTips();\n\t\t\tcase 'getAllWorkspacesTips': return this.service.getAllWorkspacesTips();\n\t\t}\n\n\t\tthrow new Error('Invalid call');\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { cloneAndChange } from 'vs/base/common/objects';\nimport { IExtensionManifest } from 'vs/platform/extensions/common/extensions';\n\nconst nlsRegex = /^%([\\w\\d.-]+)%$/i;\n\nexport interface ITranslations {\n\t[key: string]: string;\n}\n\nexport function localizeManifest(manifest: IExtensionManifest, translations: ITranslations): IExtensionManifest {\n\tconst patcher = (value: string) => {\n\t\tif (typeof value !== 'string') {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst match = nlsRegex.exec(value);\n\n\t\tif (!match) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn translations[match[1]] || value;\n\t};\n\n\treturn cloneAndChange(manifest, patcher);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\n\nexport interface IParsedVersion {\n\thasCaret: boolean;\n\thasGreaterEquals: boolean;\n\tmajorBase: number;\n\tmajorMustEqual: boolean;\n\tminorBase: number;\n\tminorMustEqual: boolean;\n\tpatchBase: number;\n\tpatchMustEqual: boolean;\n\tpreRelease: string | null;\n}\n\nexport interface INormalizedVersion {\n\tmajorBase: number;\n\tmajorMustEqual: boolean;\n\tminorBase: number;\n\tminorMustEqual: boolean;\n\tpatchBase: number;\n\tpatchMustEqual: boolean;\n\tisMinimum: boolean;\n}\n\nconst VERSION_REGEXP = /^(\\^|>=)?((\\d+)|x)\\.((\\d+)|x)\\.((\\d+)|x)(\\-.*)?$/;\n\nexport function isValidVersionStr(version: string): boolean {\n\tversion = version.trim();\n\treturn (version === '*' || VERSION_REGEXP.test(version));\n}\n\nexport function parseVersion(version: string): IParsedVersion | null {\n\tif (!isValidVersionStr(version)) {\n\t\treturn null;\n\t}\n\n\tversion = version.trim();\n\n\tif (version === '*') {\n\t\treturn {\n\t\t\thasCaret: false,\n\t\t\thasGreaterEquals: false,\n\t\t\tmajorBase: 0,\n\t\t\tmajorMustEqual: false,\n\t\t\tminorBase: 0,\n\t\t\tminorMustEqual: false,\n\t\t\tpatchBase: 0,\n\t\t\tpatchMustEqual: false,\n\t\t\tpreRelease: null\n\t\t};\n\t}\n\n\tlet m = version.match(VERSION_REGEXP);\n\tif (!m) {\n\t\treturn null;\n\t}\n\treturn {\n\t\thasCaret: m[1] === '^',\n\t\thasGreaterEquals: m[1] === '>=',\n\t\tmajorBase: m[2] === 'x' ? 0 : parseInt(m[2], 10),\n\t\tmajorMustEqual: (m[2] === 'x' ? false : true),\n\t\tminorBase: m[4] === 'x' ? 0 : parseInt(m[4], 10),\n\t\tminorMustEqual: (m[4] === 'x' ? false : true),\n\t\tpatchBase: m[6] === 'x' ? 0 : parseInt(m[6], 10),\n\t\tpatchMustEqual: (m[6] === 'x' ? false : true),\n\t\tpreRelease: m[8] || null\n\t};\n}\n\nexport function normalizeVersion(version: IParsedVersion | null): INormalizedVersion | null {\n\tif (!version) {\n\t\treturn null;\n\t}\n\n\tlet majorBase = version.majorBase,\n\t\tmajorMustEqual = version.majorMustEqual,\n\t\tminorBase = version.minorBase,\n\t\tminorMustEqual = version.minorMustEqual,\n\t\tpatchBase = version.patchBase,\n\t\tpatchMustEqual = version.patchMustEqual;\n\n\tif (version.hasCaret) {\n\t\tif (majorBase === 0) {\n\t\t\tpatchMustEqual = false;\n\t\t} else {\n\t\t\tminorMustEqual = false;\n\t\t\tpatchMustEqual = false;\n\t\t}\n\t}\n\n\treturn {\n\t\tmajorBase: majorBase,\n\t\tmajorMustEqual: majorMustEqual,\n\t\tminorBase: minorBase,\n\t\tminorMustEqual: minorMustEqual,\n\t\tpatchBase: patchBase,\n\t\tpatchMustEqual: patchMustEqual,\n\t\tisMinimum: version.hasGreaterEquals\n\t};\n}\n\nexport function isValidVersion(_version: string | INormalizedVersion, _desiredVersion: string | INormalizedVersion): boolean {\n\tlet version: INormalizedVersion | null;\n\tif (typeof _version === 'string') {\n\t\tversion = normalizeVersion(parseVersion(_version));\n\t} else {\n\t\tversion = _version;\n\t}\n\n\tlet desiredVersion: INormalizedVersion | null;\n\tif (typeof _desiredVersion === 'string') {\n\t\tdesiredVersion = normalizeVersion(parseVersion(_desiredVersion));\n\t} else {\n\t\tdesiredVersion = _desiredVersion;\n\t}\n\n\tif (!version || !desiredVersion) {\n\t\treturn false;\n\t}\n\n\tlet majorBase = version.majorBase;\n\tlet minorBase = version.minorBase;\n\tlet patchBase = version.patchBase;\n\n\tlet desiredMajorBase = desiredVersion.majorBase;\n\tlet desiredMinorBase = desiredVersion.minorBase;\n\tlet desiredPatchBase = desiredVersion.patchBase;\n\n\tlet majorMustEqual = desiredVersion.majorMustEqual;\n\tlet minorMustEqual = desiredVersion.minorMustEqual;\n\tlet patchMustEqual = desiredVersion.patchMustEqual;\n\n\tif (desiredVersion.isMinimum) {\n\t\tif (majorBase > desiredMajorBase) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (majorBase < desiredMajorBase) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (minorBase > desiredMinorBase) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (minorBase < desiredMinorBase) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn patchBase >= desiredPatchBase;\n\t}\n\n\t// Anything < 1.0.0 is compatible with >= 1.0.0, except exact matches\n\tif (majorBase === 1 && desiredMajorBase === 0 && (!majorMustEqual || !minorMustEqual || !patchMustEqual)) {\n\t\tdesiredMajorBase = 1;\n\t\tdesiredMinorBase = 0;\n\t\tdesiredPatchBase = 0;\n\t\tmajorMustEqual = true;\n\t\tminorMustEqual = false;\n\t\tpatchMustEqual = false;\n\t}\n\n\tif (majorBase < desiredMajorBase) {\n\t\t// smaller major version\n\t\treturn false;\n\t}\n\n\tif (majorBase > desiredMajorBase) {\n\t\t// higher major version\n\t\treturn (!majorMustEqual);\n\t}\n\n\t// at this point, majorBase are equal\n\n\tif (minorBase < desiredMinorBase) {\n\t\t// smaller minor version\n\t\treturn false;\n\t}\n\n\tif (minorBase > desiredMinorBase) {\n\t\t// higher minor version\n\t\treturn (!minorMustEqual);\n\t}\n\n\t// at this point, minorBase are equal\n\n\tif (patchBase < desiredPatchBase) {\n\t\t// smaller patch version\n\t\treturn false;\n\t}\n\n\tif (patchBase > desiredPatchBase) {\n\t\t// higher patch version\n\t\treturn (!patchMustEqual);\n\t}\n\n\t// at this point, patchBase are equal\n\treturn true;\n}\n\nexport interface IReducedExtensionDescription {\n\tisBuiltin: boolean;\n\tengines: {\n\t\tvscode: string;\n\t};\n\tmain?: string;\n}\n\nexport function isValidExtensionVersion(version: string, extensionDesc: IReducedExtensionDescription, notices: string[]): boolean {\n\n\tif (extensionDesc.isBuiltin || typeof extensionDesc.main === 'undefined') {\n\t\t// No version check for builtin or declarative extensions\n\t\treturn true;\n\t}\n\n\treturn isVersionValid(version, extensionDesc.engines.vscode, notices);\n}\n\nexport function isEngineValid(engine: string, version: string): boolean {\n\t// TODO@joao: discuss with alex '*' doesn't seem to be a valid engine version\n\treturn engine === '*' || isVersionValid(version, engine);\n}\n\nexport function isVersionValid(currentVersion: string, requestedVersion: string, notices: string[] = []): boolean {\n\n\tlet desiredVersion = normalizeVersion(parseVersion(requestedVersion));\n\tif (!desiredVersion) {\n\t\tnotices.push(nls.localize('versionSyntax', \"Could not parse `engines.vscode` value {0}. Please use, for example: ^1.22.0, ^1.22.x, etc.\", requestedVersion));\n\t\treturn false;\n\t}\n\n\t// enforce that a breaking API version is specified.\n\t// for 0.X.Y, that means up to 0.X must be specified\n\t// otherwise for Z.X.Y, that means Z must be specified\n\tif (desiredVersion.majorBase === 0) {\n\t\t// force that major and minor must be specific\n\t\tif (!desiredVersion.majorMustEqual || !desiredVersion.minorMustEqual) {\n\t\t\tnotices.push(nls.localize('versionSpecificity1', \"Version specified in `engines.vscode` ({0}) is not specific enough. For vscode versions before 1.0.0, please define at a minimum the major and minor desired version. E.g. ^0.10.0, 0.10.x, 0.11.0, etc.\", requestedVersion));\n\t\t\treturn false;\n\t\t}\n\t} else {\n\t\t// force that major must be specific\n\t\tif (!desiredVersion.majorMustEqual) {\n\t\t\tnotices.push(nls.localize('versionSpecificity2', \"Version specified in `engines.vscode` ({0}) is not specific enough. For vscode versions after 1.0.0, please define at a minimum the major desired version. E.g. ^1.10.0, 1.10.x, 1.x.x, 2.x.x, etc.\", requestedVersion));\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tif (!isValidVersion(currentVersion, desiredVersion)) {\n\t\tnotices.push(nls.localize('versionMismatch', \"Extension is not compatible with Code {0}. Extension requires: {1}.\", currentVersion, requestedVersion));\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createChannelSender, getNextTickChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { Client } from 'vs/base/parts/ipc/node/ipc.cp';\nimport { IDiskFileChange, ILogMessage } from 'vs/platform/files/node/watcher/watcher';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IWatcherRequest, IWatcherService } from 'vs/platform/files/node/watcher/nsfw/watcher';\nimport { FileAccess } from 'vs/base/common/network';\n\nexport class FileWatcher extends Disposable {\n\n\tprivate static readonly MAX_RESTARTS = 5;\n\n\tprivate service: IWatcherService | undefined;\n\tprivate isDisposed: boolean;\n\tprivate restartCounter: number;\n\n\tconstructor(\n\t\tprivate folders: IWatcherRequest[],\n\t\tprivate onDidFilesChange: (changes: IDiskFileChange[]) => void,\n\t\tprivate onLogMessage: (msg: ILogMessage) => void,\n\t\tprivate verboseLogging: boolean,\n\t) {\n\t\tsuper();\n\n\t\tthis.isDisposed = false;\n\t\tthis.restartCounter = 0;\n\n\t\tthis.startWatching();\n\t}\n\n\tprivate startWatching(): void {\n\t\tconst client = this._register(new Client(\n\t\t\tFileAccess.asFileUri('bootstrap-fork', require).fsPath,\n\t\t\t{\n\t\t\t\tserverName: 'File Watcher (nsfw)',\n\t\t\t\targs: ['--type=watcherService'],\n\t\t\t\tenv: {\n\t\t\t\t\tAMD_ENTRYPOINT: 'vs/platform/files/node/watcher/nsfw/watcherApp',\n\t\t\t\t\tPIPE_LOGGING: 'true',\n\t\t\t\t\tVERBOSE_LOGGING: 'true' // transmit console logs from server to client\n\t\t\t\t}\n\t\t\t}\n\t\t));\n\n\t\tthis._register(client.onDidProcessExit(() => {\n\t\t\t// our watcher app should never be completed because it keeps on watching. being in here indicates\n\t\t\t// that the watcher process died and we want to restart it here. we only do it a max number of times\n\t\t\tif (!this.isDisposed) {\n\t\t\t\tif (this.restartCounter <= FileWatcher.MAX_RESTARTS) {\n\t\t\t\t\tthis.error('terminated unexpectedly and is restarted again...');\n\t\t\t\t\tthis.restartCounter++;\n\t\t\t\t\tthis.startWatching();\n\t\t\t\t} else {\n\t\t\t\t\tthis.error('failed to start after retrying for some time, giving up. Please report this as a bug report!');\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\t// Initialize watcher\n\t\tthis.service = createChannelSender<IWatcherService>(getNextTickChannel(client.getChannel('watcher')));\n\n\t\tthis.service.setVerboseLogging(this.verboseLogging);\n\n\t\tthis._register(this.service.onDidChangeFile(e => !this.isDisposed && this.onDidFilesChange(e)));\n\t\tthis._register(this.service.onDidLogMessage(m => this.onLogMessage(m)));\n\n\t\t// Start watching\n\t\tthis.setFolders(this.folders);\n\t}\n\n\tsetVerboseLogging(verboseLogging: boolean): void {\n\t\tthis.verboseLogging = verboseLogging;\n\t\tif (!this.isDisposed && this.service) {\n\t\t\tthis.service.setVerboseLogging(verboseLogging);\n\t\t}\n\t}\n\n\terror(message: string) {\n\t\tthis.onLogMessage({ type: 'error', message: `[File Watcher (nsfw)] ${message}` });\n\t}\n\n\tsetFolders(folders: IWatcherRequest[]): void {\n\t\tthis.folders = folders;\n\n\t\tif (this.service) {\n\t\t\tthis.service.setRoots(folders);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.isDisposed = true;\n\n\t\tsuper.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createChannelSender, getNextTickChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { Client } from 'vs/base/parts/ipc/node/ipc.cp';\nimport { IDiskFileChange, ILogMessage } from 'vs/platform/files/node/watcher/watcher';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IWatcherRequest, IWatcherOptions, IWatcherService } from 'vs/platform/files/node/watcher/unix/watcher';\nimport { FileAccess } from 'vs/base/common/network';\n\nexport class FileWatcher extends Disposable {\n\n\tprivate static readonly MAX_RESTARTS = 5;\n\n\tprivate isDisposed: boolean;\n\tprivate restartCounter: number;\n\tprivate service: IWatcherService | undefined;\n\n\tconstructor(\n\t\tprivate folders: IWatcherRequest[],\n\t\tprivate onDidFilesChange: (changes: IDiskFileChange[]) => void,\n\t\tprivate onLogMessage: (msg: ILogMessage) => void,\n\t\tprivate verboseLogging: boolean,\n\t\tprivate watcherOptions: IWatcherOptions = {}\n\t) {\n\t\tsuper();\n\n\t\tthis.isDisposed = false;\n\t\tthis.restartCounter = 0;\n\n\t\tthis.startWatching();\n\t}\n\n\tprivate startWatching(): void {\n\t\tconst client = this._register(new Client(\n\t\t\tFileAccess.asFileUri('bootstrap-fork', require).fsPath,\n\t\t\t{\n\t\t\t\tserverName: 'File Watcher (chokidar)',\n\t\t\t\targs: ['--type=watcherService'],\n\t\t\t\tenv: {\n\t\t\t\t\tAMD_ENTRYPOINT: 'vs/platform/files/node/watcher/unix/watcherApp',\n\t\t\t\t\tPIPE_LOGGING: 'true',\n\t\t\t\t\tVERBOSE_LOGGING: 'true' // transmit console logs from server to client\n\t\t\t\t}\n\t\t\t}\n\t\t));\n\n\t\tthis._register(client.onDidProcessExit(() => {\n\t\t\t// our watcher app should never be completed because it keeps on watching. being in here indicates\n\t\t\t// that the watcher process died and we want to restart it here. we only do it a max number of times\n\t\t\tif (!this.isDisposed) {\n\t\t\t\tif (this.restartCounter <= FileWatcher.MAX_RESTARTS) {\n\t\t\t\t\tthis.error('terminated unexpectedly and is restarted again...');\n\t\t\t\t\tthis.restartCounter++;\n\t\t\t\t\tthis.startWatching();\n\t\t\t\t} else {\n\t\t\t\t\tthis.error('failed to start after retrying for some time, giving up. Please report this as a bug report!');\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\t// Initialize watcher\n\t\tthis.service = createChannelSender<IWatcherService>(getNextTickChannel(client.getChannel('watcher')));\n\t\tthis.service.init({ ...this.watcherOptions, verboseLogging: this.verboseLogging });\n\n\t\tthis._register(this.service.onDidChangeFile(e => !this.isDisposed && this.onDidFilesChange(e)));\n\t\tthis._register(this.service.onDidLogMessage(m => this.onLogMessage(m)));\n\n\t\t// Start watching\n\t\tthis.service.setRoots(this.folders);\n\t}\n\n\terror(message: string) {\n\t\tthis.onLogMessage({ type: 'error', message: `[File Watcher (chokidar)] ${message}` });\n\t}\n\n\tsetVerboseLogging(verboseLogging: boolean): void {\n\t\tthis.verboseLogging = verboseLogging;\n\n\t\tif (this.service) {\n\t\t\tthis.service.setVerboseLogging(verboseLogging);\n\t\t}\n\t}\n\n\tsetFolders(folders: IWatcherRequest[]): void {\n\t\tthis.folders = folders;\n\n\t\tif (this.service) {\n\t\t\tthis.service.setRoots(folders);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.isDisposed = true;\n\n\t\tsuper.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as cp from 'child_process';\nimport { FileChangeType } from 'vs/platform/files/common/files';\nimport * as decoder from 'vs/base/node/decoder';\nimport * as glob from 'vs/base/common/glob';\nimport { IDiskFileChange, ILogMessage } from 'vs/platform/files/node/watcher/watcher';\nimport { FileAccess } from 'vs/base/common/network';\n\nexport class OutOfProcessWin32FolderWatcher {\n\n\tprivate static readonly MAX_RESTARTS = 5;\n\n\tprivate static changeTypeMap: FileChangeType[] = [FileChangeType.UPDATED, FileChangeType.ADDED, FileChangeType.DELETED];\n\n\tprivate ignored: glob.ParsedPattern[];\n\n\tprivate handle: cp.ChildProcess | undefined;\n\tprivate restartCounter: number;\n\n\tconstructor(\n\t\tprivate watchedFolder: string,\n\t\tignored: string[],\n\t\tprivate eventCallback: (events: IDiskFileChange[]) => void,\n\t\tprivate logCallback: (message: ILogMessage) => void,\n\t\tprivate verboseLogging: boolean\n\t) {\n\t\tthis.restartCounter = 0;\n\n\t\tif (Array.isArray(ignored)) {\n\t\t\tthis.ignored = ignored.map(i => glob.parse(i));\n\t\t} else {\n\t\t\tthis.ignored = [];\n\t\t}\n\n\t\t// Logging\n\t\tif (this.verboseLogging) {\n\t\t\tthis.log(`Start watching: ${watchedFolder}`);\n\t\t}\n\n\t\tthis.startWatcher();\n\t}\n\n\tprivate startWatcher(): void {\n\t\tconst args = [this.watchedFolder];\n\t\tif (this.verboseLogging) {\n\t\t\targs.push('-verbose');\n\t\t}\n\n\t\tthis.handle = cp.spawn(FileAccess.asFileUri('vs/platform/files/node/watcher/win32/CodeHelper.exe', require).fsPath, args);\n\n\t\tconst stdoutLineDecoder = new decoder.LineDecoder();\n\n\t\t// Events over stdout\n\t\tthis.handle.stdout!.on('data', (data: Buffer) => {\n\n\t\t\t// Collect raw events from output\n\t\t\tconst rawEvents: IDiskFileChange[] = [];\n\t\t\tstdoutLineDecoder.write(data).forEach((line) => {\n\t\t\t\tconst eventParts = line.split('|');\n\t\t\t\tif (eventParts.length === 2) {\n\t\t\t\t\tconst changeType = Number(eventParts[0]);\n\t\t\t\t\tconst absolutePath = eventParts[1];\n\n\t\t\t\t\t// File Change Event (0 Changed, 1 Created, 2 Deleted)\n\t\t\t\t\tif (changeType >= 0 && changeType < 3) {\n\n\t\t\t\t\t\t// Support ignores\n\t\t\t\t\t\tif (this.ignored && this.ignored.some(ignore => ignore(absolutePath))) {\n\t\t\t\t\t\t\tif (this.verboseLogging) {\n\t\t\t\t\t\t\t\tthis.log(absolutePath);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Otherwise record as event\n\t\t\t\t\t\trawEvents.push({\n\t\t\t\t\t\t\ttype: OutOfProcessWin32FolderWatcher.changeTypeMap[changeType],\n\t\t\t\t\t\t\tpath: absolutePath\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\t// 3 Logging\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.log(eventParts[1]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Trigger processing of events through the delayer to batch them up properly\n\t\t\tif (rawEvents.length > 0) {\n\t\t\t\tthis.eventCallback(rawEvents);\n\t\t\t}\n\t\t});\n\n\t\t// Errors\n\t\tthis.handle.on('error', (error: Error) => this.onError(error));\n\t\tthis.handle.stderr!.on('data', (data: Buffer) => this.onError(data));\n\n\t\t// Exit\n\t\tthis.handle.on('exit', (code: number, signal: string) => this.onExit(code, signal));\n\t}\n\n\tprivate onError(error: Error | Buffer): void {\n\t\tthis.error('process error: ' + error.toString());\n\t}\n\n\tprivate onExit(code: number, signal: string): void {\n\t\tif (this.handle) { // exit while not yet being disposed is unexpected!\n\t\t\tthis.error(`terminated unexpectedly (code: ${code}, signal: ${signal})`);\n\n\t\t\tif (this.restartCounter <= OutOfProcessWin32FolderWatcher.MAX_RESTARTS) {\n\t\t\t\tthis.error('is restarted again...');\n\t\t\t\tthis.restartCounter++;\n\t\t\t\tthis.startWatcher(); // restart\n\t\t\t} else {\n\t\t\t\tthis.error('Watcher failed to start after retrying for some time, giving up. Please report this as a bug report!');\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate error(message: string) {\n\t\tthis.logCallback({ type: 'error', message: `[File Watcher (C#)] ${message}` });\n\t}\n\n\tprivate log(message: string) {\n\t\tthis.logCallback({ type: 'trace', message: `[File Watcher (C#)] ${message}` });\n\t}\n\n\tdispose(): void {\n\t\tif (this.handle) {\n\t\t\tthis.handle.kill();\n\t\t\tthis.handle = undefined;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDiskFileChange, ILogMessage } from 'vs/platform/files/node/watcher/watcher';\nimport { OutOfProcessWin32FolderWatcher } from 'vs/platform/files/node/watcher/win32/csharpWatcherService';\nimport { posix } from 'vs/base/common/path';\nimport { rtrim } from 'vs/base/common/strings';\nimport { IDisposable } from 'vs/base/common/lifecycle';\n\nexport class FileWatcher implements IDisposable {\n\n\tprivate folder: { path: string, excludes: string[] };\n\tprivate service: OutOfProcessWin32FolderWatcher | undefined = undefined;\n\n\tconstructor(\n\t\tfolders: { path: string, excludes: string[] }[],\n\t\tprivate onDidFilesChange: (changes: IDiskFileChange[]) => void,\n\t\tprivate onLogMessage: (msg: ILogMessage) => void,\n\t\tprivate verboseLogging: boolean\n\t) {\n\t\tthis.folder = folders[0];\n\n\t\tif (this.folder.path.indexOf('\\\\\\\\') === 0 && this.folder.path.endsWith(posix.sep)) {\n\t\t\t// for some weird reason, node adds a trailing slash to UNC paths\n\t\t\t// we never ever want trailing slashes as our base path unless\n\t\t\t// someone opens root (\"/\").\n\t\t\t// See also https://github.com/nodejs/io.js/issues/1765\n\t\t\tthis.folder.path = rtrim(this.folder.path, posix.sep);\n\t\t}\n\n\t\tthis.service = this.startWatching();\n\t}\n\n\tprivate get isDisposed(): boolean {\n\t\treturn !this.service;\n\t}\n\n\tprivate startWatching(): OutOfProcessWin32FolderWatcher {\n\t\treturn new OutOfProcessWin32FolderWatcher(\n\t\t\tthis.folder.path,\n\t\t\tthis.folder.excludes,\n\t\t\tevents => this.onFileEvents(events),\n\t\t\tmessage => this.onLogMessage(message),\n\t\t\tthis.verboseLogging\n\t\t);\n\t}\n\n\tsetVerboseLogging(verboseLogging: boolean): void {\n\t\tthis.verboseLogging = verboseLogging;\n\t\tif (this.service) {\n\t\t\tthis.service.dispose();\n\t\t\tthis.service = this.startWatching();\n\t\t}\n\t}\n\n\tprivate onFileEvents(events: IDiskFileChange[]): void {\n\t\tif (this.isDisposed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Emit through event emitter\n\t\tif (events.length > 0) {\n\t\t\tthis.onDidFilesChange(events);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tif (this.service) {\n\t\t\tthis.service.dispose();\n\t\t\tthis.service = undefined;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as instantiation from './instantiation';\n\nexport class SyncDescriptor<T> {\n\n\treadonly ctor: any;\n\treadonly staticArguments: any[];\n\treadonly supportsDelayedInstantiation: boolean;\n\n\tconstructor(ctor: new (...args: any[]) => T, staticArguments: any[] = [], supportsDelayedInstantiation: boolean = false) {\n\t\tthis.ctor = ctor;\n\t\tthis.staticArguments = staticArguments;\n\t\tthis.supportsDelayedInstantiation = supportsDelayedInstantiation;\n\t}\n}\n\nexport interface CreateSyncFunc {\n\n\t<T>(ctor: instantiation.IConstructorSignature0<T>): SyncDescriptor0<T>;\n\n\t<A1, T>(ctor: instantiation.IConstructorSignature1<A1, T>): SyncDescriptor1<A1, T>;\n\t<A1, T>(ctor: instantiation.IConstructorSignature1<A1, T>, a1: A1): SyncDescriptor0<T>;\n\n\t<A1, A2, T>(ctor: instantiation.IConstructorSignature2<A1, A2, T>): SyncDescriptor2<A1, A2, T>;\n\t<A1, A2, T>(ctor: instantiation.IConstructorSignature2<A1, A2, T>, a1: A1): SyncDescriptor1<A2, T>;\n\t<A1, A2, T>(ctor: instantiation.IConstructorSignature2<A1, A2, T>, a1: A1, a2: A2): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, T>(ctor: instantiation.IConstructorSignature3<A1, A2, A3, T>): SyncDescriptor3<A1, A2, A3, T>;\n\t<A1, A2, A3, T>(ctor: instantiation.IConstructorSignature3<A1, A2, A3, T>, a1: A1): SyncDescriptor2<A2, A3, T>;\n\t<A1, A2, A3, T>(ctor: instantiation.IConstructorSignature3<A1, A2, A3, T>, a1: A1, a2: A2): SyncDescriptor1<A3, T>;\n\t<A1, A2, A3, T>(ctor: instantiation.IConstructorSignature3<A1, A2, A3, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, A4, T>(ctor: instantiation.IConstructorSignature4<A1, A2, A3, A4, T>): SyncDescriptor4<A1, A2, A3, A4, T>;\n\t<A1, A2, A3, A4, T>(ctor: instantiation.IConstructorSignature4<A1, A2, A3, A4, T>, a1: A1): SyncDescriptor3<A2, A3, A4, T>;\n\t<A1, A2, A3, A4, T>(ctor: instantiation.IConstructorSignature4<A1, A2, A3, A4, T>, a1: A1, a2: A2): SyncDescriptor2<A3, A4, T>;\n\t<A1, A2, A3, A4, T>(ctor: instantiation.IConstructorSignature4<A1, A2, A3, A4, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor1<A4, T>;\n\t<A1, A2, A3, A4, T>(ctor: instantiation.IConstructorSignature4<A1, A2, A3, A4, T>, a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>): SyncDescriptor5<A1, A2, A3, A4, A5, T>;\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>, a1: A1): SyncDescriptor4<A2, A3, A4, A5, T>;\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2): SyncDescriptor3<A3, A4, A5, T>;\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor2<A4, A5, T>;\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor1<A5, T>;\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>): SyncDescriptor6<A1, A2, A3, A4, A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1): SyncDescriptor5<A2, A3, A4, A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2): SyncDescriptor4<A3, A4, A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor3<A4, A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor2<A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor1<A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>): SyncDescriptor7<A1, A2, A3, A4, A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1): SyncDescriptor6<A2, A3, A4, A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2): SyncDescriptor5<A3, A4, A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor4<A4, A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor3<A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor2<A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor1<A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>): SyncDescriptor8<A1, A2, A3, A4, A5, A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1): SyncDescriptor7<A2, A3, A4, A5, A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2): SyncDescriptor6<A3, A4, A5, A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor5<A4, A5, A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor4<A5, A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor3<A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor2<A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): SyncDescriptor1<A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8): SyncDescriptor0<T>;\n}\nexport const createSyncDescriptor: CreateSyncFunc = <T>(ctor: any, ...staticArguments: any[]): any => {\n\treturn new SyncDescriptor<T>(ctor, staticArguments);\n};\n\nexport interface SyncDescriptor0<T> {\n\tctor: any;\n\tbind(): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor1<A1, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor2<A1, A2, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor1<A2, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor3<A1, A2, A3, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor2<A2, A3, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor1<A3, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor4<A1, A2, A3, A4, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor3<A2, A3, A4, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor2<A3, A4, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor1<A4, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor5<A1, A2, A3, A4, A5, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor4<A2, A3, A4, A5, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor3<A3, A4, A5, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor2<A4, A5, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor1<A5, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor6<A1, A2, A3, A4, A5, A6, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor5<A2, A3, A4, A5, A6, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor4<A3, A4, A5, A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor3<A4, A5, A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor2<A5, A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor1<A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor7<A1, A2, A3, A4, A5, A6, A7, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor6<A2, A3, A4, A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor5<A3, A4, A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor4<A4, A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor3<A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor2<A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor1<A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor8<A1, A2, A3, A4, A5, A6, A7, A8, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor7<A2, A3, A4, A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor6<A3, A4, A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor5<A4, A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor4<A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor3<A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor2<A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): SyncDescriptor1<A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8): SyncDescriptor0<T>;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport class Node<T> {\n\n\treadonly data: T;\n\treadonly incoming = new Map<string, Node<T>>();\n\treadonly outgoing = new Map<string, Node<T>>();\n\n\tconstructor(data: T) {\n\t\tthis.data = data;\n\t}\n}\n\nexport class Graph<T> {\n\n\tprivate readonly _nodes = new Map<string, Node<T>>();\n\n\tconstructor(private readonly _hashFn: (element: T) => string) {\n\t\t// empty\n\t}\n\n\troots(): Node<T>[] {\n\t\tconst ret: Node<T>[] = [];\n\t\tfor (let node of this._nodes.values()) {\n\t\t\tif (node.outgoing.size === 0) {\n\t\t\t\tret.push(node);\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t}\n\n\tinsertEdge(from: T, to: T): void {\n\t\tconst fromNode = this.lookupOrInsertNode(from);\n\t\tconst toNode = this.lookupOrInsertNode(to);\n\n\t\tfromNode.outgoing.set(this._hashFn(to), toNode);\n\t\ttoNode.incoming.set(this._hashFn(from), fromNode);\n\t}\n\n\tremoveNode(data: T): void {\n\t\tconst key = this._hashFn(data);\n\t\tthis._nodes.delete(key);\n\t\tfor (let node of this._nodes.values()) {\n\t\t\tnode.outgoing.delete(key);\n\t\t\tnode.incoming.delete(key);\n\t\t}\n\t}\n\n\tlookupOrInsertNode(data: T): Node<T> {\n\t\tconst key = this._hashFn(data);\n\t\tlet node = this._nodes.get(key);\n\n\t\tif (!node) {\n\t\t\tnode = new Node(data);\n\t\t\tthis._nodes.set(key, node);\n\t\t}\n\n\t\treturn node;\n\t}\n\n\tlookup(data: T): Node<T> | undefined {\n\t\treturn this._nodes.get(this._hashFn(data));\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn this._nodes.size === 0;\n\t}\n\n\ttoString(): string {\n\t\tlet data: string[] = [];\n\t\tfor (let [key, value] of this._nodes) {\n\t\t\tdata.push(`${key}, (incoming)[${[...value.incoming.keys()].join(', ')}], (outgoing)[${[...value.outgoing.keys()].join(',')}]`);\n\n\t\t}\n\t\treturn data.join('\\n');\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ServiceCollection } from './serviceCollection';\nimport * as descriptors from './descriptors';\n\n// ------ internal util\n\nexport namespace _util {\n\n\texport const serviceIds = new Map<string, ServiceIdentifier<any>>();\n\n\texport const DI_TARGET = '$di$target';\n\texport const DI_DEPENDENCIES = '$di$dependencies';\n\n\texport function getServiceDependencies(ctor: any): { id: ServiceIdentifier<any>, index: number, optional: boolean }[] {\n\t\treturn ctor[DI_DEPENDENCIES] || [];\n\t}\n}\n\n// --- interfaces ------\n\nexport type BrandedService = { _serviceBrand: undefined };\n\nexport interface IConstructorSignature0<T> {\n\tnew(...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature1<A1, T> {\n\tnew <Services extends BrandedService[]>(first: A1, ...services: Services): T;\n}\n\nexport interface IConstructorSignature2<A1, A2, T> {\n\tnew(first: A1, second: A2, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature3<A1, A2, A3, T> {\n\tnew(first: A1, second: A2, third: A3, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature4<A1, A2, A3, A4, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature5<A1, A2, A3, A4, A5, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature6<A1, A2, A3, A4, A5, A6, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, eigth: A8, ...services: BrandedService[]): T;\n}\n\nexport interface ServicesAccessor {\n\tget<T>(id: ServiceIdentifier<T>): T;\n\tget<T>(id: ServiceIdentifier<T>, isOptional: typeof optional): T | undefined;\n}\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('instantiationService');\n\n/**\n * Given a list of arguments as a tuple, attempt to extract the leading, non-service arguments\n * to their own tuple.\n */\ntype GetLeadingNonServiceArgs<Args> =\n\tArgs extends [...BrandedService[]] ? []\n\t: Args extends [infer A1, ...BrandedService[]] ? [A1]\n\t: Args extends [infer A1, infer A2, ...BrandedService[]] ? [A1, A2]\n\t: Args extends [infer A1, infer A2, infer A3, ...BrandedService[]] ? [A1, A2, A3]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, ...BrandedService[]] ? [A1, A2, A3, A4]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, ...BrandedService[]] ? [A1, A2, A3, A4, A5]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, ...BrandedService[]] ? [A1, A2, A3, A4, A5, A6]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, ...BrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, infer A8, ...BrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7, A8]\n\t: never;\n\nexport interface IInstantiationService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Synchronously creates an instance that is denoted by\n\t * the descriptor\n\t */\n\tcreateInstance<T>(descriptor: descriptors.SyncDescriptor0<T>): T;\n\tcreateInstance<A1, T>(descriptor: descriptors.SyncDescriptor1<A1, T>, a1: A1): T;\n\tcreateInstance<A1, A2, T>(descriptor: descriptors.SyncDescriptor2<A1, A2, T>, a1: A1, a2: A2): T;\n\tcreateInstance<A1, A2, A3, T>(descriptor: descriptors.SyncDescriptor3<A1, A2, A3, T>, a1: A1, a2: A2, a3: A3): T;\n\tcreateInstance<A1, A2, A3, A4, T>(descriptor: descriptors.SyncDescriptor4<A1, A2, A3, A4, T>, a1: A1, a2: A2, a3: A3, a4: A4): T;\n\tcreateInstance<A1, A2, A3, A4, A5, T>(descriptor: descriptors.SyncDescriptor5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, T>(descriptor: descriptors.SyncDescriptor6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, T>(descriptor: descriptors.SyncDescriptor7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, A8, T>(descriptor: descriptors.SyncDescriptor8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8): T;\n\n\tcreateInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(t: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n\n\t/**\n\t *\n\t */\n\tinvokeFunction<R, TS extends any[] = []>(fn: (accessor: ServicesAccessor, ...args: TS) => R, ...args: TS): R;\n\n\t/**\n\t * Creates a child of this service which inherts all current services\n\t * and adds/overwrites the given services\n\t */\n\tcreateChild(services: ServiceCollection): IInstantiationService;\n}\n\n\n/**\n * Identifies a service of type T\n */\nexport interface ServiceIdentifier<T> {\n\t(...args: any[]): void;\n\ttype: T;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number, optional: boolean): void {\n\tif ((target as any)[_util.DI_TARGET] === target) {\n\t\t(target as any)[_util.DI_DEPENDENCIES].push({ id, index, optional });\n\t} else {\n\t\t(target as any)[_util.DI_DEPENDENCIES] = [{ id, index, optional }];\n\t\t(target as any)[_util.DI_TARGET] = target;\n\t}\n}\n\n/**\n * The *only* valid way to create a {{ServiceIdentifier}}.\n */\nexport function createDecorator<T>(serviceId: string): ServiceIdentifier<T> {\n\n\tif (_util.serviceIds.has(serviceId)) {\n\t\treturn _util.serviceIds.get(serviceId)!;\n\t}\n\n\tconst id = <any>function (target: Function, key: string, index: number): any {\n\t\tif (arguments.length !== 3) {\n\t\t\tthrow new Error('@IServiceName-decorator can only be used to decorate a parameter');\n\t\t}\n\t\tstoreServiceDependency(id, target, index, false);\n\t};\n\n\tid.toString = () => serviceId;\n\n\t_util.serviceIds.set(serviceId, id);\n\treturn id;\n}\n\n/**\n * Mark a service dependency as optional.\n */\nexport function optional<T>(serviceIdentifier: ServiceIdentifier<T>) {\n\n\treturn function (target: Function, key: string, index: number) {\n\t\tif (arguments.length !== 3) {\n\t\t\tthrow new Error('@optional-decorator can only be used to decorate a parameter');\n\t\t}\n\t\tstoreServiceDependency(serviceIdentifier, target, index, true);\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { isFalsyOrWhitespace } from 'vs/base/common/strings';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { isMacintosh, isLinux, isWindows, isWeb } from 'vs/base/common/platform';\n\nconst STATIC_VALUES = new Map<string, boolean>();\nSTATIC_VALUES.set('false', false);\nSTATIC_VALUES.set('true', true);\nSTATIC_VALUES.set('isMac', isMacintosh);\nSTATIC_VALUES.set('isLinux', isLinux);\nSTATIC_VALUES.set('isWindows', isWindows);\nSTATIC_VALUES.set('isWeb', isWeb);\nSTATIC_VALUES.set('isMacNative', isMacintosh && !isWeb);\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\nexport const enum ContextKeyExprType {\n\tFalse = 0,\n\tTrue = 1,\n\tDefined = 2,\n\tNot = 3,\n\tEquals = 4,\n\tNotEquals = 5,\n\tAnd = 6,\n\tRegex = 7,\n\tNotRegex = 8,\n\tOr = 9,\n\tIn = 10,\n\tNotIn = 11,\n}\n\nexport interface IContextKeyExprMapper {\n\tmapDefined(key: string): ContextKeyExpression;\n\tmapNot(key: string): ContextKeyExpression;\n\tmapEquals(key: string, value: any): ContextKeyExpression;\n\tmapNotEquals(key: string, value: any): ContextKeyExpression;\n\tmapRegex(key: string, regexp: RegExp | null): ContextKeyRegexExpr;\n\tmapIn(key: string, valueKey: string): ContextKeyInExpr;\n}\n\nexport interface IContextKeyExpression {\n\tcmp(other: ContextKeyExpression): number;\n\tequals(other: ContextKeyExpression): boolean;\n\tevaluate(context: IContext): boolean;\n\tserialize(): string;\n\tkeys(): string[];\n\tmap(mapFnc: IContextKeyExprMapper): ContextKeyExpression;\n\tnegate(): ContextKeyExpression;\n\n}\n\nexport type ContextKeyExpression = (\n\tContextKeyFalseExpr | ContextKeyTrueExpr | ContextKeyDefinedExpr | ContextKeyNotExpr\n\t| ContextKeyEqualsExpr | ContextKeyNotEqualsExpr | ContextKeyRegexExpr\n\t| ContextKeyNotRegexExpr | ContextKeyAndExpr | ContextKeyOrExpr | ContextKeyInExpr | ContextKeyNotInExpr\n);\n\nexport abstract class ContextKeyExpr {\n\n\tpublic static false(): ContextKeyExpression {\n\t\treturn ContextKeyFalseExpr.INSTANCE;\n\t}\n\n\tpublic static true(): ContextKeyExpression {\n\t\treturn ContextKeyTrueExpr.INSTANCE;\n\t}\n\n\tpublic static has(key: string): ContextKeyExpression {\n\t\treturn ContextKeyDefinedExpr.create(key);\n\t}\n\n\tpublic static equals(key: string, value: any): ContextKeyExpression {\n\t\treturn ContextKeyEqualsExpr.create(key, value);\n\t}\n\n\tpublic static notEquals(key: string, value: any): ContextKeyExpression {\n\t\treturn ContextKeyNotEqualsExpr.create(key, value);\n\t}\n\n\tpublic static regex(key: string, value: RegExp): ContextKeyExpression {\n\t\treturn ContextKeyRegexExpr.create(key, value);\n\t}\n\n\tpublic static in(key: string, value: string): ContextKeyExpression {\n\t\treturn ContextKeyInExpr.create(key, value);\n\t}\n\n\tpublic static not(key: string): ContextKeyExpression {\n\t\treturn ContextKeyNotExpr.create(key);\n\t}\n\n\tpublic static and(...expr: Array<ContextKeyExpression | undefined | null>): ContextKeyExpression | undefined {\n\t\treturn ContextKeyAndExpr.create(expr);\n\t}\n\n\tpublic static or(...expr: Array<ContextKeyExpression | undefined | null>): ContextKeyExpression | undefined {\n\t\treturn ContextKeyOrExpr.create(expr);\n\t}\n\n\tpublic static deserialize(serialized: string | null | undefined, strict: boolean = false): ContextKeyExpression | undefined {\n\t\tif (!serialized) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn this._deserializeOrExpression(serialized, strict);\n\t}\n\n\tprivate static _deserializeOrExpression(serialized: string, strict: boolean): ContextKeyExpression | undefined {\n\t\tlet pieces = serialized.split('||');\n\t\treturn ContextKeyOrExpr.create(pieces.map(p => this._deserializeAndExpression(p, strict)));\n\t}\n\n\tprivate static _deserializeAndExpression(serialized: string, strict: boolean): ContextKeyExpression | undefined {\n\t\tlet pieces = serialized.split('&&');\n\t\treturn ContextKeyAndExpr.create(pieces.map(p => this._deserializeOne(p, strict)));\n\t}\n\n\tprivate static _deserializeOne(serializedOne: string, strict: boolean): ContextKeyExpression {\n\t\tserializedOne = serializedOne.trim();\n\n\t\tif (serializedOne.indexOf('!=') >= 0) {\n\t\t\tlet pieces = serializedOne.split('!=');\n\t\t\treturn ContextKeyNotEqualsExpr.create(pieces[0].trim(), this._deserializeValue(pieces[1], strict));\n\t\t}\n\n\t\tif (serializedOne.indexOf('==') >= 0) {\n\t\t\tlet pieces = serializedOne.split('==');\n\t\t\treturn ContextKeyEqualsExpr.create(pieces[0].trim(), this._deserializeValue(pieces[1], strict));\n\t\t}\n\n\t\tif (serializedOne.indexOf('=~') >= 0) {\n\t\t\tlet pieces = serializedOne.split('=~');\n\t\t\treturn ContextKeyRegexExpr.create(pieces[0].trim(), this._deserializeRegexValue(pieces[1], strict));\n\t\t}\n\n\t\tif (serializedOne.indexOf(' in ') >= 0) {\n\t\t\tlet pieces = serializedOne.split(' in ');\n\t\t\treturn ContextKeyInExpr.create(pieces[0].trim(), pieces[1].trim());\n\t\t}\n\n\t\tif (/^\\!\\s*/.test(serializedOne)) {\n\t\t\treturn ContextKeyNotExpr.create(serializedOne.substr(1).trim());\n\t\t}\n\n\t\treturn ContextKeyDefinedExpr.create(serializedOne);\n\t}\n\n\tprivate static _deserializeValue(serializedValue: string, strict: boolean): any {\n\t\tserializedValue = serializedValue.trim();\n\n\t\tif (serializedValue === 'true') {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (serializedValue === 'false') {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet m = /^'([^']*)'$/.exec(serializedValue);\n\t\tif (m) {\n\t\t\treturn m[1].trim();\n\t\t}\n\n\t\treturn serializedValue;\n\t}\n\n\tprivate static _deserializeRegexValue(serializedValue: string, strict: boolean): RegExp | null {\n\n\t\tif (isFalsyOrWhitespace(serializedValue)) {\n\t\t\tif (strict) {\n\t\t\t\tthrow new Error('missing regexp-value for =~-expression');\n\t\t\t} else {\n\t\t\t\tconsole.warn('missing regexp-value for =~-expression');\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tlet start = serializedValue.indexOf('/');\n\t\tlet end = serializedValue.lastIndexOf('/');\n\t\tif (start === end || start < 0 /* || to < 0 */) {\n\t\t\tif (strict) {\n\t\t\t\tthrow new Error(`bad regexp-value '${serializedValue}', missing /-enclosure`);\n\t\t\t} else {\n\t\t\t\tconsole.warn(`bad regexp-value '${serializedValue}', missing /-enclosure`);\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tlet value = serializedValue.slice(start + 1, end);\n\t\tlet caseIgnoreFlag = serializedValue[end + 1] === 'i' ? 'i' : '';\n\t\ttry {\n\t\t\treturn new RegExp(value, caseIgnoreFlag);\n\t\t} catch (e) {\n\t\t\tif (strict) {\n\t\t\t\tthrow new Error(`bad regexp-value '${serializedValue}', parse error: ${e}`);\n\t\t\t} else {\n\t\t\t\tconsole.warn(`bad regexp-value '${serializedValue}', parse error: ${e}`);\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t}\n}\n\nfunction cmp(a: ContextKeyExpression, b: ContextKeyExpression): number {\n\treturn a.cmp(b);\n}\n\nexport class ContextKeyFalseExpr implements IContextKeyExpression {\n\tpublic static INSTANCE = new ContextKeyFalseExpr();\n\n\tpublic readonly type = ContextKeyExprType.False;\n\n\tprotected constructor() {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\treturn this.type - other.type;\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\treturn (other.type === this.type);\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn false;\n\t}\n\n\tpublic serialize(): string {\n\t\treturn 'false';\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn this;\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn ContextKeyTrueExpr.INSTANCE;\n\t}\n}\n\nexport class ContextKeyTrueExpr implements IContextKeyExpression {\n\tpublic static INSTANCE = new ContextKeyTrueExpr();\n\n\tpublic readonly type = ContextKeyExprType.True;\n\n\tprotected constructor() {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\treturn this.type - other.type;\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\treturn (other.type === this.type);\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn true;\n\t}\n\n\tpublic serialize(): string {\n\t\treturn 'true';\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn this;\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn ContextKeyFalseExpr.INSTANCE;\n\t}\n}\n\nexport class ContextKeyDefinedExpr implements IContextKeyExpression {\n\tpublic static create(key: string): ContextKeyExpression {\n\t\tconst staticValue = STATIC_VALUES.get(key);\n\t\tif (typeof staticValue === 'boolean') {\n\t\t\treturn staticValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE;\n\t\t}\n\t\treturn new ContextKeyDefinedExpr(key);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Defined;\n\n\tprotected constructor(protected readonly key: string) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\tif (this.key < other.key) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this.key > other.key) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn (!!context.getValue(this.key));\n\t}\n\n\tpublic serialize(): string {\n\t\treturn this.key;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapDefined(this.key);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn ContextKeyNotExpr.create(this.key);\n\t}\n}\n\nexport class ContextKeyEqualsExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, value: any): ContextKeyExpression {\n\t\tif (typeof value === 'boolean') {\n\t\t\treturn (value ? ContextKeyDefinedExpr.create(key) : ContextKeyNotExpr.create(key));\n\t\t}\n\t\tconst staticValue = STATIC_VALUES.get(key);\n\t\tif (typeof staticValue === 'boolean') {\n\t\t\tconst trueValue = staticValue ? 'true' : 'false';\n\t\t\treturn (value === trueValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE);\n\t\t}\n\t\treturn new ContextKeyEqualsExpr(key, value);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Equals;\n\n\tprivate constructor(private readonly key: string, private readonly value: any) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\tif (this.key < other.key) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this.key > other.key) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (this.value < other.value) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this.value > other.value) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key && this.value === other.value);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\t// Intentional ==\n\t\t// eslint-disable-next-line eqeqeq\n\t\treturn (context.getValue(this.key) == this.value);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn this.key + ' == \\'' + this.value + '\\'';\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapEquals(this.key, this.value);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn ContextKeyNotEqualsExpr.create(this.key, this.value);\n\t}\n}\n\nexport class ContextKeyInExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, valueKey: string): ContextKeyInExpr {\n\t\treturn new ContextKeyInExpr(key, valueKey);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.In;\n\n\tprivate constructor(private readonly key: string, private readonly valueKey: string) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\tif (this.key < other.key) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this.key > other.key) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (this.valueKey < other.valueKey) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this.valueKey > other.valueKey) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key && this.valueKey === other.valueKey);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tconst source = context.getValue(this.valueKey);\n\n\t\tconst item = context.getValue(this.key);\n\n\t\tif (Array.isArray(source)) {\n\t\t\treturn (source.indexOf(item) >= 0);\n\t\t}\n\n\t\tif (typeof item === 'string' && typeof source === 'object' && source !== null) {\n\t\t\treturn hasOwnProperty.call(source, item);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic serialize(): string {\n\t\treturn this.key + ' in \\'' + this.valueKey + '\\'';\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key, this.valueKey];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyInExpr {\n\t\treturn mapFnc.mapIn(this.key, this.valueKey);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn ContextKeyNotInExpr.create(this);\n\t}\n}\n\nexport class ContextKeyNotInExpr implements IContextKeyExpression {\n\n\tpublic static create(actual: ContextKeyInExpr): ContextKeyNotInExpr {\n\t\treturn new ContextKeyNotInExpr(actual);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.NotIn;\n\n\tprivate constructor(private readonly _actual: ContextKeyInExpr) {\n\t\t//\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn this._actual.cmp(other._actual);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn this._actual.equals(other._actual);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn !this._actual.evaluate(context);\n\t}\n\n\tpublic serialize(): string {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn this._actual.keys();\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn new ContextKeyNotInExpr(this._actual.map(mapFnc));\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn this._actual;\n\t}\n}\n\nexport class ContextKeyNotEqualsExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, value: any): ContextKeyExpression {\n\t\tif (typeof value === 'boolean') {\n\t\t\tif (value) {\n\t\t\t\treturn ContextKeyNotExpr.create(key);\n\t\t\t}\n\t\t\treturn ContextKeyDefinedExpr.create(key);\n\t\t}\n\t\tconst staticValue = STATIC_VALUES.get(key);\n\t\tif (typeof staticValue === 'boolean') {\n\t\t\tconst falseValue = staticValue ? 'true' : 'false';\n\t\t\treturn (value === falseValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n\t\t}\n\t\treturn new ContextKeyNotEqualsExpr(key, value);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.NotEquals;\n\n\tprivate constructor(private readonly key: string, private readonly value: any) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\tif (this.key < other.key) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this.key > other.key) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (this.value < other.value) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this.value > other.value) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key && this.value === other.value);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\t// Intentional !=\n\t\t// eslint-disable-next-line eqeqeq\n\t\treturn (context.getValue(this.key) != this.value);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn this.key + ' != \\'' + this.value + '\\'';\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapNotEquals(this.key, this.value);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn ContextKeyEqualsExpr.create(this.key, this.value);\n\t}\n}\n\nexport class ContextKeyNotExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string): ContextKeyExpression {\n\t\tconst staticValue = STATIC_VALUES.get(key);\n\t\tif (typeof staticValue === 'boolean') {\n\t\t\treturn (staticValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n\t\t}\n\t\treturn new ContextKeyNotExpr(key);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Not;\n\n\tprivate constructor(private readonly key: string) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\tif (this.key < other.key) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this.key > other.key) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn (!context.getValue(this.key));\n\t}\n\n\tpublic serialize(): string {\n\t\treturn '!' + this.key;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapNot(this.key);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn ContextKeyDefinedExpr.create(this.key);\n\t}\n}\n\nexport class ContextKeyRegexExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, regexp: RegExp | null): ContextKeyRegexExpr {\n\t\treturn new ContextKeyRegexExpr(key, regexp);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Regex;\n\n\tprivate constructor(private readonly key: string, private readonly regexp: RegExp | null) {\n\t\t//\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\tif (this.key < other.key) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this.key > other.key) {\n\t\t\treturn 1;\n\t\t}\n\t\tconst thisSource = this.regexp ? this.regexp.source : '';\n\t\tconst otherSource = other.regexp ? other.regexp.source : '';\n\t\tif (thisSource < otherSource) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (thisSource > otherSource) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\tconst thisSource = this.regexp ? this.regexp.source : '';\n\t\t\tconst otherSource = other.regexp ? other.regexp.source : '';\n\t\t\treturn (this.key === other.key && thisSource === otherSource);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tlet value = context.getValue<any>(this.key);\n\t\treturn this.regexp ? this.regexp.test(value) : false;\n\t}\n\n\tpublic serialize(): string {\n\t\tconst value = this.regexp\n\t\t\t? `/${this.regexp.source}/${this.regexp.ignoreCase ? 'i' : ''}`\n\t\t\t: '/invalid/';\n\t\treturn `${this.key} =~ ${value}`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyRegexExpr {\n\t\treturn mapFnc.mapRegex(this.key, this.regexp);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn ContextKeyNotRegexExpr.create(this);\n\t}\n}\n\nexport class ContextKeyNotRegexExpr implements IContextKeyExpression {\n\n\tpublic static create(actual: ContextKeyRegexExpr): ContextKeyExpression {\n\t\treturn new ContextKeyNotRegexExpr(actual);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.NotRegex;\n\n\tprivate constructor(private readonly _actual: ContextKeyRegexExpr) {\n\t\t//\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn this._actual.cmp(other._actual);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn this._actual.equals(other._actual);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn !this._actual.evaluate(context);\n\t}\n\n\tpublic serialize(): string {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn this._actual.keys();\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn new ContextKeyNotRegexExpr(this._actual.map(mapFnc));\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn this._actual;\n\t}\n}\n\nexport class ContextKeyAndExpr implements IContextKeyExpression {\n\n\tpublic static create(_expr: ReadonlyArray<ContextKeyExpression | null | undefined>): ContextKeyExpression | undefined {\n\t\treturn ContextKeyAndExpr._normalizeArr(_expr);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.And;\n\n\tprivate constructor(public readonly expr: ContextKeyExpression[]) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\tif (this.expr.length < other.expr.length) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this.expr.length > other.expr.length) {\n\t\t\treturn 1;\n\t\t}\n\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\tconst r = cmp(this.expr[i], other.expr[i]);\n\t\t\tif (r !== 0) {\n\t\t\t\treturn r;\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\tif (this.expr.length !== other.expr.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\t\tif (!this.expr[i].equals(other.expr[i])) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\tif (!this.expr[i].evaluate(context)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate static _normalizeArr(arr: ReadonlyArray<ContextKeyExpression | null | undefined>): ContextKeyExpression | undefined {\n\t\tconst expr: ContextKeyExpression[] = [];\n\t\tlet hasTrue = false;\n\n\t\tfor (const e of arr) {\n\t\t\tif (!e) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (e.type === ContextKeyExprType.True) {\n\t\t\t\t// anything && true ==> anything\n\t\t\t\thasTrue = true;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (e.type === ContextKeyExprType.False) {\n\t\t\t\t// anything && false ==> false\n\t\t\t\treturn ContextKeyFalseExpr.INSTANCE;\n\t\t\t}\n\n\t\t\tif (e.type === ContextKeyExprType.And) {\n\t\t\t\texpr.push(...e.expr);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\texpr.push(e);\n\t\t}\n\n\t\tif (expr.length === 0 && hasTrue) {\n\t\t\treturn ContextKeyTrueExpr.INSTANCE;\n\t\t}\n\n\t\tif (expr.length === 0) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (expr.length === 1) {\n\t\t\treturn expr[0];\n\t\t}\n\n\t\texpr.sort(cmp);\n\n\t\t// We must distribute any OR expression because we don't support parens\n\t\t// OR extensions will be at the end (due to sorting rules)\n\t\twhile (expr.length > 1) {\n\t\t\tconst lastElement = expr[expr.length - 1];\n\t\t\tif (lastElement.type !== ContextKeyExprType.Or) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t// pop the last element\n\t\t\texpr.pop();\n\n\t\t\t// pop the second to last element\n\t\t\tconst secondToLastElement = expr.pop()!;\n\n\t\t\t// distribute `lastElement` over `secondToLastElement`\n\t\t\tconst resultElement = ContextKeyOrExpr.create(\n\t\t\t\tlastElement.expr.map(el => ContextKeyAndExpr.create([el, secondToLastElement]))\n\t\t\t);\n\n\t\t\tif (resultElement) {\n\t\t\t\texpr.push(resultElement);\n\t\t\t\texpr.sort(cmp);\n\t\t\t}\n\t\t}\n\n\t\tif (expr.length === 1) {\n\t\t\treturn expr[0];\n\t\t}\n\n\t\treturn new ContextKeyAndExpr(expr);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn this.expr.map(e => e.serialize()).join(' && ');\n\t}\n\n\tpublic keys(): string[] {\n\t\tconst result: string[] = [];\n\t\tfor (let expr of this.expr) {\n\t\t\tresult.push(...expr.keys());\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn new ContextKeyAndExpr(this.expr.map(expr => expr.map(mapFnc)));\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tlet result: ContextKeyExpression[] = [];\n\t\tfor (let expr of this.expr) {\n\t\t\tresult.push(expr.negate());\n\t\t}\n\t\treturn ContextKeyOrExpr.create(result)!;\n\t}\n}\n\nexport class ContextKeyOrExpr implements IContextKeyExpression {\n\n\tpublic static create(_expr: ReadonlyArray<ContextKeyExpression | null | undefined>): ContextKeyExpression | undefined {\n\t\tconst expr = ContextKeyOrExpr._normalizeArr(_expr);\n\t\tif (expr.length === 0) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (expr.length === 1) {\n\t\t\treturn expr[0];\n\t\t}\n\n\t\treturn new ContextKeyOrExpr(expr);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Or;\n\n\tprivate constructor(public readonly expr: ContextKeyExpression[]) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\tif (this.expr.length < other.expr.length) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this.expr.length > other.expr.length) {\n\t\t\treturn 1;\n\t\t}\n\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\tconst r = cmp(this.expr[i], other.expr[i]);\n\t\t\tif (r !== 0) {\n\t\t\t\treturn r;\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\tif (this.expr.length !== other.expr.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\t\tif (!this.expr[i].equals(other.expr[i])) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\tif (this.expr[i].evaluate(context)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate static _normalizeArr(arr: ReadonlyArray<ContextKeyExpression | null | undefined>): ContextKeyExpression[] {\n\t\tlet expr: ContextKeyExpression[] = [];\n\t\tlet hasFalse = false;\n\n\t\tif (arr) {\n\t\t\tfor (let i = 0, len = arr.length; i < len; i++) {\n\t\t\t\tconst e = arr[i];\n\t\t\t\tif (!e) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (e.type === ContextKeyExprType.False) {\n\t\t\t\t\t// anything || false ==> anything\n\t\t\t\t\thasFalse = true;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (e.type === ContextKeyExprType.True) {\n\t\t\t\t\t// anything || true ==> true\n\t\t\t\t\treturn [ContextKeyTrueExpr.INSTANCE];\n\t\t\t\t}\n\n\t\t\t\tif (e.type === ContextKeyExprType.Or) {\n\t\t\t\t\texpr = expr.concat(e.expr);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\texpr.push(e);\n\t\t\t}\n\n\t\t\tif (expr.length === 0 && hasFalse) {\n\t\t\t\treturn [ContextKeyFalseExpr.INSTANCE];\n\t\t\t}\n\n\t\t\texpr.sort(cmp);\n\t\t}\n\n\t\treturn expr;\n\t}\n\n\tpublic serialize(): string {\n\t\treturn this.expr.map(e => e.serialize()).join(' || ');\n\t}\n\n\tpublic keys(): string[] {\n\t\tconst result: string[] = [];\n\t\tfor (let expr of this.expr) {\n\t\t\tresult.push(...expr.keys());\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn new ContextKeyOrExpr(this.expr.map(expr => expr.map(mapFnc)));\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tlet result: ContextKeyExpression[] = [];\n\t\tfor (let expr of this.expr) {\n\t\t\tresult.push(expr.negate());\n\t\t}\n\n\t\tconst terminals = (node: ContextKeyExpression) => {\n\t\t\tif (node.type === ContextKeyExprType.Or) {\n\t\t\t\treturn node.expr;\n\t\t\t}\n\t\t\treturn [node];\n\t\t};\n\n\t\t// We don't support parens, so here we distribute the AND over the OR terminals\n\t\t// We always take the first 2 AND pairs and distribute them\n\t\twhile (result.length > 1) {\n\t\t\tconst LEFT = result.shift()!;\n\t\t\tconst RIGHT = result.shift()!;\n\n\t\t\tconst all: ContextKeyExpression[] = [];\n\t\t\tfor (const left of terminals(LEFT)) {\n\t\t\t\tfor (const right of terminals(RIGHT)) {\n\t\t\t\t\tall.push(ContextKeyExpr.and(left, right)!);\n\t\t\t\t}\n\t\t\t}\n\t\t\tresult.unshift(ContextKeyExpr.or(...all)!);\n\t\t}\n\n\t\treturn result[0];\n\t}\n}\n\nexport class RawContextKey<T> extends ContextKeyDefinedExpr {\n\n\tprivate readonly _defaultValue: T | undefined;\n\n\tconstructor(key: string, defaultValue: T | undefined) {\n\t\tsuper(key);\n\t\tthis._defaultValue = defaultValue;\n\t}\n\n\tpublic bindTo(target: IContextKeyService): IContextKey<T> {\n\t\treturn target.createKey(this.key, this._defaultValue);\n\t}\n\n\tpublic getValue(target: IContextKeyService): T | undefined {\n\t\treturn target.getContextKeyValue<T>(this.key);\n\t}\n\n\tpublic toNegated(): ContextKeyExpression {\n\t\treturn ContextKeyExpr.not(this.key);\n\t}\n\n\tpublic isEqualTo(value: string): ContextKeyExpression {\n\t\treturn ContextKeyExpr.equals(this.key, value);\n\t}\n\n\tpublic notEqualsTo(value: string): ContextKeyExpression {\n\t\treturn ContextKeyExpr.notEquals(this.key, value);\n\t}\n}\n\nexport interface IContext {\n\tgetValue<T>(key: string): T | undefined;\n}\n\nexport interface IContextKey<T> {\n\tset(value: T): void;\n\treset(): void;\n\tget(): T | undefined;\n}\n\nexport interface IContextKeyServiceTarget {\n\tparentElement: IContextKeyServiceTarget | null;\n\tsetAttribute(attr: string, value: string): void;\n\tremoveAttribute(attr: string): void;\n\thasAttribute(attr: string): boolean;\n\tgetAttribute(attr: string): string | null;\n}\n\nexport const IContextKeyService = createDecorator<IContextKeyService>('contextKeyService');\n\nexport interface IReadableSet<T> {\n\thas(value: T): boolean;\n}\n\nexport interface IContextKeyChangeEvent {\n\taffectsSome(keys: IReadableSet<string>): boolean;\n}\n\nexport interface IContextKeyService {\n\treadonly _serviceBrand: undefined;\n\tdispose(): void;\n\n\tonDidChangeContext: Event<IContextKeyChangeEvent>;\n\tbufferChangeEvents(callback: Function): void;\n\n\tcreateKey<T>(key: string, defaultValue: T | undefined): IContextKey<T>;\n\tcontextMatchesRules(rules: ContextKeyExpression | undefined): boolean;\n\tgetContextKeyValue<T>(key: string): T | undefined;\n\n\tcreateScoped(target?: IContextKeyServiceTarget): IContextKeyService;\n\tgetContext(target: IContextKeyServiceTarget | null): IContext;\n\n\tupdateParent(parentContextKeyService: IContextKeyService): void;\n}\n\nexport const SET_CONTEXT_COMMAND_ID = 'setContext';\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { CancellationToken } from 'vs/base/common/cancellation';\n\nexport const IDownloadService = createDecorator<IDownloadService>('downloadService');\n\nexport interface IDownloadService {\n\n\treadonly _serviceBrand: undefined;\n\n\tdownload(uri: URI, to: URI, cancellationToken?: CancellationToken): Promise<void>;\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { URI } from 'vs/base/common/uri';\nimport { NativeParsedArgs } from 'vs/platform/environment/common/argv';\n\nexport const IEnvironmentService = createDecorator<IEnvironmentService>('environmentService');\nexport const INativeEnvironmentService = createDecorator<INativeEnvironmentService>('nativeEnvironmentService');\n\nexport interface IDebugParams {\n\tport: number | null;\n\tbreak: boolean;\n}\n\nexport interface IExtensionHostDebugParams extends IDebugParams {\n\tdebugId?: string;\n}\n\n/**\n * A basic environment service that can be used in various processes,\n * such as main, renderer and shared process. Use subclasses of this\n * service for specific environment.\n */\nexport interface IEnvironmentService {\n\n\treadonly _serviceBrand: undefined;\n\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\t//\n\t// NOTE: KEEP THIS INTERFACE AS SMALL AS POSSIBLE.\n\t//\n\t// AS SUCH:\n\t//   - PUT NON-WEB PROPERTIES INTO NATIVE ENVIRONMENT SERVICE\n\t//   - PUT WORKBENCH ONLY PROPERTIES INTO WORKBENCH ENVIRONMENT SERVICE\n\t//   - PUT ELECTRON-MAIN ONLY PROPERTIES INTO MAIN ENVIRONMENT SERVICE\n\t//\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n\t// --- user roaming data\n\tuserRoamingDataHome: URI;\n\tsettingsResource: URI;\n\tkeybindingsResource: URI;\n\tkeyboardLayoutResource: URI;\n\targvResource: URI;\n\tsnippetsHome: URI;\n\n\t// --- data paths\n\tuntitledWorkspacesHome: URI;\n\tglobalStorageHome: URI;\n\tworkspaceStorageHome: URI;\n\n\t// --- settings sync\n\tuserDataSyncHome: URI;\n\tuserDataSyncLogResource: URI;\n\tsync: 'on' | 'off' | undefined;\n\n\t// --- extension development\n\tdebugExtensionHost: IExtensionHostDebugParams;\n\tisExtensionDevelopment: boolean;\n\tdisableExtensions: boolean | string[];\n\textensionDevelopmentLocationURI?: URI[];\n\textensionTestsLocationURI?: URI;\n\n\t// --- logging\n\tlogsPath: string;\n\tlogLevel?: string;\n\tverbose: boolean;\n\tisBuilt: boolean;\n\n\t// --- telemetry\n\tdisableTelemetry: boolean;\n\ttelemetryLogResource: URI;\n\tserviceMachineIdResource: URI;\n\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\t//\n\t// NOTE: KEEP THIS INTERFACE AS SMALL AS POSSIBLE.\n\t//\n\t// AS SUCH:\n\t//   - PUT NON-WEB PROPERTIES INTO NATIVE ENVIRONMENT SERVICE\n\t//   - PUT WORKBENCH ONLY PROPERTIES INTO WORKBENCH ENVIRONMENT SERVICE\n\t//   - PUT ELECTRON-MAIN ONLY PROPERTIES INTO MAIN ENVIRONMENT SERVICE\n\t//\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n}\n\n/**\n * A subclass of the `IEnvironmentService` to be used only in native\n * environments (Windows, Linux, macOS) but not e.g. web.\n */\nexport interface INativeEnvironmentService extends IEnvironmentService {\n\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\t//\n\t// NOTE: KEEP THIS INTERFACE AS SMALL AS POSSIBLE.\n\t//\n\t// AS SUCH:\n\t//   - PUT WORKBENCH ONLY PROPERTIES INTO WORKBENCH ENVIRONMENT SERVICE\n\t//   - PUT ELECTRON-MAIN ONLY PROPERTIES INTO MAIN ENVIRONMENT SERVICE\n\t//\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n\t// --- CLI Arguments\n\targs: NativeParsedArgs;\n\n\t// --- paths\n\tappRoot: string;\n\tuserHome: URI;\n\tappSettingsHome: URI;\n\ttmpDir: URI;\n\tuserDataPath: string;\n\tmachineSettingsResource: URI;\n\tinstallSourcePath: string;\n\n\t// --- IPC Handles\n\tsharedIPCHandle: string;\n\n\t// --- Extensions\n\textensionsPath?: string;\n\textensionsDownloadPath: string;\n\tbuiltinExtensionsPath: string;\n\textraExtensionPaths: string[]\n\textraBuiltinExtensionPaths: string[]\n\n\t// --- Smoke test support\n\tdriverHandle?: string;\n\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\t//\n\t// NOTE: KEEP THIS INTERFACE AS SMALL AS POSSIBLE.\n\t//\n\t// AS SUCH:\n\t//   - PUT NON-WEB PROPERTIES INTO NATIVE ENVIRONMENT SERVICE\n\t//   - PUT WORKBENCH ONLY PROPERTIES INTO WORKBENCH ENVIRONMENT SERVICE\n\t//   - PUT ELECTRON-MAIN ONLY PROPERTIES INTO MAIN ENVIRONMENT SERVICE\n\t//\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { join, dirname, basename } from 'vs/base/common/path';\nimport { readdir, rimraf } from 'vs/base/node/pfs';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { Disposable, toDisposable } from 'vs/base/common/lifecycle';\n\nexport class LogsDataCleaner extends Disposable {\n\n\tconstructor(\n\t\t@IEnvironmentService private readonly environmentService: IEnvironmentService\n\t) {\n\t\tsuper();\n\n\t\tthis.cleanUpOldLogsSoon();\n\t}\n\n\tprivate cleanUpOldLogsSoon(): void {\n\t\tlet handle: NodeJS.Timeout | undefined = setTimeout(() => {\n\t\t\thandle = undefined;\n\n\t\t\tconst currentLog = basename(this.environmentService.logsPath);\n\t\t\tconst logsRoot = dirname(this.environmentService.logsPath);\n\n\t\t\treaddir(logsRoot).then(children => {\n\t\t\t\tconst allSessions = children.filter(name => /^\\d{8}T\\d{6}$/.test(name));\n\t\t\t\tconst oldSessions = allSessions.sort().filter((d, i) => d !== currentLog);\n\t\t\t\tconst toDelete = oldSessions.slice(0, Math.max(0, oldSessions.length - 9));\n\n\t\t\t\treturn Promise.all(toDelete.map(name => rimraf(join(logsRoot, name))));\n\t\t\t}).then(null, onUnexpectedError);\n\t\t}, 10 * 1000);\n\n\t\tthis._register(toDisposable(() => {\n\t\t\tif (handle) {\n\t\t\t\tclearTimeout(handle);\n\t\t\t\thandle = undefined;\n\t\t\t}\n\t\t}));\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { Event } from 'vs/base/common/event';\nimport { IPager } from 'vs/base/common/paging';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { URI } from 'vs/base/common/uri';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IExtensionManifest, IExtension, ExtensionType } from 'vs/platform/extensions/common/extensions';\nimport { FileAccess } from 'vs/base/common/network';\n\nexport const EXTENSION_IDENTIFIER_PATTERN = '^([a-z0-9A-Z][a-z0-9-A-Z]*)\\\\.([a-z0-9A-Z][a-z0-9-A-Z]*)$';\nexport const EXTENSION_IDENTIFIER_REGEX = new RegExp(EXTENSION_IDENTIFIER_PATTERN);\n\nexport interface IGalleryExtensionProperties {\n\tdependencies?: string[];\n\textensionPack?: string[];\n\tengine?: string;\n\tlocalizedLanguages?: string[];\n\twebExtension?: boolean;\n}\n\nexport interface IGalleryExtensionAsset {\n\turi: string;\n\tfallbackUri: string;\n}\n\nexport interface IGalleryExtensionAssets {\n\tmanifest: IGalleryExtensionAsset | null;\n\treadme: IGalleryExtensionAsset | null;\n\tchangelog: IGalleryExtensionAsset | null;\n\tlicense: IGalleryExtensionAsset | null;\n\trepository: IGalleryExtensionAsset | null;\n\tdownload: IGalleryExtensionAsset;\n\ticon: IGalleryExtensionAsset;\n\tcoreTranslations: [string, IGalleryExtensionAsset][];\n}\n\nexport function isIExtensionIdentifier(thing: any): thing is IExtensionIdentifier {\n\treturn thing\n\t\t&& typeof thing === 'object'\n\t\t&& typeof thing.id === 'string'\n\t\t&& (!thing.uuid || typeof thing.uuid === 'string');\n}\n\n/* __GDPR__FRAGMENT__\n\t\"ExtensionIdentifier\" : {\n\t\t\"id\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"uuid\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t}\n */\nexport interface IExtensionIdentifier {\n\tid: string;\n\tuuid?: string;\n}\n\nexport interface IExtensionIdentifierWithVersion extends IExtensionIdentifier {\n\tid: string;\n\tuuid?: string;\n\tversion: string;\n}\n\nexport interface IGalleryExtensionIdentifier extends IExtensionIdentifier {\n\tuuid: string;\n}\n\nexport interface IGalleryExtensionVersion {\n\tversion: string;\n\tdate: string;\n}\n\nexport interface IGalleryExtension {\n\tname: string;\n\tidentifier: IGalleryExtensionIdentifier;\n\tversion: string;\n\tdate: string;\n\tdisplayName: string;\n\tpublisherId: string;\n\tpublisher: string;\n\tpublisherDisplayName: string;\n\tdescription: string;\n\tinstallCount: number;\n\trating: number;\n\tratingCount: number;\n\tassetUri: URI;\n\tassetTypes: string[];\n\tassets: IGalleryExtensionAssets;\n\tproperties: IGalleryExtensionProperties;\n\ttelemetryData: any;\n\tpreview: boolean;\n\twebResource?: URI;\n}\n\nexport interface IGalleryMetadata {\n\tid: string;\n\tpublisherId: string;\n\tpublisherDisplayName: string;\n}\n\nexport interface ILocalExtension extends IExtension {\n\tisMachineScoped: boolean;\n\tpublisherId: string | null;\n\tpublisherDisplayName: string | null;\n}\n\nexport const enum SortBy {\n\tNoneOrRelevance = 0,\n\tLastUpdatedDate = 1,\n\tTitle = 2,\n\tPublisherName = 3,\n\tInstallCount = 4,\n\tPublishedDate = 5,\n\tAverageRating = 6,\n\tWeightedRating = 12\n}\n\nexport const enum SortOrder {\n\tDefault = 0,\n\tAscending = 1,\n\tDescending = 2\n}\n\nexport interface IQueryOptions {\n\ttext?: string;\n\tids?: string[];\n\tnames?: string[];\n\tpageSize?: number;\n\tsortBy?: SortBy;\n\tsortOrder?: SortOrder;\n\tsource?: string;\n}\n\nexport const enum StatisticType {\n\tUninstall = 'uninstall'\n}\n\nexport interface IReportedExtension {\n\tid: IExtensionIdentifier;\n\tmalicious: boolean;\n}\n\nexport const enum InstallOperation {\n\tNone = 0,\n\tInstall,\n\tUpdate\n}\n\nexport interface ITranslation {\n\tcontents: { [key: string]: {} };\n}\n\nexport const IExtensionGalleryService = createDecorator<IExtensionGalleryService>('extensionGalleryService');\nexport interface IExtensionGalleryService {\n\treadonly _serviceBrand: undefined;\n\tisEnabled(): boolean;\n\tquery(token: CancellationToken): Promise<IPager<IGalleryExtension>>;\n\tquery(options: IQueryOptions, token: CancellationToken): Promise<IPager<IGalleryExtension>>;\n\tgetExtensions(ids: string[], token: CancellationToken): Promise<IGalleryExtension[]>;\n\tdownload(extension: IGalleryExtension, location: URI, operation: InstallOperation): Promise<void>;\n\treportStatistic(publisher: string, name: string, version: string, type: StatisticType): Promise<void>;\n\tgetReadme(extension: IGalleryExtension, token: CancellationToken): Promise<string>;\n\tgetManifest(extension: IGalleryExtension, token: CancellationToken): Promise<IExtensionManifest | null>;\n\tgetChangelog(extension: IGalleryExtension, token: CancellationToken): Promise<string>;\n\tgetCoreTranslation(extension: IGalleryExtension, languageId: string): Promise<ITranslation | null>;\n\tgetAllVersions(extension: IGalleryExtension, compatible: boolean): Promise<IGalleryExtensionVersion[]>;\n\tgetExtensionsReport(): Promise<IReportedExtension[]>;\n\tgetCompatibleExtension(extension: IGalleryExtension): Promise<IGalleryExtension | null>;\n\tgetCompatibleExtension(id: IExtensionIdentifier, version?: string): Promise<IGalleryExtension | null>;\n}\n\nexport interface InstallExtensionEvent {\n\tidentifier: IExtensionIdentifier;\n\tzipPath?: string;\n\tgallery?: IGalleryExtension;\n}\n\nexport interface DidInstallExtensionEvent {\n\tidentifier: IExtensionIdentifier;\n\toperation: InstallOperation;\n\tzipPath?: string;\n\tgallery?: IGalleryExtension;\n\tlocal?: ILocalExtension;\n\terror?: string;\n}\n\nexport interface DidUninstallExtensionEvent {\n\tidentifier: IExtensionIdentifier;\n\terror?: string;\n}\n\nexport const INSTALL_ERROR_NOT_SUPPORTED = 'notsupported';\nexport const INSTALL_ERROR_MALICIOUS = 'malicious';\nexport const INSTALL_ERROR_INCOMPATIBLE = 'incompatible';\n\nexport class ExtensionManagementError extends Error {\n\tconstructor(message: string, readonly code: string) {\n\t\tsuper(message);\n\t}\n}\n\nexport type InstallOptions = { isBuiltin?: boolean, isMachineScoped?: boolean };\n\nexport const IExtensionManagementService = createDecorator<IExtensionManagementService>('extensionManagementService');\nexport interface IExtensionManagementService {\n\treadonly _serviceBrand: undefined;\n\n\tonInstallExtension: Event<InstallExtensionEvent>;\n\tonDidInstallExtension: Event<DidInstallExtensionEvent>;\n\tonUninstallExtension: Event<IExtensionIdentifier>;\n\tonDidUninstallExtension: Event<DidUninstallExtensionEvent>;\n\n\tzip(extension: ILocalExtension): Promise<URI>;\n\tunzip(zipLocation: URI): Promise<IExtensionIdentifier>;\n\tgetManifest(vsix: URI): Promise<IExtensionManifest>;\n\tinstall(vsix: URI, options?: InstallOptions): Promise<ILocalExtension>;\n\tcanInstall(extension: IGalleryExtension): Promise<boolean>;\n\tinstallFromGallery(extension: IGalleryExtension, options?: InstallOptions): Promise<ILocalExtension>;\n\tuninstall(extension: ILocalExtension, force?: boolean): Promise<void>;\n\treinstallFromGallery(extension: ILocalExtension): Promise<void>;\n\tgetInstalled(type?: ExtensionType): Promise<ILocalExtension[]>;\n\tgetExtensionsReport(): Promise<IReportedExtension[]>;\n\n\tupdateMetadata(local: ILocalExtension, metadata: IGalleryMetadata): Promise<ILocalExtension>;\n\tupdateExtensionScope(local: ILocalExtension, isMachineScoped: boolean): Promise<ILocalExtension>;\n}\n\nexport const DISABLED_EXTENSIONS_STORAGE_PATH = 'extensionsIdentifiers/disabled';\nexport const ENABLED_EXTENSIONS_STORAGE_PATH = 'extensionsIdentifiers/enabled';\nexport const IGlobalExtensionEnablementService = createDecorator<IGlobalExtensionEnablementService>('IGlobalExtensionEnablementService');\n\nexport interface IGlobalExtensionEnablementService {\n\treadonly _serviceBrand: undefined;\n\treadonly onDidChangeEnablement: Event<{ readonly extensions: IExtensionIdentifier[], readonly source?: string }>;\n\n\tgetDisabledExtensions(): IExtensionIdentifier[];\n\tenableExtension(extension: IExtensionIdentifier, source?: string): Promise<boolean>;\n\tdisableExtension(extension: IExtensionIdentifier, source?: string): Promise<boolean>;\n\n}\n\nexport type IConfigBasedExtensionTip = {\n\treadonly extensionId: string,\n\treadonly extensionName: string,\n\treadonly isExtensionPack: boolean,\n\treadonly configName: string,\n\treadonly important: boolean,\n};\n\nexport type IExecutableBasedExtensionTip = {\n\treadonly extensionId: string,\n\treadonly extensionName: string,\n\treadonly isExtensionPack: boolean,\n\treadonly exeName: string,\n\treadonly exeFriendlyName: string,\n\treadonly windowsPath?: string,\n};\n\nexport type IWorkspaceTips = { readonly remoteSet: string[]; readonly recommendations: string[]; };\n\nexport const IExtensionTipsService = createDecorator<IExtensionTipsService>('IExtensionTipsService');\nexport interface IExtensionTipsService {\n\treadonly _serviceBrand: undefined;\n\n\tgetConfigBasedTips(folder: URI): Promise<IConfigBasedExtensionTip[]>;\n\tgetImportantExecutableBasedTips(): Promise<IExecutableBasedExtensionTip[]>;\n\tgetOtherExecutableBasedTips(): Promise<IExecutableBasedExtensionTip[]>;\n\tgetAllWorkspacesTips(): Promise<IWorkspaceTips[]>;\n}\n\n\nexport const DefaultIconPath = FileAccess.asBrowserUri('./media/defaultIcon.png', require).toString(true);\nexport const ExtensionsLabel = localize('extensions', \"Extensions\");\nexport const ExtensionsLocalizedLabel = { value: ExtensionsLabel, original: 'Extensions' };\nexport const ExtensionsChannelId = 'extensions';\nexport const PreferencesLabel = localize('preferences', \"Preferences\");\nexport const PreferencesLocalizedLabel = { value: PreferencesLabel, original: 'Preferences' };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as strings from 'vs/base/common/strings';\nimport { ILocalization } from 'vs/platform/localizations/common/localizations';\nimport { URI } from 'vs/base/common/uri';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const MANIFEST_CACHE_FOLDER = 'CachedExtensions';\nexport const USER_MANIFEST_CACHE_FILE = 'user';\nexport const BUILTIN_MANIFEST_CACHE_FILE = 'builtin';\n\nexport interface ICommand {\n\tcommand: string;\n\ttitle: string;\n\tcategory?: string;\n}\n\nexport interface IConfigurationProperty {\n\tdescription: string;\n\ttype: string | string[];\n\tdefault?: any;\n}\n\nexport interface IConfiguration {\n\tproperties: { [key: string]: IConfigurationProperty; };\n}\n\nexport interface IDebugger {\n\tlabel?: string;\n\ttype: string;\n\truntime?: string;\n}\n\nexport interface IGrammar {\n\tlanguage: string;\n}\n\nexport interface IJSONValidation {\n\tfileMatch: string | string[];\n\turl: string;\n}\n\nexport interface IKeyBinding {\n\tcommand: string;\n\tkey: string;\n\twhen?: string;\n\tmac?: string;\n\tlinux?: string;\n\twin?: string;\n}\n\nexport interface ILanguage {\n\tid: string;\n\textensions: string[];\n\taliases: string[];\n}\n\nexport interface IMenu {\n\tcommand: string;\n\talt?: string;\n\twhen?: string;\n\tgroup?: string;\n}\n\nexport interface ISnippet {\n\tlanguage: string;\n}\n\nexport interface ITheme {\n\tlabel: string;\n}\n\nexport interface IViewContainer {\n\tid: string;\n\ttitle: string;\n}\n\nexport interface IView {\n\tid: string;\n\tname: string;\n}\n\nexport interface IColor {\n\tid: string;\n\tdescription: string;\n\tdefaults: { light: string, dark: string, highContrast: string };\n}\n\nexport interface IWebviewEditor {\n\treadonly viewType: string;\n\treadonly priority: string;\n\treadonly selector: readonly {\n\t\treadonly filenamePattern?: string;\n\t}[];\n}\n\nexport interface ICodeActionContributionAction {\n\treadonly kind: string;\n\treadonly title: string;\n\treadonly description?: string;\n}\n\nexport interface ICodeActionContribution {\n\treadonly languages: readonly string[];\n\treadonly actions: readonly ICodeActionContributionAction[];\n}\n\nexport interface IAuthenticationContribution {\n\treadonly id: string;\n\treadonly label: string;\n}\n\nexport interface IExtensionContributions {\n\tcommands?: ICommand[];\n\tconfiguration?: IConfiguration | IConfiguration[];\n\tdebuggers?: IDebugger[];\n\tgrammars?: IGrammar[];\n\tjsonValidation?: IJSONValidation[];\n\tkeybindings?: IKeyBinding[];\n\tlanguages?: ILanguage[];\n\tmenus?: { [context: string]: IMenu[] };\n\tsnippets?: ISnippet[];\n\tthemes?: ITheme[];\n\ticonThemes?: ITheme[];\n\tviewsContainers?: { [location: string]: IViewContainer[] };\n\tviews?: { [location: string]: IView[] };\n\tcolors?: IColor[];\n\tlocalizations?: ILocalization[];\n\treadonly customEditors?: readonly IWebviewEditor[];\n\treadonly codeActions?: readonly ICodeActionContribution[];\n\tauthentication?: IAuthenticationContribution[];\n}\n\nexport type ExtensionKind = 'ui' | 'workspace' | 'web';\n\nexport function isIExtensionIdentifier(thing: any): thing is IExtensionIdentifier {\n\treturn thing\n\t\t&& typeof thing === 'object'\n\t\t&& typeof thing.id === 'string'\n\t\t&& (!thing.uuid || typeof thing.uuid === 'string');\n}\n\nexport interface IExtensionIdentifier {\n\tid: string;\n\tuuid?: string;\n}\n\nexport const EXTENSION_CATEGORIES = [\n\t'Azure',\n\t'Data Science',\n\t'Debuggers',\n\t'Extension Packs',\n\t'Formatters',\n\t'Keymaps',\n\t'Language Packs',\n\t'Linters',\n\t'Machine Learning',\n\t'Notebooks',\n\t'Programming Languages',\n\t'SCM Providers',\n\t'Snippets',\n\t'Themes',\n\t'Testing',\n\t'Visualization',\n\t'Other',\n];\n\nexport interface IExtensionManifest {\n\treadonly name: string;\n\treadonly displayName?: string;\n\treadonly publisher: string;\n\treadonly version: string;\n\treadonly engines: { vscode: string };\n\treadonly description?: string;\n\treadonly main?: string;\n\treadonly browser?: string;\n\treadonly icon?: string;\n\treadonly categories?: string[];\n\treadonly keywords?: string[];\n\treadonly activationEvents?: string[];\n\treadonly extensionDependencies?: string[];\n\treadonly extensionPack?: string[];\n\treadonly extensionKind?: ExtensionKind | ExtensionKind[];\n\treadonly contributes?: IExtensionContributions;\n\treadonly repository?: { url: string; };\n\treadonly bugs?: { url: string; };\n\treadonly enableProposedApi?: boolean;\n\treadonly api?: string;\n\treadonly scripts?: { [key: string]: string; };\n}\n\nexport const enum ExtensionType {\n\tSystem,\n\tUser\n}\n\nexport interface IExtension {\n\treadonly type: ExtensionType;\n\treadonly isBuiltin: boolean;\n\treadonly identifier: IExtensionIdentifier;\n\treadonly manifest: IExtensionManifest;\n\treadonly location: URI;\n\treadonly readmeUrl?: URI;\n\treadonly changelogUrl?: URI;\n}\n\n/**\n * **!Do not construct directly!**\n *\n * **!Only static methods because it gets serialized!**\n *\n * This represents the \"canonical\" version for an extension identifier. Extension ids\n * have to be case-insensitive (due to the marketplace), but we must ensure case\n * preservation because the extension API is already public at this time.\n *\n * For example, given an extension with the publisher `\"Hello\"` and the name `\"World\"`,\n * its canonical extension identifier is `\"Hello.World\"`. This extension could be\n * referenced in some other extension's dependencies using the string `\"hello.world\"`.\n *\n * To make matters more complicated, an extension can optionally have an UUID. When two\n * extensions have the same UUID, they are considered equal even if their identifier is different.\n */\nexport class ExtensionIdentifier {\n\tpublic readonly value: string;\n\tprivate readonly _lower: string;\n\n\tconstructor(value: string) {\n\t\tthis.value = value;\n\t\tthis._lower = value.toLowerCase();\n\t}\n\n\tpublic static equals(a: ExtensionIdentifier | string | null | undefined, b: ExtensionIdentifier | string | null | undefined) {\n\t\tif (typeof a === 'undefined' || a === null) {\n\t\t\treturn (typeof b === 'undefined' || b === null);\n\t\t}\n\t\tif (typeof b === 'undefined' || b === null) {\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof a === 'string' || typeof b === 'string') {\n\t\t\t// At least one of the arguments is an extension id in string form,\n\t\t\t// so we have to use the string comparison which ignores case.\n\t\t\tlet aValue = (typeof a === 'string' ? a : a.value);\n\t\t\tlet bValue = (typeof b === 'string' ? b : b.value);\n\t\t\treturn strings.equalsIgnoreCase(aValue, bValue);\n\t\t}\n\n\t\t// Now we know both arguments are ExtensionIdentifier\n\t\treturn (a._lower === b._lower);\n\t}\n\n\t/**\n\t * Gives the value by which to index (for equality).\n\t */\n\tpublic static toKey(id: ExtensionIdentifier | string): string {\n\t\tif (typeof id === 'string') {\n\t\t\treturn id.toLowerCase();\n\t\t}\n\t\treturn id._lower;\n\t}\n}\n\nexport interface IExtensionDescription extends IExtensionManifest {\n\treadonly identifier: ExtensionIdentifier;\n\treadonly uuid?: string;\n\treadonly isBuiltin: boolean;\n\treadonly isUserBuiltin: boolean;\n\treadonly isUnderDevelopment: boolean;\n\treadonly extensionLocation: URI;\n\tenableProposedApi?: boolean;\n}\n\nexport function isLanguagePackExtension(manifest: IExtensionManifest): boolean {\n\treturn manifest.contributes && manifest.contributes.localizations ? manifest.contributes.localizations.length > 0 : false;\n}\n\nexport function isAuthenticaionProviderExtension(manifest: IExtensionManifest): boolean {\n\treturn manifest.contributes && manifest.contributes.authentication ? manifest.contributes.authentication.length > 0 : false;\n}\n\nexport interface IScannedExtension {\n\treadonly identifier: IExtensionIdentifier;\n\treadonly location: URI;\n\treadonly type: ExtensionType;\n\treadonly packageJSON: IExtensionManifest;\n\treadonly packageNLS?: any;\n\treadonly packageNLSUrl?: URI;\n\treadonly readmeUrl?: URI;\n\treadonly changelogUrl?: URI;\n}\n\nexport interface ITranslatedScannedExtension {\n\treadonly identifier: IExtensionIdentifier;\n\treadonly location: URI;\n\treadonly type: ExtensionType;\n\treadonly packageJSON: IExtensionManifest;\n\treadonly readmeUrl?: URI;\n\treadonly changelogUrl?: URI;\n}\n\nexport const IBuiltinExtensionsScannerService = createDecorator<IBuiltinExtensionsScannerService>('IBuiltinExtensionsScannerService');\nexport interface IBuiltinExtensionsScannerService {\n\treadonly _serviceBrand: undefined;\n\tscanBuiltinExtensions(): Promise<IScannedExtension[]>;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ILocalExtension, IGalleryExtension, IExtensionIdentifier, IReportedExtension, IExtensionIdentifierWithVersion } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { compareIgnoreCase } from 'vs/base/common/strings';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\n\nexport function areSameExtensions(a: IExtensionIdentifier, b: IExtensionIdentifier): boolean {\n\tif (a.uuid && b.uuid) {\n\t\treturn a.uuid === b.uuid;\n\t}\n\tif (a.id === b.id) {\n\t\treturn true;\n\t}\n\treturn compareIgnoreCase(a.id, b.id) === 0;\n}\n\nexport class ExtensionIdentifierWithVersion implements IExtensionIdentifierWithVersion {\n\n\treadonly id: string;\n\treadonly uuid?: string;\n\n\tconstructor(\n\t\tidentifier: IExtensionIdentifier,\n\t\treadonly version: string\n\t) {\n\t\tthis.id = identifier.id;\n\t\tthis.uuid = identifier.uuid;\n\t}\n\n\tkey(): string {\n\t\treturn `${this.id}-${this.version}`;\n\t}\n\n\tequals(o: any): boolean {\n\t\tif (!(o instanceof ExtensionIdentifierWithVersion)) {\n\t\t\treturn false;\n\t\t}\n\t\treturn areSameExtensions(this, o) && this.version === o.version;\n\t}\n}\n\nexport function adoptToGalleryExtensionId(id: string): string {\n\treturn id.toLocaleLowerCase();\n}\n\nexport function getGalleryExtensionId(publisher: string, name: string): string {\n\treturn `${publisher.toLocaleLowerCase()}.${name.toLocaleLowerCase()}`;\n}\n\nexport function groupByExtension<T>(extensions: T[], getExtensionIdentifier: (t: T) => IExtensionIdentifier): T[][] {\n\tconst byExtension: T[][] = [];\n\tconst findGroup = (extension: T) => {\n\t\tfor (const group of byExtension) {\n\t\t\tif (group.some(e => areSameExtensions(getExtensionIdentifier(e), getExtensionIdentifier(extension)))) {\n\t\t\t\treturn group;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\tfor (const extension of extensions) {\n\t\tconst group = findGroup(extension);\n\t\tif (group) {\n\t\t\tgroup.push(extension);\n\t\t} else {\n\t\t\tbyExtension.push([extension]);\n\t\t}\n\t}\n\treturn byExtension;\n}\n\nexport function getLocalExtensionTelemetryData(extension: ILocalExtension): any {\n\treturn {\n\t\tid: extension.identifier.id,\n\t\tname: extension.manifest.name,\n\t\tgalleryId: null,\n\t\tpublisherId: extension.publisherId,\n\t\tpublisherName: extension.manifest.publisher,\n\t\tpublisherDisplayName: extension.publisherDisplayName,\n\t\tdependencies: extension.manifest.extensionDependencies && extension.manifest.extensionDependencies.length > 0\n\t};\n}\n\n\n/* __GDPR__FRAGMENT__\n\t\"GalleryExtensionTelemetryData\" : {\n\t\t\"id\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"name\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"galleryId\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"publisherId\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"publisherName\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"publisherDisplayName\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"dependencies\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n\t\t\"${include}\": [\n\t\t\t\"${GalleryExtensionTelemetryData2}\"\n\t\t]\n\t}\n*/\nexport function getGalleryExtensionTelemetryData(extension: IGalleryExtension): any {\n\treturn {\n\t\tid: extension.identifier.id,\n\t\tname: extension.name,\n\t\tgalleryId: extension.identifier.uuid,\n\t\tpublisherId: extension.publisherId,\n\t\tpublisherName: extension.publisher,\n\t\tpublisherDisplayName: extension.publisherDisplayName,\n\t\tdependencies: !!(extension.properties.dependencies && extension.properties.dependencies.length > 0),\n\t\t...extension.telemetryData\n\t};\n}\n\nexport const BetterMergeId = new ExtensionIdentifier('pprice.better-merge');\n\nexport function getMaliciousExtensionsSet(report: IReportedExtension[]): Set<string> {\n\tconst result = new Set<string>();\n\n\tfor (const extension of report) {\n\t\tif (extension.malicious) {\n\t\t\tresult.add(extension.id.id);\n\t\t}\n\t}\n\n\treturn result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { join } from 'vs/base/common/path';\nimport { INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IExtensionManagementService, DidInstallExtensionEvent, DidUninstallExtensionEvent } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { MANIFEST_CACHE_FOLDER, USER_MANIFEST_CACHE_FILE } from 'vs/platform/extensions/common/extensions';\nimport * as pfs from 'vs/base/node/pfs';\n\nexport class ExtensionsManifestCache extends Disposable {\n\n\tprivate extensionsManifestCache = join(this.environmentService.userDataPath, MANIFEST_CACHE_FOLDER, USER_MANIFEST_CACHE_FILE);\n\n\tconstructor(\n\t\tprivate readonly environmentService: INativeEnvironmentService,\n\t\textensionsManagementService: IExtensionManagementService\n\t) {\n\t\tsuper();\n\t\tthis._register(extensionsManagementService.onDidInstallExtension(e => this.onDidInstallExtension(e)));\n\t\tthis._register(extensionsManagementService.onDidUninstallExtension(e => this.onDidUnInstallExtension(e)));\n\t}\n\n\tprivate onDidInstallExtension(e: DidInstallExtensionEvent): void {\n\t\tif (!e.error) {\n\t\t\tthis.invalidate();\n\t\t}\n\t}\n\n\tprivate onDidUnInstallExtension(e: DidUninstallExtensionEvent): void {\n\t\tif (!e.error) {\n\t\t\tthis.invalidate();\n\t\t}\n\t}\n\n\tinvalidate(): void {\n\t\tpfs.rimraf(this.extensionsManifestCache, pfs.RimRafMode.MOVE).then(() => { }, () => { });\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { sep } from 'vs/base/common/path';\nimport { URI } from 'vs/base/common/uri';\nimport * as glob from 'vs/base/common/glob';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { Event } from 'vs/base/common/event';\nimport { startsWithIgnoreCase } from 'vs/base/common/strings';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { isNumber, isUndefinedOrNull } from 'vs/base/common/types';\nimport { VSBuffer, VSBufferReadable, VSBufferReadableStream } from 'vs/base/common/buffer';\nimport { ReadableStreamEvents } from 'vs/base/common/stream';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { TernarySearchTree } from 'vs/base/common/map';\n\nexport const IFileService = createDecorator<IFileService>('fileService');\n\nexport interface IFileService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * An event that is fired when a file system provider is added or removed\n\t */\n\treadonly onDidChangeFileSystemProviderRegistrations: Event<IFileSystemProviderRegistrationEvent>;\n\n\t/**\n\t * An event that is fired when a registered file system provider changes it's capabilities.\n\t */\n\treadonly onDidChangeFileSystemProviderCapabilities: Event<IFileSystemProviderCapabilitiesChangeEvent>;\n\n\t/**\n\t * An event that is fired when a file system provider is about to be activated. Listeners\n\t * can join this event with a long running promise to help in the activation process.\n\t */\n\treadonly onWillActivateFileSystemProvider: Event<IFileSystemProviderActivationEvent>;\n\n\t/**\n\t * Registers a file system provider for a certain scheme.\n\t */\n\tregisterProvider(scheme: string, provider: IFileSystemProvider): IDisposable;\n\n\t/**\n\t * Tries to activate a provider with the given scheme.\n\t */\n\tactivateProvider(scheme: string): Promise<void>;\n\n\t/**\n\t * Checks if this file service can handle the given resource.\n\t */\n\tcanHandleResource(resource: URI): boolean;\n\n\t/**\n\t * Checks if the provider for the provided resource has the provided file system capability.\n\t */\n\thasCapability(resource: URI, capability: FileSystemProviderCapabilities): boolean;\n\n\t/**\n\t * List the schemes and capabilies for registered file system providers\n\t */\n\tlistCapabilities(): Iterable<{ scheme: string, capabilities: FileSystemProviderCapabilities }>\n\n\t/**\n\t * Allows to listen for file changes. The event will fire for every file within the opened workspace\n\t * (if any) as well as all files that have been watched explicitly using the #watch() API.\n\t */\n\treadonly onDidFilesChange: Event<FileChangesEvent>;\n\n\t/**\n\t * An event that is fired upon successful completion of a certain file operation.\n\t */\n\treadonly onDidRunOperation: Event<FileOperationEvent>;\n\n\t/**\n\t * Resolve the properties of a file/folder identified by the resource.\n\t *\n\t * If the optional parameter \"resolveTo\" is specified in options, the stat service is asked\n\t * to provide a stat object that should contain the full graph of folders up to all of the\n\t * target resources.\n\t *\n\t * If the optional parameter \"resolveSingleChildDescendants\" is specified in options,\n\t * the stat service is asked to automatically resolve child folders that only\n\t * contain a single element.\n\t *\n\t * If the optional parameter \"resolveMetadata\" is specified in options,\n\t * the stat will contain metadata information such as size, mtime and etag.\n\t */\n\tresolve(resource: URI, options: IResolveMetadataFileOptions): Promise<IFileStatWithMetadata>;\n\tresolve(resource: URI, options?: IResolveFileOptions): Promise<IFileStat>;\n\n\t/**\n\t * Same as resolve() but supports resolving multiple resources in parallel.\n\t * If one of the resolve targets fails to resolve returns a fake IFileStat instead of making the whole call fail.\n\t */\n\tresolveAll(toResolve: { resource: URI, options: IResolveMetadataFileOptions }[]): Promise<IResolveFileResult[]>;\n\tresolveAll(toResolve: { resource: URI, options?: IResolveFileOptions }[]): Promise<IResolveFileResult[]>;\n\n\t/**\n\t * Finds out if a file/folder identified by the resource exists.\n\t */\n\texists(resource: URI): Promise<boolean>;\n\n\t/**\n\t * Read the contents of the provided resource unbuffered.\n\t */\n\treadFile(resource: URI, options?: IReadFileOptions): Promise<IFileContent>;\n\n\t/**\n\t * Read the contents of the provided resource buffered as stream.\n\t */\n\treadFileStream(resource: URI, options?: IReadFileOptions): Promise<IFileStreamContent>;\n\n\t/**\n\t * Updates the content replacing its previous value.\n\t */\n\twriteFile(resource: URI, bufferOrReadableOrStream: VSBuffer | VSBufferReadable | VSBufferReadableStream, options?: IWriteFileOptions): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Moves the file/folder to a new path identified by the resource.\n\t *\n\t * The optional parameter overwrite can be set to replace an existing file at the location.\n\t */\n\tmove(source: URI, target: URI, overwrite?: boolean): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Find out if a move operation is possible given the arguments. No changes on disk will\n\t * be performed. Returns an Error if the operation cannot be done.\n\t */\n\tcanMove(source: URI, target: URI, overwrite?: boolean): Promise<Error | true>;\n\n\t/**\n\t * Copies the file/folder to a path identified by the resource.\n\t *\n\t * The optional parameter overwrite can be set to replace an existing file at the location.\n\t */\n\tcopy(source: URI, target: URI, overwrite?: boolean): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Find out if a copy operation is possible given the arguments. No changes on disk will\n\t * be performed. Returns an Error if the operation cannot be done.\n\t */\n\tcanCopy(source: URI, target: URI, overwrite?: boolean): Promise<Error | true>;\n\n\t/**\n\t * Find out if a file create operation is possible given the arguments. No changes on disk will\n\t * be performed. Returns an Error if the operation cannot be done.\n\t */\n\tcanCreateFile(resource: URI, options?: ICreateFileOptions): Promise<Error | true>;\n\n\t/**\n\t * Creates a new file with the given path and optional contents. The returned promise\n\t * will have the stat model object as a result.\n\t *\n\t * The optional parameter content can be used as value to fill into the new file.\n\t */\n\tcreateFile(resource: URI, bufferOrReadableOrStream?: VSBuffer | VSBufferReadable | VSBufferReadableStream, options?: ICreateFileOptions): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Creates a new folder with the given path. The returned promise\n\t * will have the stat model object as a result.\n\t */\n\tcreateFolder(resource: URI): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Deletes the provided file. The optional useTrash parameter allows to\n\t * move the file to trash. The optional recursive parameter allows to delete\n\t * non-empty folders recursively.\n\t */\n\tdel(resource: URI, options?: { useTrash?: boolean, recursive?: boolean }): Promise<void>;\n\n\t/**\n\t * Find out if a delete operation is possible given the arguments. No changes on disk will\n\t * be performed. Returns an Error if the operation cannot be done.\n\t */\n\tcanDelete(resource: URI, options?: { useTrash?: boolean, recursive?: boolean }): Promise<Error | true>;\n\n\t/**\n\t * Allows to start a watcher that reports file/folder change events on the provided resource.\n\t *\n\t * Note: watching a folder does not report events recursively for child folders yet.\n\t */\n\twatch(resource: URI): IDisposable;\n\n\t/**\n\t * Frees up any resources occupied by this service.\n\t */\n\tdispose(): void;\n}\n\nexport interface FileOverwriteOptions {\n\toverwrite: boolean;\n}\n\nexport interface FileReadStreamOptions {\n\n\t/**\n\t * Is an integer specifying where to begin reading from in the file. If position is undefined,\n\t * data will be read from the current file position.\n\t */\n\treadonly position?: number;\n\n\t/**\n\t * Is an integer specifying how many bytes to read from the file. By default, all bytes\n\t * will be read.\n\t */\n\treadonly length?: number;\n\n\t/**\n\t * If provided, the size of the file will be checked against the limits.\n\t */\n\tlimits?: {\n\t\treadonly size?: number;\n\t\treadonly memory?: number;\n\t};\n}\n\nexport interface FileWriteOptions {\n\toverwrite: boolean;\n\tcreate: boolean;\n}\n\nexport interface FileOpenOptions {\n\tcreate: boolean;\n}\n\nexport interface FileDeleteOptions {\n\trecursive: boolean;\n\tuseTrash: boolean;\n}\n\nexport enum FileType {\n\tUnknown = 0,\n\tFile = 1,\n\tDirectory = 2,\n\tSymbolicLink = 64\n}\n\nexport interface IStat {\n\ttype: FileType;\n\n\t/**\n\t * The last modification date represented as millis from unix epoch.\n\t */\n\tmtime: number;\n\n\t/**\n\t * The creation date represented as millis from unix epoch.\n\t */\n\tctime: number;\n\n\tsize: number;\n}\n\nexport interface IWatchOptions {\n\trecursive: boolean;\n\texcludes: string[];\n}\n\nexport const enum FileSystemProviderCapabilities {\n\tFileReadWrite = 1 << 1,\n\tFileOpenReadWriteClose = 1 << 2,\n\tFileReadStream = 1 << 4,\n\n\tFileFolderCopy = 1 << 3,\n\n\tPathCaseSensitive = 1 << 10,\n\tReadonly = 1 << 11,\n\n\tTrash = 1 << 12\n}\n\nexport interface IFileSystemProvider {\n\n\treadonly capabilities: FileSystemProviderCapabilities;\n\treadonly onDidChangeCapabilities: Event<void>;\n\n\treadonly onDidErrorOccur?: Event<string>; // TODO@ben remove once file watchers are solid\n\n\treadonly onDidChangeFile: Event<readonly IFileChange[]>;\n\twatch(resource: URI, opts: IWatchOptions): IDisposable;\n\n\tstat(resource: URI): Promise<IStat>;\n\tmkdir(resource: URI): Promise<void>;\n\treaddir(resource: URI): Promise<[string, FileType][]>;\n\tdelete(resource: URI, opts: FileDeleteOptions): Promise<void>;\n\n\trename(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void>;\n\tcopy?(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void>;\n\n\treadFile?(resource: URI): Promise<Uint8Array>;\n\twriteFile?(resource: URI, content: Uint8Array, opts: FileWriteOptions): Promise<void>;\n\n\treadFileStream?(resource: URI, opts: FileReadStreamOptions, token: CancellationToken): ReadableStreamEvents<Uint8Array>;\n\n\topen?(resource: URI, opts: FileOpenOptions): Promise<number>;\n\tclose?(fd: number): Promise<void>;\n\tread?(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n\twrite?(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n}\n\nexport interface IFileSystemProviderWithFileReadWriteCapability extends IFileSystemProvider {\n\treadFile(resource: URI): Promise<Uint8Array>;\n\twriteFile(resource: URI, content: Uint8Array, opts: FileWriteOptions): Promise<void>;\n}\n\nexport function hasReadWriteCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileReadWriteCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileReadWrite);\n}\n\nexport interface IFileSystemProviderWithFileFolderCopyCapability extends IFileSystemProvider {\n\tcopy(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void>;\n}\n\nexport function hasFileFolderCopyCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileFolderCopyCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileFolderCopy);\n}\n\nexport interface IFileSystemProviderWithOpenReadWriteCloseCapability extends IFileSystemProvider {\n\topen(resource: URI, opts: FileOpenOptions): Promise<number>;\n\tclose(fd: number): Promise<void>;\n\tread(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n\twrite(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n}\n\nexport function hasOpenReadWriteCloseCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithOpenReadWriteCloseCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileOpenReadWriteClose);\n}\n\nexport interface IFileSystemProviderWithFileReadStreamCapability extends IFileSystemProvider {\n\treadFileStream(resource: URI, opts: FileReadStreamOptions, token: CancellationToken): ReadableStreamEvents<Uint8Array>;\n}\n\nexport function hasFileReadStreamCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileReadStreamCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileReadStream);\n}\n\nexport enum FileSystemProviderErrorCode {\n\tFileExists = 'EntryExists',\n\tFileNotFound = 'EntryNotFound',\n\tFileNotADirectory = 'EntryNotADirectory',\n\tFileIsADirectory = 'EntryIsADirectory',\n\tFileExceedsMemoryLimit = 'EntryExceedsMemoryLimit',\n\tFileTooLarge = 'EntryTooLarge',\n\tNoPermissions = 'NoPermissions',\n\tUnavailable = 'Unavailable',\n\tUnknown = 'Unknown'\n}\n\nexport class FileSystemProviderError extends Error {\n\n\tconstructor(message: string, public readonly code: FileSystemProviderErrorCode) {\n\t\tsuper(message);\n\t}\n}\n\nexport function createFileSystemProviderError(error: Error | string, code: FileSystemProviderErrorCode): FileSystemProviderError {\n\tconst providerError = new FileSystemProviderError(error.toString(), code);\n\tmarkAsFileSystemProviderError(providerError, code);\n\n\treturn providerError;\n}\n\nexport function ensureFileSystemProviderError(error?: Error): Error {\n\tif (!error) {\n\t\treturn createFileSystemProviderError(localize('unknownError', \"Unknown Error\"), FileSystemProviderErrorCode.Unknown); // https://github.com/microsoft/vscode/issues/72798\n\t}\n\n\treturn error;\n}\n\nexport function markAsFileSystemProviderError(error: Error, code: FileSystemProviderErrorCode): Error {\n\terror.name = code ? `${code} (FileSystemError)` : `FileSystemError`;\n\n\treturn error;\n}\n\nexport function toFileSystemProviderErrorCode(error: Error | undefined | null): FileSystemProviderErrorCode {\n\n\t// Guard against abuse\n\tif (!error) {\n\t\treturn FileSystemProviderErrorCode.Unknown;\n\t}\n\n\t// FileSystemProviderError comes with the code\n\tif (error instanceof FileSystemProviderError) {\n\t\treturn error.code;\n\t}\n\n\t// Any other error, check for name match by assuming that the error\n\t// went through the markAsFileSystemProviderError() method\n\tconst match = /^(.+) \\(FileSystemError\\)$/.exec(error.name);\n\tif (!match) {\n\t\treturn FileSystemProviderErrorCode.Unknown;\n\t}\n\n\tswitch (match[1]) {\n\t\tcase FileSystemProviderErrorCode.FileExists: return FileSystemProviderErrorCode.FileExists;\n\t\tcase FileSystemProviderErrorCode.FileIsADirectory: return FileSystemProviderErrorCode.FileIsADirectory;\n\t\tcase FileSystemProviderErrorCode.FileNotADirectory: return FileSystemProviderErrorCode.FileNotADirectory;\n\t\tcase FileSystemProviderErrorCode.FileNotFound: return FileSystemProviderErrorCode.FileNotFound;\n\t\tcase FileSystemProviderErrorCode.FileExceedsMemoryLimit: return FileSystemProviderErrorCode.FileExceedsMemoryLimit;\n\t\tcase FileSystemProviderErrorCode.FileTooLarge: return FileSystemProviderErrorCode.FileTooLarge;\n\t\tcase FileSystemProviderErrorCode.NoPermissions: return FileSystemProviderErrorCode.NoPermissions;\n\t\tcase FileSystemProviderErrorCode.Unavailable: return FileSystemProviderErrorCode.Unavailable;\n\t}\n\n\treturn FileSystemProviderErrorCode.Unknown;\n}\n\nexport function toFileOperationResult(error: Error): FileOperationResult {\n\n\t// FileSystemProviderError comes with the result already\n\tif (error instanceof FileOperationError) {\n\t\treturn error.fileOperationResult;\n\t}\n\n\t// Otherwise try to find from code\n\tswitch (toFileSystemProviderErrorCode(error)) {\n\t\tcase FileSystemProviderErrorCode.FileNotFound:\n\t\t\treturn FileOperationResult.FILE_NOT_FOUND;\n\t\tcase FileSystemProviderErrorCode.FileIsADirectory:\n\t\t\treturn FileOperationResult.FILE_IS_DIRECTORY;\n\t\tcase FileSystemProviderErrorCode.FileNotADirectory:\n\t\t\treturn FileOperationResult.FILE_NOT_DIRECTORY;\n\t\tcase FileSystemProviderErrorCode.NoPermissions:\n\t\t\treturn FileOperationResult.FILE_PERMISSION_DENIED;\n\t\tcase FileSystemProviderErrorCode.FileExists:\n\t\t\treturn FileOperationResult.FILE_MOVE_CONFLICT;\n\t\tcase FileSystemProviderErrorCode.FileExceedsMemoryLimit:\n\t\t\treturn FileOperationResult.FILE_EXCEEDS_MEMORY_LIMIT;\n\t\tcase FileSystemProviderErrorCode.FileTooLarge:\n\t\t\treturn FileOperationResult.FILE_TOO_LARGE;\n\t\tdefault:\n\t\t\treturn FileOperationResult.FILE_OTHER_ERROR;\n\t}\n}\n\nexport interface IFileSystemProviderRegistrationEvent {\n\tadded: boolean;\n\tscheme: string;\n\tprovider?: IFileSystemProvider;\n}\n\nexport interface IFileSystemProviderCapabilitiesChangeEvent {\n\tprovider: IFileSystemProvider;\n\tscheme: string;\n}\n\nexport interface IFileSystemProviderActivationEvent {\n\tscheme: string;\n\tjoin(promise: Promise<void>): void;\n}\n\nexport const enum FileOperation {\n\tCREATE,\n\tDELETE,\n\tMOVE,\n\tCOPY\n}\n\nexport class FileOperationEvent {\n\n\tconstructor(resource: URI, operation: FileOperation.DELETE);\n\tconstructor(resource: URI, operation: FileOperation.CREATE | FileOperation.MOVE | FileOperation.COPY, target: IFileStatWithMetadata);\n\tconstructor(public readonly resource: URI, public readonly operation: FileOperation, public readonly target?: IFileStatWithMetadata) { }\n\n\tisOperation(operation: FileOperation.DELETE): boolean;\n\tisOperation(operation: FileOperation.MOVE | FileOperation.COPY | FileOperation.CREATE): this is { readonly target: IFileStatWithMetadata };\n\tisOperation(operation: FileOperation): boolean {\n\t\treturn this.operation === operation;\n\t}\n}\n\n/**\n * Possible changes that can occur to a file.\n */\nexport const enum FileChangeType {\n\tUPDATED = 0,\n\tADDED = 1,\n\tDELETED = 2\n}\n\n/**\n * Identifies a single change in a file.\n */\nexport interface IFileChange {\n\n\t/**\n\t * The type of change that occurred to the file.\n\t */\n\treadonly type: FileChangeType;\n\n\t/**\n\t * The unified resource identifier of the file that changed.\n\t */\n\treadonly resource: URI;\n}\n\nexport class FileChangesEvent {\n\n\t/**\n\t * @deprecated use the `contains()` or `affects` method to efficiently find\n\t * out if the event relates to a given resource. these methods ensure:\n\t * - that there is no expensive lookup needed (by using a `TernarySearchTree`)\n\t * - correctly handles `FileChangeType.DELETED` events\n\t */\n\treadonly changes: readonly IFileChange[];\n\n\tprivate readonly added: TernarySearchTree<URI, IFileChange> | undefined = undefined;\n\tprivate readonly updated: TernarySearchTree<URI, IFileChange> | undefined = undefined;\n\tprivate readonly deleted: TernarySearchTree<URI, IFileChange> | undefined = undefined;\n\n\tconstructor(changes: readonly IFileChange[], private readonly ignorePathCasing: boolean) {\n\t\tthis.changes = changes;\n\n\t\tfor (const change of changes) {\n\t\t\tswitch (change.type) {\n\t\t\t\tcase FileChangeType.ADDED:\n\t\t\t\t\tif (!this.added) {\n\t\t\t\t\t\tthis.added = TernarySearchTree.forUris<IFileChange>(this.ignorePathCasing);\n\t\t\t\t\t}\n\t\t\t\t\tthis.added.set(change.resource, change);\n\t\t\t\t\tbreak;\n\t\t\t\tcase FileChangeType.UPDATED:\n\t\t\t\t\tif (!this.updated) {\n\t\t\t\t\t\tthis.updated = TernarySearchTree.forUris<IFileChange>(this.ignorePathCasing);\n\t\t\t\t\t}\n\t\t\t\t\tthis.updated.set(change.resource, change);\n\t\t\t\t\tbreak;\n\t\t\t\tcase FileChangeType.DELETED:\n\t\t\t\t\tif (!this.deleted) {\n\t\t\t\t\t\tthis.deleted = TernarySearchTree.forUris<IFileChange>(this.ignorePathCasing);\n\t\t\t\t\t}\n\t\t\t\t\tthis.deleted.set(change.resource, change);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Find out if the file change events match the provided resource.\n\t *\n\t * Note: when passing `FileChangeType.DELETED`, we consider a match\n\t * also when the parent of the resource got deleted.\n\t */\n\tcontains(resource: URI, ...types: FileChangeType[]): boolean {\n\t\treturn this.doContains(resource, { includeChildren: false }, ...types);\n\t}\n\n\t/**\n\t * Find out if the file change events either match the provided\n\t * resource, or contain a child of this resource.\n\t */\n\taffects(resource: URI, ...types: FileChangeType[]): boolean {\n\t\treturn this.doContains(resource, { includeChildren: true }, ...types);\n\t}\n\n\tprivate doContains(resource: URI, options: { includeChildren: boolean }, ...types: FileChangeType[]): boolean {\n\t\tif (!resource) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst hasTypesFilter = types.length > 0;\n\n\t\t// Added\n\t\tif (!hasTypesFilter || types.includes(FileChangeType.ADDED)) {\n\t\t\tif (this.added?.get(resource)) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (options.includeChildren && this.added?.findSuperstr(resource)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\t// Updated\n\t\tif (!hasTypesFilter || types.includes(FileChangeType.UPDATED)) {\n\t\t\tif (this.updated?.get(resource)) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (options.includeChildren && this.updated?.findSuperstr(resource)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\t// Deleted\n\t\tif (!hasTypesFilter || types.includes(FileChangeType.DELETED)) {\n\t\t\tif (this.deleted?.findSubstr(resource) /* deleted also considers parent folders */) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (options.includeChildren && this.deleted?.findSuperstr(resource)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * @deprecated use the `contains()` method to efficiently find out if the event\n\t * relates to a given resource. this method ensures:\n\t * - that there is no expensive lookup needed by using a `TernarySearchTree`\n\t * - correctly handles `FileChangeType.DELETED` events\n\t */\n\tgetAdded(): IFileChange[] {\n\t\treturn this.getOfType(FileChangeType.ADDED);\n\t}\n\n\t/**\n\t * Returns if this event contains added files.\n\t */\n\tgotAdded(): boolean {\n\t\treturn !!this.added;\n\t}\n\n\t/**\n\t * @deprecated use the `contains()` method to efficiently find out if the event\n\t * relates to a given resource. this method ensures:\n\t * - that there is no expensive lookup needed by using a `TernarySearchTree`\n\t * - correctly handles `FileChangeType.DELETED` events\n\t */\n\tgetDeleted(): IFileChange[] {\n\t\treturn this.getOfType(FileChangeType.DELETED);\n\t}\n\n\t/**\n\t * Returns if this event contains deleted files.\n\t */\n\tgotDeleted(): boolean {\n\t\treturn !!this.deleted;\n\t}\n\n\t/**\n\t * @deprecated use the `contains()` method to efficiently find out if the event\n\t * relates to a given resource. this method ensures:\n\t * - that there is no expensive lookup needed by using a `TernarySearchTree`\n\t * - correctly handles `FileChangeType.DELETED` events\n\t */\n\tgetUpdated(): IFileChange[] {\n\t\treturn this.getOfType(FileChangeType.UPDATED);\n\t}\n\n\t/**\n\t * Returns if this event contains updated files.\n\t */\n\tgotUpdated(): boolean {\n\t\treturn !!this.updated;\n\t}\n\n\tprivate getOfType(type: FileChangeType): IFileChange[] {\n\t\tconst changes: IFileChange[] = [];\n\n\t\tconst eventsForType = type === FileChangeType.ADDED ? this.added : type === FileChangeType.UPDATED ? this.updated : this.deleted;\n\t\tif (eventsForType) {\n\t\t\tfor (const [, change] of eventsForType) {\n\t\t\t\tchanges.push(change);\n\t\t\t}\n\t\t}\n\n\t\treturn changes;\n\t}\n\n\t/**\n\t * @deprecated use the `contains()` method to efficiently find out if the event\n\t * relates to a given resource. this method ensures:\n\t * - that there is no expensive lookup needed by using a `TernarySearchTree`\n\t * - correctly handles `FileChangeType.DELETED` events\n\t */\n\tfilter(filterFn: (change: IFileChange) => boolean): FileChangesEvent {\n\t\treturn new FileChangesEvent(this.changes.filter(change => filterFn(change)), this.ignorePathCasing);\n\t}\n}\n\nexport function isParent(path: string, candidate: string, ignoreCase?: boolean): boolean {\n\tif (!path || !candidate || path === candidate) {\n\t\treturn false;\n\t}\n\n\tif (candidate.length > path.length) {\n\t\treturn false;\n\t}\n\n\tif (candidate.charAt(candidate.length - 1) !== sep) {\n\t\tcandidate += sep;\n\t}\n\n\tif (ignoreCase) {\n\t\treturn startsWithIgnoreCase(path, candidate);\n\t}\n\n\treturn path.indexOf(candidate) === 0;\n}\n\ninterface IBaseStat {\n\n\t/**\n\t * The unified resource identifier of this file or folder.\n\t */\n\tresource: URI;\n\n\t/**\n\t * The name which is the last segment\n\t * of the {{path}}.\n\t */\n\tname: string;\n\n\t/**\n\t * The size of the file.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\tsize?: number;\n\n\t/**\n\t * The last modification date represented as millis from unix epoch.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\tmtime?: number;\n\n\t/**\n\t * The creation date represented as millis from unix epoch.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\tctime?: number;\n\n\t/**\n\t * A unique identifier thet represents the\n\t * current state of the file or directory.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\tetag?: string;\n}\n\nexport interface IBaseStatWithMetadata extends IBaseStat {\n\tmtime: number;\n\tctime: number;\n\tetag: string;\n\tsize: number;\n}\n\n/**\n * A file resource with meta information.\n */\nexport interface IFileStat extends IBaseStat {\n\n\t/**\n\t * The resource is a file.\n\t */\n\tisFile: boolean;\n\n\t/**\n\t * The resource is a directory.\n\t */\n\tisDirectory: boolean;\n\n\t/**\n\t * The resource is a symbolic link.\n\t */\n\tisSymbolicLink: boolean;\n\n\t/**\n\t * The children of the file stat or undefined if none.\n\t */\n\tchildren?: IFileStat[];\n}\n\nexport interface IFileStatWithMetadata extends IFileStat, IBaseStatWithMetadata {\n\tmtime: number;\n\tctime: number;\n\tetag: string;\n\tsize: number;\n\tchildren?: IFileStatWithMetadata[];\n}\n\nexport interface IResolveFileResult {\n\tstat?: IFileStat;\n\tsuccess: boolean;\n}\n\nexport interface IResolveFileResultWithMetadata extends IResolveFileResult {\n\tstat?: IFileStatWithMetadata;\n}\n\nexport interface IFileContent extends IBaseStatWithMetadata {\n\n\t/**\n\t * The content of a file as buffer.\n\t */\n\tvalue: VSBuffer;\n}\n\nexport interface IFileStreamContent extends IBaseStatWithMetadata {\n\n\t/**\n\t * The content of a file as stream.\n\t */\n\tvalue: VSBufferReadableStream;\n}\n\nexport interface IReadFileOptions extends FileReadStreamOptions {\n\n\t/**\n\t * The optional etag parameter allows to return early from resolving the resource if\n\t * the contents on disk match the etag. This prevents accumulated reading of resources\n\t * that have been read already with the same etag.\n\t * It is the task of the caller to makes sure to handle this error case from the promise.\n\t */\n\treadonly etag?: string;\n}\n\nexport interface IWriteFileOptions {\n\n\t/**\n\t * The last known modification time of the file. This can be used to prevent dirty writes.\n\t */\n\treadonly mtime?: number;\n\n\t/**\n\t * The etag of the file. This can be used to prevent dirty writes.\n\t */\n\treadonly etag?: string;\n}\n\nexport interface IResolveFileOptions {\n\n\t/**\n\t * Automatically continue resolving children of a directory until the provided resources\n\t * are found.\n\t */\n\treadonly resolveTo?: readonly URI[];\n\n\t/**\n\t * Automatically continue resolving children of a directory if the number of children is 1.\n\t */\n\treadonly resolveSingleChildDescendants?: boolean;\n\n\t/**\n\t * Will resolve mtime, ctime, size and etag of files if enabled. This can have a negative impact\n\t * on performance and thus should only be used when these values are required.\n\t */\n\treadonly resolveMetadata?: boolean;\n}\n\nexport interface IResolveMetadataFileOptions extends IResolveFileOptions {\n\treadonly resolveMetadata: true;\n}\n\nexport interface ICreateFileOptions {\n\n\t/**\n\t * Overwrite the file to create if it already exists on disk. Otherwise\n\t * an error will be thrown (FILE_MODIFIED_SINCE).\n\t */\n\treadonly overwrite?: boolean;\n}\n\nexport class FileOperationError extends Error {\n\tconstructor(message: string, public fileOperationResult: FileOperationResult, public options?: IReadFileOptions & IWriteFileOptions & ICreateFileOptions) {\n\t\tsuper(message);\n\t}\n\n\tstatic isFileOperationError(obj: unknown): obj is FileOperationError {\n\t\treturn obj instanceof Error && !isUndefinedOrNull((obj as FileOperationError).fileOperationResult);\n\t}\n}\n\nexport const enum FileOperationResult {\n\tFILE_IS_DIRECTORY,\n\tFILE_NOT_FOUND,\n\tFILE_NOT_MODIFIED_SINCE,\n\tFILE_MODIFIED_SINCE,\n\tFILE_MOVE_CONFLICT,\n\tFILE_READ_ONLY,\n\tFILE_PERMISSION_DENIED,\n\tFILE_TOO_LARGE,\n\tFILE_INVALID_PATH,\n\tFILE_EXCEEDS_MEMORY_LIMIT,\n\tFILE_NOT_DIRECTORY,\n\tFILE_OTHER_ERROR\n}\n\nexport const AutoSaveConfiguration = {\n\tOFF: 'off',\n\tAFTER_DELAY: 'afterDelay',\n\tON_FOCUS_CHANGE: 'onFocusChange',\n\tON_WINDOW_CHANGE: 'onWindowChange'\n};\n\nexport const HotExitConfiguration = {\n\tOFF: 'off',\n\tON_EXIT: 'onExit',\n\tON_EXIT_AND_WINDOW_CLOSE: 'onExitAndWindowClose'\n};\n\nexport const FILES_ASSOCIATIONS_CONFIG = 'files.associations';\nexport const FILES_EXCLUDE_CONFIG = 'files.exclude';\n\nexport interface IFilesConfiguration {\n\tfiles: {\n\t\tassociations: { [filepattern: string]: string };\n\t\texclude: glob.IExpression;\n\t\twatcherExclude: { [filepattern: string]: boolean };\n\t\tencoding: string;\n\t\tautoGuessEncoding: boolean;\n\t\tdefaultLanguage: string;\n\t\ttrimTrailingWhitespace: boolean;\n\t\tautoSave: string;\n\t\tautoSaveDelay: number;\n\t\teol: string;\n\t\tenableTrash: boolean;\n\t\thotExit: string;\n\t\tsaveConflictResolution: 'askUser' | 'overwriteFileOnDisk';\n\t};\n}\n\nexport enum FileKind {\n\tFILE,\n\tFOLDER,\n\tROOT_FOLDER\n}\n\n/**\n * A hint to disable etag checking for reading/writing.\n */\nexport const ETAG_DISABLED = '';\n\nexport function etag(stat: { mtime: number, size: number }): string;\nexport function etag(stat: { mtime: number | undefined, size: number | undefined }): string | undefined;\nexport function etag(stat: { mtime: number | undefined, size: number | undefined }): string | undefined {\n\tif (typeof stat.size !== 'number' || typeof stat.mtime !== 'number') {\n\t\treturn undefined;\n\t}\n\n\treturn stat.mtime.toString(29) + stat.size.toString(31);\n}\n\nexport function whenProviderRegistered(file: URI, fileService: IFileService): Promise<void> {\n\tif (fileService.canHandleResource(URI.from({ scheme: file.scheme }))) {\n\t\treturn Promise.resolve();\n\t}\n\n\treturn new Promise(resolve => {\n\t\tconst disposable = fileService.onDidChangeFileSystemProviderRegistrations(e => {\n\t\t\tif (e.scheme === file.scheme && e.added) {\n\t\t\t\tdisposable.dispose();\n\t\t\t\tresolve();\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Native only: limits for memory sizes\n */\nexport const MIN_MAX_MEMORY_SIZE_MB = 2048;\nexport const FALLBACK_MAX_MEMORY_SIZE_MB = 4096;\n\n/**\n * Helper to format a raw byte size into a human readable label.\n */\nexport class BinarySize {\n\tstatic readonly KB = 1024;\n\tstatic readonly MB = BinarySize.KB * BinarySize.KB;\n\tstatic readonly GB = BinarySize.MB * BinarySize.KB;\n\tstatic readonly TB = BinarySize.GB * BinarySize.KB;\n\n\tstatic formatSize(size: number): string {\n\t\tif (!isNumber(size)) {\n\t\t\tsize = 0;\n\t\t}\n\n\t\tif (size < BinarySize.KB) {\n\t\t\treturn localize('sizeB', \"{0}B\", size.toFixed(0));\n\t\t}\n\n\t\tif (size < BinarySize.MB) {\n\t\t\treturn localize('sizeKB', \"{0}KB\", (size / BinarySize.KB).toFixed(2));\n\t\t}\n\n\t\tif (size < BinarySize.GB) {\n\t\t\treturn localize('sizeMB', \"{0}MB\", (size / BinarySize.MB).toFixed(2));\n\t\t}\n\n\t\tif (size < BinarySize.TB) {\n\t\t\treturn localize('sizeGB', \"{0}GB\", (size / BinarySize.GB).toFixed(2));\n\t\t}\n\n\t\treturn localize('sizeTB', \"{0}TB\", (size / BinarySize.TB).toFixed(2));\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { URI } from 'vs/base/common/uri';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IFileSystemProviderWithOpenReadWriteCloseCapability, FileReadStreamOptions, createFileSystemProviderError, FileSystemProviderErrorCode, ensureFileSystemProviderError } from 'vs/platform/files/common/files';\nimport { canceled } from 'vs/base/common/errors';\nimport { IErrorTransformer, IDataTransformer, WriteableStream } from 'vs/base/common/stream';\n\nexport interface ICreateReadStreamOptions extends FileReadStreamOptions {\n\n\t/**\n\t * The size of the buffer to use before sending to the stream.\n\t */\n\tbufferSize: number;\n\n\t/**\n\t * Allows to massage any possibly error that happens during reading.\n\t */\n\terrorTransformer?: IErrorTransformer;\n}\n\n/**\n * A helper to read a file from a provider with open/read/close capability into a stream.\n */\nexport async function readFileIntoStream<T>(\n\tprovider: IFileSystemProviderWithOpenReadWriteCloseCapability,\n\tresource: URI,\n\ttarget: WriteableStream<T>,\n\ttransformer: IDataTransformer<VSBuffer, T>,\n\toptions: ICreateReadStreamOptions,\n\ttoken: CancellationToken\n): Promise<void> {\n\tlet error: Error | undefined = undefined;\n\n\ttry {\n\t\tawait doReadFileIntoStream(provider, resource, target, transformer, options, token);\n\t} catch (err) {\n\t\terror = err;\n\t} finally {\n\t\tif (error && options.errorTransformer) {\n\t\t\terror = options.errorTransformer(error);\n\t\t}\n\n\t\ttarget.end(error);\n\t}\n}\n\nasync function doReadFileIntoStream<T>(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, resource: URI, target: WriteableStream<T>, transformer: IDataTransformer<VSBuffer, T>, options: ICreateReadStreamOptions, token: CancellationToken): Promise<void> {\n\n\t// Check for cancellation\n\tthrowIfCancelled(token);\n\n\t// open handle through provider\n\tconst handle = await provider.open(resource, { create: false });\n\n\t// Check for cancellation\n\tthrowIfCancelled(token);\n\n\ttry {\n\t\tlet totalBytesRead = 0;\n\t\tlet bytesRead = 0;\n\t\tlet allowedRemainingBytes = (options && typeof options.length === 'number') ? options.length : undefined;\n\n\t\tlet buffer = VSBuffer.alloc(Math.min(options.bufferSize, typeof allowedRemainingBytes === 'number' ? allowedRemainingBytes : options.bufferSize));\n\n\t\tlet posInFile = options && typeof options.position === 'number' ? options.position : 0;\n\t\tlet posInBuffer = 0;\n\t\tdo {\n\t\t\t// read from source (handle) at current position (pos) into buffer (buffer) at\n\t\t\t// buffer position (posInBuffer) up to the size of the buffer (buffer.byteLength).\n\t\t\tbytesRead = await provider.read(handle, posInFile, buffer.buffer, posInBuffer, buffer.byteLength - posInBuffer);\n\n\t\t\tposInFile += bytesRead;\n\t\t\tposInBuffer += bytesRead;\n\t\t\ttotalBytesRead += bytesRead;\n\n\t\t\tif (typeof allowedRemainingBytes === 'number') {\n\t\t\t\tallowedRemainingBytes -= bytesRead;\n\t\t\t}\n\n\t\t\t// when buffer full, create a new one and emit it through stream\n\t\t\tif (posInBuffer === buffer.byteLength) {\n\t\t\t\tawait target.write(transformer(buffer));\n\n\t\t\t\tbuffer = VSBuffer.alloc(Math.min(options.bufferSize, typeof allowedRemainingBytes === 'number' ? allowedRemainingBytes : options.bufferSize));\n\n\t\t\t\tposInBuffer = 0;\n\t\t\t}\n\t\t} while (bytesRead > 0 && (typeof allowedRemainingBytes !== 'number' || allowedRemainingBytes > 0) && throwIfCancelled(token) && throwIfTooLarge(totalBytesRead, options));\n\n\t\t// wrap up with last buffer (also respect maxBytes if provided)\n\t\tif (posInBuffer > 0) {\n\t\t\tlet lastChunkLength = posInBuffer;\n\t\t\tif (typeof allowedRemainingBytes === 'number') {\n\t\t\t\tlastChunkLength = Math.min(posInBuffer, allowedRemainingBytes);\n\t\t\t}\n\n\t\t\ttarget.write(transformer(buffer.slice(0, lastChunkLength)));\n\t\t}\n\t} catch (error) {\n\t\tthrow ensureFileSystemProviderError(error);\n\t} finally {\n\t\tawait provider.close(handle);\n\t}\n}\n\nfunction throwIfCancelled(token: CancellationToken): boolean {\n\tif (token.isCancellationRequested) {\n\t\tthrow canceled();\n\t}\n\n\treturn true;\n}\n\nfunction throwIfTooLarge(totalBytesRead: number, options: ICreateReadStreamOptions): boolean {\n\n\t// Return early if file is too large to load and we have configured limits\n\tif (options?.limits) {\n\t\tif (typeof options.limits.memory === 'number' && totalBytesRead > options.limits.memory) {\n\t\t\tthrow createFileSystemProviderError(localize('fileTooLargeForHeapError', \"To open a file of this size, you need to restart and allow it to use more memory\"), FileSystemProviderErrorCode.FileExceedsMemoryLimit);\n\t\t}\n\n\t\tif (typeof options.limits.size === 'number' && totalBytesRead > options.limits.size) {\n\t\t\tthrow createFileSystemProviderError(localize('fileTooLargeError', \"File is too large to open\"), FileSystemProviderErrorCode.FileTooLarge);\n\t\t}\n\t}\n\n\treturn true;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI as uri } from 'vs/base/common/uri';\nimport { FileChangeType, isParent, IFileChange } from 'vs/platform/files/common/files';\nimport { isLinux } from 'vs/base/common/platform';\n\nexport interface IDiskFileChange {\n\ttype: FileChangeType;\n\tpath: string;\n}\n\nexport interface ILogMessage {\n\ttype: 'trace' | 'warn' | 'error';\n\tmessage: string;\n}\n\nexport function toFileChanges(changes: IDiskFileChange[]): IFileChange[] {\n\treturn changes.map(change => ({\n\t\ttype: change.type,\n\t\tresource: uri.file(change.path)\n\t}));\n}\n\nexport function normalizeFileChanges(changes: IDiskFileChange[]): IDiskFileChange[] {\n\n\t// Build deltas\n\tconst normalizer = new EventNormalizer();\n\tfor (const event of changes) {\n\t\tnormalizer.processEvent(event);\n\t}\n\n\treturn normalizer.normalize();\n}\n\nclass EventNormalizer {\n\tprivate normalized: IDiskFileChange[] = [];\n\tprivate mapPathToChange: Map<string, IDiskFileChange> = new Map();\n\n\tprocessEvent(event: IDiskFileChange): void {\n\t\tconst existingEvent = this.mapPathToChange.get(event.path);\n\n\t\t// Event path already exists\n\t\tif (existingEvent) {\n\t\t\tconst currentChangeType = existingEvent.type;\n\t\t\tconst newChangeType = event.type;\n\n\t\t\t// ignore CREATE followed by DELETE in one go\n\t\t\tif (currentChangeType === FileChangeType.ADDED && newChangeType === FileChangeType.DELETED) {\n\t\t\t\tthis.mapPathToChange.delete(event.path);\n\t\t\t\tthis.normalized.splice(this.normalized.indexOf(existingEvent), 1);\n\t\t\t}\n\n\t\t\t// flatten DELETE followed by CREATE into CHANGE\n\t\t\telse if (currentChangeType === FileChangeType.DELETED && newChangeType === FileChangeType.ADDED) {\n\t\t\t\texistingEvent.type = FileChangeType.UPDATED;\n\t\t\t}\n\n\t\t\t// Do nothing. Keep the created event\n\t\t\telse if (currentChangeType === FileChangeType.ADDED && newChangeType === FileChangeType.UPDATED) { }\n\n\t\t\t// Otherwise apply change type\n\t\t\telse {\n\t\t\t\texistingEvent.type = newChangeType;\n\t\t\t}\n\t\t}\n\n\t\t// Otherwise store new\n\t\telse {\n\t\t\tthis.normalized.push(event);\n\t\t\tthis.mapPathToChange.set(event.path, event);\n\t\t}\n\t}\n\n\tnormalize(): IDiskFileChange[] {\n\t\tconst addedChangeEvents: IDiskFileChange[] = [];\n\t\tconst deletedPaths: string[] = [];\n\n\t\t// This algorithm will remove all DELETE events up to the root folder\n\t\t// that got deleted if any. This ensures that we are not producing\n\t\t// DELETE events for each file inside a folder that gets deleted.\n\t\t//\n\t\t// 1.) split ADD/CHANGE and DELETED events\n\t\t// 2.) sort short deleted paths to the top\n\t\t// 3.) for each DELETE, check if there is a deleted parent and ignore the event in that case\n\t\treturn this.normalized.filter(e => {\n\t\t\tif (e.type !== FileChangeType.DELETED) {\n\t\t\t\taddedChangeEvents.push(e);\n\n\t\t\t\treturn false; // remove ADD / CHANGE\n\t\t\t}\n\n\t\t\treturn true; // keep DELETE\n\t\t}).sort((e1, e2) => {\n\t\t\treturn e1.path.length - e2.path.length; // shortest path first\n\t\t}).filter(e => {\n\t\t\tif (deletedPaths.some(d => isParent(e.path, d, !isLinux /* ignorecase */))) {\n\t\t\t\treturn false; // DELETE is ignored if parent is deleted already\n\t\t\t}\n\n\t\t\t// otherwise mark as deleted\n\t\t\tdeletedPaths.push(e.path);\n\n\t\t\treturn true;\n\t\t}).concat(addedChangeEvents);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDiskFileChange, normalizeFileChanges, ILogMessage } from 'vs/platform/files/node/watcher/watcher';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { statLink } from 'vs/base/node/pfs';\nimport { realpath } from 'vs/base/node/extpath';\nimport { watchFolder, watchFile, CHANGE_BUFFER_DELAY } from 'vs/base/node/watcher';\nimport { FileChangeType } from 'vs/platform/files/common/files';\nimport { ThrottledDelayer } from 'vs/base/common/async';\nimport { join, basename } from 'vs/base/common/path';\n\nexport class FileWatcher extends Disposable {\n\tprivate isDisposed: boolean | undefined;\n\n\tprivate fileChangesDelayer: ThrottledDelayer<void> = this._register(new ThrottledDelayer<void>(CHANGE_BUFFER_DELAY * 2 /* sync on delay from underlying library */));\n\tprivate fileChangesBuffer: IDiskFileChange[] = [];\n\n\tconstructor(\n\t\tprivate path: string,\n\t\tprivate onDidFilesChange: (changes: IDiskFileChange[]) => void,\n\t\tprivate onLogMessage: (msg: ILogMessage) => void,\n\t\tprivate verboseLogging: boolean\n\t) {\n\t\tsuper();\n\n\t\tthis.startWatching();\n\t}\n\n\tsetVerboseLogging(verboseLogging: boolean): void {\n\t\tthis.verboseLogging = verboseLogging;\n\t}\n\n\tprivate async startWatching(): Promise<void> {\n\t\ttry {\n\t\t\tconst { stat, symbolicLink } = await statLink(this.path);\n\n\t\t\tif (this.isDisposed) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet pathToWatch = this.path;\n\t\t\tif (symbolicLink) {\n\t\t\t\ttry {\n\t\t\t\t\tpathToWatch = await realpath(pathToWatch);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.onError(error);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Watch Folder\n\t\t\tif (stat.isDirectory()) {\n\t\t\t\tthis._register(watchFolder(pathToWatch, (eventType, path) => {\n\t\t\t\t\tthis.onFileChange({\n\t\t\t\t\t\ttype: eventType === 'changed' ? FileChangeType.UPDATED : eventType === 'added' ? FileChangeType.ADDED : FileChangeType.DELETED,\n\t\t\t\t\t\tpath: join(this.path, basename(path)) // ensure path is identical with what was passed in\n\t\t\t\t\t});\n\t\t\t\t}, error => this.onError(error)));\n\t\t\t}\n\n\t\t\t// Watch File\n\t\t\telse {\n\t\t\t\tthis._register(watchFile(pathToWatch, eventType => {\n\t\t\t\t\tthis.onFileChange({\n\t\t\t\t\t\ttype: eventType === 'changed' ? FileChangeType.UPDATED : FileChangeType.DELETED,\n\t\t\t\t\t\tpath: this.path // ensure path is identical with what was passed in\n\t\t\t\t\t});\n\t\t\t\t}, error => this.onError(error)));\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.onError(error);\n\t\t}\n\t}\n\n\tprivate onFileChange(event: IDiskFileChange): void {\n\n\t\t// Add to buffer\n\t\tthis.fileChangesBuffer.push(event);\n\n\t\t// Logging\n\t\tif (this.verboseLogging) {\n\t\t\tthis.onVerbose(`${event.type === FileChangeType.ADDED ? '[ADDED]' : event.type === FileChangeType.DELETED ? '[DELETED]' : '[CHANGED]'} ${event.path}`);\n\t\t}\n\n\t\t// Handle emit through delayer to accommodate for bulk changes and thus reduce spam\n\t\tthis.fileChangesDelayer.trigger(async () => {\n\t\t\tconst fileChanges = this.fileChangesBuffer;\n\t\t\tthis.fileChangesBuffer = [];\n\n\t\t\t// Event normalization\n\t\t\tconst normalizedFileChanges = normalizeFileChanges(fileChanges);\n\n\t\t\t// Logging\n\t\t\tif (this.verboseLogging) {\n\t\t\t\tnormalizedFileChanges.forEach(event => {\n\t\t\t\t\tthis.onVerbose(`>> normalized ${event.type === FileChangeType.ADDED ? '[ADDED]' : event.type === FileChangeType.DELETED ? '[DELETED]' : '[CHANGED]'} ${event.path}`);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Fire\n\t\t\tif (normalizedFileChanges.length > 0) {\n\t\t\t\tthis.onDidFilesChange(normalizedFileChanges);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate onError(error: string): void {\n\t\tif (!this.isDisposed) {\n\t\t\tthis.onLogMessage({ type: 'error', message: `[File Watcher (node.js)] ${error}` });\n\t\t}\n\t}\n\n\tprivate onVerbose(message: string): void {\n\t\tif (!this.isDisposed) {\n\t\t\tthis.onLogMessage({ type: 'trace', message: `[File Watcher (node.js)] ${message}` });\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.isDisposed = true;\n\n\t\tsuper.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ServiceIdentifier } from 'vs/platform/instantiation/common/instantiation';\nimport { SyncDescriptor } from './descriptors';\n\nexport class ServiceCollection {\n\n\tprivate _entries = new Map<ServiceIdentifier<any>, any>();\n\n\tconstructor(...entries: [ServiceIdentifier<any>, any][]) {\n\t\tfor (let [id, service] of entries) {\n\t\t\tthis.set(id, service);\n\t\t}\n\t}\n\n\tset<T>(id: ServiceIdentifier<T>, instanceOrDescriptor: T | SyncDescriptor<T>): T | SyncDescriptor<T> {\n\t\tconst result = this._entries.get(id);\n\t\tthis._entries.set(id, instanceOrDescriptor);\n\t\treturn result;\n\t}\n\n\thas(id: ServiceIdentifier<any>): boolean {\n\t\treturn this._entries.has(id);\n\t}\n\n\tget<T>(id: ServiceIdentifier<T>): T | SyncDescriptor<T> {\n\t\treturn this._entries.get(id);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { illegalState } from 'vs/base/common/errors';\nimport { Graph } from 'vs/platform/instantiation/common/graph';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { ServiceIdentifier, IInstantiationService, ServicesAccessor, _util, optional } from 'vs/platform/instantiation/common/instantiation';\nimport { ServiceCollection } from 'vs/platform/instantiation/common/serviceCollection';\nimport { IdleValue } from 'vs/base/common/async';\n\n// TRACING\nconst _enableTracing = false;\n\nclass CyclicDependencyError extends Error {\n\tconstructor(graph: Graph<any>) {\n\t\tsuper('cyclic dependency between services');\n\t\tthis.message = graph.toString();\n\t}\n}\n\nexport class InstantiationService implements IInstantiationService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _services: ServiceCollection;\n\tprivate readonly _strict: boolean;\n\tprivate readonly _parent?: InstantiationService;\n\n\tconstructor(services: ServiceCollection = new ServiceCollection(), strict: boolean = false, parent?: InstantiationService) {\n\t\tthis._services = services;\n\t\tthis._strict = strict;\n\t\tthis._parent = parent;\n\n\t\tthis._services.set(IInstantiationService, this);\n\t}\n\n\tcreateChild(services: ServiceCollection): IInstantiationService {\n\t\treturn new InstantiationService(services, this._strict, this);\n\t}\n\n\tinvokeFunction<R, TS extends any[] = []>(fn: (accessor: ServicesAccessor, ...args: TS) => R, ...args: TS): R {\n\t\tlet _trace = Trace.traceInvocation(fn);\n\t\tlet _done = false;\n\t\ttry {\n\t\t\tconst accessor: ServicesAccessor = {\n\t\t\t\tget: <T>(id: ServiceIdentifier<T>, isOptional?: typeof optional) => {\n\n\t\t\t\t\tif (_done) {\n\t\t\t\t\t\tthrow illegalState('service accessor is only valid during the invocation of its target method');\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = this._getOrCreateServiceInstance(id, _trace);\n\t\t\t\t\tif (!result && isOptional !== optional) {\n\t\t\t\t\t\tthrow new Error(`[invokeFunction] unknown service '${id}'`);\n\t\t\t\t\t}\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn fn(accessor, ...args);\n\t\t} finally {\n\t\t\t_done = true;\n\t\t\t_trace.stop();\n\t\t}\n\t}\n\n\tcreateInstance(ctorOrDescriptor: any | SyncDescriptor<any>, ...rest: any[]): any {\n\t\tlet _trace: Trace;\n\t\tlet result: any;\n\t\tif (ctorOrDescriptor instanceof SyncDescriptor) {\n\t\t\t_trace = Trace.traceCreation(ctorOrDescriptor.ctor);\n\t\t\tresult = this._createInstance(ctorOrDescriptor.ctor, ctorOrDescriptor.staticArguments.concat(rest), _trace);\n\t\t} else {\n\t\t\t_trace = Trace.traceCreation(ctorOrDescriptor);\n\t\t\tresult = this._createInstance(ctorOrDescriptor, rest, _trace);\n\t\t}\n\t\t_trace.stop();\n\t\treturn result;\n\t}\n\n\tprivate _createInstance<T>(ctor: any, args: any[] = [], _trace: Trace): T {\n\n\t\t// arguments defined by service decorators\n\t\tlet serviceDependencies = _util.getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\t\tlet serviceArgs: any[] = [];\n\t\tfor (const dependency of serviceDependencies) {\n\t\t\tlet service = this._getOrCreateServiceInstance(dependency.id, _trace);\n\t\t\tif (!service && this._strict && !dependency.optional) {\n\t\t\t\tthrow new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n\t\t\t}\n\t\t\tserviceArgs.push(service);\n\t\t}\n\n\t\tlet firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n\t\t// check for argument mismatches, adjust static args if needed\n\t\tif (args.length !== firstServiceArgPos) {\n\t\t\tconsole.warn(`[createInstance] First service dependency of ${ctor.name} at position ${firstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n\n\t\t\tlet delta = firstServiceArgPos - args.length;\n\t\t\tif (delta > 0) {\n\t\t\t\targs = args.concat(new Array(delta));\n\t\t\t} else {\n\t\t\t\targs = args.slice(0, firstServiceArgPos);\n\t\t\t}\n\t\t}\n\n\t\t// now create the instance\n\t\treturn <T>new ctor(...[...args, ...serviceArgs]);\n\t}\n\n\tprivate _setServiceInstance<T>(id: ServiceIdentifier<T>, instance: T): void {\n\t\tif (this._services.get(id) instanceof SyncDescriptor) {\n\t\t\tthis._services.set(id, instance);\n\t\t} else if (this._parent) {\n\t\t\tthis._parent._setServiceInstance(id, instance);\n\t\t} else {\n\t\t\tthrow new Error('illegalState - setting UNKNOWN service instance');\n\t\t}\n\t}\n\n\tprivate _getServiceInstanceOrDescriptor<T>(id: ServiceIdentifier<T>): T | SyncDescriptor<T> {\n\t\tlet instanceOrDesc = this._services.get(id);\n\t\tif (!instanceOrDesc && this._parent) {\n\t\t\treturn this._parent._getServiceInstanceOrDescriptor(id);\n\t\t} else {\n\t\t\treturn instanceOrDesc;\n\t\t}\n\t}\n\n\tprivate _getOrCreateServiceInstance<T>(id: ServiceIdentifier<T>, _trace: Trace): T {\n\t\tlet thing = this._getServiceInstanceOrDescriptor(id);\n\t\tif (thing instanceof SyncDescriptor) {\n\t\t\treturn this._createAndCacheServiceInstance(id, thing, _trace.branch(id, true));\n\t\t} else {\n\t\t\t_trace.branch(id, false);\n\t\t\treturn thing;\n\t\t}\n\t}\n\n\tprivate _createAndCacheServiceInstance<T>(id: ServiceIdentifier<T>, desc: SyncDescriptor<T>, _trace: Trace): T {\n\t\ttype Triple = { id: ServiceIdentifier<any>, desc: SyncDescriptor<any>, _trace: Trace };\n\t\tconst graph = new Graph<Triple>(data => data.id.toString());\n\n\t\tlet cycleCount = 0;\n\t\tconst stack = [{ id, desc, _trace }];\n\t\twhile (stack.length) {\n\t\t\tconst item = stack.pop()!;\n\t\t\tgraph.lookupOrInsertNode(item);\n\n\t\t\t// a weak but working heuristic for cycle checks\n\t\t\tif (cycleCount++ > 1000) {\n\t\t\t\tthrow new CyclicDependencyError(graph);\n\t\t\t}\n\n\t\t\t// check all dependencies for existence and if they need to be created first\n\t\t\tfor (let dependency of _util.getServiceDependencies(item.desc.ctor)) {\n\n\t\t\t\tlet instanceOrDesc = this._getServiceInstanceOrDescriptor(dependency.id);\n\t\t\t\tif (!instanceOrDesc && !dependency.optional) {\n\t\t\t\t\tconsole.warn(`[createInstance] ${id} depends on ${dependency.id} which is NOT registered.`);\n\t\t\t\t}\n\n\t\t\t\tif (instanceOrDesc instanceof SyncDescriptor) {\n\t\t\t\t\tconst d = { id: dependency.id, desc: instanceOrDesc, _trace: item._trace.branch(dependency.id, true) };\n\t\t\t\t\tgraph.insertEdge(item, d);\n\t\t\t\t\tstack.push(d);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\twhile (true) {\n\t\t\tconst roots = graph.roots();\n\n\t\t\t// if there is no more roots but still\n\t\t\t// nodes in the graph we have a cycle\n\t\t\tif (roots.length === 0) {\n\t\t\t\tif (!graph.isEmpty()) {\n\t\t\t\t\tthrow new CyclicDependencyError(graph);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tfor (const { data } of roots) {\n\t\t\t\t// Repeat the check for this still being a service sync descriptor. That's because\n\t\t\t\t// instantiating a dependency might have side-effect and recursively trigger instantiation\n\t\t\t\t// so that some dependencies are now fullfilled already.\n\t\t\t\tconst instanceOrDesc = this._getServiceInstanceOrDescriptor(data.id);\n\t\t\t\tif (instanceOrDesc instanceof SyncDescriptor) {\n\t\t\t\t\t// create instance and overwrite the service collections\n\t\t\t\t\tconst instance = this._createServiceInstanceWithOwner(data.id, data.desc.ctor, data.desc.staticArguments, data.desc.supportsDelayedInstantiation, data._trace);\n\t\t\t\t\tthis._setServiceInstance(data.id, instance);\n\t\t\t\t}\n\t\t\t\tgraph.removeNode(data);\n\t\t\t}\n\t\t}\n\n\t\treturn <T>this._getServiceInstanceOrDescriptor(id);\n\t}\n\n\tprivate _createServiceInstanceWithOwner<T>(id: ServiceIdentifier<T>, ctor: any, args: any[] = [], supportsDelayedInstantiation: boolean, _trace: Trace): T {\n\t\tif (this._services.get(id) instanceof SyncDescriptor) {\n\t\t\treturn this._createServiceInstance(ctor, args, supportsDelayedInstantiation, _trace);\n\t\t} else if (this._parent) {\n\t\t\treturn this._parent._createServiceInstanceWithOwner(id, ctor, args, supportsDelayedInstantiation, _trace);\n\t\t} else {\n\t\t\tthrow new Error(`illegalState - creating UNKNOWN service instance ${ctor.name}`);\n\t\t}\n\t}\n\n\tprivate _createServiceInstance<T>(ctor: any, args: any[] = [], _supportsDelayedInstantiation: boolean, _trace: Trace): T {\n\t\tif (!_supportsDelayedInstantiation) {\n\t\t\t// eager instantiation\n\t\t\treturn this._createInstance(ctor, args, _trace);\n\n\t\t} else {\n\t\t\t// Return a proxy object that's backed by an idle value. That\n\t\t\t// strategy is to instantiate services in our idle time or when actually\n\t\t\t// needed but not when injected into a consumer\n\t\t\tconst idle = new IdleValue<any>(() => this._createInstance<T>(ctor, args, _trace));\n\t\t\treturn <T>new Proxy(Object.create(null), {\n\t\t\t\tget(target: any, key: PropertyKey): any {\n\t\t\t\t\tif (key in target) {\n\t\t\t\t\t\treturn target[key];\n\t\t\t\t\t}\n\t\t\t\t\tlet obj = idle.value;\n\t\t\t\t\tlet prop = obj[key];\n\t\t\t\t\tif (typeof prop !== 'function') {\n\t\t\t\t\t\treturn prop;\n\t\t\t\t\t}\n\t\t\t\t\tprop = prop.bind(obj);\n\t\t\t\t\ttarget[key] = prop;\n\t\t\t\t\treturn prop;\n\t\t\t\t},\n\t\t\t\tset(_target: T, p: PropertyKey, value: any): boolean {\n\t\t\t\t\tidle.value[p] = value;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n}\n\n//#region -- tracing ---\n\nconst enum TraceType {\n\tCreation, Invocation, Branch\n}\n\nclass Trace {\n\n\tprivate static readonly _None = new class extends Trace {\n\t\tconstructor() { super(-1, null); }\n\t\tstop() { }\n\t\tbranch() { return this; }\n\t};\n\n\tstatic traceInvocation(ctor: any): Trace {\n\t\treturn !_enableTracing ? Trace._None : new Trace(TraceType.Invocation, ctor.name || (ctor.toString() as string).substring(0, 42).replace(/\\n/g, ''));\n\t}\n\n\tstatic traceCreation(ctor: any): Trace {\n\t\treturn !_enableTracing ? Trace._None : new Trace(TraceType.Creation, ctor.name);\n\t}\n\n\tprivate static _totals: number = 0;\n\tprivate readonly _start: number = Date.now();\n\tprivate readonly _dep: [ServiceIdentifier<any>, boolean, Trace?][] = [];\n\n\tprivate constructor(\n\t\treadonly type: TraceType,\n\t\treadonly name: string | null\n\t) { }\n\n\tbranch(id: ServiceIdentifier<any>, first: boolean): Trace {\n\t\tlet child = new Trace(TraceType.Branch, id.toString());\n\t\tthis._dep.push([id, first, child]);\n\t\treturn child;\n\t}\n\n\tstop() {\n\t\tlet dur = Date.now() - this._start;\n\t\tTrace._totals += dur;\n\n\t\tlet causedCreation = false;\n\n\t\tfunction printChild(n: number, trace: Trace) {\n\t\t\tlet res: string[] = [];\n\t\t\tlet prefix = new Array(n + 1).join('\\t');\n\t\t\tfor (const [id, first, child] of trace._dep) {\n\t\t\t\tif (first && child) {\n\t\t\t\t\tcausedCreation = true;\n\t\t\t\t\tres.push(`${prefix}CREATES -> ${id}`);\n\t\t\t\t\tlet nested = printChild(n + 1, child);\n\t\t\t\t\tif (nested) {\n\t\t\t\t\t\tres.push(nested);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tres.push(`${prefix}uses -> ${id}`);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn res.join('\\n');\n\t\t}\n\n\t\tlet lines = [\n\t\t\t`${this.type === TraceType.Creation ? 'CREATE' : 'CALL'} ${this.name}`,\n\t\t\t`${printChild(1, this)}`,\n\t\t\t`DONE, took ${dur.toFixed(2)}ms (grand total ${Trace._totals.toFixed(2)}ms)`\n\t\t];\n\n\t\tif (dur > 2 || causedCreation) {\n\t\t\tconsole.log(lines.join('\\n'));\n\t\t}\n\t}\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { Event } from 'vs/base/common/event';\nimport { IWorkspace } from 'vs/platform/workspace/common/workspace';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IWorkspaceIdentifier, ISingleFolderWorkspaceIdentifier } from 'vs/platform/workspaces/common/workspaces';\n\nexport const ILabelService = createDecorator<ILabelService>('labelService');\n\nexport interface ILabelService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Gets the human readable label for a uri.\n\t * If relative is passed returns a label relative to the workspace root that the uri belongs to.\n\t * If noPrefix is passed does not tildify the label and also does not prepand the root name for relative labels in a multi root scenario.\n\t */\n\tgetUriLabel(resource: URI, options?: { relative?: boolean, noPrefix?: boolean, endWithSeparator?: boolean }): string;\n\tgetUriBasenameLabel(resource: URI): string;\n\tgetWorkspaceLabel(workspace: (IWorkspaceIdentifier | ISingleFolderWorkspaceIdentifier | IWorkspace), options?: { verbose: boolean }): string;\n\tgetHostLabel(scheme: string, authority?: string): string;\n\tgetSeparator(scheme: string, authority?: string): '/' | '\\\\';\n\n\tregisterFormatter(formatter: ResourceLabelFormatter): IDisposable;\n\tonDidChangeFormatters: Event<IFormatterChangeEvent>;\n}\n\nexport interface IFormatterChangeEvent {\n\tscheme: string;\n}\n\nexport interface ResourceLabelFormatter {\n\tscheme: string;\n\tauthority?: string;\n\tpriority?: boolean;\n\tformatting: ResourceLabelFormatting;\n}\n\nexport interface ResourceLabelFormatting {\n\tlabel: string; // myLabel:/${path}\n\tseparator: '/' | '\\\\' | '';\n\ttildify?: boolean;\n\tnormalizeDriveLetter?: boolean;\n\tworkspaceSuffix?: string;\n\tauthorityPrefix?: string;\n\tstripPathStartingSeparator?: boolean;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { Event } from 'vs/base/common/event';\n\nexport interface ILocalization {\n\tlanguageId: string;\n\tlanguageName?: string;\n\tlocalizedLanguageName?: string;\n\ttranslations: ITranslation[];\n\tminimalTranslations?: { [key: string]: string };\n}\n\nexport interface ITranslation {\n\tid: string;\n\tpath: string;\n}\n\nexport const ILocalizationsService = createDecorator<ILocalizationsService>('localizationsService');\nexport interface ILocalizationsService {\n\treadonly _serviceBrand: undefined;\n\n\treadonly onDidLanguagesChange: Event<void>;\n\tgetLanguageIds(): Promise<string[]>;\n}\n\nexport function isValidLocalization(localization: ILocalization): boolean {\n\tif (typeof localization.languageId !== 'string') {\n\t\treturn false;\n\t}\n\tif (!Array.isArray(localization.translations) || localization.translations.length === 0) {\n\t\treturn false;\n\t}\n\tfor (const translation of localization.translations) {\n\t\tif (typeof translation.id !== 'string') {\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof translation.path !== 'string') {\n\t\t\treturn false;\n\t\t}\n\t}\n\tif (localization.languageName && typeof localization.languageName !== 'string') {\n\t\treturn false;\n\t}\n\tif (localization.localizedLanguageName && typeof localization.localizedLanguageName !== 'string') {\n\t\treturn false;\n\t}\n\treturn true;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator as createServiceDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IDisposable, Disposable } from 'vs/base/common/lifecycle';\nimport { isWindows } from 'vs/base/common/platform';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { LoggerChannelClient } from 'vs/platform/log/common/logIpc';\nimport { URI } from 'vs/base/common/uri';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\n\nexport const ILogService = createServiceDecorator<ILogService>('logService');\nexport const ILoggerService = createServiceDecorator<ILoggerService>('loggerService');\n\nfunction now(): string {\n\treturn new Date().toISOString();\n}\n\nexport enum LogLevel {\n\tTrace,\n\tDebug,\n\tInfo,\n\tWarning,\n\tError,\n\tCritical,\n\tOff\n}\n\nexport const DEFAULT_LOG_LEVEL: LogLevel = LogLevel.Info;\n\nexport interface ILogger extends IDisposable {\n\tonDidChangeLogLevel: Event<LogLevel>;\n\tgetLevel(): LogLevel;\n\tsetLevel(level: LogLevel): void;\n\n\ttrace(message: string, ...args: any[]): void;\n\tdebug(message: string, ...args: any[]): void;\n\tinfo(message: string, ...args: any[]): void;\n\twarn(message: string, ...args: any[]): void;\n\terror(message: string | Error, ...args: any[]): void;\n\tcritical(message: string | Error, ...args: any[]): void;\n\n\t/**\n\t * An operation to flush the contents. Can be synchronous.\n\t */\n\tflush(): void;\n}\n\nexport interface ILogService extends ILogger {\n\treadonly _serviceBrand: undefined;\n}\n\nexport interface ILoggerService {\n\treadonly _serviceBrand: undefined;\n\n\tgetLogger(file: URI): ILogger;\n}\n\nexport abstract class AbstractLogService extends Disposable {\n\n\tprivate level: LogLevel = DEFAULT_LOG_LEVEL;\n\tprivate readonly _onDidChangeLogLevel: Emitter<LogLevel> = this._register(new Emitter<LogLevel>());\n\treadonly onDidChangeLogLevel: Event<LogLevel> = this._onDidChangeLogLevel.event;\n\n\tsetLevel(level: LogLevel): void {\n\t\tif (this.level !== level) {\n\t\t\tthis.level = level;\n\t\t\tthis._onDidChangeLogLevel.fire(this.level);\n\t\t}\n\t}\n\n\tgetLevel(): LogLevel {\n\t\treturn this.level;\n\t}\n\n}\n\nexport class ConsoleLogMainService extends AbstractLogService implements ILogService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\tprivate useColors: boolean;\n\n\tconstructor(logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper();\n\t\tthis.setLevel(logLevel);\n\t\tthis.useColors = !isWindows;\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\twarn(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.warn(`\\x1b[93m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.warn(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\terror(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.error(`\\x1b[91m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.error(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tcritical(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.error(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.error(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\t// noop\n\t}\n\n\tflush(): void {\n\t\t// noop\n\t}\n\n}\n\nexport class ConsoleLogService extends AbstractLogService implements ILogService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper();\n\t\tthis.setLevel(logLevel);\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tconsole.log('%cTRACE', 'color: #888', message, ...args);\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tconsole.log('%cDEBUG', 'background: #eee; color: #888', message, ...args);\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tconsole.log('%c INFO', 'color: #33f', message, ...args);\n\t\t}\n\t}\n\n\twarn(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tconsole.log('%c WARN', 'color: #993', message, ...args);\n\t\t}\n\t}\n\n\terror(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\t\t\tconsole.log('%c  ERR', 'color: #f33', message, ...args);\n\t\t}\n\t}\n\n\tcritical(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tconsole.log('%cCRITI', 'background: #f33; color: white', message, ...args);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\t// noop\n\t}\n\n\tflush(): void {\n\t\t// noop\n\t}\n}\n\nexport class LogServiceAdapter extends AbstractLogService implements ILogService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(private readonly adapter: { consoleLog: (type: string, args: any[]) => void }, logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper();\n\t\tthis.setLevel(logLevel);\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tthis.adapter.consoleLog('trace', [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tthis.adapter.consoleLog('debug', [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tthis.adapter.consoleLog('info', [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\twarn(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tthis.adapter.consoleLog('warn', [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\t\t\tthis.adapter.consoleLog('error', [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tthis.adapter.consoleLog('critical', [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\tprivate extractMessage(msg: string | Error): string {\n\t\tif (typeof msg === 'string') {\n\t\t\treturn msg;\n\t\t}\n\n\t\treturn toErrorMessage(msg, this.getLevel() <= LogLevel.Trace);\n\t}\n\n\tdispose(): void {\n\t\t// noop\n\t}\n\n\tflush(): void {\n\t\t// noop\n\t}\n}\n\nexport class ConsoleLogInMainService extends LogServiceAdapter implements ILogService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(client: LoggerChannelClient, logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper({ consoleLog: (type, args) => client.consoleLog(type, args) }, logLevel);\n\t}\n}\n\nexport class MultiplexLogService extends AbstractLogService implements ILogService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(private readonly logServices: ReadonlyArray<ILogService>) {\n\t\tsuper();\n\t\tif (logServices.length) {\n\t\t\tthis.setLevel(logServices[0].getLevel());\n\t\t}\n\t}\n\n\tsetLevel(level: LogLevel): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.setLevel(level);\n\t\t}\n\t\tsuper.setLevel(level);\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.trace(message, ...args);\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.debug(message, ...args);\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.info(message, ...args);\n\t\t}\n\t}\n\n\twarn(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.warn(message, ...args);\n\t\t}\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.error(message, ...args);\n\t\t}\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.critical(message, ...args);\n\t\t}\n\t}\n\n\tflush(): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.flush();\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.dispose();\n\t\t}\n\t}\n}\n\nexport class DelegatedLogService extends Disposable implements ILogService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(private logService: ILogService) {\n\t\tsuper();\n\t\tthis._register(logService);\n\t}\n\n\tget onDidChangeLogLevel(): Event<LogLevel> {\n\t\treturn this.logService.onDidChangeLogLevel;\n\t}\n\n\tsetLevel(level: LogLevel): void {\n\t\tthis.logService.setLevel(level);\n\t}\n\n\tgetLevel(): LogLevel {\n\t\treturn this.logService.getLevel();\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tthis.logService.trace(message, ...args);\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tthis.logService.debug(message, ...args);\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tthis.logService.info(message, ...args);\n\t}\n\n\twarn(message: string, ...args: any[]): void {\n\t\tthis.logService.warn(message, ...args);\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tthis.logService.error(message, ...args);\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tthis.logService.critical(message, ...args);\n\t}\n\n\tflush(): void {\n\t\tthis.logService.flush();\n\t}\n}\n\nexport class NullLogService implements ILogService {\n\tdeclare readonly _serviceBrand: undefined;\n\treadonly onDidChangeLogLevel: Event<LogLevel> = new Emitter<LogLevel>().event;\n\tsetLevel(level: LogLevel): void { }\n\tgetLevel(): LogLevel { return LogLevel.Info; }\n\ttrace(message: string, ...args: any[]): void { }\n\tdebug(message: string, ...args: any[]): void { }\n\tinfo(message: string, ...args: any[]): void { }\n\twarn(message: string, ...args: any[]): void { }\n\terror(message: string | Error, ...args: any[]): void { }\n\tcritical(message: string | Error, ...args: any[]): void { }\n\tdispose(): void { }\n\tflush(): void { }\n}\n\nexport function getLogLevel(environmentService: IEnvironmentService): LogLevel {\n\tif (environmentService.verbose) {\n\t\treturn LogLevel.Trace;\n\t}\n\tif (typeof environmentService.logLevel === 'string') {\n\t\tconst logLevel = environmentService.logLevel.toLowerCase();\n\t\tswitch (logLevel) {\n\t\t\tcase 'trace':\n\t\t\t\treturn LogLevel.Trace;\n\t\t\tcase 'debug':\n\t\t\t\treturn LogLevel.Debug;\n\t\t\tcase 'info':\n\t\t\t\treturn LogLevel.Info;\n\t\t\tcase 'warn':\n\t\t\t\treturn LogLevel.Warning;\n\t\t\tcase 'error':\n\t\t\t\treturn LogLevel.Error;\n\t\t\tcase 'critical':\n\t\t\t\treturn LogLevel.Critical;\n\t\t\tcase 'off':\n\t\t\t\treturn LogLevel.Off;\n\t\t}\n\t}\n\treturn DEFAULT_LOG_LEVEL;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IFileService, IFileStatWithMetadata } from 'vs/platform/files/common/files';\nimport { IExtensionGalleryService, IGalleryExtension, InstallOperation } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { URI } from 'vs/base/common/uri';\nimport { joinPath } from 'vs/base/common/resources';\nimport { ExtensionIdentifierWithVersion, groupByExtension } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport * as semver from 'vs/base/common/semver/semver';\n\nconst ExtensionIdVersionRegex = /^([^.]+\\..+)-(\\d+\\.\\d+\\.\\d+)$/;\n\nexport class ExtensionsDownloader extends Disposable {\n\n\tprivate readonly extensionsDownloadDir: URI;\n\tprivate readonly cache: number;\n\tprivate readonly cleanUpPromise: Promise<void>;\n\n\tconstructor(\n\t\t@INativeEnvironmentService environmentService: INativeEnvironmentService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IExtensionGalleryService private readonly extensionGalleryService: IExtensionGalleryService,\n\t\t@ILogService private readonly logService: ILogService,\n\t) {\n\t\tsuper();\n\t\tthis.extensionsDownloadDir = URI.file(environmentService.extensionsDownloadPath);\n\t\tthis.cache = 20; // Cache 20 downloads\n\t\tthis.cleanUpPromise = this.cleanUp();\n\t}\n\n\tasync downloadExtension(extension: IGalleryExtension, operation: InstallOperation): Promise<URI> {\n\t\tawait this.cleanUpPromise;\n\t\tconst location = joinPath(this.extensionsDownloadDir, this.getName(extension));\n\t\tawait this.download(extension, location, operation);\n\t\treturn location;\n\t}\n\n\tasync delete(location: URI): Promise<void> {\n\t\t// noop as caching is enabled always\n\t}\n\n\tprivate async download(extension: IGalleryExtension, location: URI, operation: InstallOperation): Promise<void> {\n\t\tif (!await this.fileService.exists(location)) {\n\t\t\tawait this.extensionGalleryService.download(extension, location, operation);\n\t\t}\n\t}\n\n\tprivate async cleanUp(): Promise<void> {\n\t\ttry {\n\t\t\tif (!(await this.fileService.exists(this.extensionsDownloadDir))) {\n\t\t\t\tthis.logService.trace('Extension VSIX downlads cache dir does not exist');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst folderStat = await this.fileService.resolve(this.extensionsDownloadDir, { resolveMetadata: true });\n\t\t\tif (folderStat.children) {\n\t\t\t\tconst toDelete: URI[] = [];\n\t\t\t\tconst all: [ExtensionIdentifierWithVersion, IFileStatWithMetadata][] = [];\n\t\t\t\tfor (const stat of folderStat.children) {\n\t\t\t\t\tconst extension = this.parse(stat.name);\n\t\t\t\t\tif (extension) {\n\t\t\t\t\t\tall.push([extension, stat]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst byExtension = groupByExtension(all, ([extension]) => extension);\n\t\t\t\tconst distinct: IFileStatWithMetadata[] = [];\n\t\t\t\tfor (const p of byExtension) {\n\t\t\t\t\tp.sort((a, b) => semver.rcompare(a[0].version, b[0].version));\n\t\t\t\t\ttoDelete.push(...p.slice(1).map(e => e[1].resource)); // Delete outdated extensions\n\t\t\t\t\tdistinct.push(p[0][1]);\n\t\t\t\t}\n\t\t\t\tdistinct.sort((a, b) => a.mtime - b.mtime); // sort by modified time\n\t\t\t\ttoDelete.push(...distinct.slice(0, Math.max(0, distinct.length - this.cache)).map(s => s.resource)); // Retain minimum cacheSize and delete the rest\n\t\t\t\tawait Promise.all(toDelete.map(resource => {\n\t\t\t\t\tthis.logService.trace('Deleting vsix from cache', resource.path);\n\t\t\t\t\treturn this.fileService.del(resource);\n\t\t\t\t}));\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tthis.logService.error(e);\n\t\t}\n\t}\n\n\tprivate getName(extension: IGalleryExtension): string {\n\t\treturn this.cache ? new ExtensionIdentifierWithVersion(extension.identifier, extension.version).key().toLowerCase() : generateUuid();\n\t}\n\n\tprivate parse(name: string): ExtensionIdentifierWithVersion | null {\n\t\tconst matches = ExtensionIdVersionRegex.exec(name);\n\t\treturn matches && matches[1] && matches[2] ? new ExtensionIdentifierWithVersion({ id: matches[1] }, matches[2]) : null;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { ILocalExtension } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { fork, ChildProcess } from 'child_process';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport { join } from 'vs/base/common/path';\nimport { Limiter } from 'vs/base/common/async';\nimport { Event } from 'vs/base/common/event';\nimport { Schemas } from 'vs/base/common/network';\nimport { rimraf } from 'vs/base/node/pfs';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\n\nexport class ExtensionsLifecycle extends Disposable {\n\n\tprivate processesLimiter: Limiter<void> = new Limiter(5); // Run max 5 processes in parallel\n\n\tconstructor(\n\t\t@IEnvironmentService private environmentService: IEnvironmentService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper();\n\t}\n\n\tasync postUninstall(extension: ILocalExtension): Promise<void> {\n\t\tconst script = this.parseScript(extension, 'uninstall');\n\t\tif (script) {\n\t\t\tthis.logService.info(extension.identifier.id, extension.manifest.version, `Running post uninstall script`);\n\t\t\tawait this.processesLimiter.queue(() =>\n\t\t\t\tthis.runLifecycleHook(script.script, 'uninstall', script.args, true, extension)\n\t\t\t\t\t.then(() => this.logService.info(extension.identifier.id, extension.manifest.version, `Finished running post uninstall script`), err => this.logService.error(extension.identifier.id, extension.manifest.version, `Failed to run post uninstall script: ${err}`)));\n\t\t}\n\t\treturn rimraf(this.getExtensionStoragePath(extension)).then(undefined, e => this.logService.error('Error while removing extension storage path', e));\n\t}\n\n\tprivate parseScript(extension: ILocalExtension, type: string): { script: string, args: string[] } | null {\n\t\tconst scriptKey = `vscode:${type}`;\n\t\tif (extension.location.scheme === Schemas.file && extension.manifest && extension.manifest['scripts'] && typeof extension.manifest['scripts'][scriptKey] === 'string') {\n\t\t\tconst script = (<string>extension.manifest['scripts'][scriptKey]).split(' ');\n\t\t\tif (script.length < 2 || script[0] !== 'node' || !script[1]) {\n\t\t\t\tthis.logService.warn(extension.identifier.id, extension.manifest.version, `${scriptKey} should be a node script`);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn { script: join(extension.location.fsPath, script[1]), args: script.slice(2) || [] };\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate runLifecycleHook(lifecycleHook: string, lifecycleType: string, args: string[], timeout: boolean, extension: ILocalExtension): Promise<void> {\n\t\treturn new Promise<void>((c, e) => {\n\n\t\t\tconst extensionLifecycleProcess = this.start(lifecycleHook, lifecycleType, args, extension);\n\t\t\tlet timeoutHandler: any;\n\n\t\t\tconst onexit = (error?: string) => {\n\t\t\t\tif (timeoutHandler) {\n\t\t\t\t\tclearTimeout(timeoutHandler);\n\t\t\t\t\ttimeoutHandler = null;\n\t\t\t\t}\n\t\t\t\tif (error) {\n\t\t\t\t\te(error);\n\t\t\t\t} else {\n\t\t\t\t\tc(undefined);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// on error\n\t\t\textensionLifecycleProcess.on('error', (err) => {\n\t\t\t\tonexit(toErrorMessage(err) || 'Unknown');\n\t\t\t});\n\n\t\t\t// on exit\n\t\t\textensionLifecycleProcess.on('exit', (code: number, signal: string) => {\n\t\t\t\tonexit(code ? `post-${lifecycleType} process exited with code ${code}` : undefined);\n\t\t\t});\n\n\t\t\tif (timeout) {\n\t\t\t\t// timeout: kill process after waiting for 5s\n\t\t\t\ttimeoutHandler = setTimeout(() => {\n\t\t\t\t\ttimeoutHandler = null;\n\t\t\t\t\textensionLifecycleProcess.kill();\n\t\t\t\t\te('timed out');\n\t\t\t\t}, 5000);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate start(uninstallHook: string, lifecycleType: string, args: string[], extension: ILocalExtension): ChildProcess {\n\t\tconst opts = {\n\t\t\tsilent: true,\n\t\t\texecArgv: undefined\n\t\t};\n\t\tconst extensionUninstallProcess = fork(uninstallHook, [`--type=extension-post-${lifecycleType}`, ...args], opts);\n\n\t\t// Catch all output coming from the process\n\t\ttype Output = { data: string, format: string[] };\n\t\textensionUninstallProcess.stdout!.setEncoding('utf8');\n\t\textensionUninstallProcess.stderr!.setEncoding('utf8');\n\n\t\tconst onStdout = Event.fromNodeEventEmitter<string>(extensionUninstallProcess.stdout!, 'data');\n\t\tconst onStderr = Event.fromNodeEventEmitter<string>(extensionUninstallProcess.stderr!, 'data');\n\n\t\t// Log output\n\t\tonStdout(data => this.logService.info(extension.identifier.id, extension.manifest.version, `post-${lifecycleType}`, data));\n\t\tonStderr(data => this.logService.error(extension.identifier.id, extension.manifest.version, `post-${lifecycleType}`, data));\n\n\t\tconst onOutput = Event.any(\n\t\t\tEvent.map(onStdout, o => ({ data: `%c${o}`, format: [''] })),\n\t\t\tEvent.map(onStderr, o => ({ data: `%c${o}`, format: ['color: red'] }))\n\t\t);\n\t\t// Debounce all output, so we can render it in the Chrome console as a group\n\t\tconst onDebouncedOutput = Event.debounce<Output>(onOutput, (r, o) => {\n\t\t\treturn r\n\t\t\t\t? { data: r.data + o.data, format: [...r.format, ...o.format] }\n\t\t\t\t: { data: o.data, format: o.format };\n\t\t}, 100);\n\n\t\t// Print out output\n\t\tonDebouncedOutput(data => {\n\t\t\tconsole.group(extension.identifier.id);\n\t\t\tconsole.log(data.data, ...data.format);\n\t\t\tconsole.groupEnd();\n\t\t});\n\n\t\treturn extensionUninstallProcess;\n\t}\n\n\tprivate getExtensionStoragePath(extension: ILocalExtension): string {\n\t\treturn join(this.environmentService.globalStorageHome.fsPath, extension.identifier.id.toLowerCase());\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable, IDisposable, toDisposable, dispose, DisposableStore } from 'vs/base/common/lifecycle';\nimport { IFileService, IResolveFileOptions, FileChangesEvent, FileOperationEvent, IFileSystemProviderRegistrationEvent, IFileSystemProvider, IFileStat, IResolveFileResult, ICreateFileOptions, IFileSystemProviderActivationEvent, FileOperationError, FileOperationResult, FileOperation, FileSystemProviderCapabilities, FileType, toFileSystemProviderErrorCode, FileSystemProviderErrorCode, IStat, IFileStatWithMetadata, IResolveMetadataFileOptions, etag, hasReadWriteCapability, hasFileFolderCopyCapability, hasOpenReadWriteCloseCapability, toFileOperationResult, IFileSystemProviderWithOpenReadWriteCloseCapability, IFileSystemProviderWithFileReadWriteCapability, IResolveFileResultWithMetadata, IWatchOptions, IWriteFileOptions, IReadFileOptions, IFileStreamContent, IFileContent, ETAG_DISABLED, hasFileReadStreamCapability, IFileSystemProviderWithFileReadStreamCapability, ensureFileSystemProviderError, IFileSystemProviderCapabilitiesChangeEvent } from 'vs/platform/files/common/files';\nimport { URI } from 'vs/base/common/uri';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { isAbsolutePath, dirname, basename, joinPath, IExtUri, extUri, extUriIgnorePathCase } from 'vs/base/common/resources';\nimport { localize } from 'vs/nls';\nimport { TernarySearchTree } from 'vs/base/common/map';\nimport { isNonEmptyArray, coalesce } from 'vs/base/common/arrays';\nimport { getBaseLabel } from 'vs/base/common/labels';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { VSBuffer, VSBufferReadable, readableToBuffer, bufferToReadable, streamToBuffer, bufferToStream, VSBufferReadableStream, VSBufferReadableBufferedStream, bufferedStreamToBuffer, newWriteableBufferStream } from 'vs/base/common/buffer';\nimport { isReadableStream, transform, peekReadable, peekStream, isReadableBufferedStream } from 'vs/base/common/stream';\nimport { Queue } from 'vs/base/common/async';\nimport { CancellationTokenSource, CancellationToken } from 'vs/base/common/cancellation';\nimport { Schemas } from 'vs/base/common/network';\nimport { readFileIntoStream } from 'vs/platform/files/common/io';\nimport { Iterable } from 'vs/base/common/iterator';\n\nexport class FileService extends Disposable implements IFileService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly BUFFER_SIZE = 64 * 1024;\n\n\tconstructor(@ILogService private readonly logService: ILogService) {\n\t\tsuper();\n\t}\n\n\t//#region File System Provider\n\n\tprivate readonly _onDidChangeFileSystemProviderRegistrations = this._register(new Emitter<IFileSystemProviderRegistrationEvent>());\n\treadonly onDidChangeFileSystemProviderRegistrations = this._onDidChangeFileSystemProviderRegistrations.event;\n\n\tprivate readonly _onWillActivateFileSystemProvider = this._register(new Emitter<IFileSystemProviderActivationEvent>());\n\treadonly onWillActivateFileSystemProvider = this._onWillActivateFileSystemProvider.event;\n\n\tprivate readonly _onDidChangeFileSystemProviderCapabilities = this._register(new Emitter<IFileSystemProviderCapabilitiesChangeEvent>());\n\treadonly onDidChangeFileSystemProviderCapabilities = this._onDidChangeFileSystemProviderCapabilities.event;\n\n\tprivate readonly provider = new Map<string, IFileSystemProvider>();\n\n\tregisterProvider(scheme: string, provider: IFileSystemProvider): IDisposable {\n\t\tif (this.provider.has(scheme)) {\n\t\t\tthrow new Error(`A filesystem provider for the scheme '${scheme}' is already registered.`);\n\t\t}\n\n\t\t// Add provider with event\n\t\tthis.provider.set(scheme, provider);\n\t\tthis._onDidChangeFileSystemProviderRegistrations.fire({ added: true, scheme, provider });\n\n\t\t// Forward events from provider\n\t\tconst providerDisposables = new DisposableStore();\n\t\tproviderDisposables.add(provider.onDidChangeFile(changes => this._onDidFilesChange.fire(new FileChangesEvent(changes, !this.isPathCaseSensitive(provider)))));\n\t\tproviderDisposables.add(provider.onDidChangeCapabilities(() => this._onDidChangeFileSystemProviderCapabilities.fire({ provider, scheme })));\n\t\tif (typeof provider.onDidErrorOccur === 'function') {\n\t\t\tproviderDisposables.add(provider.onDidErrorOccur(error => this._onError.fire(new Error(error))));\n\t\t}\n\n\t\treturn toDisposable(() => {\n\t\t\tthis._onDidChangeFileSystemProviderRegistrations.fire({ added: false, scheme, provider });\n\t\t\tthis.provider.delete(scheme);\n\n\t\t\tdispose(providerDisposables);\n\t\t});\n\t}\n\n\tasync activateProvider(scheme: string): Promise<void> {\n\n\t\t// Emit an event that we are about to activate a provider with the given scheme.\n\t\t// Listeners can participate in the activation by registering a provider for it.\n\t\tconst joiners: Promise<void>[] = [];\n\t\tthis._onWillActivateFileSystemProvider.fire({\n\t\t\tscheme,\n\t\t\tjoin(promise) {\n\t\t\t\tif (promise) {\n\t\t\t\t\tjoiners.push(promise);\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\n\t\tif (this.provider.has(scheme)) {\n\t\t\treturn; // provider is already here so we can return directly\n\t\t}\n\n\t\t// If the provider is not yet there, make sure to join on the listeners assuming\n\t\t// that it takes a bit longer to register the file system provider.\n\t\tawait Promise.all(joiners);\n\t}\n\n\tcanHandleResource(resource: URI): boolean {\n\t\treturn this.provider.has(resource.scheme);\n\t}\n\n\thasCapability(resource: URI, capability: FileSystemProviderCapabilities): boolean {\n\t\tconst provider = this.provider.get(resource.scheme);\n\n\t\treturn !!(provider && (provider.capabilities & capability));\n\t}\n\n\tlistCapabilities(): Iterable<{ scheme: string, capabilities: FileSystemProviderCapabilities }> {\n\t\treturn Iterable.map(this.provider, ([scheme, provider]) => ({ scheme, capabilities: provider.capabilities }));\n\t}\n\n\tprotected async withProvider(resource: URI): Promise<IFileSystemProvider> {\n\n\t\t// Assert path is absolute\n\t\tif (!isAbsolutePath(resource)) {\n\t\t\tthrow new FileOperationError(localize('invalidPath', \"Unable to resolve filesystem provider with relative file path '{0}'\", this.resourceForError(resource)), FileOperationResult.FILE_INVALID_PATH);\n\t\t}\n\n\t\t// Activate provider\n\t\tawait this.activateProvider(resource.scheme);\n\n\t\t// Assert provider\n\t\tconst provider = this.provider.get(resource.scheme);\n\t\tif (!provider) {\n\t\t\tconst error = new Error();\n\t\t\terror.name = 'ENOPRO';\n\t\t\terror.message = localize('noProviderFound', \"No file system provider found for resource '{0}'\", resource.toString());\n\n\t\t\tthrow error;\n\t\t}\n\n\t\treturn provider;\n\t}\n\n\tprivate async withReadProvider(resource: URI): Promise<IFileSystemProviderWithFileReadWriteCapability | IFileSystemProviderWithOpenReadWriteCloseCapability | IFileSystemProviderWithFileReadStreamCapability> {\n\t\tconst provider = await this.withProvider(resource);\n\n\t\tif (hasOpenReadWriteCloseCapability(provider) || hasReadWriteCapability(provider) || hasFileReadStreamCapability(provider)) {\n\t\t\treturn provider;\n\t\t}\n\n\t\tthrow new Error(`Filesystem provider for scheme '${resource.scheme}' neither has FileReadWrite, FileReadStream nor FileOpenReadWriteClose capability which is needed for the read operation.`);\n\t}\n\n\tprivate async withWriteProvider(resource: URI): Promise<IFileSystemProviderWithFileReadWriteCapability | IFileSystemProviderWithOpenReadWriteCloseCapability> {\n\t\tconst provider = await this.withProvider(resource);\n\n\t\tif (hasOpenReadWriteCloseCapability(provider) || hasReadWriteCapability(provider)) {\n\t\t\treturn provider;\n\t\t}\n\n\t\tthrow new Error(`Filesystem provider for scheme '${resource.scheme}' neither has FileReadWrite nor FileOpenReadWriteClose capability which is needed for the write operation.`);\n\t}\n\n\t//#endregion\n\n\tprivate readonly _onDidRunOperation = this._register(new Emitter<FileOperationEvent>());\n\treadonly onDidRunOperation = this._onDidRunOperation.event;\n\n\tprivate readonly _onError = this._register(new Emitter<Error>());\n\treadonly onError = this._onError.event;\n\n\t//#region File Metadata Resolving\n\n\tasync resolve(resource: URI, options: IResolveMetadataFileOptions): Promise<IFileStatWithMetadata>;\n\tasync resolve(resource: URI, options?: IResolveFileOptions): Promise<IFileStat>;\n\tasync resolve(resource: URI, options?: IResolveFileOptions): Promise<IFileStat> {\n\t\ttry {\n\t\t\treturn await this.doResolveFile(resource, options);\n\t\t} catch (error) {\n\n\t\t\t// Specially handle file not found case as file operation result\n\t\t\tif (toFileSystemProviderErrorCode(error) === FileSystemProviderErrorCode.FileNotFound) {\n\t\t\t\tthrow new FileOperationError(localize('fileNotFoundError', \"Unable to resolve non-existing file '{0}'\", this.resourceForError(resource)), FileOperationResult.FILE_NOT_FOUND);\n\t\t\t}\n\n\t\t\t// Bubble up any other error as is\n\t\t\tthrow ensureFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tprivate async doResolveFile(resource: URI, options: IResolveMetadataFileOptions): Promise<IFileStatWithMetadata>;\n\tprivate async doResolveFile(resource: URI, options?: IResolveFileOptions): Promise<IFileStat>;\n\tprivate async doResolveFile(resource: URI, options?: IResolveFileOptions): Promise<IFileStat> {\n\t\tconst provider = await this.withProvider(resource);\n\n\t\tconst resolveTo = options?.resolveTo;\n\t\tconst resolveSingleChildDescendants = options?.resolveSingleChildDescendants;\n\t\tconst resolveMetadata = options?.resolveMetadata;\n\n\t\tconst stat = await provider.stat(resource);\n\n\t\tlet trie: TernarySearchTree<URI, boolean> | undefined;\n\n\t\treturn this.toFileStat(provider, resource, stat, undefined, !!resolveMetadata, (stat, siblings) => {\n\n\t\t\t// lazy trie to check for recursive resolving\n\t\t\tif (!trie) {\n\t\t\t\ttrie = TernarySearchTree.forUris<true>();\n\t\t\t\ttrie.set(resource, true);\n\t\t\t\tif (isNonEmptyArray(resolveTo)) {\n\t\t\t\t\tresolveTo.forEach(uri => trie!.set(uri, true));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// check for recursive resolving\n\t\t\tif (Boolean(trie.findSuperstr(stat.resource) || trie.get(stat.resource))) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// check for resolving single child folders\n\t\t\tif (stat.isDirectory && resolveSingleChildDescendants) {\n\t\t\t\treturn siblings === 1;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t});\n\t}\n\n\tprivate async toFileStat(provider: IFileSystemProvider, resource: URI, stat: IStat | { type: FileType } & Partial<IStat>, siblings: number | undefined, resolveMetadata: boolean, recurse: (stat: IFileStat, siblings?: number) => boolean): Promise<IFileStat>;\n\tprivate async toFileStat(provider: IFileSystemProvider, resource: URI, stat: IStat, siblings: number | undefined, resolveMetadata: true, recurse: (stat: IFileStat, siblings?: number) => boolean): Promise<IFileStatWithMetadata>;\n\tprivate async toFileStat(provider: IFileSystemProvider, resource: URI, stat: IStat | { type: FileType } & Partial<IStat>, siblings: number | undefined, resolveMetadata: boolean, recurse: (stat: IFileStat, siblings?: number) => boolean): Promise<IFileStat> {\n\n\t\t// convert to file stat\n\t\tconst fileStat: IFileStat = {\n\t\t\tresource,\n\t\t\tname: getBaseLabel(resource),\n\t\t\tisFile: (stat.type & FileType.File) !== 0,\n\t\t\tisDirectory: (stat.type & FileType.Directory) !== 0,\n\t\t\tisSymbolicLink: (stat.type & FileType.SymbolicLink) !== 0,\n\t\t\tmtime: stat.mtime,\n\t\t\tctime: stat.ctime,\n\t\t\tsize: stat.size,\n\t\t\tetag: etag({ mtime: stat.mtime, size: stat.size })\n\t\t};\n\n\t\t// check to recurse for directories\n\t\tif (fileStat.isDirectory && recurse(fileStat, siblings)) {\n\t\t\ttry {\n\t\t\t\tconst entries = await provider.readdir(resource);\n\t\t\t\tconst resolvedEntries = await Promise.all(entries.map(async ([name, type]) => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst childResource = joinPath(resource, name);\n\t\t\t\t\t\tconst childStat = resolveMetadata ? await provider.stat(childResource) : { type };\n\n\t\t\t\t\t\treturn await this.toFileStat(provider, childResource, childStat, entries.length, resolveMetadata, recurse);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tthis.logService.trace(error);\n\n\t\t\t\t\t\treturn null; // can happen e.g. due to permission errors\n\t\t\t\t\t}\n\t\t\t\t}));\n\n\t\t\t\t// make sure to get rid of null values that signal a failure to resolve a particular entry\n\t\t\t\tfileStat.children = coalesce(resolvedEntries);\n\t\t\t} catch (error) {\n\t\t\t\tthis.logService.trace(error);\n\n\t\t\t\tfileStat.children = []; // gracefully handle errors, we may not have permissions to read\n\t\t\t}\n\n\t\t\treturn fileStat;\n\t\t}\n\n\t\treturn fileStat;\n\t}\n\n\tasync resolveAll(toResolve: { resource: URI, options?: IResolveFileOptions }[]): Promise<IResolveFileResult[]>;\n\tasync resolveAll(toResolve: { resource: URI, options: IResolveMetadataFileOptions }[]): Promise<IResolveFileResultWithMetadata[]>;\n\tasync resolveAll(toResolve: { resource: URI; options?: IResolveFileOptions; }[]): Promise<IResolveFileResult[]> {\n\t\treturn Promise.all(toResolve.map(async entry => {\n\t\t\ttry {\n\t\t\t\treturn { stat: await this.doResolveFile(entry.resource, entry.options), success: true };\n\t\t\t} catch (error) {\n\t\t\t\tthis.logService.trace(error);\n\n\t\t\t\treturn { stat: undefined, success: false };\n\t\t\t}\n\t\t}));\n\t}\n\n\tasync exists(resource: URI): Promise<boolean> {\n\t\tconst provider = await this.withProvider(resource);\n\n\t\ttry {\n\t\t\tconst stat = await provider.stat(resource);\n\n\t\t\treturn !!stat;\n\t\t} catch (error) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region File Reading/Writing\n\n\tasync canCreateFile(resource: URI, options?: ICreateFileOptions): Promise<Error | true> {\n\t\ttry {\n\t\t\tawait this.doValidateCreateFile(resource, options);\n\t\t} catch (error) {\n\t\t\treturn error;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate async doValidateCreateFile(resource: URI, options?: ICreateFileOptions): Promise<void> {\n\n\t\t// validate overwrite\n\t\tif (!options?.overwrite && await this.exists(resource)) {\n\t\t\tthrow new FileOperationError(localize('fileExists', \"Unable to create file '{0}' that already exists when overwrite flag is not set\", this.resourceForError(resource)), FileOperationResult.FILE_MODIFIED_SINCE, options);\n\t\t}\n\t}\n\n\tasync createFile(resource: URI, bufferOrReadableOrStream: VSBuffer | VSBufferReadable | VSBufferReadableStream = VSBuffer.fromString(''), options?: ICreateFileOptions): Promise<IFileStatWithMetadata> {\n\n\t\t// validate\n\t\tawait this.doValidateCreateFile(resource, options);\n\n\t\t// do write into file (this will create it too)\n\t\tconst fileStat = await this.writeFile(resource, bufferOrReadableOrStream);\n\n\t\t// events\n\t\tthis._onDidRunOperation.fire(new FileOperationEvent(resource, FileOperation.CREATE, fileStat));\n\n\t\treturn fileStat;\n\t}\n\n\tasync writeFile(resource: URI, bufferOrReadableOrStream: VSBuffer | VSBufferReadable | VSBufferReadableStream, options?: IWriteFileOptions): Promise<IFileStatWithMetadata> {\n\t\tconst provider = this.throwIfFileSystemIsReadonly(await this.withWriteProvider(resource), resource);\n\n\t\ttry {\n\n\t\t\t// validate write\n\t\t\tconst stat = await this.validateWriteFile(provider, resource, options);\n\n\t\t\t// mkdir recursively as needed\n\t\t\tif (!stat) {\n\t\t\t\tawait this.mkdirp(provider, dirname(resource));\n\t\t\t}\n\n\t\t\t// optimization: if the provider has unbuffered write capability and the data\n\t\t\t// to write is a Readable, we consume up to 3 chunks and try to write the data\n\t\t\t// unbuffered to reduce the overhead. If the Readable has more data to provide\n\t\t\t// we continue to write buffered.\n\t\t\tlet bufferOrReadableOrStreamOrBufferedStream: VSBuffer | VSBufferReadable | VSBufferReadableStream | VSBufferReadableBufferedStream;\n\t\t\tif (hasReadWriteCapability(provider) && !(bufferOrReadableOrStream instanceof VSBuffer)) {\n\t\t\t\tif (isReadableStream(bufferOrReadableOrStream)) {\n\t\t\t\t\tconst bufferedStream = await peekStream(bufferOrReadableOrStream, 3);\n\t\t\t\t\tif (bufferedStream.ended) {\n\t\t\t\t\t\tbufferOrReadableOrStreamOrBufferedStream = VSBuffer.concat(bufferedStream.buffer);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbufferOrReadableOrStreamOrBufferedStream = bufferedStream;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tbufferOrReadableOrStreamOrBufferedStream = peekReadable(bufferOrReadableOrStream, data => VSBuffer.concat(data), 3);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tbufferOrReadableOrStreamOrBufferedStream = bufferOrReadableOrStream;\n\t\t\t}\n\n\t\t\t// write file: unbuffered (only if data to write is a buffer, or the provider has no buffered write capability)\n\t\t\tif (!hasOpenReadWriteCloseCapability(provider) || (hasReadWriteCapability(provider) && bufferOrReadableOrStreamOrBufferedStream instanceof VSBuffer)) {\n\t\t\t\tawait this.doWriteUnbuffered(provider, resource, bufferOrReadableOrStreamOrBufferedStream);\n\t\t\t}\n\n\t\t\t// write file: buffered\n\t\t\telse {\n\t\t\t\tawait this.doWriteBuffered(provider, resource, bufferOrReadableOrStreamOrBufferedStream instanceof VSBuffer ? bufferToReadable(bufferOrReadableOrStreamOrBufferedStream) : bufferOrReadableOrStreamOrBufferedStream);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthrow new FileOperationError(localize('err.write', \"Unable to write file '{0}' ({1})\", this.resourceForError(resource), ensureFileSystemProviderError(error).toString()), toFileOperationResult(error), options);\n\t\t}\n\n\t\treturn this.resolve(resource, { resolveMetadata: true });\n\t}\n\n\tprivate async validateWriteFile(provider: IFileSystemProvider, resource: URI, options?: IWriteFileOptions): Promise<IStat | undefined> {\n\t\tlet stat: IStat | undefined = undefined;\n\t\ttry {\n\t\t\tstat = await provider.stat(resource);\n\t\t} catch (error) {\n\t\t\treturn undefined; // file might not exist\n\t\t}\n\n\t\t// file cannot be directory\n\t\tif ((stat.type & FileType.Directory) !== 0) {\n\t\t\tthrow new FileOperationError(localize('fileIsDirectoryWriteError', \"Unable to write file '{0}' that is actually a directory\", this.resourceForError(resource)), FileOperationResult.FILE_IS_DIRECTORY, options);\n\t\t}\n\n\t\t// Dirty write prevention: if the file on disk has been changed and does not match our expected\n\t\t// mtime and etag, we bail out to prevent dirty writing.\n\t\t//\n\t\t// First, we check for a mtime that is in the future before we do more checks. The assumption is\n\t\t// that only the mtime is an indicator for a file that has changed on disk.\n\t\t//\n\t\t// Second, if the mtime has advanced, we compare the size of the file on disk with our previous\n\t\t// one using the etag() function. Relying only on the mtime check has prooven to produce false\n\t\t// positives due to file system weirdness (especially around remote file systems). As such, the\n\t\t// check for size is a weaker check because it can return a false negative if the file has changed\n\t\t// but to the same length. This is a compromise we take to avoid having to produce checksums of\n\t\t// the file content for comparison which would be much slower to compute.\n\t\tif (\n\t\t\toptions && typeof options.mtime === 'number' && typeof options.etag === 'string' && options.etag !== ETAG_DISABLED &&\n\t\t\ttypeof stat.mtime === 'number' && typeof stat.size === 'number' &&\n\t\t\toptions.mtime < stat.mtime && options.etag !== etag({ mtime: options.mtime /* not using stat.mtime for a reason, see above */, size: stat.size })\n\t\t) {\n\t\t\tthrow new FileOperationError(localize('fileModifiedError', \"File Modified Since\"), FileOperationResult.FILE_MODIFIED_SINCE, options);\n\t\t}\n\n\t\treturn stat;\n\t}\n\n\tasync readFile(resource: URI, options?: IReadFileOptions): Promise<IFileContent> {\n\t\tconst provider = await this.withReadProvider(resource);\n\n\t\tconst stream = await this.doReadAsFileStream(provider, resource, {\n\t\t\t...options,\n\t\t\t// optimization: since we know that the caller does not\n\t\t\t// care about buffering, we indicate this to the reader.\n\t\t\t// this reduces all the overhead the buffered reading\n\t\t\t// has (open, read, close) if the provider supports\n\t\t\t// unbuffered reading.\n\t\t\tpreferUnbuffered: true\n\t\t});\n\n\t\treturn {\n\t\t\t...stream,\n\t\t\tvalue: await streamToBuffer(stream.value)\n\t\t};\n\t}\n\n\tasync readFileStream(resource: URI, options?: IReadFileOptions): Promise<IFileStreamContent> {\n\t\tconst provider = await this.withReadProvider(resource);\n\n\t\treturn this.doReadAsFileStream(provider, resource, options);\n\t}\n\n\tprivate async doReadAsFileStream(provider: IFileSystemProviderWithFileReadWriteCapability | IFileSystemProviderWithOpenReadWriteCloseCapability | IFileSystemProviderWithFileReadStreamCapability, resource: URI, options?: IReadFileOptions & { preferUnbuffered?: boolean }): Promise<IFileStreamContent> {\n\n\t\t// install a cancellation token that gets cancelled\n\t\t// when any error occurs. this allows us to resolve\n\t\t// the content of the file while resolving metadata\n\t\t// but still cancel the operation in certain cases.\n\t\tconst cancellableSource = new CancellationTokenSource();\n\n\t\t// validate read operation\n\t\tconst statPromise = this.validateReadFile(resource, options).then(stat => stat, error => {\n\t\t\tcancellableSource.cancel();\n\n\t\t\tthrow error;\n\t\t});\n\n\t\ttry {\n\n\t\t\t// if the etag is provided, we await the result of the validation\n\t\t\t// due to the likelyhood of hitting a NOT_MODIFIED_SINCE result.\n\t\t\t// otherwise, we let it run in parallel to the file reading for\n\t\t\t// optimal startup performance.\n\t\t\tif (options && typeof options.etag === 'string' && options.etag !== ETAG_DISABLED) {\n\t\t\t\tawait statPromise;\n\t\t\t}\n\n\t\t\tlet fileStreamPromise: Promise<VSBufferReadableStream>;\n\n\t\t\t// read unbuffered (only if either preferred, or the provider has no buffered read capability)\n\t\t\tif (!(hasOpenReadWriteCloseCapability(provider) || hasFileReadStreamCapability(provider)) || (hasReadWriteCapability(provider) && options?.preferUnbuffered)) {\n\t\t\t\tfileStreamPromise = this.readFileUnbuffered(provider, resource, options);\n\t\t\t}\n\n\t\t\t// read streamed (always prefer over primitive buffered read)\n\t\t\telse if (hasFileReadStreamCapability(provider)) {\n\t\t\t\tfileStreamPromise = Promise.resolve(this.readFileStreamed(provider, resource, cancellableSource.token, options));\n\t\t\t}\n\n\t\t\t// read buffered\n\t\t\telse {\n\t\t\t\tfileStreamPromise = Promise.resolve(this.readFileBuffered(provider, resource, cancellableSource.token, options));\n\t\t\t}\n\n\t\t\tconst [fileStat, fileStream] = await Promise.all([statPromise, fileStreamPromise]);\n\n\t\t\treturn {\n\t\t\t\t...fileStat,\n\t\t\t\tvalue: fileStream\n\t\t\t};\n\t\t} catch (error) {\n\t\t\tthrow new FileOperationError(localize('err.read', \"Unable to read file '{0}' ({1})\", this.resourceForError(resource), ensureFileSystemProviderError(error).toString()), toFileOperationResult(error), options);\n\t\t}\n\t}\n\n\tprivate readFileStreamed(provider: IFileSystemProviderWithFileReadStreamCapability, resource: URI, token: CancellationToken, options: IReadFileOptions = Object.create(null)): VSBufferReadableStream {\n\t\tconst fileStream = provider.readFileStream(resource, options, token);\n\n\t\treturn transform(fileStream, {\n\t\t\tdata: data => data instanceof VSBuffer ? data : VSBuffer.wrap(data),\n\t\t\terror: error => new FileOperationError(localize('err.read', \"Unable to read file '{0}' ({1})\", this.resourceForError(resource), ensureFileSystemProviderError(error).toString()), toFileOperationResult(error), options)\n\t\t}, data => VSBuffer.concat(data));\n\t}\n\n\tprivate readFileBuffered(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, resource: URI, token: CancellationToken, options: IReadFileOptions = Object.create(null)): VSBufferReadableStream {\n\t\tconst stream = newWriteableBufferStream();\n\n\t\treadFileIntoStream(provider, resource, stream, data => data, {\n\t\t\t...options,\n\t\t\tbufferSize: this.BUFFER_SIZE,\n\t\t\terrorTransformer: error => new FileOperationError(localize('err.read', \"Unable to read file '{0}' ({1})\", this.resourceForError(resource), ensureFileSystemProviderError(error).toString()), toFileOperationResult(error), options)\n\t\t}, token);\n\n\t\treturn stream;\n\t}\n\n\tprivate async readFileUnbuffered(provider: IFileSystemProviderWithFileReadWriteCapability, resource: URI, options?: IReadFileOptions): Promise<VSBufferReadableStream> {\n\t\tlet buffer = await provider.readFile(resource);\n\n\t\t// respect position option\n\t\tif (options && typeof options.position === 'number') {\n\t\t\tbuffer = buffer.slice(options.position);\n\t\t}\n\n\t\t// respect length option\n\t\tif (options && typeof options.length === 'number') {\n\t\t\tbuffer = buffer.slice(0, options.length);\n\t\t}\n\n\t\t// Throw if file is too large to load\n\t\tthis.validateReadFileLimits(resource, buffer.byteLength, options);\n\n\t\treturn bufferToStream(VSBuffer.wrap(buffer));\n\t}\n\n\tprivate async validateReadFile(resource: URI, options?: IReadFileOptions): Promise<IFileStatWithMetadata> {\n\t\tconst stat = await this.resolve(resource, { resolveMetadata: true });\n\n\t\t// Throw if resource is a directory\n\t\tif (stat.isDirectory) {\n\t\t\tthrow new FileOperationError(localize('fileIsDirectoryReadError', \"Unable to read file '{0}' that is actually a directory\", this.resourceForError(resource)), FileOperationResult.FILE_IS_DIRECTORY, options);\n\t\t}\n\n\t\t// Throw if file not modified since (unless disabled)\n\t\tif (options && typeof options.etag === 'string' && options.etag !== ETAG_DISABLED && options.etag === stat.etag) {\n\t\t\tthrow new FileOperationError(localize('fileNotModifiedError', \"File not modified since\"), FileOperationResult.FILE_NOT_MODIFIED_SINCE, options);\n\t\t}\n\n\t\t// Throw if file is too large to load\n\t\tthis.validateReadFileLimits(resource, stat.size, options);\n\n\t\treturn stat;\n\t}\n\n\tprivate validateReadFileLimits(resource: URI, size: number, options?: IReadFileOptions): void {\n\t\tif (options?.limits) {\n\t\t\tlet tooLargeErrorResult: FileOperationResult | undefined = undefined;\n\n\t\t\tif (typeof options.limits.memory === 'number' && size > options.limits.memory) {\n\t\t\t\ttooLargeErrorResult = FileOperationResult.FILE_EXCEEDS_MEMORY_LIMIT;\n\t\t\t}\n\n\t\t\tif (typeof options.limits.size === 'number' && size > options.limits.size) {\n\t\t\t\ttooLargeErrorResult = FileOperationResult.FILE_TOO_LARGE;\n\t\t\t}\n\n\t\t\tif (typeof tooLargeErrorResult === 'number') {\n\t\t\t\tthrow new FileOperationError(localize('fileTooLargeError', \"Unable to read file '{0}' that is too large to open\", this.resourceForError(resource)), tooLargeErrorResult);\n\t\t\t}\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region Move/Copy/Delete/Create Folder\n\n\tasync canMove(source: URI, target: URI, overwrite?: boolean): Promise<Error | true> {\n\t\treturn this.doCanMoveCopy(source, target, 'move', overwrite);\n\t}\n\n\tasync canCopy(source: URI, target: URI, overwrite?: boolean): Promise<Error | true> {\n\t\treturn this.doCanMoveCopy(source, target, 'copy', overwrite);\n\t}\n\n\tprivate async doCanMoveCopy(source: URI, target: URI, mode: 'move' | 'copy', overwrite?: boolean): Promise<Error | true> {\n\t\tif (source.toString() !== target.toString()) {\n\t\t\ttry {\n\t\t\t\tconst sourceProvider = mode === 'move' ? this.throwIfFileSystemIsReadonly(await this.withWriteProvider(source), source) : await this.withReadProvider(source);\n\t\t\t\tconst targetProvider = this.throwIfFileSystemIsReadonly(await this.withWriteProvider(target), target);\n\n\t\t\t\tawait this.doValidateMoveCopy(sourceProvider, source, targetProvider, target, mode, overwrite);\n\t\t\t} catch (error) {\n\t\t\t\treturn error;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tasync move(source: URI, target: URI, overwrite?: boolean): Promise<IFileStatWithMetadata> {\n\t\tconst sourceProvider = this.throwIfFileSystemIsReadonly(await this.withWriteProvider(source), source);\n\t\tconst targetProvider = this.throwIfFileSystemIsReadonly(await this.withWriteProvider(target), target);\n\n\t\t// move\n\t\tconst mode = await this.doMoveCopy(sourceProvider, source, targetProvider, target, 'move', !!overwrite);\n\n\t\t// resolve and send events\n\t\tconst fileStat = await this.resolve(target, { resolveMetadata: true });\n\t\tthis._onDidRunOperation.fire(new FileOperationEvent(source, mode === 'move' ? FileOperation.MOVE : FileOperation.COPY, fileStat));\n\n\t\treturn fileStat;\n\t}\n\n\tasync copy(source: URI, target: URI, overwrite?: boolean): Promise<IFileStatWithMetadata> {\n\t\tconst sourceProvider = await this.withReadProvider(source);\n\t\tconst targetProvider = this.throwIfFileSystemIsReadonly(await this.withWriteProvider(target), target);\n\n\t\t// copy\n\t\tconst mode = await this.doMoveCopy(sourceProvider, source, targetProvider, target, 'copy', !!overwrite);\n\n\t\t// resolve and send events\n\t\tconst fileStat = await this.resolve(target, { resolveMetadata: true });\n\t\tthis._onDidRunOperation.fire(new FileOperationEvent(source, mode === 'copy' ? FileOperation.COPY : FileOperation.MOVE, fileStat));\n\n\t\treturn fileStat;\n\t}\n\n\tprivate async doMoveCopy(sourceProvider: IFileSystemProvider, source: URI, targetProvider: IFileSystemProvider, target: URI, mode: 'move' | 'copy', overwrite: boolean): Promise<'move' | 'copy'> {\n\t\tif (source.toString() === target.toString()) {\n\t\t\treturn mode; // simulate node.js behaviour here and do a no-op if paths match\n\t\t}\n\n\t\t// validation\n\t\tconst { exists, isSameResourceWithDifferentPathCase } = await this.doValidateMoveCopy(sourceProvider, source, targetProvider, target, mode, overwrite);\n\n\t\t// delete as needed (unless target is same resurce with different path case)\n\t\tif (exists && !isSameResourceWithDifferentPathCase && overwrite) {\n\t\t\tawait this.del(target, { recursive: true });\n\t\t}\n\n\t\t// create parent folders\n\t\tawait this.mkdirp(targetProvider, dirname(target));\n\n\t\t// copy source => target\n\t\tif (mode === 'copy') {\n\n\t\t\t// same provider with fast copy: leverage copy() functionality\n\t\t\tif (sourceProvider === targetProvider && hasFileFolderCopyCapability(sourceProvider)) {\n\t\t\t\tawait sourceProvider.copy(source, target, { overwrite });\n\t\t\t}\n\n\t\t\t// when copying via buffer/unbuffered, we have to manually\n\t\t\t// traverse the source if it is a folder and not a file\n\t\t\telse {\n\t\t\t\tconst sourceFile = await this.resolve(source);\n\t\t\t\tif (sourceFile.isDirectory) {\n\t\t\t\t\tawait this.doCopyFolder(sourceProvider, sourceFile, targetProvider, target);\n\t\t\t\t} else {\n\t\t\t\t\tawait this.doCopyFile(sourceProvider, source, targetProvider, target);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn mode;\n\t\t}\n\n\t\t// move source => target\n\t\telse {\n\n\t\t\t// same provider: leverage rename() functionality\n\t\t\tif (sourceProvider === targetProvider) {\n\t\t\t\tawait sourceProvider.rename(source, target, { overwrite });\n\n\t\t\t\treturn mode;\n\t\t\t}\n\n\t\t\t// across providers: copy to target & delete at source\n\t\t\telse {\n\t\t\t\tawait this.doMoveCopy(sourceProvider, source, targetProvider, target, 'copy', overwrite);\n\n\t\t\t\tawait this.del(source, { recursive: true });\n\n\t\t\t\treturn 'copy';\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async doCopyFile(sourceProvider: IFileSystemProvider, source: URI, targetProvider: IFileSystemProvider, target: URI): Promise<void> {\n\n\t\t// copy: source (buffered) => target (buffered)\n\t\tif (hasOpenReadWriteCloseCapability(sourceProvider) && hasOpenReadWriteCloseCapability(targetProvider)) {\n\t\t\treturn this.doPipeBuffered(sourceProvider, source, targetProvider, target);\n\t\t}\n\n\t\t// copy: source (buffered) => target (unbuffered)\n\t\tif (hasOpenReadWriteCloseCapability(sourceProvider) && hasReadWriteCapability(targetProvider)) {\n\t\t\treturn this.doPipeBufferedToUnbuffered(sourceProvider, source, targetProvider, target);\n\t\t}\n\n\t\t// copy: source (unbuffered) => target (buffered)\n\t\tif (hasReadWriteCapability(sourceProvider) && hasOpenReadWriteCloseCapability(targetProvider)) {\n\t\t\treturn this.doPipeUnbufferedToBuffered(sourceProvider, source, targetProvider, target);\n\t\t}\n\n\t\t// copy: source (unbuffered) => target (unbuffered)\n\t\tif (hasReadWriteCapability(sourceProvider) && hasReadWriteCapability(targetProvider)) {\n\t\t\treturn this.doPipeUnbuffered(sourceProvider, source, targetProvider, target);\n\t\t}\n\t}\n\n\tprivate async doCopyFolder(sourceProvider: IFileSystemProvider, sourceFolder: IFileStat, targetProvider: IFileSystemProvider, targetFolder: URI): Promise<void> {\n\n\t\t// create folder in target\n\t\tawait targetProvider.mkdir(targetFolder);\n\n\t\t// create children in target\n\t\tif (Array.isArray(sourceFolder.children)) {\n\t\t\tawait Promise.all(sourceFolder.children.map(async sourceChild => {\n\t\t\t\tconst targetChild = joinPath(targetFolder, sourceChild.name);\n\t\t\t\tif (sourceChild.isDirectory) {\n\t\t\t\t\treturn this.doCopyFolder(sourceProvider, await this.resolve(sourceChild.resource), targetProvider, targetChild);\n\t\t\t\t} else {\n\t\t\t\t\treturn this.doCopyFile(sourceProvider, sourceChild.resource, targetProvider, targetChild);\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\t}\n\n\tprivate async doValidateMoveCopy(sourceProvider: IFileSystemProvider, source: URI, targetProvider: IFileSystemProvider, target: URI, mode: 'move' | 'copy', overwrite?: boolean): Promise<{ exists: boolean, isSameResourceWithDifferentPathCase: boolean }> {\n\t\tlet isSameResourceWithDifferentPathCase = false;\n\n\t\t// Check if source is equal or parent to target (requires providers to be the same)\n\t\tif (sourceProvider === targetProvider) {\n\t\t\tconst { extUri, isPathCaseSensitive } = this.getExtUri(sourceProvider);\n\t\t\tif (!isPathCaseSensitive) {\n\t\t\t\tisSameResourceWithDifferentPathCase = extUri.isEqual(source, target);\n\t\t\t}\n\n\t\t\tif (isSameResourceWithDifferentPathCase && mode === 'copy') {\n\t\t\t\tthrow new Error(localize('unableToMoveCopyError1', \"Unable to copy when source '{0}' is same as target '{1}' with different path case on a case insensitive file system\", this.resourceForError(source), this.resourceForError(target)));\n\t\t\t}\n\n\t\t\tif (!isSameResourceWithDifferentPathCase && extUri.isEqualOrParent(target, source)) {\n\t\t\t\tthrow new Error(localize('unableToMoveCopyError2', \"Unable to move/copy when source '{0}' is parent of target '{1}'.\", this.resourceForError(source), this.resourceForError(target)));\n\t\t\t}\n\t\t}\n\n\t\t// Extra checks if target exists and this is not a rename\n\t\tconst exists = await this.exists(target);\n\t\tif (exists && !isSameResourceWithDifferentPathCase) {\n\n\t\t\t// Bail out if target exists and we are not about to overwrite\n\t\t\tif (!overwrite) {\n\t\t\t\tthrow new FileOperationError(localize('unableToMoveCopyError3', \"Unable to move/copy '{0}' because target '{1}' already exists at destination.\", this.resourceForError(source), this.resourceForError(target)), FileOperationResult.FILE_MOVE_CONFLICT);\n\t\t\t}\n\n\t\t\t// Special case: if the target is a parent of the source, we cannot delete\n\t\t\t// it as it would delete the source as well. In this case we have to throw\n\t\t\tif (sourceProvider === targetProvider) {\n\t\t\t\tconst { extUri } = this.getExtUri(sourceProvider);\n\t\t\t\tif (extUri.isEqualOrParent(source, target)) {\n\t\t\t\t\tthrow new Error(localize('unableToMoveCopyError4', \"Unable to move/copy '{0}' into '{1}' since a file would replace the folder it is contained in.\", this.resourceForError(source), this.resourceForError(target)));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { exists, isSameResourceWithDifferentPathCase };\n\t}\n\n\tprivate getExtUri(provider: IFileSystemProvider): { extUri: IExtUri, isPathCaseSensitive: boolean } {\n\t\tconst isPathCaseSensitive = this.isPathCaseSensitive(provider);\n\n\t\treturn {\n\t\t\textUri: isPathCaseSensitive ? extUri : extUriIgnorePathCase,\n\t\t\tisPathCaseSensitive\n\t\t};\n\t}\n\n\tprivate isPathCaseSensitive(provider: IFileSystemProvider): boolean {\n\t\treturn !!(provider.capabilities & FileSystemProviderCapabilities.PathCaseSensitive);\n\t}\n\n\tasync createFolder(resource: URI): Promise<IFileStatWithMetadata> {\n\t\tconst provider = this.throwIfFileSystemIsReadonly(await this.withProvider(resource), resource);\n\n\t\t// mkdir recursively\n\t\tawait this.mkdirp(provider, resource);\n\n\t\t// events\n\t\tconst fileStat = await this.resolve(resource, { resolveMetadata: true });\n\t\tthis._onDidRunOperation.fire(new FileOperationEvent(resource, FileOperation.CREATE, fileStat));\n\n\t\treturn fileStat;\n\t}\n\n\tprivate async mkdirp(provider: IFileSystemProvider, directory: URI): Promise<void> {\n\t\tconst directoriesToCreate: string[] = [];\n\n\t\t// mkdir until we reach root\n\t\tconst { extUri } = this.getExtUri(provider);\n\t\twhile (!extUri.isEqual(directory, dirname(directory))) {\n\t\t\ttry {\n\t\t\t\tconst stat = await provider.stat(directory);\n\t\t\t\tif ((stat.type & FileType.Directory) === 0) {\n\t\t\t\t\tthrow new Error(localize('mkdirExistsError', \"Unable to create folder '{0}' that already exists but is not a directory\", this.resourceForError(directory)));\n\t\t\t\t}\n\n\t\t\t\tbreak; // we have hit a directory that exists -> good\n\t\t\t} catch (error) {\n\n\t\t\t\t// Bubble up any other error that is not file not found\n\t\t\t\tif (toFileSystemProviderErrorCode(error) !== FileSystemProviderErrorCode.FileNotFound) {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\n\t\t\t\t// Upon error, remember directories that need to be created\n\t\t\t\tdirectoriesToCreate.push(basename(directory));\n\n\t\t\t\t// Continue up\n\t\t\t\tdirectory = dirname(directory);\n\t\t\t}\n\t\t}\n\n\t\t// Create directories as needed\n\t\tfor (let i = directoriesToCreate.length - 1; i >= 0; i--) {\n\t\t\tdirectory = joinPath(directory, directoriesToCreate[i]);\n\n\t\t\ttry {\n\t\t\t\tawait provider.mkdir(directory);\n\t\t\t} catch (error) {\n\t\t\t\tif (toFileSystemProviderErrorCode(error) !== FileSystemProviderErrorCode.FileExists) {\n\t\t\t\t\t// For mkdirp() we tolerate that the mkdir() call fails\n\t\t\t\t\t// in case the folder already exists. This follows node.js\n\t\t\t\t\t// own implementation of fs.mkdir({ recursive: true }) and\n\t\t\t\t\t// reduces the chances of race conditions leading to errors\n\t\t\t\t\t// if multiple calls try to create the same folders\n\t\t\t\t\t// As such, we only throw an error here if it is other than\n\t\t\t\t\t// the fact that the file already exists.\n\t\t\t\t\t// (see also https://github.com/microsoft/vscode/issues/89834)\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tasync canDelete(resource: URI, options?: { useTrash?: boolean; recursive?: boolean; }): Promise<Error | true> {\n\t\ttry {\n\t\t\tawait this.doValidateDelete(resource, options);\n\t\t} catch (error) {\n\t\t\treturn error;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate async doValidateDelete(resource: URI, options?: { useTrash?: boolean; recursive?: boolean; }): Promise<IFileSystemProvider> {\n\t\tconst provider = this.throwIfFileSystemIsReadonly(await this.withProvider(resource), resource);\n\n\t\t// Validate trash support\n\t\tconst useTrash = !!options?.useTrash;\n\t\tif (useTrash && !(provider.capabilities & FileSystemProviderCapabilities.Trash)) {\n\t\t\tthrow new Error(localize('deleteFailedTrashUnsupported', \"Unable to delete file '{0}' via trash because provider does not support it.\", this.resourceForError(resource)));\n\t\t}\n\n\t\t// Validate delete\n\t\tconst exists = await this.exists(resource);\n\t\tif (!exists) {\n\t\t\tthrow new FileOperationError(localize('deleteFailedNotFound', \"Unable to delete non-existing file '{0}'\", this.resourceForError(resource)), FileOperationResult.FILE_NOT_FOUND);\n\t\t}\n\n\t\t// Validate recursive\n\t\tconst recursive = !!options?.recursive;\n\t\tif (!recursive && exists) {\n\t\t\tconst stat = await this.resolve(resource);\n\t\t\tif (stat.isDirectory && Array.isArray(stat.children) && stat.children.length > 0) {\n\t\t\t\tthrow new Error(localize('deleteFailedNonEmptyFolder', \"Unable to delete non-empty folder '{0}'.\", this.resourceForError(resource)));\n\t\t\t}\n\t\t}\n\n\t\treturn provider;\n\t}\n\n\tasync del(resource: URI, options?: { useTrash?: boolean; recursive?: boolean; }): Promise<void> {\n\t\tconst provider = await this.doValidateDelete(resource, options);\n\n\t\tconst useTrash = !!options?.useTrash;\n\t\tconst recursive = !!options?.recursive;\n\n\t\t// Delete through provider\n\t\tawait provider.delete(resource, { recursive, useTrash });\n\n\t\t// Events\n\t\tthis._onDidRunOperation.fire(new FileOperationEvent(resource, FileOperation.DELETE));\n\t}\n\n\t//#endregion\n\n\t//#region File Watching\n\n\tprivate readonly _onDidFilesChange = this._register(new Emitter<FileChangesEvent>());\n\treadonly onDidFilesChange = this._onDidFilesChange.event;\n\n\tprivate readonly activeWatchers = new Map<string, { disposable: IDisposable, count: number }>();\n\n\twatch(resource: URI, options: IWatchOptions = { recursive: false, excludes: [] }): IDisposable {\n\t\tlet watchDisposed = false;\n\t\tlet watchDisposable = toDisposable(() => watchDisposed = true);\n\n\t\t// Watch and wire in disposable which is async but\n\t\t// check if we got disposed meanwhile and forward\n\t\tthis.doWatch(resource, options).then(disposable => {\n\t\t\tif (watchDisposed) {\n\t\t\t\tdispose(disposable);\n\t\t\t} else {\n\t\t\t\twatchDisposable = disposable;\n\t\t\t}\n\t\t}, error => this.logService.error(error));\n\n\t\treturn toDisposable(() => dispose(watchDisposable));\n\t}\n\n\tasync doWatch(resource: URI, options: IWatchOptions): Promise<IDisposable> {\n\t\tconst provider = await this.withProvider(resource);\n\t\tconst key = this.toWatchKey(provider, resource, options);\n\n\t\t// Only start watching if we are the first for the given key\n\t\tconst watcher = this.activeWatchers.get(key) || { count: 0, disposable: provider.watch(resource, options) };\n\t\tif (!this.activeWatchers.has(key)) {\n\t\t\tthis.activeWatchers.set(key, watcher);\n\t\t}\n\n\t\t// Increment usage counter\n\t\twatcher.count += 1;\n\n\t\treturn toDisposable(() => {\n\n\t\t\t// Unref\n\t\t\twatcher.count--;\n\n\t\t\t// Dispose only when last user is reached\n\t\t\tif (watcher.count === 0) {\n\t\t\t\tdispose(watcher.disposable);\n\t\t\t\tthis.activeWatchers.delete(key);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate toWatchKey(provider: IFileSystemProvider, resource: URI, options: IWatchOptions): string {\n\t\tconst { extUri } = this.getExtUri(provider);\n\n\t\treturn [\n\t\t\textUri.getComparisonKey(resource), \t// lowercase path if the provider is case insensitive\n\t\t\tString(options.recursive),\t\t\t// use recursive: true | false as part of the key\n\t\t\toptions.excludes.join()\t\t\t\t// use excludes as part of the key\n\t\t].join();\n\t}\n\n\tdispose(): void {\n\t\tsuper.dispose();\n\n\t\tthis.activeWatchers.forEach(watcher => dispose(watcher.disposable));\n\t\tthis.activeWatchers.clear();\n\t}\n\n\t//#endregion\n\n\t//#region Helpers\n\n\tprivate readonly writeQueues: Map<string, Queue<void>> = new Map();\n\n\tprivate ensureWriteQueue(provider: IFileSystemProvider, resource: URI): Queue<void> {\n\t\tconst { extUri } = this.getExtUri(provider);\n\t\tconst queueKey = extUri.getComparisonKey(resource);\n\n\t\t// ensure to never write to the same resource without finishing\n\t\t// the one write. this ensures a write finishes consistently\n\t\t// (even with error) before another write is done.\n\t\tlet writeQueue = this.writeQueues.get(queueKey);\n\t\tif (!writeQueue) {\n\t\t\twriteQueue = new Queue<void>();\n\t\t\tthis.writeQueues.set(queueKey, writeQueue);\n\n\t\t\tconst onFinish = Event.once(writeQueue.onFinished);\n\t\t\tonFinish(() => {\n\t\t\t\tthis.writeQueues.delete(queueKey);\n\t\t\t\tdispose(writeQueue);\n\t\t\t});\n\t\t}\n\n\t\treturn writeQueue;\n\t}\n\n\tprivate async doWriteBuffered(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, resource: URI, readableOrStreamOrBufferedStream: VSBufferReadable | VSBufferReadableStream | VSBufferReadableBufferedStream): Promise<void> {\n\t\treturn this.ensureWriteQueue(provider, resource).queue(async () => {\n\n\t\t\t// open handle\n\t\t\tconst handle = await provider.open(resource, { create: true });\n\n\t\t\t// write into handle until all bytes from buffer have been written\n\t\t\ttry {\n\t\t\t\tif (isReadableStream(readableOrStreamOrBufferedStream) || isReadableBufferedStream(readableOrStreamOrBufferedStream)) {\n\t\t\t\t\tawait this.doWriteStreamBufferedQueued(provider, handle, readableOrStreamOrBufferedStream);\n\t\t\t\t} else {\n\t\t\t\t\tawait this.doWriteReadableBufferedQueued(provider, handle, readableOrStreamOrBufferedStream);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tthrow ensureFileSystemProviderError(error);\n\t\t\t} finally {\n\n\t\t\t\t// close handle always\n\t\t\t\tawait provider.close(handle);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate async doWriteStreamBufferedQueued(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, handle: number, streamOrBufferedStream: VSBufferReadableStream | VSBufferReadableBufferedStream): Promise<void> {\n\t\tlet posInFile = 0;\n\t\tlet stream: VSBufferReadableStream;\n\n\t\t// Buffered stream: consume the buffer first by writing\n\t\t// it to the target before reading from the stream.\n\t\tif (isReadableBufferedStream(streamOrBufferedStream)) {\n\t\t\tif (streamOrBufferedStream.buffer.length > 0) {\n\t\t\t\tconst chunk = VSBuffer.concat(streamOrBufferedStream.buffer);\n\t\t\t\tawait this.doWriteBuffer(provider, handle, chunk, chunk.byteLength, posInFile, 0);\n\n\t\t\t\tposInFile += chunk.byteLength;\n\t\t\t}\n\n\t\t\t// If the stream has been consumed, return early\n\t\t\tif (streamOrBufferedStream.ended) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tstream = streamOrBufferedStream.stream;\n\t\t}\n\n\t\t// Unbuffered stream - just take as is\n\t\telse {\n\t\t\tstream = streamOrBufferedStream;\n\t\t}\n\n\t\treturn new Promise(async (resolve, reject) => {\n\n\t\t\tstream.on('data', async chunk => {\n\n\t\t\t\t// pause stream to perform async write operation\n\t\t\t\tstream.pause();\n\n\t\t\t\ttry {\n\t\t\t\t\tawait this.doWriteBuffer(provider, handle, chunk, chunk.byteLength, posInFile, 0);\n\t\t\t\t} catch (error) {\n\t\t\t\t\treturn reject(error);\n\t\t\t\t}\n\n\t\t\t\tposInFile += chunk.byteLength;\n\n\t\t\t\t// resume stream now that we have successfully written\n\t\t\t\t// run this on the next tick to prevent increasing the\n\t\t\t\t// execution stack because resume() may call the event\n\t\t\t\t// handler again before finishing.\n\t\t\t\tsetTimeout(() => stream.resume());\n\t\t\t});\n\n\t\t\tstream.on('error', error => reject(error));\n\t\t\tstream.on('end', () => resolve());\n\t\t});\n\t}\n\n\tprivate async doWriteReadableBufferedQueued(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, handle: number, readable: VSBufferReadable): Promise<void> {\n\t\tlet posInFile = 0;\n\n\t\tlet chunk: VSBuffer | null;\n\t\twhile ((chunk = readable.read()) !== null) {\n\t\t\tawait this.doWriteBuffer(provider, handle, chunk, chunk.byteLength, posInFile, 0);\n\n\t\t\tposInFile += chunk.byteLength;\n\t\t}\n\t}\n\n\tprivate async doWriteBuffer(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, handle: number, buffer: VSBuffer, length: number, posInFile: number, posInBuffer: number): Promise<void> {\n\t\tlet totalBytesWritten = 0;\n\t\twhile (totalBytesWritten < length) {\n\n\t\t\t// Write through the provider\n\t\t\tconst bytesWritten = await provider.write(handle, posInFile + totalBytesWritten, buffer.buffer, posInBuffer + totalBytesWritten, length - totalBytesWritten);\n\t\t\ttotalBytesWritten += bytesWritten;\n\t\t}\n\t}\n\n\tprivate async doWriteUnbuffered(provider: IFileSystemProviderWithFileReadWriteCapability, resource: URI, bufferOrReadableOrStreamOrBufferedStream: VSBuffer | VSBufferReadable | VSBufferReadableStream | VSBufferReadableBufferedStream): Promise<void> {\n\t\treturn this.ensureWriteQueue(provider, resource).queue(() => this.doWriteUnbufferedQueued(provider, resource, bufferOrReadableOrStreamOrBufferedStream));\n\t}\n\n\tprivate async doWriteUnbufferedQueued(provider: IFileSystemProviderWithFileReadWriteCapability, resource: URI, bufferOrReadableOrStreamOrBufferedStream: VSBuffer | VSBufferReadable | VSBufferReadableStream | VSBufferReadableBufferedStream): Promise<void> {\n\t\tlet buffer: VSBuffer;\n\t\tif (bufferOrReadableOrStreamOrBufferedStream instanceof VSBuffer) {\n\t\t\tbuffer = bufferOrReadableOrStreamOrBufferedStream;\n\t\t} else if (isReadableStream(bufferOrReadableOrStreamOrBufferedStream)) {\n\t\t\tbuffer = await streamToBuffer(bufferOrReadableOrStreamOrBufferedStream);\n\t\t} else if (isReadableBufferedStream(bufferOrReadableOrStreamOrBufferedStream)) {\n\t\t\tbuffer = await bufferedStreamToBuffer(bufferOrReadableOrStreamOrBufferedStream);\n\t\t} else {\n\t\t\tbuffer = readableToBuffer(bufferOrReadableOrStreamOrBufferedStream);\n\t\t}\n\n\t\t// Write through the provider\n\t\tawait provider.writeFile(resource, buffer.buffer, { create: true, overwrite: true });\n\t}\n\n\tprivate async doPipeBuffered(sourceProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, source: URI, targetProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, target: URI): Promise<void> {\n\t\treturn this.ensureWriteQueue(targetProvider, target).queue(() => this.doPipeBufferedQueued(sourceProvider, source, targetProvider, target));\n\t}\n\n\tprivate async doPipeBufferedQueued(sourceProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, source: URI, targetProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, target: URI): Promise<void> {\n\t\tlet sourceHandle: number | undefined = undefined;\n\t\tlet targetHandle: number | undefined = undefined;\n\n\t\ttry {\n\n\t\t\t// Open handles\n\t\t\tsourceHandle = await sourceProvider.open(source, { create: false });\n\t\t\ttargetHandle = await targetProvider.open(target, { create: true });\n\n\t\t\tconst buffer = VSBuffer.alloc(this.BUFFER_SIZE);\n\n\t\t\tlet posInFile = 0;\n\t\t\tlet posInBuffer = 0;\n\t\t\tlet bytesRead = 0;\n\t\t\tdo {\n\t\t\t\t// read from source (sourceHandle) at current position (posInFile) into buffer (buffer) at\n\t\t\t\t// buffer position (posInBuffer) up to the size of the buffer (buffer.byteLength).\n\t\t\t\tbytesRead = await sourceProvider.read(sourceHandle, posInFile, buffer.buffer, posInBuffer, buffer.byteLength - posInBuffer);\n\n\t\t\t\t// write into target (targetHandle) at current position (posInFile) from buffer (buffer) at\n\t\t\t\t// buffer position (posInBuffer) all bytes we read (bytesRead).\n\t\t\t\tawait this.doWriteBuffer(targetProvider, targetHandle, buffer, bytesRead, posInFile, posInBuffer);\n\n\t\t\t\tposInFile += bytesRead;\n\t\t\t\tposInBuffer += bytesRead;\n\n\t\t\t\t// when buffer full, fill it again from the beginning\n\t\t\t\tif (posInBuffer === buffer.byteLength) {\n\t\t\t\t\tposInBuffer = 0;\n\t\t\t\t}\n\t\t\t} while (bytesRead > 0);\n\t\t} catch (error) {\n\t\t\tthrow ensureFileSystemProviderError(error);\n\t\t} finally {\n\t\t\tawait Promise.all([\n\t\t\t\ttypeof sourceHandle === 'number' ? sourceProvider.close(sourceHandle) : Promise.resolve(),\n\t\t\t\ttypeof targetHandle === 'number' ? targetProvider.close(targetHandle) : Promise.resolve(),\n\t\t\t]);\n\t\t}\n\t}\n\n\tprivate async doPipeUnbuffered(sourceProvider: IFileSystemProviderWithFileReadWriteCapability, source: URI, targetProvider: IFileSystemProviderWithFileReadWriteCapability, target: URI): Promise<void> {\n\t\treturn this.ensureWriteQueue(targetProvider, target).queue(() => this.doPipeUnbufferedQueued(sourceProvider, source, targetProvider, target));\n\t}\n\n\tprivate async doPipeUnbufferedQueued(sourceProvider: IFileSystemProviderWithFileReadWriteCapability, source: URI, targetProvider: IFileSystemProviderWithFileReadWriteCapability, target: URI): Promise<void> {\n\t\treturn targetProvider.writeFile(target, await sourceProvider.readFile(source), { create: true, overwrite: true });\n\t}\n\n\tprivate async doPipeUnbufferedToBuffered(sourceProvider: IFileSystemProviderWithFileReadWriteCapability, source: URI, targetProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, target: URI): Promise<void> {\n\t\treturn this.ensureWriteQueue(targetProvider, target).queue(() => this.doPipeUnbufferedToBufferedQueued(sourceProvider, source, targetProvider, target));\n\t}\n\n\tprivate async doPipeUnbufferedToBufferedQueued(sourceProvider: IFileSystemProviderWithFileReadWriteCapability, source: URI, targetProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, target: URI): Promise<void> {\n\n\t\t// Open handle\n\t\tconst targetHandle = await targetProvider.open(target, { create: true });\n\n\t\t// Read entire buffer from source and write buffered\n\t\ttry {\n\t\t\tconst buffer = await sourceProvider.readFile(source);\n\t\t\tawait this.doWriteBuffer(targetProvider, targetHandle, VSBuffer.wrap(buffer), buffer.byteLength, 0, 0);\n\t\t} catch (error) {\n\t\t\tthrow ensureFileSystemProviderError(error);\n\t\t} finally {\n\t\t\tawait targetProvider.close(targetHandle);\n\t\t}\n\t}\n\n\tprivate async doPipeBufferedToUnbuffered(sourceProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, source: URI, targetProvider: IFileSystemProviderWithFileReadWriteCapability, target: URI): Promise<void> {\n\n\t\t// Read buffer via stream buffered\n\t\tconst buffer = await streamToBuffer(this.readFileBuffered(sourceProvider, source, CancellationToken.None));\n\n\t\t// Write buffer into target at once\n\t\tawait this.doWriteUnbuffered(targetProvider, target, buffer);\n\t}\n\n\tprotected throwIfFileSystemIsReadonly<T extends IFileSystemProvider>(provider: T, resource: URI): T {\n\t\tif (provider.capabilities & FileSystemProviderCapabilities.Readonly) {\n\t\t\tthrow new FileOperationError(localize('err.readonly', \"Unable to modify readonly file '{0}'\", this.resourceForError(resource)), FileOperationResult.FILE_PERMISSION_DENIED);\n\t\t}\n\n\t\treturn provider;\n\t}\n\n\tprivate resourceForError(resource: URI): string {\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\treturn resource.fsPath;\n\t\t}\n\n\t\treturn resource.toString(true);\n\t}\n\n\t//#endregion\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { mkdir, open, close, read, write, fdatasync, Dirent, Stats } from 'fs';\nimport { promisify } from 'util';\nimport { IDisposable, Disposable, toDisposable, dispose, combinedDisposable } from 'vs/base/common/lifecycle';\nimport { FileSystemProviderCapabilities, IFileChange, IWatchOptions, IStat, FileType, FileDeleteOptions, FileOverwriteOptions, FileWriteOptions, FileOpenOptions, FileSystemProviderErrorCode, createFileSystemProviderError, FileSystemProviderError, IFileSystemProviderWithFileReadWriteCapability, IFileSystemProviderWithFileReadStreamCapability, IFileSystemProviderWithOpenReadWriteCloseCapability, FileReadStreamOptions, IFileSystemProviderWithFileFolderCopyCapability } from 'vs/platform/files/common/files';\nimport { URI } from 'vs/base/common/uri';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { isLinux, isWindows } from 'vs/base/common/platform';\nimport { statLink, unlink, move, copy, readFile, truncate, rimraf, RimRafMode, exists, readdirWithFileTypes } from 'vs/base/node/pfs';\nimport { normalize, basename, dirname } from 'vs/base/common/path';\nimport { joinPath } from 'vs/base/common/resources';\nimport { isEqual } from 'vs/base/common/extpath';\nimport { retry, ThrottledDelayer } from 'vs/base/common/async';\nimport { ILogService, LogLevel } from 'vs/platform/log/common/log';\nimport { localize } from 'vs/nls';\nimport { IDiskFileChange, toFileChanges, ILogMessage } from 'vs/platform/files/node/watcher/watcher';\nimport { FileWatcher as UnixWatcherService } from 'vs/platform/files/node/watcher/unix/watcherService';\nimport { FileWatcher as WindowsWatcherService } from 'vs/platform/files/node/watcher/win32/watcherService';\nimport { FileWatcher as NsfwWatcherService } from 'vs/platform/files/node/watcher/nsfw/watcherService';\nimport { FileWatcher as NodeJSWatcherService } from 'vs/platform/files/node/watcher/nodejs/watcherService';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { ReadableStreamEvents, newWriteableStream } from 'vs/base/common/stream';\nimport { readFileIntoStream } from 'vs/platform/files/common/io';\nimport { insert } from 'vs/base/common/arrays';\nimport { VSBuffer } from 'vs/base/common/buffer';\n\nexport interface IWatcherOptions {\n\tpollingInterval?: number;\n\tusePolling: boolean;\n}\n\nexport interface IDiskFileSystemProviderOptions {\n\tbufferSize?: number;\n\twatcher?: IWatcherOptions;\n}\n\nexport class DiskFileSystemProvider extends Disposable implements\n\tIFileSystemProviderWithFileReadWriteCapability,\n\tIFileSystemProviderWithOpenReadWriteCloseCapability,\n\tIFileSystemProviderWithFileReadStreamCapability,\n\tIFileSystemProviderWithFileFolderCopyCapability {\n\n\tprivate readonly BUFFER_SIZE = this.options?.bufferSize || 64 * 1024;\n\n\tconstructor(\n\t\tprivate readonly logService: ILogService,\n\t\tprivate readonly options?: IDiskFileSystemProviderOptions\n\t) {\n\t\tsuper();\n\t}\n\n\t//#region File Capabilities\n\n\tonDidChangeCapabilities: Event<void> = Event.None;\n\n\tprotected _capabilities: FileSystemProviderCapabilities | undefined;\n\tget capabilities(): FileSystemProviderCapabilities {\n\t\tif (!this._capabilities) {\n\t\t\tthis._capabilities =\n\t\t\t\tFileSystemProviderCapabilities.FileReadWrite |\n\t\t\t\tFileSystemProviderCapabilities.FileOpenReadWriteClose |\n\t\t\t\tFileSystemProviderCapabilities.FileReadStream |\n\t\t\t\tFileSystemProviderCapabilities.FileFolderCopy;\n\n\t\t\tif (isLinux) {\n\t\t\t\tthis._capabilities |= FileSystemProviderCapabilities.PathCaseSensitive;\n\t\t\t}\n\t\t}\n\n\t\treturn this._capabilities;\n\t}\n\n\t//#endregion\n\n\t//#region File Metadata Resolving\n\n\tasync stat(resource: URI): Promise<IStat> {\n\t\ttry {\n\t\t\tconst { stat, symbolicLink } = await statLink(this.toFilePath(resource)); // cannot use fs.stat() here to support links properly\n\n\t\t\treturn {\n\t\t\t\ttype: this.toType(stat, symbolicLink),\n\t\t\t\tctime: stat.birthtime.getTime(), // intentionally not using ctime here, we want the creation time\n\t\t\t\tmtime: stat.mtime.getTime(),\n\t\t\t\tsize: stat.size\n\t\t\t};\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tasync readdir(resource: URI): Promise<[string, FileType][]> {\n\t\ttry {\n\t\t\tconst children = await readdirWithFileTypes(this.toFilePath(resource));\n\n\t\t\tconst result: [string, FileType][] = [];\n\t\t\tawait Promise.all(children.map(async child => {\n\t\t\t\ttry {\n\t\t\t\t\tlet type: FileType;\n\t\t\t\t\tif (child.isSymbolicLink()) {\n\t\t\t\t\t\ttype = (await this.stat(joinPath(resource, child.name))).type; // always resolve target the link points to if any\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttype = this.toType(child);\n\t\t\t\t\t}\n\n\t\t\t\t\tresult.push([child.name, type]);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.logService.trace(error); // ignore errors for individual entries that can arise from permission denied\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\treturn result;\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tprivate toType(entry: Stats | Dirent, symbolicLink?: { dangling: boolean }): FileType {\n\n\t\t// Signal file type by checking for file / directory, except:\n\t\t// - symbolic links pointing to non-existing files are FileType.Unknown\n\t\t// - files that are neither file nor directory are FileType.Unknown\n\t\tlet type: FileType;\n\t\tif (symbolicLink?.dangling) {\n\t\t\ttype = FileType.Unknown;\n\t\t} else if (entry.isFile()) {\n\t\t\ttype = FileType.File;\n\t\t} else if (entry.isDirectory()) {\n\t\t\ttype = FileType.Directory;\n\t\t} else {\n\t\t\ttype = FileType.Unknown;\n\t\t}\n\n\t\t// Always signal symbolic link as file type additionally\n\t\tif (symbolicLink) {\n\t\t\ttype |= FileType.SymbolicLink;\n\t\t}\n\n\t\treturn type;\n\t}\n\n\t//#endregion\n\n\t//#region File Reading/Writing\n\n\tasync readFile(resource: URI): Promise<Uint8Array> {\n\t\ttry {\n\t\t\tconst filePath = this.toFilePath(resource);\n\n\t\t\treturn await readFile(filePath);\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\treadFileStream(resource: URI, opts: FileReadStreamOptions, token: CancellationToken): ReadableStreamEvents<Uint8Array> {\n\t\tconst stream = newWriteableStream<Uint8Array>(data => VSBuffer.concat(data.map(data => VSBuffer.wrap(data))).buffer);\n\n\t\treadFileIntoStream(this, resource, stream, data => data.buffer, {\n\t\t\t...opts,\n\t\t\tbufferSize: this.BUFFER_SIZE\n\t\t}, token);\n\n\t\treturn stream;\n\t}\n\n\tasync writeFile(resource: URI, content: Uint8Array, opts: FileWriteOptions): Promise<void> {\n\t\tlet handle: number | undefined = undefined;\n\t\ttry {\n\t\t\tconst filePath = this.toFilePath(resource);\n\n\t\t\t// Validate target unless { create: true, overwrite: true }\n\t\t\tif (!opts.create || !opts.overwrite) {\n\t\t\t\tconst fileExists = await exists(filePath);\n\t\t\t\tif (fileExists) {\n\t\t\t\t\tif (!opts.overwrite) {\n\t\t\t\t\t\tthrow createFileSystemProviderError(localize('fileExists', \"File already exists\"), FileSystemProviderErrorCode.FileExists);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (!opts.create) {\n\t\t\t\t\t\tthrow createFileSystemProviderError(localize('fileNotExists', \"File does not exist\"), FileSystemProviderErrorCode.FileNotFound);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Open\n\t\t\thandle = await this.open(resource, { create: true });\n\n\t\t\t// Write content at once\n\t\t\tawait this.write(handle, 0, content, 0, content.byteLength);\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t} finally {\n\t\t\tif (typeof handle === 'number') {\n\t\t\t\tawait this.close(handle);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate readonly mapHandleToPos: Map<number, number> = new Map();\n\n\tprivate readonly writeHandles: Set<number> = new Set();\n\tprivate canFlush: boolean = true;\n\n\tasync open(resource: URI, opts: FileOpenOptions): Promise<number> {\n\t\ttry {\n\t\t\tconst filePath = this.toFilePath(resource);\n\n\t\t\tlet flags: string | undefined = undefined;\n\t\t\tif (opts.create) {\n\t\t\t\tif (isWindows && await exists(filePath)) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\t// On Windows and if the file exists, we use a different strategy of saving the file\n\t\t\t\t\t\t// by first truncating the file and then writing with r+ flag. This helps to save hidden files on Windows\n\t\t\t\t\t\t// (see https://github.com/microsoft/vscode/issues/931) and prevent removing alternate data streams\n\t\t\t\t\t\t// (see https://github.com/microsoft/vscode/issues/6363)\n\t\t\t\t\t\tawait truncate(filePath, 0);\n\n\t\t\t\t\t\t// After a successful truncate() the flag can be set to 'r+' which will not truncate.\n\t\t\t\t\t\tflags = 'r+';\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tthis.logService.trace(error);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// we take opts.create as a hint that the file is opened for writing\n\t\t\t\t// as such we use 'w' to truncate an existing or create the\n\t\t\t\t// file otherwise. we do not allow reading.\n\t\t\t\tif (!flags) {\n\t\t\t\t\tflags = 'w';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// otherwise we assume the file is opened for reading\n\t\t\t\t// as such we use 'r' to neither truncate, nor create\n\t\t\t\t// the file.\n\t\t\t\tflags = 'r';\n\t\t\t}\n\n\t\t\tconst handle = await promisify(open)(filePath, flags);\n\n\t\t\t// remember this handle to track file position of the handle\n\t\t\t// we init the position to 0 since the file descriptor was\n\t\t\t// just created and the position was not moved so far (see\n\t\t\t// also http://man7.org/linux/man-pages/man2/open.2.html -\n\t\t\t// \"The file offset is set to the beginning of the file.\")\n\t\t\tthis.mapHandleToPos.set(handle, 0);\n\n\t\t\t// remember that this handle was used for writing\n\t\t\tif (opts.create) {\n\t\t\t\tthis.writeHandles.add(handle);\n\t\t\t}\n\n\t\t\treturn handle;\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tasync close(fd: number): Promise<void> {\n\t\ttry {\n\n\t\t\t// remove this handle from map of positions\n\t\t\tthis.mapHandleToPos.delete(fd);\n\n\t\t\t// if a handle is closed that was used for writing, ensure\n\t\t\t// to flush the contents to disk if possible.\n\t\t\tif (this.writeHandles.delete(fd) && this.canFlush) {\n\t\t\t\ttry {\n\t\t\t\t\tawait promisify(fdatasync)(fd);\n\t\t\t\t} catch (error) {\n\t\t\t\t\t// In some exotic setups it is well possible that node fails to sync\n\t\t\t\t\t// In that case we disable flushing and log the error to our logger\n\t\t\t\t\tthis.canFlush = false;\n\t\t\t\t\tthis.logService.error(error);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn await promisify(close)(fd);\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tasync read(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> {\n\t\tconst normalizedPos = this.normalizePos(fd, pos);\n\n\t\tlet bytesRead: number | null = null;\n\t\ttry {\n\t\t\tconst result = await promisify(read)(fd, data, offset, length, normalizedPos);\n\n\t\t\tif (typeof result === 'number') {\n\t\t\t\tbytesRead = result; // node.d.ts fail\n\t\t\t} else {\n\t\t\t\tbytesRead = result.bytesRead;\n\t\t\t}\n\n\t\t\treturn bytesRead;\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t} finally {\n\t\t\tthis.updatePos(fd, normalizedPos, bytesRead);\n\t\t}\n\t}\n\n\tprivate normalizePos(fd: number, pos: number): number | null {\n\n\t\t// when calling fs.read/write we try to avoid passing in the \"pos\" argument and\n\t\t// rather prefer to pass in \"null\" because this avoids an extra seek(pos)\n\t\t// call that in some cases can even fail (e.g. when opening a file over FTP -\n\t\t// see https://github.com/microsoft/vscode/issues/73884).\n\t\t//\n\t\t// as such, we compare the passed in position argument with our last known\n\t\t// position for the file descriptor and use \"null\" if they match.\n\t\tif (pos === this.mapHandleToPos.get(fd)) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn pos;\n\t}\n\n\tprivate updatePos(fd: number, pos: number | null, bytesLength: number | null): void {\n\t\tconst lastKnownPos = this.mapHandleToPos.get(fd);\n\t\tif (typeof lastKnownPos === 'number') {\n\n\t\t\t// pos !== null signals that previously a position was used that is\n\t\t\t// not null. node.js documentation explains, that in this case\n\t\t\t// the internal file pointer is not moving and as such we do not move\n\t\t\t// our position pointer.\n\t\t\t//\n\t\t\t// Docs: \"If position is null, data will be read from the current file position,\n\t\t\t// and the file position will be updated. If position is an integer, the file position\n\t\t\t// will remain unchanged.\"\n\t\t\tif (typeof pos === 'number') {\n\t\t\t\t// do not modify the position\n\t\t\t}\n\n\t\t\t// bytesLength = number is a signal that the read/write operation was\n\t\t\t// successful and as such we need to advance the position in the Map\n\t\t\t//\n\t\t\t// Docs (http://man7.org/linux/man-pages/man2/read.2.html):\n\t\t\t// \"On files that support seeking, the read operation commences at the\n\t\t\t// file offset, and the file offset is incremented by the number of\n\t\t\t// bytes read.\"\n\t\t\t//\n\t\t\t// Docs (http://man7.org/linux/man-pages/man2/write.2.html):\n\t\t\t// \"For a seekable file (i.e., one to which lseek(2) may be applied, for\n\t\t\t// example, a regular file) writing takes place at the file offset, and\n\t\t\t// the file offset is incremented by the number of bytes actually\n\t\t\t// written.\"\n\t\t\telse if (typeof bytesLength === 'number') {\n\t\t\t\tthis.mapHandleToPos.set(fd, lastKnownPos + bytesLength);\n\t\t\t}\n\n\t\t\t// bytesLength = null signals an error in the read/write operation\n\t\t\t// and as such we drop the handle from the Map because the position\n\t\t\t// is unspecificed at this point.\n\t\t\telse {\n\t\t\t\tthis.mapHandleToPos.delete(fd);\n\t\t\t}\n\t\t}\n\t}\n\n\tasync write(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> {\n\t\t// we know at this point that the file to write to is truncated and thus empty\n\t\t// if the write now fails, the file remains empty. as such we really try hard\n\t\t// to ensure the write succeeds by retrying up to three times.\n\t\treturn retry(() => this.doWrite(fd, pos, data, offset, length), 100 /* ms delay */, 3 /* retries */);\n\t}\n\n\tprivate async doWrite(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> {\n\t\tconst normalizedPos = this.normalizePos(fd, pos);\n\n\t\tlet bytesWritten: number | null = null;\n\t\ttry {\n\t\t\tconst result = await promisify(write)(fd, data, offset, length, normalizedPos);\n\n\t\t\tif (typeof result === 'number') {\n\t\t\t\tbytesWritten = result; // node.d.ts fail\n\t\t\t} else {\n\t\t\t\tbytesWritten = result.bytesWritten;\n\t\t\t}\n\n\t\t\treturn bytesWritten;\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t} finally {\n\t\t\tthis.updatePos(fd, normalizedPos, bytesWritten);\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region Move/Copy/Delete/Create Folder\n\n\tasync mkdir(resource: URI): Promise<void> {\n\t\ttry {\n\t\t\tawait promisify(mkdir)(this.toFilePath(resource));\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tasync delete(resource: URI, opts: FileDeleteOptions): Promise<void> {\n\t\ttry {\n\t\t\tconst filePath = this.toFilePath(resource);\n\n\t\t\tawait this.doDelete(filePath, opts);\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tprotected async doDelete(filePath: string, opts: FileDeleteOptions): Promise<void> {\n\t\tif (opts.recursive) {\n\t\t\tawait rimraf(filePath, RimRafMode.MOVE);\n\t\t} else {\n\t\t\tawait unlink(filePath);\n\t\t}\n\t}\n\n\tasync rename(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void> {\n\t\tconst fromFilePath = this.toFilePath(from);\n\t\tconst toFilePath = this.toFilePath(to);\n\n\t\tif (fromFilePath === toFilePath) {\n\t\t\treturn; // simulate node.js behaviour here and do a no-op if paths match\n\t\t}\n\n\t\ttry {\n\n\t\t\t// Ensure target does not exist\n\t\t\tawait this.validateTargetDeleted(from, to, 'move', opts.overwrite);\n\n\t\t\t// Move\n\t\t\tawait move(fromFilePath, toFilePath);\n\t\t} catch (error) {\n\n\t\t\t// rewrite some typical errors that can happen especially around symlinks\n\t\t\t// to something the user can better understand\n\t\t\tif (error.code === 'EINVAL' || error.code === 'EBUSY' || error.code === 'ENAMETOOLONG') {\n\t\t\t\terror = new Error(localize('moveError', \"Unable to move '{0}' into '{1}' ({2}).\", basename(fromFilePath), basename(dirname(toFilePath)), error.toString()));\n\t\t\t}\n\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tasync copy(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void> {\n\t\tconst fromFilePath = this.toFilePath(from);\n\t\tconst toFilePath = this.toFilePath(to);\n\n\t\tif (fromFilePath === toFilePath) {\n\t\t\treturn; // simulate node.js behaviour here and do a no-op if paths match\n\t\t}\n\n\t\ttry {\n\n\t\t\t// Ensure target does not exist\n\t\t\tawait this.validateTargetDeleted(from, to, 'copy', opts.overwrite);\n\n\t\t\t// Copy\n\t\t\tawait copy(fromFilePath, toFilePath);\n\t\t} catch (error) {\n\n\t\t\t// rewrite some typical errors that can happen especially around symlinks\n\t\t\t// to something the user can better understand\n\t\t\tif (error.code === 'EINVAL' || error.code === 'EBUSY' || error.code === 'ENAMETOOLONG') {\n\t\t\t\terror = new Error(localize('copyError', \"Unable to copy '{0}' into '{1}' ({2}).\", basename(fromFilePath), basename(dirname(toFilePath)), error.toString()));\n\t\t\t}\n\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tprivate async validateTargetDeleted(from: URI, to: URI, mode: 'move' | 'copy', overwrite?: boolean): Promise<void> {\n\t\tconst fromFilePath = this.toFilePath(from);\n\t\tconst toFilePath = this.toFilePath(to);\n\n\t\tlet isSameResourceWithDifferentPathCase = false;\n\t\tconst isPathCaseSensitive = !!(this.capabilities & FileSystemProviderCapabilities.PathCaseSensitive);\n\t\tif (!isPathCaseSensitive) {\n\t\t\tisSameResourceWithDifferentPathCase = isEqual(fromFilePath, toFilePath, true /* ignore case */);\n\t\t}\n\n\t\tif (isSameResourceWithDifferentPathCase && mode === 'copy') {\n\t\t\tthrow createFileSystemProviderError(localize('fileCopyErrorPathCase', \"'File cannot be copied to same path with different path case\"), FileSystemProviderErrorCode.FileExists);\n\t\t}\n\n\t\t// handle existing target (unless this is a case change)\n\t\tif (!isSameResourceWithDifferentPathCase && await exists(toFilePath)) {\n\t\t\tif (!overwrite) {\n\t\t\t\tthrow createFileSystemProviderError(localize('fileCopyErrorExists', \"File at target already exists\"), FileSystemProviderErrorCode.FileExists);\n\t\t\t}\n\n\t\t\t// Delete target\n\t\t\tawait this.delete(to, { recursive: true, useTrash: false });\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region File Watching\n\n\tprivate readonly _onDidWatchErrorOccur = this._register(new Emitter<string>());\n\treadonly onDidErrorOccur = this._onDidWatchErrorOccur.event;\n\n\tprivate readonly _onDidChangeFile = this._register(new Emitter<readonly IFileChange[]>());\n\treadonly onDidChangeFile = this._onDidChangeFile.event;\n\n\tprivate recursiveWatcher: WindowsWatcherService | UnixWatcherService | NsfwWatcherService | undefined;\n\tprivate readonly recursiveFoldersToWatch: { path: string, excludes: string[] }[] = [];\n\tprivate recursiveWatchRequestDelayer = this._register(new ThrottledDelayer<void>(0));\n\n\tprivate recursiveWatcherLogLevelListener: IDisposable | undefined;\n\n\twatch(resource: URI, opts: IWatchOptions): IDisposable {\n\t\tif (opts.recursive) {\n\t\t\treturn this.watchRecursive(resource, opts.excludes);\n\t\t}\n\n\t\treturn this.watchNonRecursive(resource); // TODO@ben ideally the same watcher can be used in both cases\n\t}\n\n\tprivate watchRecursive(resource: URI, excludes: string[]): IDisposable {\n\n\t\t// Add to list of folders to watch recursively\n\t\tconst folderToWatch = { path: this.toFilePath(resource), excludes };\n\t\tconst remove = insert(this.recursiveFoldersToWatch, folderToWatch);\n\n\t\t// Trigger update\n\t\tthis.refreshRecursiveWatchers();\n\n\t\treturn toDisposable(() => {\n\n\t\t\t// Remove from list of folders to watch recursively\n\t\t\tremove();\n\n\t\t\t// Trigger update\n\t\t\tthis.refreshRecursiveWatchers();\n\t\t});\n\t}\n\n\tprivate refreshRecursiveWatchers(): void {\n\n\t\t// Buffer requests for recursive watching to decide on right watcher\n\t\t// that supports potentially watching more than one folder at once\n\t\tthis.recursiveWatchRequestDelayer.trigger(async () => {\n\t\t\tthis.doRefreshRecursiveWatchers();\n\t\t});\n\t}\n\n\tprivate doRefreshRecursiveWatchers(): void {\n\n\t\t// Reuse existing\n\t\tif (this.recursiveWatcher instanceof NsfwWatcherService) {\n\t\t\tthis.recursiveWatcher.setFolders(this.recursiveFoldersToWatch);\n\t\t}\n\n\t\t// Create new\n\t\telse {\n\n\t\t\t// Dispose old\n\t\t\tdispose(this.recursiveWatcher);\n\t\t\tthis.recursiveWatcher = undefined;\n\n\t\t\t// Create new if we actually have folders to watch\n\t\t\tif (this.recursiveFoldersToWatch.length > 0) {\n\t\t\t\tlet watcherImpl: {\n\t\t\t\t\tnew(\n\t\t\t\t\t\tfolders: { path: string, excludes: string[] }[],\n\t\t\t\t\t\tonChange: (changes: IDiskFileChange[]) => void,\n\t\t\t\t\t\tonLogMessage: (msg: ILogMessage) => void,\n\t\t\t\t\t\tverboseLogging: boolean,\n\t\t\t\t\t\twatcherOptions?: IWatcherOptions\n\t\t\t\t\t): WindowsWatcherService | UnixWatcherService | NsfwWatcherService\n\t\t\t\t};\n\n\t\t\t\tlet watcherOptions: IWatcherOptions | undefined = undefined;\n\n\t\t\t\t// requires a polling watcher\n\t\t\t\tif (this.options?.watcher?.usePolling) {\n\t\t\t\t\twatcherImpl = UnixWatcherService;\n\t\t\t\t\twatcherOptions = this.options?.watcher;\n\t\t\t\t}\n\n\t\t\t\t// Single Folder Watcher\n\t\t\t\telse {\n\t\t\t\t\tif (this.recursiveFoldersToWatch.length === 1) {\n\t\t\t\t\t\tif (isWindows) {\n\t\t\t\t\t\t\twatcherImpl = WindowsWatcherService;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\twatcherImpl = UnixWatcherService;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Multi Folder Watcher\n\t\t\t\t\telse {\n\t\t\t\t\t\twatcherImpl = NsfwWatcherService;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Create and start watching\n\t\t\t\tthis.recursiveWatcher = new watcherImpl(\n\t\t\t\t\tthis.recursiveFoldersToWatch,\n\t\t\t\t\tevent => this._onDidChangeFile.fire(toFileChanges(event)),\n\t\t\t\t\tmsg => {\n\t\t\t\t\t\tif (msg.type === 'error') {\n\t\t\t\t\t\t\tthis._onDidWatchErrorOccur.fire(msg.message);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.logService[msg.type](msg.message);\n\t\t\t\t\t},\n\t\t\t\t\tthis.logService.getLevel() === LogLevel.Trace,\n\t\t\t\t\twatcherOptions\n\t\t\t\t);\n\n\t\t\t\tif (!this.recursiveWatcherLogLevelListener) {\n\t\t\t\t\tthis.recursiveWatcherLogLevelListener = this.logService.onDidChangeLogLevel(() => {\n\t\t\t\t\t\tif (this.recursiveWatcher) {\n\t\t\t\t\t\t\tthis.recursiveWatcher.setVerboseLogging(this.logService.getLevel() === LogLevel.Trace);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate watchNonRecursive(resource: URI): IDisposable {\n\t\tconst watcherService = new NodeJSWatcherService(\n\t\t\tthis.toFilePath(resource),\n\t\t\tchanges => this._onDidChangeFile.fire(toFileChanges(changes)),\n\t\t\tmsg => {\n\t\t\t\tif (msg.type === 'error') {\n\t\t\t\t\tthis._onDidWatchErrorOccur.fire(msg.message);\n\t\t\t\t}\n\n\t\t\t\tthis.logService[msg.type](msg.message);\n\t\t\t},\n\t\t\tthis.logService.getLevel() === LogLevel.Trace\n\t\t);\n\n\t\tconst logLevelListener = this.logService.onDidChangeLogLevel(() => {\n\t\t\twatcherService.setVerboseLogging(this.logService.getLevel() === LogLevel.Trace);\n\t\t});\n\n\t\treturn combinedDisposable(watcherService, logLevelListener);\n\t}\n\n\t//#endregion\n\n\t//#region Helpers\n\n\tprotected toFilePath(resource: URI): string {\n\t\treturn normalize(resource.fsPath);\n\t}\n\n\tprivate toFileSystemProviderError(error: NodeJS.ErrnoException): FileSystemProviderError {\n\t\tif (error instanceof FileSystemProviderError) {\n\t\t\treturn error; // avoid double conversion\n\t\t}\n\n\t\tlet code: FileSystemProviderErrorCode;\n\t\tswitch (error.code) {\n\t\t\tcase 'ENOENT':\n\t\t\t\tcode = FileSystemProviderErrorCode.FileNotFound;\n\t\t\t\tbreak;\n\t\t\tcase 'EISDIR':\n\t\t\t\tcode = FileSystemProviderErrorCode.FileIsADirectory;\n\t\t\t\tbreak;\n\t\t\tcase 'ENOTDIR':\n\t\t\t\tcode = FileSystemProviderErrorCode.FileNotADirectory;\n\t\t\t\tbreak;\n\t\t\tcase 'EEXIST':\n\t\t\t\tcode = FileSystemProviderErrorCode.FileExists;\n\t\t\t\tbreak;\n\t\t\tcase 'EPERM':\n\t\t\tcase 'EACCES':\n\t\t\t\tcode = FileSystemProviderErrorCode.NoPermissions;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tcode = FileSystemProviderErrorCode.Unknown;\n\t\t}\n\n\t\treturn createFileSystemProviderError(error, code);\n\t}\n\n\t//#endregion\n\n\tdispose(): void {\n\t\tsuper.dispose();\n\n\t\tdispose(this.recursiveWatcher);\n\t\tthis.recursiveWatcher = undefined;\n\n\t\tdispose(this.recursiveWatcherLogLevelListener);\n\t\tthis.recursiveWatcherLogLevelListener = undefined;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as pfs from 'vs/base/node/pfs';\nimport { createHash } from 'crypto';\nimport { IExtensionManagementService, ILocalExtension, IExtensionIdentifier } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { Queue } from 'vs/base/common/async';\nimport { areSameExtensions } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { isValidLocalization, ILocalizationsService } from 'vs/platform/localizations/common/localizations';\nimport { distinct, equals } from 'vs/base/common/arrays';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { Schemas } from 'vs/base/common/network';\nimport { join } from 'vs/base/common/path';\n\ninterface ILanguagePack {\n\thash: string;\n\textensions: {\n\t\textensionIdentifier: IExtensionIdentifier;\n\t\tversion: string;\n\t}[];\n\ttranslations: { [id: string]: string };\n}\n\nexport class LocalizationsService extends Disposable implements ILocalizationsService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly cache: LanguagePacksCache;\n\n\tprivate readonly _onDidLanguagesChange: Emitter<void> = this._register(new Emitter<void>());\n\treadonly onDidLanguagesChange: Event<void> = this._onDidLanguagesChange.event;\n\n\tconstructor(\n\t\t@IExtensionManagementService private readonly extensionManagementService: IExtensionManagementService,\n\t\t@INativeEnvironmentService environmentService: INativeEnvironmentService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper();\n\t\tthis.cache = this._register(new LanguagePacksCache(environmentService, logService));\n\n\t\tthis._register(extensionManagementService.onDidInstallExtension(({ local }) => this.onDidInstallExtension(local)));\n\t\tthis._register(extensionManagementService.onDidUninstallExtension(({ identifier }) => this.onDidUninstallExtension(identifier)));\n\t}\n\n\tgetLanguageIds(): Promise<string[]> {\n\t\treturn this.cache.getLanguagePacks()\n\t\t\t.then(languagePacks => {\n\t\t\t\t// Contributed languages are those installed via extension packs, so does not include English\n\t\t\t\tconst languages = ['en', ...Object.keys(languagePacks)];\n\t\t\t\treturn distinct(languages);\n\t\t\t});\n\t}\n\n\tprivate onDidInstallExtension(extension: ILocalExtension | undefined): void {\n\t\tif (extension && extension.manifest && extension.manifest.contributes && extension.manifest.contributes.localizations && extension.manifest.contributes.localizations.length) {\n\t\t\tthis.logService.debug('Adding language packs from the extension', extension.identifier.id);\n\t\t\tthis.update().then(changed => { if (changed) { this._onDidLanguagesChange.fire(); } });\n\t\t}\n\t}\n\n\tprivate onDidUninstallExtension(identifier: IExtensionIdentifier): void {\n\t\tthis.cache.getLanguagePacks()\n\t\t\t.then(languagePacks => {\n\t\t\t\tif (Object.keys(languagePacks).some(language => languagePacks[language] && languagePacks[language].extensions.some(e => areSameExtensions(e.extensionIdentifier, identifier)))) {\n\t\t\t\t\tthis.logService.debug('Removing language packs from the extension', identifier.id);\n\t\t\t\t\tthis.update().then(changed => { if (changed) { this._onDidLanguagesChange.fire(); } });\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tupdate(): Promise<boolean> {\n\t\treturn Promise.all([this.cache.getLanguagePacks(), this.extensionManagementService.getInstalled()])\n\t\t\t.then(([current, installed]) => this.cache.update(installed)\n\t\t\t\t.then(updated => !equals(Object.keys(current), Object.keys(updated))));\n\t}\n}\n\nclass LanguagePacksCache extends Disposable {\n\n\tprivate languagePacks: { [language: string]: ILanguagePack } = {};\n\tprivate languagePacksFilePath: string;\n\tprivate languagePacksFileLimiter: Queue<any>;\n\tprivate initializedCache: boolean | undefined;\n\n\tconstructor(\n\t\t@INativeEnvironmentService environmentService: INativeEnvironmentService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper();\n\t\tthis.languagePacksFilePath = join(environmentService.userDataPath, 'languagepacks.json');\n\t\tthis.languagePacksFileLimiter = new Queue();\n\t}\n\n\tgetLanguagePacks(): Promise<{ [language: string]: ILanguagePack }> {\n\t\t// if queue is not empty, fetch from disk\n\t\tif (this.languagePacksFileLimiter.size || !this.initializedCache) {\n\t\t\treturn this.withLanguagePacks()\n\t\t\t\t.then(() => this.languagePacks);\n\t\t}\n\t\treturn Promise.resolve(this.languagePacks);\n\t}\n\n\tupdate(extensions: ILocalExtension[]): Promise<{ [language: string]: ILanguagePack }> {\n\t\treturn this.withLanguagePacks(languagePacks => {\n\t\t\tObject.keys(languagePacks).forEach(language => delete languagePacks[language]);\n\t\t\tthis.createLanguagePacksFromExtensions(languagePacks, ...extensions);\n\t\t}).then(() => this.languagePacks);\n\t}\n\n\tprivate createLanguagePacksFromExtensions(languagePacks: { [language: string]: ILanguagePack }, ...extensions: ILocalExtension[]): void {\n\t\tfor (const extension of extensions) {\n\t\t\tif (extension && extension.manifest && extension.manifest.contributes && extension.manifest.contributes.localizations && extension.manifest.contributes.localizations.length) {\n\t\t\t\tthis.createLanguagePacksFromExtension(languagePacks, extension);\n\t\t\t}\n\t\t}\n\t\tObject.keys(languagePacks).forEach(languageId => this.updateHash(languagePacks[languageId]));\n\t}\n\n\tprivate createLanguagePacksFromExtension(languagePacks: { [language: string]: ILanguagePack }, extension: ILocalExtension): void {\n\t\tconst extensionIdentifier = extension.identifier;\n\t\tconst localizations = extension.manifest.contributes && extension.manifest.contributes.localizations ? extension.manifest.contributes.localizations : [];\n\t\tfor (const localizationContribution of localizations) {\n\t\t\tif (extension.location.scheme === Schemas.file && isValidLocalization(localizationContribution)) {\n\t\t\t\tlet languagePack = languagePacks[localizationContribution.languageId];\n\t\t\t\tif (!languagePack) {\n\t\t\t\t\tlanguagePack = { hash: '', extensions: [], translations: {} };\n\t\t\t\t\tlanguagePacks[localizationContribution.languageId] = languagePack;\n\t\t\t\t}\n\t\t\t\tlet extensionInLanguagePack = languagePack.extensions.filter(e => areSameExtensions(e.extensionIdentifier, extensionIdentifier))[0];\n\t\t\t\tif (extensionInLanguagePack) {\n\t\t\t\t\textensionInLanguagePack.version = extension.manifest.version;\n\t\t\t\t} else {\n\t\t\t\t\tlanguagePack.extensions.push({ extensionIdentifier, version: extension.manifest.version });\n\t\t\t\t}\n\t\t\t\tfor (const translation of localizationContribution.translations) {\n\t\t\t\t\tlanguagePack.translations[translation.id] = join(extension.location.fsPath, translation.path);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateHash(languagePack: ILanguagePack): void {\n\t\tif (languagePack) {\n\t\t\tconst md5 = createHash('md5');\n\t\t\tfor (const extension of languagePack.extensions) {\n\t\t\t\tmd5.update(extension.extensionIdentifier.uuid || extension.extensionIdentifier.id).update(extension.version);\n\t\t\t}\n\t\t\tlanguagePack.hash = md5.digest('hex');\n\t\t}\n\t}\n\n\tprivate withLanguagePacks<T>(fn: (languagePacks: { [language: string]: ILanguagePack }) => T | null = () => null): Promise<T> {\n\t\treturn this.languagePacksFileLimiter.queue(() => {\n\t\t\tlet result: T | null = null;\n\t\t\treturn pfs.readFile(this.languagePacksFilePath, 'utf8')\n\t\t\t\t.then(undefined, err => err.code === 'ENOENT' ? Promise.resolve('{}') : Promise.reject(err))\n\t\t\t\t.then<{ [language: string]: ILanguagePack }>(raw => { try { return JSON.parse(raw); } catch (e) { return {}; } })\n\t\t\t\t.then(languagePacks => { result = fn(languagePacks); return languagePacks; })\n\t\t\t\t.then(languagePacks => {\n\t\t\t\t\tfor (const language of Object.keys(languagePacks)) {\n\t\t\t\t\t\tif (!languagePacks[language]) {\n\t\t\t\t\t\t\tdelete languagePacks[language];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.languagePacks = languagePacks;\n\t\t\t\t\tthis.initializedCache = true;\n\t\t\t\t\tconst raw = JSON.stringify(this.languagePacks);\n\t\t\t\t\tthis.logService.debug('Writing language packs', raw);\n\t\t\t\t\treturn pfs.writeFile(this.languagePacksFilePath, raw);\n\t\t\t\t})\n\t\t\t\t.then(() => result, error => this.logService.error(error));\n\t\t});\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ILogService, LogLevel, AbstractLogService, DEFAULT_LOG_LEVEL } from 'vs/platform/log/common/log';\n\ninterface ILog {\n\tlevel: LogLevel;\n\targs: any[];\n}\n\nfunction getLogFunction(logger: ILogService, level: LogLevel): Function {\n\tswitch (level) {\n\t\tcase LogLevel.Trace: return logger.trace;\n\t\tcase LogLevel.Debug: return logger.debug;\n\t\tcase LogLevel.Info: return logger.info;\n\t\tcase LogLevel.Warning: return logger.warn;\n\t\tcase LogLevel.Error: return logger.error;\n\t\tcase LogLevel.Critical: return logger.critical;\n\t\tdefault: throw new Error('Invalid log level');\n\t}\n}\n\nexport class BufferLogService extends AbstractLogService implements ILogService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\tprivate buffer: ILog[] = [];\n\tprivate _logger: ILogService | undefined = undefined;\n\n\tconstructor(logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper();\n\t\tthis.setLevel(logLevel);\n\t\tthis._register(this.onDidChangeLogLevel(level => {\n\t\t\tif (this._logger) {\n\t\t\t\tthis._logger.setLevel(level);\n\t\t\t}\n\t\t}));\n\t}\n\n\tset logger(logger: ILogService) {\n\t\tthis._logger = logger;\n\n\t\tfor (const { level, args } of this.buffer) {\n\t\t\tconst fn = getLogFunction(logger, level);\n\t\t\tfn.apply(logger, args);\n\t\t}\n\n\t\tthis.buffer = [];\n\t}\n\n\tprivate _log(level: LogLevel, ...args: any[]): void {\n\t\tif (this._logger) {\n\t\t\tconst fn = getLogFunction(this._logger, level);\n\t\t\tfn.apply(this._logger, args);\n\t\t} else if (this.getLevel() <= level) {\n\t\t\tthis.buffer.push({ level, args });\n\t\t}\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tthis._log(LogLevel.Trace, message, ...args);\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tthis._log(LogLevel.Debug, message, ...args);\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tthis._log(LogLevel.Info, message, ...args);\n\t}\n\n\twarn(message: string, ...args: any[]): void {\n\t\tthis._log(LogLevel.Warning, message, ...args);\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tthis._log(LogLevel.Error, message, ...args);\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tthis._log(LogLevel.Critical, message, ...args);\n\t}\n\n\tdispose(): void {\n\t\tif (this._logger) {\n\t\t\tthis._logger.dispose();\n\t\t}\n\t}\n\n\tflush(): void {\n\t\tif (this._logger) {\n\t\t\tthis._logger.flush();\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ILogService, LogLevel, AbstractLogService, ILoggerService, ILogger } from 'vs/platform/log/common/log';\nimport { URI } from 'vs/base/common/uri';\nimport { FileOperationError, FileOperationResult, IFileService, whenProviderRegistered } from 'vs/platform/files/common/files';\nimport { Queue } from 'vs/base/common/async';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { dirname, joinPath, basename } from 'vs/base/common/resources';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { BufferLogService } from 'vs/platform/log/common/bufferLog';\n\nconst MAX_FILE_SIZE = 1024 * 1024 * 5;\n\nexport class FileLogService extends AbstractLogService implements ILogService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly initializePromise: Promise<void>;\n\tprivate readonly queue: Queue<void>;\n\tprivate backupIndex: number = 1;\n\n\tconstructor(\n\t\tprivate readonly name: string,\n\t\tprivate readonly resource: URI,\n\t\tlevel: LogLevel,\n\t\t@IFileService private readonly fileService: IFileService\n\t) {\n\t\tsuper();\n\t\tthis.setLevel(level);\n\t\tthis.queue = this._register(new Queue<void>());\n\t\tthis.initializePromise = this.initialize();\n\t}\n\n\ttrace(): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tthis._log(LogLevel.Trace, this.format(arguments));\n\t\t}\n\t}\n\n\tdebug(): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tthis._log(LogLevel.Debug, this.format(arguments));\n\t\t}\n\t}\n\n\tinfo(): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tthis._log(LogLevel.Info, this.format(arguments));\n\t\t}\n\t}\n\n\twarn(): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tthis._log(LogLevel.Warning, this.format(arguments));\n\t\t}\n\t}\n\n\terror(): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\t\t\tconst arg = arguments[0];\n\n\t\t\tif (arg instanceof Error) {\n\t\t\t\tconst array = Array.prototype.slice.call(arguments) as any[];\n\t\t\t\tarray[0] = arg.stack;\n\t\t\t\tthis._log(LogLevel.Error, this.format(array));\n\t\t\t} else {\n\t\t\t\tthis._log(LogLevel.Error, this.format(arguments));\n\t\t\t}\n\t\t}\n\t}\n\n\tcritical(): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tthis._log(LogLevel.Critical, this.format(arguments));\n\t\t}\n\t}\n\n\tflush(): void {\n\t}\n\n\tlog(level: LogLevel, args: any[]): void {\n\t\tthis._log(level, this.format(args));\n\t}\n\n\tprivate async initialize(): Promise<void> {\n\t\ttry {\n\t\t\tawait this.fileService.createFile(this.resource);\n\t\t} catch (error) {\n\t\t\tif ((<FileOperationError>error).fileOperationResult !== FileOperationResult.FILE_MODIFIED_SINCE) {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _log(level: LogLevel, message: string): void {\n\t\tthis.queue.queue(async () => {\n\t\t\tawait this.initializePromise;\n\t\t\tlet content = await this.loadContent();\n\t\t\tif (content.length > MAX_FILE_SIZE) {\n\t\t\t\tawait this.fileService.writeFile(this.getBackupResource(), VSBuffer.fromString(content));\n\t\t\t\tcontent = '';\n\t\t\t}\n\t\t\tcontent += `[${this.getCurrentTimestamp()}] [${this.name}] [${this.stringifyLogLevel(level)}] ${message}\\n`;\n\t\t\tawait this.fileService.writeFile(this.resource, VSBuffer.fromString(content));\n\t\t});\n\t}\n\n\tprivate getCurrentTimestamp(): string {\n\t\tconst toTwoDigits = (v: number) => v < 10 ? `0${v}` : v;\n\t\tconst toThreeDigits = (v: number) => v < 10 ? `00${v}` : v < 100 ? `0${v}` : v;\n\t\tconst currentTime = new Date();\n\t\treturn `${currentTime.getFullYear()}-${toTwoDigits(currentTime.getMonth() + 1)}-${toTwoDigits(currentTime.getDate())} ${toTwoDigits(currentTime.getHours())}:${toTwoDigits(currentTime.getMinutes())}:${toTwoDigits(currentTime.getSeconds())}.${toThreeDigits(currentTime.getMilliseconds())}`;\n\t}\n\n\tprivate getBackupResource(): URI {\n\t\tthis.backupIndex = this.backupIndex > 5 ? 1 : this.backupIndex;\n\t\treturn joinPath(dirname(this.resource), `${basename(this.resource)}_${this.backupIndex++}`);\n\t}\n\n\tprivate async loadContent(): Promise<string> {\n\t\ttry {\n\t\t\tconst content = await this.fileService.readFile(this.resource);\n\t\t\treturn content.value.toString();\n\t\t} catch (e) {\n\t\t\treturn '';\n\t\t}\n\t}\n\n\tprivate stringifyLogLevel(level: LogLevel): string {\n\t\tswitch (level) {\n\t\t\tcase LogLevel.Critical: return 'critical';\n\t\t\tcase LogLevel.Debug: return 'debug';\n\t\t\tcase LogLevel.Error: return 'error';\n\t\t\tcase LogLevel.Info: return 'info';\n\t\t\tcase LogLevel.Trace: return 'trace';\n\t\t\tcase LogLevel.Warning: return 'warning';\n\t\t}\n\t\treturn '';\n\t}\n\n\tprivate format(args: any): string {\n\t\tlet result = '';\n\n\t\tfor (let i = 0; i < args.length; i++) {\n\t\t\tlet a = args[i];\n\n\t\t\tif (typeof a === 'object') {\n\t\t\t\ttry {\n\t\t\t\t\ta = JSON.stringify(a);\n\t\t\t\t} catch (e) { }\n\t\t\t}\n\n\t\t\tresult += (i > 0 ? ' ' : '') + a;\n\t\t}\n\n\t\treturn result;\n\t}\n}\n\nexport class FileLoggerService extends Disposable implements ILoggerService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly loggers = new Map<string, ILogger>();\n\n\tconstructor(\n\t\t@ILogService private logService: ILogService,\n\t\t@IInstantiationService private instantiationService: IInstantiationService,\n\t\t@IFileService private fileService: IFileService,\n\t) {\n\t\tsuper();\n\t\tthis._register(logService.onDidChangeLogLevel(level => this.loggers.forEach(logger => logger.setLevel(level))));\n\t}\n\n\tgetLogger(resource: URI): ILogger {\n\t\tlet logger = this.loggers.get(resource.toString());\n\t\tif (!logger) {\n\t\t\tlogger = new BufferLogService(this.logService.getLevel());\n\t\t\tthis.loggers.set(resource.toString(), logger);\n\t\t\twhenProviderRegistered(resource, this.fileService).then(() => (<BufferLogService>logger).logger = this.instantiationService.createInstance(FileLogService, basename(resource), resource, this.logService.getLevel()));\n\t\t}\n\t\treturn logger;\n\t}\n\n\tdispose(): void {\n\t\tthis.loggers.forEach(logger => logger.dispose());\n\t\tthis.loggers.clear();\n\t\tsuper.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { LogLevel, ILogService, DelegatedLogService } from 'vs/platform/log/common/log';\nimport { Event } from 'vs/base/common/event';\n\nexport class LoggerChannel implements IServerChannel {\n\n\tonDidChangeLogLevel: Event<LogLevel>;\n\n\tconstructor(private service: ILogService) {\n\t\tthis.onDidChangeLogLevel = Event.buffer(service.onDidChangeLogLevel, true);\n\t}\n\n\tlisten(_: unknown, event: string): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase 'onDidChangeLogLevel': return this.onDidChangeLogLevel;\n\t\t}\n\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n\n\tcall(_: unknown, command: string, arg?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'setLevel': this.service.setLevel(arg); return Promise.resolve();\n\t\t\tcase 'consoleLog': this.consoleLog(arg[0], arg[1]); return Promise.resolve();\n\t\t}\n\n\t\tthrow new Error(`Call not found: ${command}`);\n\t}\n\n\tprivate consoleLog(severity: string, args: string[]): void {\n\t\tlet consoleFn = console.log;\n\n\t\tswitch (severity) {\n\t\t\tcase 'error':\n\t\t\t\tconsoleFn = console.error;\n\t\t\t\tbreak;\n\t\t\tcase 'warn':\n\t\t\t\tconsoleFn = console.warn;\n\t\t\t\tbreak;\n\t\t\tcase 'info':\n\t\t\t\tconsoleFn = console.info;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tconsoleFn.call(console, ...args);\n\t}\n}\n\nexport class LoggerChannelClient {\n\n\tconstructor(private channel: IChannel) { }\n\n\tget onDidChangeLogLevel(): Event<LogLevel> {\n\t\treturn this.channel.listen('onDidChangeLogLevel');\n\t}\n\n\tsetLevel(level: LogLevel): void {\n\t\tLoggerChannelClient.setLevel(this.channel, level);\n\t}\n\n\tpublic static setLevel(channel: IChannel, level: LogLevel): Promise<void> {\n\t\treturn channel.call('setLevel', level);\n\t}\n\n\tconsoleLog(severity: string, args: string[]): void {\n\t\tthis.channel.call('consoleLog', [severity, args]);\n\t}\n}\n\nexport class FollowerLogService extends DelegatedLogService implements ILogService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(private parent: LoggerChannelClient, logService: ILogService) {\n\t\tsuper(logService);\n\t\tthis._register(parent.onDidChangeLogLevel(level => logService.setLevel(level)));\n\t}\n\n\tsetLevel(level: LogLevel): void {\n\t\tsuper.setLevel(level);\n\n\t\tthis.parent.setLevel(level);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as path from 'vs/base/common/path';\nimport { ILogService, LogLevel, AbstractLogService } from 'vs/platform/log/common/log';\nimport * as spdlog from 'spdlog';\n\nasync function createSpdLogLogger(processName: string, logsFolder: string): Promise<spdlog.RotatingLogger | null> {\n\t// Do not crash if spdlog cannot be loaded\n\ttry {\n\t\tconst _spdlog = await import('spdlog');\n\t\t_spdlog.setAsyncMode(8192, 500);\n\t\tconst logfilePath = path.join(logsFolder, `${processName}.log`);\n\t\treturn _spdlog.createRotatingLoggerAsync(processName, logfilePath, 1024 * 1024 * 5, 6);\n\t} catch (e) {\n\t\tconsole.error(e);\n\t}\n\treturn null;\n}\n\nexport function createRotatingLogger(name: string, filename: string, filesize: number, filecount: number): spdlog.RotatingLogger {\n\tconst _spdlog: typeof spdlog = require.__$__nodeRequire('spdlog');\n\treturn _spdlog.createRotatingLogger(name, filename, filesize, filecount);\n}\n\ninterface ILog {\n\tlevel: LogLevel;\n\tmessage: string;\n}\n\nfunction log(logger: spdlog.RotatingLogger, level: LogLevel, message: string): void {\n\tswitch (level) {\n\t\tcase LogLevel.Trace: logger.trace(message); break;\n\t\tcase LogLevel.Debug: logger.debug(message); break;\n\t\tcase LogLevel.Info: logger.info(message); break;\n\t\tcase LogLevel.Warning: logger.warn(message); break;\n\t\tcase LogLevel.Error: logger.error(message); break;\n\t\tcase LogLevel.Critical: logger.critical(message); break;\n\t\tdefault: throw new Error('Invalid log level');\n\t}\n}\n\nexport class SpdLogService extends AbstractLogService implements ILogService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate buffer: ILog[] = [];\n\tprivate _loggerCreationPromise: Promise<void> | undefined = undefined;\n\tprivate _logger: spdlog.RotatingLogger | undefined;\n\n\tconstructor(private readonly name: string, private readonly logsFolder: string, level: LogLevel) {\n\t\tsuper();\n\t\tthis.setLevel(level);\n\t\tthis._createSpdLogLogger();\n\t\tthis._register(this.onDidChangeLogLevel(level => {\n\t\t\tif (this._logger) {\n\t\t\t\tthis._logger.setLevel(level);\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate _createSpdLogLogger(): Promise<void> {\n\t\tif (!this._loggerCreationPromise) {\n\t\t\tthis._loggerCreationPromise = createSpdLogLogger(this.name, this.logsFolder)\n\t\t\t\t.then(logger => {\n\t\t\t\t\tif (logger) {\n\t\t\t\t\t\tthis._logger = logger;\n\t\t\t\t\t\tthis._logger.setLevel(this.getLevel());\n\t\t\t\t\t\tfor (const { level, message } of this.buffer) {\n\t\t\t\t\t\t\tlog(this._logger, level, message);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.buffer = [];\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\t\treturn this._loggerCreationPromise;\n\t}\n\n\tprivate _log(level: LogLevel, message: string): void {\n\t\tif (this._logger) {\n\t\t\tlog(this._logger, level, message);\n\t\t} else if (this.getLevel() <= level) {\n\t\t\tthis.buffer.push({ level, message });\n\t\t}\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tthis._log(LogLevel.Trace, this.format([message, ...args]));\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tthis._log(LogLevel.Debug, this.format([message, ...args]));\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tthis._log(LogLevel.Info, this.format([message, ...args]));\n\t\t}\n\t}\n\n\twarn(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tthis._log(LogLevel.Warning, this.format([message, ...args]));\n\t\t}\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\n\t\t\tif (message instanceof Error) {\n\t\t\t\tconst array = Array.prototype.slice.call(arguments) as any[];\n\t\t\t\tarray[0] = message.stack;\n\t\t\t\tthis._log(LogLevel.Error, this.format(array));\n\t\t\t} else {\n\t\t\t\tthis._log(LogLevel.Error, this.format([message, ...args]));\n\t\t\t}\n\t\t}\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tthis._log(LogLevel.Critical, this.format([message, ...args]));\n\t\t}\n\t}\n\n\tflush(): void {\n\t\tif (this._logger) {\n\t\t\tthis._logger.flush();\n\t\t} else if (this._loggerCreationPromise) {\n\t\t\tthis._loggerCreationPromise.then(() => this.flush());\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tif (this._logger) {\n\t\t\tthis.disposeLogger();\n\t\t} else if (this._loggerCreationPromise) {\n\t\t\tthis._loggerCreationPromise.then(() => this.disposeLogger());\n\t\t}\n\t\tthis._loggerCreationPromise = undefined;\n\t}\n\n\tprivate disposeLogger(): void {\n\t\tif (this._logger) {\n\t\t\tthis._logger.drop();\n\t\t\tthis._logger = undefined;\n\t\t}\n\t}\n\n\tprivate format(args: any): string {\n\t\tlet result = '';\n\n\t\tfor (let i = 0; i < args.length; i++) {\n\t\t\tlet a = args[i];\n\n\t\t\tif (typeof a === 'object') {\n\t\t\t\ttry {\n\t\t\t\t\ta = JSON.stringify(a);\n\t\t\t\t} catch (e) { }\n\t\t\t}\n\n\t\t\tresult += (i > 0 ? ' ' : '') + a;\n\t\t}\n\n\t\treturn result;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ILogService, ILoggerService, ILogger } from 'vs/platform/log/common/log';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\nimport { basename, extname, dirname } from 'vs/base/common/resources';\nimport { Schemas } from 'vs/base/common/network';\nimport { FileLogService } from 'vs/platform/log/common/fileLogService';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { SpdLogService } from 'vs/platform/log/node/spdlogService';\n\nexport class LoggerService extends Disposable implements ILoggerService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly loggers = new Map<string, ILogger>();\n\n\tconstructor(\n\t\t@ILogService private logService: ILogService,\n\t\t@IInstantiationService private instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\t\tthis._register(logService.onDidChangeLogLevel(level => this.loggers.forEach(logger => logger.setLevel(level))));\n\t}\n\n\tgetLogger(resource: URI): ILogger {\n\t\tlet logger = this.loggers.get(resource.toString());\n\t\tif (!logger) {\n\t\t\tif (resource.scheme === Schemas.file) {\n\t\t\t\tconst baseName = basename(resource);\n\t\t\t\tconst ext = extname(resource);\n\t\t\t\tlogger = new SpdLogService(baseName.substring(0, baseName.length - ext.length), dirname(resource).fsPath, this.logService.getLevel());\n\t\t\t} else {\n\t\t\t\tlogger = this.instantiationService.createInstance(FileLogService, basename(resource), resource, this.logService.getLevel());\n\t\t\t}\n\t\t\tthis.loggers.set(resource.toString(), logger);\n\t\t}\n\t\treturn logger;\n\t}\n\n\tdispose(): void {\n\t\tthis.loggers.forEach(logger => logger.dispose());\n\t\tthis.loggers.clear();\n\t\tsuper.dispose();\n\t}\n}\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport BaseSeverity from 'vs/base/common/severity';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IAction } from 'vs/base/common/actions';\nimport { Event } from 'vs/base/common/event';\nimport { IDisposable } from 'vs/base/common/lifecycle';\n\nexport import Severity = BaseSeverity;\n\nexport const INotificationService = createDecorator<INotificationService>('notificationService');\n\nexport type NotificationMessage = string | Error;\n\nexport interface INotificationProperties {\n\n\t/**\n\t * Sticky notifications are not automatically removed after a certain timeout. By\n\t * default, notifications with primary actions and severity error are always sticky.\n\t */\n\treadonly sticky?: boolean;\n\n\t/**\n\t * Silent notifications are not shown to the user unless the notification center\n\t * is opened. The status bar will still indicate all number of notifications to\n\t * catch some attention.\n\t */\n\treadonly silent?: boolean;\n\n\t/**\n\t * Adds an action to never show the notification again. The choice will be persisted\n\t * such as future requests will not cause the notification to show again.\n\t */\n\treadonly neverShowAgain?: INeverShowAgainOptions;\n}\n\nexport enum NeverShowAgainScope {\n\n\t/**\n\t * Will never show this notification on the current workspace again.\n\t */\n\tWORKSPACE,\n\n\t/**\n\t * Will never show this notification on any workspace again.\n\t */\n\tGLOBAL\n}\n\nexport interface INeverShowAgainOptions {\n\n\t/**\n\t * The id is used to persist the selection of not showing the notification again.\n\t */\n\treadonly id: string;\n\n\t/**\n\t * By default the action will show up as primary action. Setting this to true will\n\t * make it a secondary action instead.\n\t */\n\treadonly isSecondary?: boolean;\n\n\t/**\n\t * Whether to persist the choice in the current workspace or for all workspaces. By\n\t * default it will be persisted for all workspaces (= `NeverShowAgainScope.GLOBAL`).\n\t */\n\treadonly scope?: NeverShowAgainScope;\n}\n\nexport interface INotification extends INotificationProperties {\n\n\t/**\n\t * The severity of the notification. Either `Info`, `Warning` or `Error`.\n\t */\n\treadonly severity: Severity;\n\n\t/**\n\t * The message of the notification. This can either be a `string` or `Error`. Messages\n\t * can optionally include links in the format: `[text](link)`\n\t */\n\treadonly message: NotificationMessage;\n\n\t/**\n\t * The source of the notification appears as additional information.\n\t */\n\treadonly source?: string;\n\n\t/**\n\t * Actions to show as part of the notification. Primary actions show up as\n\t * buttons as part of the message and will close the notification once clicked.\n\t *\n\t * Secondary actions are meant to provide additional configuration or context\n\t * for the notification and will show up less prominent. A notification does not\n\t * close automatically when invoking a secondary action.\n\t *\n\t * **Note:** If your intent is to show a message with actions to the user, consider\n\t * the `INotificationService.prompt()` method instead which are optimized for\n\t * this usecase and much easier to use!\n\t */\n\tactions?: INotificationActions;\n\n\t/**\n\t * The initial set of progress properties for the notification. To update progress\n\t * later on, access the `INotificationHandle.progress` property.\n\t */\n\treadonly progress?: INotificationProgressProperties;\n}\n\nexport interface INotificationActions {\n\n\t/**\n\t * Primary actions show up as buttons as part of the message and will close\n\t * the notification once clicked.\n\t */\n\treadonly primary?: ReadonlyArray<IAction>;\n\n\t/**\n\t * Secondary actions are meant to provide additional configuration or context\n\t * for the notification and will show up less prominent. A notification does not\n\t * close automatically when invoking a secondary action.\n\t */\n\treadonly secondary?: ReadonlyArray<IAction>;\n}\n\nexport interface INotificationProgressProperties {\n\n\t/**\n\t * Causes the progress bar to spin infinitley.\n\t */\n\treadonly infinite?: boolean;\n\n\t/**\n\t * Indicate the total amount of work.\n\t */\n\treadonly total?: number;\n\n\t/**\n\t * Indicate that a specific chunk of work is done.\n\t */\n\treadonly worked?: number;\n}\n\nexport interface INotificationProgress {\n\n\t/**\n\t * Causes the progress bar to spin infinitley.\n\t */\n\tinfinite(): void;\n\n\t/**\n\t * Indicate the total amount of work.\n\t */\n\ttotal(value: number): void;\n\n\t/**\n\t * Indicate that a specific chunk of work is done.\n\t */\n\tworked(value: number): void;\n\n\t/**\n\t * Indicate that the long running operation is done.\n\t */\n\tdone(): void;\n}\n\nexport interface INotificationHandle {\n\n\t/**\n\t * Will be fired once the notification is closed.\n\t */\n\treadonly onDidClose: Event<void>;\n\n\t/**\n\t * Will be fired whenever the visibility of the notification changes.\n\t * A notification can either be visible as toast or inside the notification\n\t * center if it is visible.\n\t */\n\treadonly onDidChangeVisibility: Event<boolean>;\n\n\t/**\n\t * Allows to indicate progress on the notification even after the\n\t * notification is already visible.\n\t */\n\treadonly progress: INotificationProgress;\n\n\t/**\n\t * Allows to update the severity of the notification.\n\t */\n\tupdateSeverity(severity: Severity): void;\n\n\t/**\n\t * Allows to update the message of the notification even after the\n\t * notification is already visible.\n\t */\n\tupdateMessage(message: NotificationMessage): void;\n\n\t/**\n\t * Allows to update the actions of the notification even after the\n\t * notification is already visible.\n\t */\n\tupdateActions(actions?: INotificationActions): void;\n\n\t/**\n\t * Hide the notification and remove it from the notification center.\n\t */\n\tclose(): void;\n}\n\nexport interface IPromptChoice {\n\n\t/**\n\t * Label to show for the choice to the user.\n\t */\n\treadonly label: string;\n\n\t/**\n\t * Primary choices show up as buttons in the notification below the message.\n\t * Secondary choices show up under the gear icon in the header of the notification.\n\t */\n\treadonly isSecondary?: boolean;\n\n\t/**\n\t * Whether to keep the notification open after the choice was selected\n\t * by the user. By default, will close the notification upon click.\n\t */\n\treadonly keepOpen?: boolean;\n\n\t/**\n\t * Triggered when the user selects the choice.\n\t */\n\trun: () => void;\n}\n\nexport interface IPromptOptions extends INotificationProperties {\n\n\t/**\n\t * Will be called if the user closed the notification without picking\n\t * any of the provided choices.\n\t */\n\tonCancel?: () => void;\n}\n\nexport interface IStatusMessageOptions {\n\n\t/**\n\t * An optional timeout after which the status message should show. By default\n\t * the status message will show immediately.\n\t */\n\treadonly showAfter?: number;\n\n\t/**\n\t * An optional timeout after which the status message is to be hidden. By default\n\t * the status message will not hide until another status message is displayed.\n\t */\n\treadonly hideAfter?: number;\n}\n\nexport enum NotificationsFilter {\n\n\t/**\n\t * No filter is enabled.\n\t */\n\tOFF,\n\n\t/**\n\t * All notifications are configured as silent. See\n\t * `INotificationProperties.silent` for more info.\n\t */\n\tSILENT,\n\n\t/**\n\t * All notifications are silent except error notifications.\n\t*/\n\tERROR\n}\n\n/**\n * A service to bring up notifications and non-modal prompts.\n *\n * Note: use the `IDialogService` for a modal way to ask the user for input.\n */\nexport interface INotificationService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Show the provided notification to the user. The returned `INotificationHandle`\n\t * can be used to control the notification afterwards.\n\t *\n\t * **Note:** If your intent is to show a message with actions to the user, consider\n\t * the `INotificationService.prompt()` method instead which are optimized for\n\t * this usecase and much easier to use!\n\t *\n\t * @returns a handle on the notification to e.g. hide it or update message, buttons, etc.\n\t */\n\tnotify(notification: INotification): INotificationHandle;\n\n\t/**\n\t * A convenient way of reporting infos. Use the `INotificationService.notify`\n\t * method if you need more control over the notification.\n\t */\n\tinfo(message: NotificationMessage | NotificationMessage[]): void;\n\n\t/**\n\t * A convenient way of reporting warnings. Use the `INotificationService.notify`\n\t * method if you need more control over the notification.\n\t */\n\twarn(message: NotificationMessage | NotificationMessage[]): void;\n\n\t/**\n\t * A convenient way of reporting errors. Use the `INotificationService.notify`\n\t * method if you need more control over the notification.\n\t */\n\terror(message: NotificationMessage | NotificationMessage[]): void;\n\n\t/**\n\t * Shows a prompt in the notification area with the provided choices. The prompt\n\t * is non-modal. If you want to show a modal dialog instead, use `IDialogService`.\n\t *\n\t * @param severity the severity of the notification. Either `Info`, `Warning` or `Error`.\n\t * @param message the message to show as status.\n\t * @param choices options to be choosen from.\n\t * @param options provides some optional configuration options.\n\t *\n\t * @returns a handle on the notification to e.g. hide it or update message, buttons, etc.\n\t */\n\tprompt(severity: Severity, message: string, choices: IPromptChoice[], options?: IPromptOptions): INotificationHandle;\n\n\t/**\n\t * Shows a status message in the status area with the provided text.\n\t *\n\t * @param message the message to show as status\n\t * @param options provides some optional configuration options\n\t *\n\t * @returns a disposable to hide the status message\n\t */\n\tstatus(message: NotificationMessage, options?: IStatusMessageOptions): IDisposable;\n\n\t/**\n\t * Allows to configure a filter for notifications.\n\t *\n\t * @param filter the filter to use\n\t */\n\tsetFilter(filter: NotificationsFilter): void;\n}\n\nexport class NoOpNotification implements INotificationHandle {\n\n\treadonly progress = new NoOpProgress();\n\n\treadonly onDidClose = Event.None;\n\treadonly onDidChangeVisibility = Event.None;\n\n\tupdateSeverity(severity: Severity): void { }\n\tupdateMessage(message: NotificationMessage): void { }\n\tupdateActions(actions?: INotificationActions): void { }\n\n\tclose(): void { }\n}\n\nexport class NoOpProgress implements INotificationProgress {\n\tinfinite(): void { }\n\tdone(): void { }\n\ttotal(value: number): void { }\n\tworked(value: number): void { }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IProductConfiguration } from 'vs/platform/product/common/productService';\nimport { isWeb } from 'vs/base/common/platform';\nimport { env } from 'vs/base/common/process';\nimport { FileAccess } from 'vs/base/common/network';\nimport { dirname, joinPath } from 'vs/base/common/resources';\n\nlet product: IProductConfiguration;\n\n// Web or Native (sandbox TODO@sandbox need to add all properties of product.json)\nif (isWeb || typeof require === 'undefined' || typeof require.__$__nodeRequire !== 'function') {\n\n\t// Built time configuration (do NOT modify)\n\tproduct = { /*BUILD->INSERT_PRODUCT_CONFIGURATION*/ } as IProductConfiguration;\n\n\t// Running out of sources\n\tif (Object.keys(product).length === 0) {\n\t\tObject.assign(product, {\n\t\t\tversion: '1.51.0-dev',\n\t\t\tnameShort: isWeb ? 'Code Web - OSS Dev' : 'Code - OSS Dev',\n\t\t\tnameLong: isWeb ? 'Code Web - OSS Dev' : 'Code - OSS Dev',\n\t\t\tapplicationName: 'code-oss',\n\t\t\tdataFolderName: '.vscode-oss',\n\t\t\turlProtocol: 'code-oss',\n\t\t\treportIssueUrl: 'https://github.com/microsoft/vscode/issues/new',\n\t\t\tlicenseName: 'MIT',\n\t\t\tlicenseUrl: 'https://github.com/microsoft/vscode/blob/master/LICENSE.txt',\n\t\t\textensionAllowedProposedApi: [\n\t\t\t\t'ms-vscode.vscode-js-profile-flame',\n\t\t\t\t'ms-vscode.vscode-js-profile-table',\n\t\t\t\t'ms-vscode.references-view',\n\t\t\t\t'ms-vscode.github-browser'\n\t\t\t],\n\t\t});\n\t}\n\t// NOTE@coder: Add the ability to inject settings from the server.\n\tconst el = document.getElementById('vscode-remote-product-configuration');\n\tconst rawProductConfiguration = el && el.getAttribute('data-settings');\n\tif (rawProductConfiguration) {\n\t\tObject.assign(product, JSON.parse(rawProductConfiguration));\n\t}\n}\n\n// Native (non-sandboxed)\nelse {\n\n\t// Obtain values from product.json and package.json\n\tconst rootPath = dirname(FileAccess.asFileUri('', require));\n\n\tproduct = require.__$__nodeRequire(joinPath(rootPath, 'product.json').fsPath);\n\tconst pkg = require.__$__nodeRequire(joinPath(rootPath, 'package.json').fsPath) as { version: string; };\n\n\t// Running out of sources\n\tif (env['VSCODE_DEV']) {\n\t\tObject.assign(product, {\n\t\t\tnameShort: `${product.nameShort} Dev`,\n\t\t\tnameLong: `${product.nameLong} Dev`,\n\t\t\tdataFolderName: `${product.dataFolderName}-dev`\n\t\t});\n\t}\n\n\tObject.assign(product, {\n\t\tversion: pkg.version\n\t});\n}\n\nexport default product;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDebugParams, IExtensionHostDebugParams, INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { NativeParsedArgs } from 'vs/platform/environment/common/argv';\nimport * as paths from 'vs/base/node/paths';\nimport * as os from 'os';\nimport * as path from 'vs/base/common/path';\nimport * as resources from 'vs/base/common/resources';\nimport { memoize } from 'vs/base/common/decorators';\nimport product from 'vs/platform/product/common/product';\nimport { toLocalISOString } from 'vs/base/common/date';\nimport { FileAccess } from 'vs/base/common/network';\nimport { URI } from 'vs/base/common/uri';\nimport { createStaticIPCHandle } from 'vs/base/parts/ipc/node/ipc.net';\n\nexport class NativeEnvironmentService implements INativeEnvironmentService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tget args(): NativeParsedArgs { return this._args; }\n\n\t@memoize\n\tget appRoot(): string { return path.dirname(FileAccess.asFileUri('', require).fsPath); }\n\n\treadonly logsPath: string;\n\n\t@memoize\n\tget userHome(): URI { return URI.file(os.homedir()); }\n\n\t@memoize\n\tget userDataPath(): string {\n\t\tconst vscodePortable = process.env['VSCODE_PORTABLE'];\n\t\tif (vscodePortable) {\n\t\t\treturn path.join(vscodePortable, 'user-data');\n\t\t}\n\n\t\treturn parseUserDataDir(this._args, process);\n\t}\n\n\t@memoize\n\tget appSettingsHome(): URI { return URI.file(path.join(this.userDataPath, 'User')); }\n\n\t@memoize\n\tget tmpDir(): URI { return URI.file(os.tmpdir()); }\n\n\t@memoize\n\tget userRoamingDataHome(): URI { return this.appSettingsHome; }\n\n\t@memoize\n\tget settingsResource(): URI { return resources.joinPath(this.userRoamingDataHome, 'settings.json'); }\n\n\t@memoize\n\tget userDataSyncHome(): URI { return resources.joinPath(this.userRoamingDataHome, 'sync'); }\n\n\t@memoize\n\tget userDataSyncLogResource(): URI { return URI.file(path.join(this.logsPath, 'userDataSync.log')); }\n\n\t@memoize\n\tget sync(): 'on' | 'off' | undefined { return this.args.sync; }\n\n\t@memoize\n\tget machineSettingsResource(): URI { return resources.joinPath(URI.file(path.join(this.userDataPath, 'Machine')), 'settings.json'); }\n\n\t@memoize\n\tget globalStorageHome(): URI { return URI.joinPath(this.appSettingsHome, 'globalStorage'); }\n\n\t@memoize\n\tget workspaceStorageHome(): URI { return URI.joinPath(this.appSettingsHome, 'workspaceStorage'); }\n\n\t@memoize\n\tget keybindingsResource(): URI { return resources.joinPath(this.userRoamingDataHome, 'keybindings.json'); }\n\n\t@memoize\n\tget keyboardLayoutResource(): URI { return resources.joinPath(this.userRoamingDataHome, 'keyboardLayout.json'); }\n\n\t@memoize\n\tget argvResource(): URI {\n\t\tconst vscodePortable = process.env['VSCODE_PORTABLE'];\n\t\tif (vscodePortable) {\n\t\t\treturn URI.file(path.join(vscodePortable, 'argv.json'));\n\t\t}\n\n\t\treturn resources.joinPath(this.userHome, product.dataFolderName, 'argv.json');\n\t}\n\n\t@memoize\n\tget snippetsHome(): URI { return resources.joinPath(this.userRoamingDataHome, 'snippets'); }\n\n\t@memoize\n\tget isExtensionDevelopment(): boolean { return !!this._args.extensionDevelopmentPath; }\n\n\t@memoize\n\tget untitledWorkspacesHome(): URI { return URI.file(path.join(this.userDataPath, 'Workspaces')); }\n\n\t@memoize\n\tget installSourcePath(): string { return path.join(this.userDataPath, 'installSource'); }\n\n\t@memoize\n\tget builtinExtensionsPath(): string {\n\t\tconst fromArgs = parsePathArg(this._args['builtin-extensions-dir'], process);\n\t\tif (fromArgs) {\n\t\t\treturn fromArgs;\n\t\t} else {\n\t\t\treturn path.normalize(path.join(FileAccess.asFileUri('', require).fsPath, '..', 'extensions'));\n\t\t}\n\t}\n\n\tget extensionsDownloadPath(): string {\n\t\tconst fromArgs = parsePathArg(this._args['extensions-download-dir'], process);\n\t\tif (fromArgs) {\n\t\t\treturn fromArgs;\n\t\t} else {\n\t\t\treturn path.join(this.userDataPath, 'CachedExtensionVSIXs');\n\t\t}\n\t}\n\n\t@memoize\n\tget extensionsPath(): string {\n\t\tconst fromArgs = parsePathArg(this._args['extensions-dir'], process);\n\n\t\tif (fromArgs) {\n\t\t\treturn fromArgs;\n\t\t}\n\n\t\tconst vscodeExtensions = process.env['VSCODE_EXTENSIONS'];\n\t\tif (vscodeExtensions) {\n\t\t\treturn vscodeExtensions;\n\t\t}\n\n\t\tconst vscodePortable = process.env['VSCODE_PORTABLE'];\n\t\tif (vscodePortable) {\n\t\t\treturn path.join(vscodePortable, 'extensions');\n\t\t}\n\n\t\treturn resources.joinPath(this.userHome, product.dataFolderName, 'extensions').fsPath;\n\t}\n\n\t@memoize get extraExtensionPaths(): string[] {\n\t\treturn (this._args['extra-extensions-dir'] || []).map((p) => <string>parsePathArg(p, process));\n\t}\n\t@memoize get extraBuiltinExtensionPaths(): string[] {\n\t\treturn (this._args['extra-builtin-extensions-dir'] || []).map((p) => <string>parsePathArg(p, process));\n\t}\n\n\t@memoize\n\tget extensionDevelopmentLocationURI(): URI[] | undefined {\n\t\tconst s = this._args.extensionDevelopmentPath;\n\t\tif (Array.isArray(s)) {\n\t\t\treturn s.map(p => {\n\t\t\t\tif (/^[^:/?#]+?:\\/\\//.test(p)) {\n\t\t\t\t\treturn URI.parse(p);\n\t\t\t\t}\n\t\t\t\treturn URI.file(path.normalize(p));\n\t\t\t});\n\t\t}\n\t\treturn undefined;\n\t}\n\n\t@memoize\n\tget extensionTestsLocationURI(): URI | undefined {\n\t\tconst s = this._args.extensionTestsPath;\n\t\tif (s) {\n\t\t\tif (/^[^:/?#]+?:\\/\\//.test(s)) {\n\t\t\t\treturn URI.parse(s);\n\t\t\t}\n\t\t\treturn URI.file(path.normalize(s));\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tget disableExtensions(): boolean | string[] {\n\t\tif (this._args['disable-extensions']) {\n\t\t\treturn true;\n\t\t}\n\t\tconst disableExtensions = this._args['disable-extension'];\n\t\tif (disableExtensions) {\n\t\t\tif (typeof disableExtensions === 'string') {\n\t\t\t\treturn [disableExtensions];\n\t\t\t}\n\t\t\tif (Array.isArray(disableExtensions) && disableExtensions.length > 0) {\n\t\t\t\treturn disableExtensions;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t@memoize\n\tget debugExtensionHost(): IExtensionHostDebugParams { return parseExtensionHostPort(this._args, this.isBuilt); }\n\tget debugRenderer(): boolean { return !!this._args.debugRenderer; }\n\n\tget isBuilt(): boolean { return !process.env['VSCODE_DEV']; }\n\tget verbose(): boolean { return !!this._args.verbose; }\n\tget logLevel(): string | undefined { return this._args.log; }\n\n\t@memoize\n\tget sharedIPCHandle(): string { return createStaticIPCHandle(this.userDataPath, 'shared', product.version); }\n\n\t@memoize\n\tget serviceMachineIdResource(): URI { return resources.joinPath(URI.file(this.userDataPath), 'machineid'); }\n\n\tget crashReporterId(): string | undefined { return this._args['crash-reporter-id']; }\n\tget crashReporterDirectory(): string | undefined { return this._args['crash-reporter-directory']; }\n\n\tget driverHandle(): string | undefined { return this._args['driver']; }\n\n\t@memoize\n\tget telemetryLogResource(): URI { return URI.file(path.join(this.logsPath, 'telemetry.log')); }\n\tget disableTelemetry(): boolean { return !!this._args['disable-telemetry']; }\n\n\tconstructor(protected _args: NativeParsedArgs) {\n\t\tif (!process.env['VSCODE_LOGS']) {\n\t\t\tconst key = toLocalISOString(new Date()).replace(/-|:|\\.\\d+Z$/g, '');\n\t\t\tprocess.env['VSCODE_LOGS'] = path.join(this.userDataPath, 'logs', key);\n\t\t}\n\n\t\tthis.logsPath = process.env['VSCODE_LOGS']!;\n\t}\n}\n\nexport function parseExtensionHostPort(args: NativeParsedArgs, isBuild: boolean): IExtensionHostDebugParams {\n\treturn parseDebugPort(args['inspect-extensions'], args['inspect-brk-extensions'], 5870, isBuild, args.debugId);\n}\n\nexport function parseSearchPort(args: NativeParsedArgs, isBuild: boolean): IDebugParams {\n\treturn parseDebugPort(args['inspect-search'], args['inspect-brk-search'], 5876, isBuild);\n}\n\nfunction parseDebugPort(debugArg: string | undefined, debugBrkArg: string | undefined, defaultBuildPort: number, isBuild: boolean, debugId?: string): IExtensionHostDebugParams {\n\tconst portStr = debugBrkArg || debugArg;\n\tconst port = Number(portStr) || (!isBuild ? defaultBuildPort : null);\n\tconst brk = port ? Boolean(!!debugBrkArg) : false;\n\n\treturn { port, break: brk, debugId };\n}\n\nexport function parsePathArg(arg: string | undefined, process: NodeJS.Process): string | undefined {\n\tif (!arg) {\n\t\treturn undefined;\n\t}\n\n\t// Determine if the arg is relative or absolute, if relative use the original CWD\n\t// (VSCODE_CWD), not the potentially overridden one (process.cwd()).\n\tconst resolved = path.resolve(arg);\n\n\tif (path.normalize(arg) === resolved) {\n\t\treturn resolved;\n\t}\n\n\treturn path.resolve(process.env['VSCODE_CWD'] || process.cwd(), arg);\n}\n\nexport function parseUserDataDir(args: NativeParsedArgs, process: NodeJS.Process): string {\n\treturn parsePathArg(args['user-data-dir'], process) || path.resolve(paths.getDefaultUserDataPath(process.platform));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { ExtensionKind } from 'vs/platform/extensions/common/extensions';\nimport { IStringDictionary } from 'vs/base/common/collections';\n\nexport const IProductService = createDecorator<IProductService>('productService');\n\nexport interface IProductService extends Readonly<IProductConfiguration> {\n\n\treadonly _serviceBrand: undefined;\n\n}\n\nexport interface IBuiltInExtension {\n\treadonly name: string;\n\treadonly version: string;\n\treadonly repo: string;\n\treadonly metadata: any;\n}\n\nexport type ConfigurationSyncStore = {\n\tweb?: Partial<Omit<ConfigurationSyncStore, 'web'>>,\n\turl: string,\n\tinsidersUrl: string,\n\tstableUrl: string,\n\tcanSwitch: boolean,\n\tauthenticationProviders: IStringDictionary<{ scopes: string[] }>\n};\n\nexport interface IProductConfiguration {\n\treadonly codeServerVersion?: string;\n\n\treadonly version: string;\n\treadonly date?: string;\n\treadonly quality?: string;\n\treadonly commit?: string;\n\n\treadonly nameShort: string;\n\treadonly nameLong: string;\n\n\treadonly win32AppUserModelId?: string;\n\treadonly win32MutexName?: string;\n\treadonly applicationName: string;\n\n\treadonly urlProtocol: string;\n\treadonly dataFolderName: string;\n\n\treadonly builtInExtensions?: IBuiltInExtension[];\n\n\treadonly downloadUrl?: string;\n\treadonly updateUrl?: string;\n\treadonly webEndpointUrl?: string;\n\treadonly target?: string;\n\n\treadonly settingsSearchBuildId?: number;\n\treadonly settingsSearchUrl?: string;\n\n\treadonly tasConfig?: {\n\t\tendpoint: string;\n\t\ttelemetryEventName: string;\n\t\tfeaturesTelemetryPropertyName: string;\n\t\tassignmentContextTelemetryPropertyName: string;\n\t};\n\n\treadonly experimentsUrl?: string;\n\n\treadonly extensionsGallery?: {\n\t\treadonly serviceUrl: string;\n\t\treadonly itemUrl: string;\n\t\treadonly controlUrl: string;\n\t\treadonly recommendationsUrl: string;\n\t};\n\n\treadonly extensionTips?: { [id: string]: string; };\n\treadonly extensionImportantTips?: IStringDictionary<ImportantExtensionTip>;\n\treadonly configBasedExtensionTips?: { [id: string]: IConfigBasedExtensionTip; };\n\treadonly exeBasedExtensionTips?: { [id: string]: IExeBasedExtensionTip; };\n\treadonly remoteExtensionTips?: { [remoteName: string]: IRemoteExtensionTip; };\n\treadonly extensionKeywords?: { [extension: string]: readonly string[]; };\n\treadonly keymapExtensionTips?: readonly string[];\n\n\treadonly crashReporter?: {\n\t\treadonly companyName: string;\n\t\treadonly productName: string;\n\t};\n\n\treadonly enableTelemetry?: boolean;\n\treadonly aiConfig?: {\n\t\treadonly asimovKey: string;\n\t};\n\n\treadonly sendASmile?: {\n\t\treadonly reportIssueUrl: string,\n\t\treadonly requestFeatureUrl: string\n\t};\n\n\treadonly documentationUrl?: string;\n\treadonly releaseNotesUrl?: string;\n\treadonly keyboardShortcutsUrlMac?: string;\n\treadonly keyboardShortcutsUrlLinux?: string;\n\treadonly keyboardShortcutsUrlWin?: string;\n\treadonly introductoryVideosUrl?: string;\n\treadonly tipsAndTricksUrl?: string;\n\treadonly newsletterSignupUrl?: string;\n\treadonly twitterUrl?: string;\n\treadonly requestFeatureUrl?: string;\n\treadonly reportIssueUrl?: string;\n\treadonly licenseUrl?: string;\n\treadonly privacyStatementUrl?: string;\n\treadonly telemetryOptOutUrl?: string;\n\n\treadonly npsSurveyUrl?: string;\n\treadonly surveys?: readonly ISurveyData[];\n\n\treadonly checksums?: { [path: string]: string; };\n\treadonly checksumFailMoreInfoUrl?: string;\n\n\treadonly appCenter?: IAppCenterConfiguration;\n\n\treadonly portable?: string;\n\n\treadonly extensionKind?: { readonly [extensionId: string]: ExtensionKind[]; };\n\treadonly extensionAllowedProposedApi?: readonly string[];\n\n\treadonly msftInternalDomains?: string[];\n\treadonly linkProtectionTrustedDomains?: readonly string[];\n\n\treadonly 'configurationSync.store'?: ConfigurationSyncStore;\n}\n\nexport type ImportantExtensionTip = { name: string; languages?: string[]; pattern?: string; isExtensionPack?: boolean };\n\nexport interface IAppCenterConfiguration {\n\treadonly 'win32-ia32': string;\n\treadonly 'win32-x64': string;\n\treadonly 'linux-x64': string;\n\treadonly 'darwin': string;\n}\n\nexport interface IConfigBasedExtensionTip {\n\tconfigPath: string;\n\tconfigName: string;\n\trecommendations: IStringDictionary<{ name: string, remotes?: string[], important?: boolean, isExtensionPack?: boolean }>;\n}\n\nexport interface IExeBasedExtensionTip {\n\tfriendlyName: string;\n\twindowsPath?: string;\n\timportant?: boolean;\n\trecommendations: IStringDictionary<{ name: string, important?: boolean, isExtensionPack?: boolean }>;\n}\n\nexport interface IRemoteExtensionTip {\n\tfriendlyName: string;\n\textensionId: string;\n}\n\nexport interface ISurveyData {\n\tsurveyId: string;\n\tsurveyUrl: string;\n\tlanguageId: string;\n\teditCount: number;\n\tuserProbability: number;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as Types from 'vs/base/common/types';\nimport * as Assert from 'vs/base/common/assert';\n\nexport interface IRegistry {\n\n\t/**\n\t * Adds the extension functions and properties defined by data to the\n\t * platform. The provided id must be unique.\n\t * @param id a unique identifier\n\t * @param data a contribution\n\t */\n\tadd(id: string, data: any): void;\n\n\t/**\n\t * Returns true iff there is an extension with the provided id.\n\t * @param id an extension identifier\n\t */\n\tknows(id: string): boolean;\n\n\t/**\n\t * Returns the extension functions and properties defined by the specified key or null.\n\t * @param id an extension identifier\n\t */\n\tas<T>(id: string): T;\n}\n\nclass RegistryImpl implements IRegistry {\n\n\tprivate readonly data = new Map<string, any>();\n\n\tpublic add(id: string, data: any): void {\n\t\tAssert.ok(Types.isString(id));\n\t\tAssert.ok(Types.isObject(data));\n\t\tAssert.ok(!this.data.has(id), 'There is already an extension with this id');\n\n\t\tthis.data.set(id, data);\n\t}\n\n\tpublic knows(id: string): boolean {\n\t\treturn this.data.has(id);\n\t}\n\n\tpublic as(id: string): any {\n\t\treturn this.data.get(id) || null;\n\t}\n}\n\nexport const Registry: IRegistry = new RegistryImpl();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IJSONSchema } from 'vs/base/common/jsonSchema';\nimport * as platform from 'vs/platform/registry/common/platform';\nimport { Event, Emitter } from 'vs/base/common/event';\n\nexport const Extensions = {\n\tJSONContribution: 'base.contributions.json'\n};\n\nexport interface ISchemaContributions {\n\tschemas: { [id: string]: IJSONSchema };\n}\n\nexport interface IJSONContributionRegistry {\n\n\treadonly onDidChangeSchema: Event<string>;\n\n\t/**\n\t * Register a schema to the registry.\n\t */\n\tregisterSchema(uri: string, unresolvedSchemaContent: IJSONSchema): void;\n\n\n\t/**\n\t * Notifies all listeners that the content of the given schema has changed.\n\t * @param uri The id of the schema\n\t */\n\tnotifySchemaChanged(uri: string): void;\n\n\t/**\n\t * Get all schemas\n\t */\n\tgetSchemaContributions(): ISchemaContributions;\n}\n\n\n\nfunction normalizeId(id: string) {\n\tif (id.length > 0 && id.charAt(id.length - 1) === '#') {\n\t\treturn id.substring(0, id.length - 1);\n\t}\n\treturn id;\n}\n\n\n\nclass JSONContributionRegistry implements IJSONContributionRegistry {\n\n\tprivate schemasById: { [id: string]: IJSONSchema };\n\n\tprivate readonly _onDidChangeSchema = new Emitter<string>();\n\treadonly onDidChangeSchema: Event<string> = this._onDidChangeSchema.event;\n\n\tconstructor() {\n\t\tthis.schemasById = {};\n\t}\n\n\tpublic registerSchema(uri: string, unresolvedSchemaContent: IJSONSchema): void {\n\t\tthis.schemasById[normalizeId(uri)] = unresolvedSchemaContent;\n\t\tthis._onDidChangeSchema.fire(uri);\n\t}\n\n\tpublic notifySchemaChanged(uri: string): void {\n\t\tthis._onDidChangeSchema.fire(uri);\n\t}\n\n\tpublic getSchemaContributions(): ISchemaContributions {\n\t\treturn {\n\t\t\tschemas: this.schemasById,\n\t\t};\n\t}\n\n}\n\nconst jsonContributionRegistry = new JSONContributionRegistry();\nplatform.Registry.add(Extensions.JSONContribution, jsonContributionRegistry);","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { IJSONSchema } from 'vs/base/common/jsonSchema';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport * as types from 'vs/base/common/types';\nimport { IJSONContributionRegistry, Extensions as JSONExtensions } from 'vs/platform/jsonschemas/common/jsonContributionRegistry';\nimport { IStringDictionary } from 'vs/base/common/collections';\n\nexport const Extensions = {\n\tConfiguration: 'base.contributions.configuration'\n};\n\nexport interface IConfigurationRegistry {\n\n\t/**\n\t * Register a configuration to the registry.\n\t */\n\tregisterConfiguration(configuration: IConfigurationNode): void;\n\n\t/**\n\t * Register multiple configurations to the registry.\n\t */\n\tregisterConfigurations(configurations: IConfigurationNode[], validate?: boolean): void;\n\n\t/**\n\t * Deregister multiple configurations from the registry.\n\t */\n\tderegisterConfigurations(configurations: IConfigurationNode[]): void;\n\n\t/**\n\t * Register multiple default configurations to the registry.\n\t */\n\tregisterDefaultConfigurations(defaultConfigurations: IStringDictionary<any>[]): void;\n\n\t/**\n\t * Deregister multiple default configurations from the registry.\n\t */\n\tderegisterDefaultConfigurations(defaultConfigurations: IStringDictionary<any>[]): void;\n\n\t/**\n\t * Signal that the schema of a configuration setting has changes. It is currently only supported to change enumeration values.\n\t * Property or default value changes are not allowed.\n\t */\n\tnotifyConfigurationSchemaUpdated(...configurations: IConfigurationNode[]): void;\n\n\t/**\n\t * Event that fires whenver a configuration has been\n\t * registered.\n\t */\n\tonDidSchemaChange: Event<void>;\n\n\t/**\n\t * Event that fires whenver a configuration has been\n\t * registered.\n\t */\n\tonDidUpdateConfiguration: Event<string[]>;\n\n\t/**\n\t * Returns all configuration nodes contributed to this registry.\n\t */\n\tgetConfigurations(): IConfigurationNode[];\n\n\t/**\n\t * Returns all configurations settings of all configuration nodes contributed to this registry.\n\t */\n\tgetConfigurationProperties(): { [qualifiedKey: string]: IConfigurationPropertySchema };\n\n\t/**\n\t * Returns all excluded configurations settings of all configuration nodes contributed to this registry.\n\t */\n\tgetExcludedConfigurationProperties(): { [qualifiedKey: string]: IConfigurationPropertySchema };\n\n\t/**\n\t * Register the identifiers for editor configurations\n\t */\n\tregisterOverrideIdentifiers(identifiers: string[]): void;\n}\n\nexport const enum ConfigurationScope {\n\t/**\n\t * Application specific configuration, which can be configured only in local user settings.\n\t */\n\tAPPLICATION = 1,\n\t/**\n\t * Machine specific configuration, which can be configured only in local and remote user settings.\n\t */\n\tMACHINE,\n\t/**\n\t * Window specific configuration, which can be configured in the user or workspace settings.\n\t */\n\tWINDOW,\n\t/**\n\t * Resource specific configuration, which can be configured in the user, workspace or folder settings.\n\t */\n\tRESOURCE,\n\t/**\n\t * Resource specific configuration that can be configured in language specific settings\n\t */\n\tLANGUAGE_OVERRIDABLE,\n\t/**\n\t * Machine specific configuration that can also be configured in workspace or folder settings.\n\t */\n\tMACHINE_OVERRIDABLE,\n}\n\nexport interface IConfigurationPropertySchema extends IJSONSchema {\n\tscope?: ConfigurationScope;\n\tincluded?: boolean;\n\ttags?: string[];\n\tdisallowSyncIgnore?: boolean;\n\tenumItemLabels?: string[];\n}\n\nexport interface IConfigurationExtensionInfo {\n\tid: string;\n}\n\nexport interface IConfigurationNode {\n\tid?: string;\n\torder?: number;\n\ttype?: string | string[];\n\ttitle?: string;\n\tdescription?: string;\n\tproperties?: { [path: string]: IConfigurationPropertySchema; };\n\tallOf?: IConfigurationNode[];\n\tscope?: ConfigurationScope;\n\textensionInfo?: IConfigurationExtensionInfo;\n}\n\ntype SettingProperties = { [key: string]: any };\n\nexport const allSettings: { properties: SettingProperties, patternProperties: SettingProperties } = { properties: {}, patternProperties: {} };\nexport const applicationSettings: { properties: SettingProperties, patternProperties: SettingProperties } = { properties: {}, patternProperties: {} };\nexport const machineSettings: { properties: SettingProperties, patternProperties: SettingProperties } = { properties: {}, patternProperties: {} };\nexport const machineOverridableSettings: { properties: SettingProperties, patternProperties: SettingProperties } = { properties: {}, patternProperties: {} };\nexport const windowSettings: { properties: SettingProperties, patternProperties: SettingProperties } = { properties: {}, patternProperties: {} };\nexport const resourceSettings: { properties: SettingProperties, patternProperties: SettingProperties } = { properties: {}, patternProperties: {} };\n\nexport const resourceLanguageSettingsSchemaId = 'vscode://schemas/settings/resourceLanguage';\n\nconst contributionRegistry = Registry.as<IJSONContributionRegistry>(JSONExtensions.JSONContribution);\n\nclass ConfigurationRegistry implements IConfigurationRegistry {\n\n\tprivate readonly defaultValues: IStringDictionary<any>;\n\tprivate readonly defaultLanguageConfigurationOverridesNode: IConfigurationNode;\n\tprivate readonly configurationContributors: IConfigurationNode[];\n\tprivate readonly configurationProperties: { [qualifiedKey: string]: IJSONSchema };\n\tprivate readonly excludedConfigurationProperties: { [qualifiedKey: string]: IJSONSchema };\n\tprivate readonly resourceLanguageSettingsSchema: IJSONSchema;\n\tprivate readonly overrideIdentifiers = new Set<string>();\n\n\tprivate readonly _onDidSchemaChange = new Emitter<void>();\n\treadonly onDidSchemaChange: Event<void> = this._onDidSchemaChange.event;\n\n\tprivate readonly _onDidUpdateConfiguration: Emitter<string[]> = new Emitter<string[]>();\n\treadonly onDidUpdateConfiguration: Event<string[]> = this._onDidUpdateConfiguration.event;\n\n\tconstructor() {\n\t\tthis.defaultValues = {};\n\t\tthis.defaultLanguageConfigurationOverridesNode = {\n\t\t\tid: 'defaultOverrides',\n\t\t\ttitle: nls.localize('defaultLanguageConfigurationOverrides.title', \"Default Language Configuration Overrides\"),\n\t\t\tproperties: {}\n\t\t};\n\t\tthis.configurationContributors = [this.defaultLanguageConfigurationOverridesNode];\n\t\tthis.resourceLanguageSettingsSchema = { properties: {}, patternProperties: {}, additionalProperties: false, errorMessage: 'Unknown editor configuration setting', allowTrailingCommas: true, allowComments: true };\n\t\tthis.configurationProperties = {};\n\t\tthis.excludedConfigurationProperties = {};\n\n\t\tcontributionRegistry.registerSchema(resourceLanguageSettingsSchemaId, this.resourceLanguageSettingsSchema);\n\t}\n\n\tpublic registerConfiguration(configuration: IConfigurationNode, validate: boolean = true): void {\n\t\tthis.registerConfigurations([configuration], validate);\n\t}\n\n\tpublic registerConfigurations(configurations: IConfigurationNode[], validate: boolean = true): void {\n\t\tconst properties: string[] = [];\n\t\tconfigurations.forEach(configuration => {\n\t\t\tproperties.push(...this.validateAndRegisterProperties(configuration, validate)); // fills in defaults\n\t\t\tthis.configurationContributors.push(configuration);\n\t\t\tthis.registerJSONConfiguration(configuration);\n\t\t});\n\n\t\tcontributionRegistry.registerSchema(resourceLanguageSettingsSchemaId, this.resourceLanguageSettingsSchema);\n\t\tthis._onDidSchemaChange.fire();\n\t\tthis._onDidUpdateConfiguration.fire(properties);\n\t}\n\n\tpublic deregisterConfigurations(configurations: IConfigurationNode[]): void {\n\t\tconst properties: string[] = [];\n\t\tconst deregisterConfiguration = (configuration: IConfigurationNode) => {\n\t\t\tif (configuration.properties) {\n\t\t\t\tfor (const key in configuration.properties) {\n\t\t\t\t\tproperties.push(key);\n\t\t\t\t\tdelete this.configurationProperties[key];\n\t\t\t\t\tthis.removeFromSchema(key, configuration.properties[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (configuration.allOf) {\n\t\t\t\tconfiguration.allOf.forEach(node => deregisterConfiguration(node));\n\t\t\t}\n\t\t};\n\t\tfor (const configuration of configurations) {\n\t\t\tderegisterConfiguration(configuration);\n\t\t\tconst index = this.configurationContributors.indexOf(configuration);\n\t\t\tif (index !== -1) {\n\t\t\t\tthis.configurationContributors.splice(index, 1);\n\t\t\t}\n\t\t}\n\n\t\tcontributionRegistry.registerSchema(resourceLanguageSettingsSchemaId, this.resourceLanguageSettingsSchema);\n\t\tthis._onDidSchemaChange.fire();\n\t\tthis._onDidUpdateConfiguration.fire(properties);\n\t}\n\n\tpublic registerDefaultConfigurations(defaultConfigurations: IStringDictionary<any>[]): void {\n\t\tconst properties: string[] = [];\n\t\tconst overrideIdentifiers: string[] = [];\n\n\t\tfor (const defaultConfiguration of defaultConfigurations) {\n\t\t\tfor (const key in defaultConfiguration) {\n\t\t\t\tproperties.push(key);\n\n\t\t\t\tif (OVERRIDE_PROPERTY_PATTERN.test(key)) {\n\t\t\t\t\tthis.defaultValues[key] = { ...(this.defaultValues[key] || {}), ...defaultConfiguration[key] };\n\t\t\t\t\tconst property: IConfigurationPropertySchema = {\n\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\tdefault: this.defaultValues[key],\n\t\t\t\t\t\tdescription: nls.localize('defaultLanguageConfiguration.description', \"Configure settings to be overridden for {0} language.\", key),\n\t\t\t\t\t\t$ref: resourceLanguageSettingsSchemaId\n\t\t\t\t\t};\n\t\t\t\t\toverrideIdentifiers.push(overrideIdentifierFromKey(key));\n\t\t\t\t\tthis.configurationProperties[key] = property;\n\t\t\t\t\tthis.defaultLanguageConfigurationOverridesNode.properties![key] = property;\n\t\t\t\t} else {\n\t\t\t\t\tthis.defaultValues[key] = defaultConfiguration[key];\n\t\t\t\t\tconst property = this.configurationProperties[key];\n\t\t\t\t\tif (property) {\n\t\t\t\t\t\tthis.updatePropertyDefaultValue(key, property);\n\t\t\t\t\t\tthis.updateSchema(key, property);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.registerOverrideIdentifiers(overrideIdentifiers);\n\t\tthis._onDidSchemaChange.fire();\n\t\tthis._onDidUpdateConfiguration.fire(properties);\n\t}\n\n\tpublic deregisterDefaultConfigurations(defaultConfigurations: IStringDictionary<any>[]): void {\n\t\tconst properties: string[] = [];\n\t\tfor (const defaultConfiguration of defaultConfigurations) {\n\t\t\tfor (const key in defaultConfiguration) {\n\t\t\t\tproperties.push(key);\n\t\t\t\tdelete this.defaultValues[key];\n\t\t\t\tif (OVERRIDE_PROPERTY_PATTERN.test(key)) {\n\t\t\t\t\tdelete this.configurationProperties[key];\n\t\t\t\t\tdelete this.defaultLanguageConfigurationOverridesNode.properties![key];\n\t\t\t\t} else {\n\t\t\t\t\tconst property = this.configurationProperties[key];\n\t\t\t\t\tif (property) {\n\t\t\t\t\t\tthis.updatePropertyDefaultValue(key, property);\n\t\t\t\t\t\tthis.updateSchema(key, property);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.updateOverridePropertyPatternKey();\n\t\tthis._onDidSchemaChange.fire();\n\t\tthis._onDidUpdateConfiguration.fire(properties);\n\t}\n\n\tpublic notifyConfigurationSchemaUpdated(...configurations: IConfigurationNode[]) {\n\t\tthis._onDidSchemaChange.fire();\n\t}\n\n\tpublic registerOverrideIdentifiers(overrideIdentifiers: string[]): void {\n\t\tfor (const overrideIdentifier of overrideIdentifiers) {\n\t\t\tthis.overrideIdentifiers.add(overrideIdentifier);\n\t\t}\n\t\tthis.updateOverridePropertyPatternKey();\n\t}\n\n\tprivate validateAndRegisterProperties(configuration: IConfigurationNode, validate: boolean = true, scope: ConfigurationScope = ConfigurationScope.WINDOW): string[] {\n\t\tscope = types.isUndefinedOrNull(configuration.scope) ? scope : configuration.scope;\n\t\tlet propertyKeys: string[] = [];\n\t\tlet properties = configuration.properties;\n\t\tif (properties) {\n\t\t\tfor (let key in properties) {\n\t\t\t\tif (validate && validateProperty(key)) {\n\t\t\t\t\tdelete properties[key];\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst property = properties[key];\n\n\t\t\t\t// update default value\n\t\t\t\tthis.updatePropertyDefaultValue(key, property);\n\n\t\t\t\t// update scope\n\t\t\t\tif (OVERRIDE_PROPERTY_PATTERN.test(key)) {\n\t\t\t\t\tproperty.scope = undefined; // No scope for overridable properties `[${identifier}]`\n\t\t\t\t} else {\n\t\t\t\t\tproperty.scope = types.isUndefinedOrNull(property.scope) ? scope : property.scope;\n\t\t\t\t}\n\n\t\t\t\t// Add to properties maps\n\t\t\t\t// Property is included by default if 'included' is unspecified\n\t\t\t\tif (properties[key].hasOwnProperty('included') && !properties[key].included) {\n\t\t\t\t\tthis.excludedConfigurationProperties[key] = properties[key];\n\t\t\t\t\tdelete properties[key];\n\t\t\t\t\tcontinue;\n\t\t\t\t} else {\n\t\t\t\t\tthis.configurationProperties[key] = properties[key];\n\t\t\t\t}\n\n\t\t\t\tif (!properties[key].deprecationMessage && properties[key].markdownDeprecationMessage) {\n\t\t\t\t\t// If not set, default deprecationMessage to the markdown source\n\t\t\t\t\tproperties[key].deprecationMessage = properties[key].markdownDeprecationMessage;\n\t\t\t\t}\n\n\t\t\t\tpropertyKeys.push(key);\n\t\t\t}\n\t\t}\n\t\tlet subNodes = configuration.allOf;\n\t\tif (subNodes) {\n\t\t\tfor (let node of subNodes) {\n\t\t\t\tpropertyKeys.push(...this.validateAndRegisterProperties(node, validate, scope));\n\t\t\t}\n\t\t}\n\t\treturn propertyKeys;\n\t}\n\n\tgetConfigurations(): IConfigurationNode[] {\n\t\treturn this.configurationContributors;\n\t}\n\n\tgetConfigurationProperties(): { [qualifiedKey: string]: IConfigurationPropertySchema } {\n\t\treturn this.configurationProperties;\n\t}\n\n\tgetExcludedConfigurationProperties(): { [qualifiedKey: string]: IConfigurationPropertySchema } {\n\t\treturn this.excludedConfigurationProperties;\n\t}\n\n\tprivate registerJSONConfiguration(configuration: IConfigurationNode) {\n\t\tconst register = (configuration: IConfigurationNode) => {\n\t\t\tlet properties = configuration.properties;\n\t\t\tif (properties) {\n\t\t\t\tfor (const key in properties) {\n\t\t\t\t\tthis.updateSchema(key, properties[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet subNodes = configuration.allOf;\n\t\t\tif (subNodes) {\n\t\t\t\tsubNodes.forEach(register);\n\t\t\t}\n\t\t};\n\t\tregister(configuration);\n\t}\n\n\tprivate updateSchema(key: string, property: IConfigurationPropertySchema): void {\n\t\tallSettings.properties[key] = property;\n\t\tswitch (property.scope) {\n\t\t\tcase ConfigurationScope.APPLICATION:\n\t\t\t\tapplicationSettings.properties[key] = property;\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.MACHINE:\n\t\t\t\tmachineSettings.properties[key] = property;\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.MACHINE_OVERRIDABLE:\n\t\t\t\tmachineOverridableSettings.properties[key] = property;\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.WINDOW:\n\t\t\t\twindowSettings.properties[key] = property;\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.RESOURCE:\n\t\t\t\tresourceSettings.properties[key] = property;\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.LANGUAGE_OVERRIDABLE:\n\t\t\t\tresourceSettings.properties[key] = property;\n\t\t\t\tthis.resourceLanguageSettingsSchema.properties![key] = property;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprivate removeFromSchema(key: string, property: IConfigurationPropertySchema): void {\n\t\tdelete allSettings.properties[key];\n\t\tswitch (property.scope) {\n\t\t\tcase ConfigurationScope.APPLICATION:\n\t\t\t\tdelete applicationSettings.properties[key];\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.MACHINE:\n\t\t\t\tdelete machineSettings.properties[key];\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.MACHINE_OVERRIDABLE:\n\t\t\t\tdelete machineOverridableSettings.properties[key];\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.WINDOW:\n\t\t\t\tdelete windowSettings.properties[key];\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.RESOURCE:\n\t\t\tcase ConfigurationScope.LANGUAGE_OVERRIDABLE:\n\t\t\t\tdelete resourceSettings.properties[key];\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprivate updateOverridePropertyPatternKey(): void {\n\t\tfor (const overrideIdentifier of this.overrideIdentifiers.values()) {\n\t\t\tconst overrideIdentifierProperty = `[${overrideIdentifier}]`;\n\t\t\tconst resourceLanguagePropertiesSchema: IJSONSchema = {\n\t\t\t\ttype: 'object',\n\t\t\t\tdescription: nls.localize('overrideSettings.defaultDescription', \"Configure editor settings to be overridden for a language.\"),\n\t\t\t\terrorMessage: nls.localize('overrideSettings.errorMessage', \"This setting does not support per-language configuration.\"),\n\t\t\t\t$ref: resourceLanguageSettingsSchemaId,\n\t\t\t};\n\t\t\tthis.updatePropertyDefaultValue(overrideIdentifierProperty, resourceLanguagePropertiesSchema);\n\t\t\tallSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t\tapplicationSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t\tmachineSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t\tmachineOverridableSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t\twindowSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t\tresourceSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t}\n\t\tthis._onDidSchemaChange.fire();\n\t}\n\n\tprivate updatePropertyDefaultValue(key: string, property: IConfigurationPropertySchema): void {\n\t\tlet defaultValue = this.defaultValues[key];\n\t\tif (types.isUndefined(defaultValue)) {\n\t\t\tdefaultValue = property.default;\n\t\t}\n\t\tif (types.isUndefined(defaultValue)) {\n\t\t\tdefaultValue = getDefaultValue(property.type);\n\t\t}\n\t\tproperty.default = defaultValue;\n\t}\n}\n\nconst OVERRIDE_PROPERTY = '\\\\[.*\\\\]$';\nexport const OVERRIDE_PROPERTY_PATTERN = new RegExp(OVERRIDE_PROPERTY);\n\nexport function overrideIdentifierFromKey(key: string): string {\n\treturn key.substring(1, key.length - 1);\n}\n\nexport function getDefaultValue(type: string | string[] | undefined): any {\n\tconst t = Array.isArray(type) ? (<string[]>type)[0] : <string>type;\n\tswitch (t) {\n\t\tcase 'boolean':\n\t\t\treturn false;\n\t\tcase 'integer':\n\t\tcase 'number':\n\t\t\treturn 0;\n\t\tcase 'string':\n\t\t\treturn '';\n\t\tcase 'array':\n\t\t\treturn [];\n\t\tcase 'object':\n\t\t\treturn {};\n\t\tdefault:\n\t\t\treturn null;\n\t}\n}\n\n\nconst configurationRegistry = new ConfigurationRegistry();\nRegistry.add(Extensions.Configuration, configurationRegistry);\n\nexport function validateProperty(property: string): string | null {\n\tif (OVERRIDE_PROPERTY_PATTERN.test(property)) {\n\t\treturn nls.localize('config.property.languageDefault', \"Cannot register '{0}'. This matches property pattern '\\\\\\\\[.*\\\\\\\\]$' for describing language specific editor settings. Use 'configurationDefaults' contribution.\", property);\n\t}\n\tif (configurationRegistry.getConfigurationProperties()[property] !== undefined) {\n\t\treturn nls.localize('config.property.duplicate', \"Cannot register '{0}'. This property is already registered.\", property);\n\t}\n\treturn null;\n}\n\nexport function getScopes(): [string, ConfigurationScope | undefined][] {\n\tconst scopes: [string, ConfigurationScope | undefined][] = [];\n\tconst configurationProperties = configurationRegistry.getConfigurationProperties();\n\tfor (const key of Object.keys(configurationProperties)) {\n\t\tscopes.push([key, configurationProperties[key].scope]);\n\t}\n\tscopes.push(['launch', ConfigurationScope.RESOURCE]);\n\tscopes.push(['task', ConfigurationScope.RESOURCE]);\n\treturn scopes;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as objects from 'vs/base/common/objects';\nimport * as types from 'vs/base/common/types';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { Event } from 'vs/base/common/event';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IWorkspaceFolder } from 'vs/platform/workspace/common/workspace';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IConfigurationRegistry, Extensions, OVERRIDE_PROPERTY_PATTERN, overrideIdentifierFromKey } from 'vs/platform/configuration/common/configurationRegistry';\nimport { IStringDictionary } from 'vs/base/common/collections';\n\nexport const IConfigurationService = createDecorator<IConfigurationService>('configurationService');\n\nexport function isConfigurationOverrides(thing: any): thing is IConfigurationOverrides {\n\treturn thing\n\t\t&& typeof thing === 'object'\n\t\t&& (!thing.overrideIdentifier || typeof thing.overrideIdentifier === 'string')\n\t\t&& (!thing.resource || thing.resource instanceof URI);\n}\n\nexport interface IConfigurationOverrides {\n\toverrideIdentifier?: string | null;\n\tresource?: URI | null;\n}\n\nexport const enum ConfigurationTarget {\n\tUSER = 1,\n\tUSER_LOCAL,\n\tUSER_REMOTE,\n\tWORKSPACE,\n\tWORKSPACE_FOLDER,\n\tDEFAULT,\n\tMEMORY\n}\nexport function ConfigurationTargetToString(configurationTarget: ConfigurationTarget) {\n\tswitch (configurationTarget) {\n\t\tcase ConfigurationTarget.USER: return 'USER';\n\t\tcase ConfigurationTarget.USER_LOCAL: return 'USER_LOCAL';\n\t\tcase ConfigurationTarget.USER_REMOTE: return 'USER_REMOTE';\n\t\tcase ConfigurationTarget.WORKSPACE: return 'WORKSPACE';\n\t\tcase ConfigurationTarget.WORKSPACE_FOLDER: return 'WORKSPACE_FOLDER';\n\t\tcase ConfigurationTarget.DEFAULT: return 'DEFAULT';\n\t\tcase ConfigurationTarget.MEMORY: return 'MEMORY';\n\t}\n}\n\nexport interface IConfigurationChange {\n\tkeys: string[];\n\toverrides: [string, string[]][];\n}\n\nexport interface IConfigurationChangeEvent {\n\n\treadonly source: ConfigurationTarget;\n\treadonly affectedKeys: string[];\n\treadonly change: IConfigurationChange;\n\n\taffectsConfiguration(configuration: string, overrides?: IConfigurationOverrides): boolean;\n\n\t// Following data is used for telemetry\n\treadonly sourceConfig: any;\n}\n\nexport interface IConfigurationValue<T> {\n\n\treadonly defaultValue?: T;\n\treadonly userValue?: T;\n\treadonly userLocalValue?: T;\n\treadonly userRemoteValue?: T;\n\treadonly workspaceValue?: T;\n\treadonly workspaceFolderValue?: T;\n\treadonly memoryValue?: T;\n\treadonly value?: T;\n\n\treadonly default?: { value?: T, override?: T };\n\treadonly user?: { value?: T, override?: T };\n\treadonly userLocal?: { value?: T, override?: T };\n\treadonly userRemote?: { value?: T, override?: T };\n\treadonly workspace?: { value?: T, override?: T };\n\treadonly workspaceFolder?: { value?: T, override?: T };\n\treadonly memory?: { value?: T, override?: T };\n\n\treadonly overrideIdentifiers?: string[];\n}\n\nexport interface IConfigurationService {\n\treadonly _serviceBrand: undefined;\n\n\tonDidChangeConfiguration: Event<IConfigurationChangeEvent>;\n\n\tgetConfigurationData(): IConfigurationData | null;\n\n\t/**\n\t * Fetches the value of the section for the given overrides.\n\t * Value can be of native type or an object keyed off the section name.\n\t *\n\t * @param section - Section of the configuraion. Can be `null` or `undefined`.\n\t * @param overrides - Overrides that has to be applied while fetching\n\t *\n\t */\n\tgetValue<T>(): T;\n\tgetValue<T>(section: string): T;\n\tgetValue<T>(overrides: IConfigurationOverrides): T;\n\tgetValue<T>(section: string, overrides: IConfigurationOverrides): T;\n\n\tupdateValue(key: string, value: any): Promise<void>;\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides): Promise<void>;\n\tupdateValue(key: string, value: any, target: ConfigurationTarget): Promise<void>;\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides, target: ConfigurationTarget, donotNotifyError?: boolean): Promise<void>;\n\n\tinspect<T>(key: string, overrides?: IConfigurationOverrides): IConfigurationValue<T>;\n\n\treloadConfiguration(folder?: IWorkspaceFolder): Promise<void>;\n\n\tkeys(): {\n\t\tdefault: string[];\n\t\tuser: string[];\n\t\tworkspace: string[];\n\t\tworkspaceFolder: string[];\n\t\tmemory?: string[];\n\t};\n}\n\nexport interface IConfigurationModel {\n\tcontents: any;\n\tkeys: string[];\n\toverrides: IOverrides[];\n}\n\nexport interface IOverrides {\n\tkeys: string[];\n\tcontents: any;\n\tidentifiers: string[];\n}\n\nexport interface IConfigurationData {\n\tdefaults: IConfigurationModel;\n\tuser: IConfigurationModel;\n\tworkspace: IConfigurationModel;\n\tfolders: [UriComponents, IConfigurationModel][];\n}\n\nexport interface IConfigurationCompareResult {\n\tadded: string[];\n\tremoved: string[];\n\tupdated: string[];\n\toverrides: [string, string[]][];\n}\n\nexport function compare(from: IConfigurationModel | undefined, to: IConfigurationModel | undefined): IConfigurationCompareResult {\n\tconst added = to\n\t\t? from ? to.keys.filter(key => from.keys.indexOf(key) === -1) : [...to.keys]\n\t\t: [];\n\tconst removed = from\n\t\t? to ? from.keys.filter(key => to.keys.indexOf(key) === -1) : [...from.keys]\n\t\t: [];\n\tconst updated: string[] = [];\n\n\tif (to && from) {\n\t\tfor (const key of from.keys) {\n\t\t\tif (to.keys.indexOf(key) !== -1) {\n\t\t\t\tconst value1 = getConfigurationValue(from.contents, key);\n\t\t\t\tconst value2 = getConfigurationValue(to.contents, key);\n\t\t\t\tif (!objects.equals(value1, value2)) {\n\t\t\t\t\tupdated.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tconst overrides: [string, string[]][] = [];\n\tconst byOverrideIdentifier = (overrides: IOverrides[]): IStringDictionary<IOverrides> => {\n\t\tconst result: IStringDictionary<IOverrides> = {};\n\t\tfor (const override of overrides) {\n\t\t\tfor (const identifier of override.identifiers) {\n\t\t\t\tresult[keyFromOverrideIdentifier(identifier)] = override;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t};\n\tconst toOverridesByIdentifier: IStringDictionary<IOverrides> = to ? byOverrideIdentifier(to.overrides) : {};\n\tconst fromOverridesByIdentifier: IStringDictionary<IOverrides> = from ? byOverrideIdentifier(from.overrides) : {};\n\n\tif (Object.keys(toOverridesByIdentifier).length) {\n\t\tfor (const key of added) {\n\t\t\tconst override = toOverridesByIdentifier[key];\n\t\t\tif (override) {\n\t\t\t\toverrides.push([overrideIdentifierFromKey(key), override.keys]);\n\t\t\t}\n\t\t}\n\t}\n\tif (Object.keys(fromOverridesByIdentifier).length) {\n\t\tfor (const key of removed) {\n\t\t\tconst override = fromOverridesByIdentifier[key];\n\t\t\tif (override) {\n\t\t\t\toverrides.push([overrideIdentifierFromKey(key), override.keys]);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (Object.keys(toOverridesByIdentifier).length && Object.keys(fromOverridesByIdentifier).length) {\n\t\tfor (const key of updated) {\n\t\t\tconst fromOverride = fromOverridesByIdentifier[key];\n\t\t\tconst toOverride = toOverridesByIdentifier[key];\n\t\t\tif (fromOverride && toOverride) {\n\t\t\t\tconst result = compare({ contents: fromOverride.contents, keys: fromOverride.keys, overrides: [] }, { contents: toOverride.contents, keys: toOverride.keys, overrides: [] });\n\t\t\t\toverrides.push([overrideIdentifierFromKey(key), [...result.added, ...result.removed, ...result.updated]]);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn { added, removed, updated, overrides };\n}\n\nexport function toOverrides(raw: any, conflictReporter: (message: string) => void): IOverrides[] {\n\tconst overrides: IOverrides[] = [];\n\tfor (const key of Object.keys(raw)) {\n\t\tif (OVERRIDE_PROPERTY_PATTERN.test(key)) {\n\t\t\tconst overrideRaw: any = {};\n\t\t\tfor (const keyInOverrideRaw in raw[key]) {\n\t\t\t\toverrideRaw[keyInOverrideRaw] = raw[key][keyInOverrideRaw];\n\t\t\t}\n\t\t\toverrides.push({\n\t\t\t\tidentifiers: [overrideIdentifierFromKey(key).trim()],\n\t\t\t\tkeys: Object.keys(overrideRaw),\n\t\t\t\tcontents: toValuesTree(overrideRaw, conflictReporter)\n\t\t\t});\n\t\t}\n\t}\n\treturn overrides;\n}\n\nexport function toValuesTree(properties: { [qualifiedKey: string]: any }, conflictReporter: (message: string) => void): any {\n\tconst root = Object.create(null);\n\n\tfor (let key in properties) {\n\t\taddToValueTree(root, key, properties[key], conflictReporter);\n\t}\n\n\treturn root;\n}\n\nexport function addToValueTree(settingsTreeRoot: any, key: string, value: any, conflictReporter: (message: string) => void): void {\n\tconst segments = key.split('.');\n\tconst last = segments.pop()!;\n\n\tlet curr = settingsTreeRoot;\n\tfor (let i = 0; i < segments.length; i++) {\n\t\tlet s = segments[i];\n\t\tlet obj = curr[s];\n\t\tswitch (typeof obj) {\n\t\t\tcase 'undefined':\n\t\t\t\tobj = curr[s] = Object.create(null);\n\t\t\t\tbreak;\n\t\t\tcase 'object':\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconflictReporter(`Ignoring ${key} as ${segments.slice(0, i + 1).join('.')} is ${JSON.stringify(obj)}`);\n\t\t\t\treturn;\n\t\t}\n\t\tcurr = obj;\n\t}\n\n\tif (typeof curr === 'object' && curr !== null) {\n\t\ttry {\n\t\t\tcurr[last] = value; // workaround https://github.com/microsoft/vscode/issues/13606\n\t\t} catch (e) {\n\t\t\tconflictReporter(`Ignoring ${key} as ${segments.join('.')} is ${JSON.stringify(curr)}`);\n\t\t}\n\t} else {\n\t\tconflictReporter(`Ignoring ${key} as ${segments.join('.')} is ${JSON.stringify(curr)}`);\n\t}\n}\n\nexport function removeFromValueTree(valueTree: any, key: string): void {\n\tconst segments = key.split('.');\n\tdoRemoveFromValueTree(valueTree, segments);\n}\n\nfunction doRemoveFromValueTree(valueTree: any, segments: string[]): void {\n\tconst first = segments.shift()!;\n\tif (segments.length === 0) {\n\t\t// Reached last segment\n\t\tdelete valueTree[first];\n\t\treturn;\n\t}\n\n\tif (Object.keys(valueTree).indexOf(first) !== -1) {\n\t\tconst value = valueTree[first];\n\t\tif (typeof value === 'object' && !Array.isArray(value)) {\n\t\t\tdoRemoveFromValueTree(value, segments);\n\t\t\tif (Object.keys(value).length === 0) {\n\t\t\t\tdelete valueTree[first];\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * A helper function to get the configuration value with a specific settings path (e.g. config.some.setting)\n */\nexport function getConfigurationValue<T>(config: any, settingPath: string, defaultValue?: T): T {\n\tfunction accessSetting(config: any, path: string[]): any {\n\t\tlet current = config;\n\t\tfor (const component of path) {\n\t\t\tif (typeof current !== 'object' || current === null) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tcurrent = current[component];\n\t\t}\n\t\treturn <T>current;\n\t}\n\n\tconst path = settingPath.split('.');\n\tconst result = accessSetting(config, path);\n\n\treturn typeof result === 'undefined' ? defaultValue : result;\n}\n\nexport function merge(base: any, add: any, overwrite: boolean): void {\n\tObject.keys(add).forEach(key => {\n\t\tif (key !== '__proto__') {\n\t\t\tif (key in base) {\n\t\t\t\tif (types.isObject(base[key]) && types.isObject(add[key])) {\n\t\t\t\t\tmerge(base[key], add[key], overwrite);\n\t\t\t\t} else if (overwrite) {\n\t\t\t\t\tbase[key] = add[key];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tbase[key] = add[key];\n\t\t\t}\n\t\t}\n\t});\n}\n\nexport function getConfigurationKeys(): string[] {\n\tconst properties = Registry.as<IConfigurationRegistry>(Extensions.Configuration).getConfigurationProperties();\n\treturn Object.keys(properties);\n}\n\nexport function getDefaultValues(): any {\n\tconst valueTreeRoot: any = Object.create(null);\n\tconst properties = Registry.as<IConfigurationRegistry>(Extensions.Configuration).getConfigurationProperties();\n\n\tfor (let key in properties) {\n\t\tlet value = properties[key].default;\n\t\taddToValueTree(valueTreeRoot, key, value, message => console.error(`Conflict in default settings: ${message}`));\n\t}\n\n\treturn valueTreeRoot;\n}\n\nexport function keyFromOverrideIdentifier(overrideIdentifier: string): string {\n\treturn `[${overrideIdentifier}]`;\n}\n\nexport function getMigratedSettingValue<T>(configurationService: IConfigurationService, currentSettingName: string, legacySettingName: string): T {\n\tconst setting = configurationService.inspect<T>(currentSettingName);\n\tconst legacySetting = configurationService.inspect<T>(legacySettingName);\n\n\tif (typeof setting.userValue !== 'undefined' || typeof setting.workspaceValue !== 'undefined' || typeof setting.workspaceFolderValue !== 'undefined') {\n\t\treturn setting.value!;\n\t} else if (typeof legacySetting.userValue !== 'undefined' || typeof legacySetting.workspaceValue !== 'undefined' || typeof legacySetting.workspaceFolderValue !== 'undefined') {\n\t\treturn legacySetting.value!;\n\t} else {\n\t\treturn setting.defaultValue!;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as json from 'vs/base/common/json';\nimport { ResourceMap, getOrSet } from 'vs/base/common/map';\nimport * as arrays from 'vs/base/common/arrays';\nimport * as types from 'vs/base/common/types';\nimport * as objects from 'vs/base/common/objects';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { OVERRIDE_PROPERTY_PATTERN, ConfigurationScope, IConfigurationRegistry, Extensions, IConfigurationPropertySchema, overrideIdentifierFromKey } from 'vs/platform/configuration/common/configurationRegistry';\nimport { IOverrides, addToValueTree, toValuesTree, IConfigurationModel, getConfigurationValue, IConfigurationOverrides, IConfigurationData, getDefaultValues, getConfigurationKeys, removeFromValueTree, toOverrides, IConfigurationValue, ConfigurationTarget, compare, IConfigurationChangeEvent, IConfigurationChange } from 'vs/platform/configuration/common/configuration';\nimport { Workspace } from 'vs/platform/workspace/common/workspace';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { dirname } from 'vs/base/common/resources';\n\nexport class ConfigurationModel implements IConfigurationModel {\n\n\tprivate isFrozen: boolean = false;\n\n\tconstructor(\n\t\tprivate _contents: any = {},\n\t\tprivate _keys: string[] = [],\n\t\tprivate _overrides: IOverrides[] = []\n\t) {\n\t}\n\n\tget contents(): any {\n\t\treturn this.checkAndFreeze(this._contents);\n\t}\n\n\tget overrides(): IOverrides[] {\n\t\treturn this.checkAndFreeze(this._overrides);\n\t}\n\n\tget keys(): string[] {\n\t\treturn this.checkAndFreeze(this._keys);\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn this._keys.length === 0 && Object.keys(this._contents).length === 0 && this._overrides.length === 0;\n\t}\n\n\tgetValue<V>(section: string | undefined): V {\n\t\treturn section ? getConfigurationValue<any>(this.contents, section) : this.contents;\n\t}\n\n\tgetOverrideValue<V>(section: string | undefined, overrideIdentifier: string): V | undefined {\n\t\tconst overrideContents = this.getContentsForOverrideIdentifer(overrideIdentifier);\n\t\treturn overrideContents\n\t\t\t? section ? getConfigurationValue<any>(overrideContents, section) : overrideContents\n\t\t\t: undefined;\n\t}\n\n\tgetKeysForOverrideIdentifier(identifier: string): string[] {\n\t\tfor (const override of this.overrides) {\n\t\t\tif (override.identifiers.indexOf(identifier) !== -1) {\n\t\t\t\treturn override.keys;\n\t\t\t}\n\t\t}\n\t\treturn [];\n\t}\n\n\toverride(identifier: string): ConfigurationModel {\n\t\tconst overrideContents = this.getContentsForOverrideIdentifer(identifier);\n\n\t\tif (!overrideContents || typeof overrideContents !== 'object' || !Object.keys(overrideContents).length) {\n\t\t\t// If there are no valid overrides, return self\n\t\t\treturn this;\n\t\t}\n\n\t\tlet contents: any = {};\n\t\tfor (const key of arrays.distinct([...Object.keys(this.contents), ...Object.keys(overrideContents)])) {\n\n\t\t\tlet contentsForKey = this.contents[key];\n\t\t\tlet overrideContentsForKey = overrideContents[key];\n\n\t\t\t// If there are override contents for the key, clone and merge otherwise use base contents\n\t\t\tif (overrideContentsForKey) {\n\t\t\t\t// Clone and merge only if base contents and override contents are of type object otherwise just override\n\t\t\t\tif (typeof contentsForKey === 'object' && typeof overrideContentsForKey === 'object') {\n\t\t\t\t\tcontentsForKey = objects.deepClone(contentsForKey);\n\t\t\t\t\tthis.mergeContents(contentsForKey, overrideContentsForKey);\n\t\t\t\t} else {\n\t\t\t\t\tcontentsForKey = overrideContentsForKey;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcontents[key] = contentsForKey;\n\t\t}\n\n\t\treturn new ConfigurationModel(contents, this.keys, this.overrides);\n\t}\n\n\tmerge(...others: ConfigurationModel[]): ConfigurationModel {\n\t\tconst contents = objects.deepClone(this.contents);\n\t\tconst overrides = objects.deepClone(this.overrides);\n\t\tconst keys = [...this.keys];\n\n\t\tfor (const other of others) {\n\t\t\tthis.mergeContents(contents, other.contents);\n\n\t\t\tfor (const otherOverride of other.overrides) {\n\t\t\t\tconst [override] = overrides.filter(o => arrays.equals(o.identifiers, otherOverride.identifiers));\n\t\t\t\tif (override) {\n\t\t\t\t\tthis.mergeContents(override.contents, otherOverride.contents);\n\t\t\t\t} else {\n\t\t\t\t\toverrides.push(objects.deepClone(otherOverride));\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (const key of other.keys) {\n\t\t\t\tif (keys.indexOf(key) === -1) {\n\t\t\t\t\tkeys.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn new ConfigurationModel(contents, keys, overrides);\n\t}\n\n\tfreeze(): ConfigurationModel {\n\t\tthis.isFrozen = true;\n\t\treturn this;\n\t}\n\n\tprivate mergeContents(source: any, target: any): void {\n\t\tfor (const key of Object.keys(target)) {\n\t\t\tif (key in source) {\n\t\t\t\tif (types.isObject(source[key]) && types.isObject(target[key])) {\n\t\t\t\t\tthis.mergeContents(source[key], target[key]);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\tsource[key] = objects.deepClone(target[key]);\n\t\t}\n\t}\n\n\tprivate checkAndFreeze<T>(data: T): T {\n\t\tif (this.isFrozen && !Object.isFrozen(data)) {\n\t\t\treturn objects.deepFreeze(data);\n\t\t}\n\t\treturn data;\n\t}\n\n\tprivate getContentsForOverrideIdentifer(identifier: string): any {\n\t\tfor (const override of this.overrides) {\n\t\t\tif (override.identifiers.indexOf(identifier) !== -1) {\n\t\t\t\treturn override.contents;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\ttoJSON(): IConfigurationModel {\n\t\treturn {\n\t\t\tcontents: this.contents,\n\t\t\toverrides: this.overrides,\n\t\t\tkeys: this.keys\n\t\t};\n\t}\n\n\t// Update methods\n\n\tpublic setValue(key: string, value: any) {\n\t\tthis.addKey(key);\n\t\taddToValueTree(this.contents, key, value, e => { throw new Error(e); });\n\t}\n\n\tpublic removeValue(key: string): void {\n\t\tif (this.removeKey(key)) {\n\t\t\tremoveFromValueTree(this.contents, key);\n\t\t}\n\t}\n\n\tprivate addKey(key: string): void {\n\t\tlet index = this.keys.length;\n\t\tfor (let i = 0; i < index; i++) {\n\t\t\tif (key.indexOf(this.keys[i]) === 0) {\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\t\tthis.keys.splice(index, 1, key);\n\t}\n\n\tprivate removeKey(key: string): boolean {\n\t\tlet index = this.keys.indexOf(key);\n\t\tif (index !== -1) {\n\t\t\tthis.keys.splice(index, 1);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n}\n\nexport class DefaultConfigurationModel extends ConfigurationModel {\n\n\tconstructor() {\n\t\tconst contents = getDefaultValues();\n\t\tconst keys = getConfigurationKeys();\n\t\tconst overrides: IOverrides[] = [];\n\t\tfor (const key of Object.keys(contents)) {\n\t\t\tif (OVERRIDE_PROPERTY_PATTERN.test(key)) {\n\t\t\t\toverrides.push({\n\t\t\t\t\tidentifiers: [overrideIdentifierFromKey(key).trim()],\n\t\t\t\t\tkeys: Object.keys(contents[key]),\n\t\t\t\t\tcontents: toValuesTree(contents[key], message => console.error(`Conflict in default settings file: ${message}`)),\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tsuper(contents, keys, overrides);\n\t}\n}\n\nexport class ConfigurationModelParser {\n\n\tprivate _raw: any = null;\n\tprivate _configurationModel: ConfigurationModel | null = null;\n\tprivate _parseErrors: any[] = [];\n\n\tconstructor(protected readonly _name: string, private _scopes?: ConfigurationScope[]) { }\n\n\tget configurationModel(): ConfigurationModel {\n\t\treturn this._configurationModel || new ConfigurationModel();\n\t}\n\n\tget errors(): any[] {\n\t\treturn this._parseErrors;\n\t}\n\n\tpublic parseContent(content: string | null | undefined): void {\n\t\tif (!types.isUndefinedOrNull(content)) {\n\t\t\tconst raw = this.doParseContent(content);\n\t\t\tthis.parseRaw(raw);\n\t\t}\n\t}\n\n\tpublic parseRaw(raw: any): void {\n\t\tthis._raw = raw;\n\t\tconst configurationModel = this.doParseRaw(raw);\n\t\tthis._configurationModel = new ConfigurationModel(configurationModel.contents, configurationModel.keys, configurationModel.overrides);\n\t}\n\n\tpublic parse(): void {\n\t\tif (this._raw) {\n\t\t\tthis.parseRaw(this._raw);\n\t\t}\n\t}\n\n\tprotected doParseContent(content: string): any {\n\t\tlet raw: any = {};\n\t\tlet currentProperty: string | null = null;\n\t\tlet currentParent: any = [];\n\t\tlet previousParents: any[] = [];\n\t\tlet parseErrors: json.ParseError[] = [];\n\n\t\tfunction onValue(value: any) {\n\t\t\tif (Array.isArray(currentParent)) {\n\t\t\t\t(<any[]>currentParent).push(value);\n\t\t\t} else if (currentProperty) {\n\t\t\t\tcurrentParent[currentProperty] = value;\n\t\t\t}\n\t\t}\n\n\t\tlet visitor: json.JSONVisitor = {\n\t\t\tonObjectBegin: () => {\n\t\t\t\tlet object = {};\n\t\t\t\tonValue(object);\n\t\t\t\tpreviousParents.push(currentParent);\n\t\t\t\tcurrentParent = object;\n\t\t\t\tcurrentProperty = null;\n\t\t\t},\n\t\t\tonObjectProperty: (name: string) => {\n\t\t\t\tcurrentProperty = name;\n\t\t\t},\n\t\t\tonObjectEnd: () => {\n\t\t\t\tcurrentParent = previousParents.pop();\n\t\t\t},\n\t\t\tonArrayBegin: () => {\n\t\t\t\tlet array: any[] = [];\n\t\t\t\tonValue(array);\n\t\t\t\tpreviousParents.push(currentParent);\n\t\t\t\tcurrentParent = array;\n\t\t\t\tcurrentProperty = null;\n\t\t\t},\n\t\t\tonArrayEnd: () => {\n\t\t\t\tcurrentParent = previousParents.pop();\n\t\t\t},\n\t\t\tonLiteralValue: onValue,\n\t\t\tonError: (error: json.ParseErrorCode, offset: number, length: number) => {\n\t\t\t\tparseErrors.push({ error, offset, length });\n\t\t\t}\n\t\t};\n\t\tif (content) {\n\t\t\ttry {\n\t\t\t\tjson.visit(content, visitor);\n\t\t\t\traw = currentParent[0] || {};\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(`Error while parsing settings file ${this._name}: ${e}`);\n\t\t\t\tthis._parseErrors = [e];\n\t\t\t}\n\t\t}\n\n\t\treturn raw;\n\t}\n\n\tprotected doParseRaw(raw: any): IConfigurationModel {\n\t\tif (this._scopes) {\n\t\t\tconst configurationProperties = Registry.as<IConfigurationRegistry>(Extensions.Configuration).getConfigurationProperties();\n\t\t\traw = this.filterByScope(raw, configurationProperties, true, this._scopes);\n\t\t}\n\t\tconst contents = toValuesTree(raw, message => console.error(`Conflict in settings file ${this._name}: ${message}`));\n\t\tconst keys = Object.keys(raw);\n\t\tconst overrides: IOverrides[] = toOverrides(raw, message => console.error(`Conflict in settings file ${this._name}: ${message}`));\n\t\treturn { contents, keys, overrides };\n\t}\n\n\tprivate filterByScope(properties: any, configurationProperties: { [qualifiedKey: string]: IConfigurationPropertySchema }, filterOverriddenProperties: boolean, scopes: ConfigurationScope[]): {} {\n\t\tconst result: any = {};\n\t\tfor (let key in properties) {\n\t\t\tif (OVERRIDE_PROPERTY_PATTERN.test(key) && filterOverriddenProperties) {\n\t\t\t\tresult[key] = this.filterByScope(properties[key], configurationProperties, false, scopes);\n\t\t\t} else {\n\t\t\t\tconst scope = this.getScope(key, configurationProperties);\n\t\t\t\t// Load unregistered configurations always.\n\t\t\t\tif (scope === undefined || scopes.indexOf(scope) !== -1) {\n\t\t\t\t\tresult[key] = properties[key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate getScope(key: string, configurationProperties: { [qualifiedKey: string]: IConfigurationPropertySchema }): ConfigurationScope | undefined {\n\t\tconst propertySchema = configurationProperties[key];\n\t\treturn propertySchema ? typeof propertySchema.scope !== 'undefined' ? propertySchema.scope : ConfigurationScope.WINDOW : undefined;\n\t}\n}\n\nexport class UserSettings extends Disposable {\n\n\tprivate readonly parser: ConfigurationModelParser;\n\tprotected readonly _onDidChange: Emitter<void> = this._register(new Emitter<void>());\n\treadonly onDidChange: Event<void> = this._onDidChange.event;\n\n\tconstructor(\n\t\tprivate readonly userSettingsResource: URI,\n\t\tprivate readonly scopes: ConfigurationScope[] | undefined,\n\t\tprivate readonly fileService: IFileService\n\t) {\n\t\tsuper();\n\t\tthis.parser = new ConfigurationModelParser(this.userSettingsResource.toString(), this.scopes);\n\t\tthis._register(this.fileService.watch(dirname(this.userSettingsResource)));\n\t\tthis._register(Event.filter(this.fileService.onDidFilesChange, e => e.contains(this.userSettingsResource))(() => this._onDidChange.fire()));\n\t}\n\n\tasync loadConfiguration(): Promise<ConfigurationModel> {\n\t\ttry {\n\t\t\tconst content = await this.fileService.readFile(this.userSettingsResource);\n\t\t\tthis.parser.parseContent(content.value.toString() || '{}');\n\t\t\treturn this.parser.configurationModel;\n\t\t} catch (e) {\n\t\t\treturn new ConfigurationModel();\n\t\t}\n\t}\n\n\treprocess(): ConfigurationModel {\n\t\tthis.parser.parse();\n\t\treturn this.parser.configurationModel;\n\t}\n}\n\n\nexport class Configuration {\n\n\tprivate _workspaceConsolidatedConfiguration: ConfigurationModel | null = null;\n\tprivate _foldersConsolidatedConfigurations: ResourceMap<ConfigurationModel> = new ResourceMap<ConfigurationModel>();\n\n\tconstructor(\n\t\tprivate _defaultConfiguration: ConfigurationModel,\n\t\tprivate _localUserConfiguration: ConfigurationModel,\n\t\tprivate _remoteUserConfiguration: ConfigurationModel = new ConfigurationModel(),\n\t\tprivate _workspaceConfiguration: ConfigurationModel = new ConfigurationModel(),\n\t\tprivate _folderConfigurations: ResourceMap<ConfigurationModel> = new ResourceMap<ConfigurationModel>(),\n\t\tprivate _memoryConfiguration: ConfigurationModel = new ConfigurationModel(),\n\t\tprivate _memoryConfigurationByResource: ResourceMap<ConfigurationModel> = new ResourceMap<ConfigurationModel>(),\n\t\tprivate _freeze: boolean = true) {\n\t}\n\n\tgetValue(section: string | undefined, overrides: IConfigurationOverrides, workspace: Workspace | undefined): any {\n\t\tconst consolidateConfigurationModel = this.getConsolidateConfigurationModel(overrides, workspace);\n\t\treturn consolidateConfigurationModel.getValue(section);\n\t}\n\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides = {}): void {\n\t\tlet memoryConfiguration: ConfigurationModel | undefined;\n\t\tif (overrides.resource) {\n\t\t\tmemoryConfiguration = this._memoryConfigurationByResource.get(overrides.resource);\n\t\t\tif (!memoryConfiguration) {\n\t\t\t\tmemoryConfiguration = new ConfigurationModel();\n\t\t\t\tthis._memoryConfigurationByResource.set(overrides.resource, memoryConfiguration);\n\t\t\t}\n\t\t} else {\n\t\t\tmemoryConfiguration = this._memoryConfiguration;\n\t\t}\n\n\t\tif (value === undefined) {\n\t\t\tmemoryConfiguration.removeValue(key);\n\t\t} else {\n\t\t\tmemoryConfiguration.setValue(key, value);\n\t\t}\n\n\t\tif (!overrides.resource) {\n\t\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\t}\n\t}\n\n\tinspect<C>(key: string, overrides: IConfigurationOverrides, workspace: Workspace | undefined): IConfigurationValue<C> {\n\t\tconst consolidateConfigurationModel = this.getConsolidateConfigurationModel(overrides, workspace);\n\t\tconst folderConfigurationModel = this.getFolderConfigurationModelForResource(overrides.resource, workspace);\n\t\tconst memoryConfigurationModel = overrides.resource ? this._memoryConfigurationByResource.get(overrides.resource) || this._memoryConfiguration : this._memoryConfiguration;\n\n\t\tconst defaultValue = overrides.overrideIdentifier ? this._defaultConfiguration.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : this._defaultConfiguration.freeze().getValue<C>(key);\n\t\tconst userValue = overrides.overrideIdentifier ? this.userConfiguration.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : this.userConfiguration.freeze().getValue<C>(key);\n\t\tconst userLocalValue = overrides.overrideIdentifier ? this.localUserConfiguration.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : this.localUserConfiguration.freeze().getValue<C>(key);\n\t\tconst userRemoteValue = overrides.overrideIdentifier ? this.remoteUserConfiguration.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : this.remoteUserConfiguration.freeze().getValue<C>(key);\n\t\tconst workspaceValue = workspace ? overrides.overrideIdentifier ? this._workspaceConfiguration.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : this._workspaceConfiguration.freeze().getValue<C>(key) : undefined; //Check on workspace exists or not because _workspaceConfiguration is never null\n\t\tconst workspaceFolderValue = folderConfigurationModel ? overrides.overrideIdentifier ? folderConfigurationModel.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : folderConfigurationModel.freeze().getValue<C>(key) : undefined;\n\t\tconst memoryValue = overrides.overrideIdentifier ? memoryConfigurationModel.override(overrides.overrideIdentifier).getValue<C>(key) : memoryConfigurationModel.getValue<C>(key);\n\t\tconst value = consolidateConfigurationModel.getValue<C>(key);\n\t\tconst overrideIdentifiers: string[] = arrays.distinct(arrays.flatten(consolidateConfigurationModel.overrides.map(override => override.identifiers))).filter(overrideIdentifier => consolidateConfigurationModel.getOverrideValue(key, overrideIdentifier) !== undefined);\n\n\t\treturn {\n\t\t\tdefaultValue: defaultValue,\n\t\t\tuserValue: userValue,\n\t\t\tuserLocalValue: userLocalValue,\n\t\t\tuserRemoteValue: userRemoteValue,\n\t\t\tworkspaceValue: workspaceValue,\n\t\t\tworkspaceFolderValue: workspaceFolderValue,\n\t\t\tmemoryValue: memoryValue,\n\t\t\tvalue,\n\n\t\t\tdefault: defaultValue !== undefined ? { value: this._defaultConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this._defaultConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tuser: userValue !== undefined ? { value: this.userConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this.userConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tuserLocal: userLocalValue !== undefined ? { value: this.localUserConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this.localUserConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tuserRemote: userRemoteValue !== undefined ? { value: this.remoteUserConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this.remoteUserConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tworkspace: workspaceValue !== undefined ? { value: this._workspaceConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this._workspaceConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tworkspaceFolder: workspaceFolderValue !== undefined ? { value: folderConfigurationModel?.freeze().getValue(key), override: overrides.overrideIdentifier ? folderConfigurationModel?.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tmemory: memoryValue !== undefined ? { value: memoryConfigurationModel.getValue(key), override: overrides.overrideIdentifier ? memoryConfigurationModel.getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\n\t\t\toverrideIdentifiers: overrideIdentifiers.length ? overrideIdentifiers : undefined\n\t\t};\n\t}\n\n\tkeys(workspace: Workspace | undefined): {\n\t\tdefault: string[];\n\t\tuser: string[];\n\t\tworkspace: string[];\n\t\tworkspaceFolder: string[];\n\t} {\n\t\tconst folderConfigurationModel = this.getFolderConfigurationModelForResource(undefined, workspace);\n\t\treturn {\n\t\t\tdefault: this._defaultConfiguration.freeze().keys,\n\t\t\tuser: this.userConfiguration.freeze().keys,\n\t\t\tworkspace: this._workspaceConfiguration.freeze().keys,\n\t\t\tworkspaceFolder: folderConfigurationModel ? folderConfigurationModel.freeze().keys : []\n\t\t};\n\t}\n\n\tupdateDefaultConfiguration(defaultConfiguration: ConfigurationModel): void {\n\t\tthis._defaultConfiguration = defaultConfiguration;\n\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\tthis._foldersConsolidatedConfigurations.clear();\n\t}\n\n\tupdateLocalUserConfiguration(localUserConfiguration: ConfigurationModel): void {\n\t\tthis._localUserConfiguration = localUserConfiguration;\n\t\tthis._userConfiguration = null;\n\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\tthis._foldersConsolidatedConfigurations.clear();\n\t}\n\n\tupdateRemoteUserConfiguration(remoteUserConfiguration: ConfigurationModel): void {\n\t\tthis._remoteUserConfiguration = remoteUserConfiguration;\n\t\tthis._userConfiguration = null;\n\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\tthis._foldersConsolidatedConfigurations.clear();\n\t}\n\n\tupdateWorkspaceConfiguration(workspaceConfiguration: ConfigurationModel): void {\n\t\tthis._workspaceConfiguration = workspaceConfiguration;\n\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\tthis._foldersConsolidatedConfigurations.clear();\n\t}\n\n\tupdateFolderConfiguration(resource: URI, configuration: ConfigurationModel): void {\n\t\tthis._folderConfigurations.set(resource, configuration);\n\t\tthis._foldersConsolidatedConfigurations.delete(resource);\n\t}\n\n\tdeleteFolderConfiguration(resource: URI): void {\n\t\tthis.folderConfigurations.delete(resource);\n\t\tthis._foldersConsolidatedConfigurations.delete(resource);\n\t}\n\n\tcompareAndUpdateDefaultConfiguration(defaults: ConfigurationModel, keys: string[]): IConfigurationChange {\n\t\tconst overrides: [string, string[]][] = keys\n\t\t\t.filter(key => OVERRIDE_PROPERTY_PATTERN.test(key))\n\t\t\t.map(key => {\n\t\t\t\tconst overrideIdentifier = overrideIdentifierFromKey(key);\n\t\t\t\tconst fromKeys = this._defaultConfiguration.getKeysForOverrideIdentifier(overrideIdentifier);\n\t\t\t\tconst toKeys = defaults.getKeysForOverrideIdentifier(overrideIdentifier);\n\t\t\t\tconst keys = [\n\t\t\t\t\t...toKeys.filter(key => fromKeys.indexOf(key) === -1),\n\t\t\t\t\t...fromKeys.filter(key => toKeys.indexOf(key) === -1),\n\t\t\t\t\t...fromKeys.filter(key => !objects.equals(this._defaultConfiguration.override(overrideIdentifier).getValue(key), defaults.override(overrideIdentifier).getValue(key)))\n\t\t\t\t];\n\t\t\t\treturn [overrideIdentifier, keys];\n\t\t\t});\n\t\tthis.updateDefaultConfiguration(defaults);\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndUpdateLocalUserConfiguration(user: ConfigurationModel): IConfigurationChange {\n\t\tconst { added, updated, removed, overrides } = compare(this.localUserConfiguration, user);\n\t\tconst keys = [...added, ...updated, ...removed];\n\t\tif (keys.length) {\n\t\t\tthis.updateLocalUserConfiguration(user);\n\t\t}\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndUpdateRemoteUserConfiguration(user: ConfigurationModel): IConfigurationChange {\n\t\tconst { added, updated, removed, overrides } = compare(this.remoteUserConfiguration, user);\n\t\tlet keys = [...added, ...updated, ...removed];\n\t\tif (keys.length) {\n\t\t\tthis.updateRemoteUserConfiguration(user);\n\t\t}\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndUpdateWorkspaceConfiguration(workspaceConfiguration: ConfigurationModel): IConfigurationChange {\n\t\tconst { added, updated, removed, overrides } = compare(this.workspaceConfiguration, workspaceConfiguration);\n\t\tlet keys = [...added, ...updated, ...removed];\n\t\tif (keys.length) {\n\t\t\tthis.updateWorkspaceConfiguration(workspaceConfiguration);\n\t\t}\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndUpdateFolderConfiguration(resource: URI, folderConfiguration: ConfigurationModel): IConfigurationChange {\n\t\tconst currentFolderConfiguration = this.folderConfigurations.get(resource);\n\t\tconst { added, updated, removed, overrides } = compare(currentFolderConfiguration, folderConfiguration);\n\t\tlet keys = [...added, ...updated, ...removed];\n\t\tif (keys.length || !currentFolderConfiguration) {\n\t\t\tthis.updateFolderConfiguration(resource, folderConfiguration);\n\t\t}\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndDeleteFolderConfiguration(folder: URI): IConfigurationChange {\n\t\tconst folderConfig = this.folderConfigurations.get(folder);\n\t\tif (!folderConfig) {\n\t\t\tthrow new Error('Unknown folder');\n\t\t}\n\t\tthis.deleteFolderConfiguration(folder);\n\t\tconst { added, updated, removed, overrides } = compare(folderConfig, undefined);\n\t\treturn { keys: [...added, ...updated, ...removed], overrides };\n\t}\n\n\tget defaults(): ConfigurationModel {\n\t\treturn this._defaultConfiguration;\n\t}\n\n\tprivate _userConfiguration: ConfigurationModel | null = null;\n\tget userConfiguration(): ConfigurationModel {\n\t\tif (!this._userConfiguration) {\n\t\t\tthis._userConfiguration = this._remoteUserConfiguration.isEmpty() ? this._localUserConfiguration : this._localUserConfiguration.merge(this._remoteUserConfiguration);\n\t\t\tif (this._freeze) {\n\t\t\t\tthis._userConfiguration.freeze();\n\t\t\t}\n\t\t}\n\t\treturn this._userConfiguration;\n\t}\n\n\tget localUserConfiguration(): ConfigurationModel {\n\t\treturn this._localUserConfiguration;\n\t}\n\n\tget remoteUserConfiguration(): ConfigurationModel {\n\t\treturn this._remoteUserConfiguration;\n\t}\n\n\tget workspaceConfiguration(): ConfigurationModel {\n\t\treturn this._workspaceConfiguration;\n\t}\n\n\tprotected get folderConfigurations(): ResourceMap<ConfigurationModel> {\n\t\treturn this._folderConfigurations;\n\t}\n\n\tprivate getConsolidateConfigurationModel(overrides: IConfigurationOverrides, workspace: Workspace | undefined): ConfigurationModel {\n\t\tlet configurationModel = this.getConsolidatedConfigurationModelForResource(overrides, workspace);\n\t\treturn overrides.overrideIdentifier ? configurationModel.override(overrides.overrideIdentifier) : configurationModel;\n\t}\n\n\tprivate getConsolidatedConfigurationModelForResource({ resource }: IConfigurationOverrides, workspace: Workspace | undefined): ConfigurationModel {\n\t\tlet consolidateConfiguration = this.getWorkspaceConsolidatedConfiguration();\n\n\t\tif (workspace && resource) {\n\t\t\tconst root = workspace.getFolder(resource);\n\t\t\tif (root) {\n\t\t\t\tconsolidateConfiguration = this.getFolderConsolidatedConfiguration(root.uri) || consolidateConfiguration;\n\t\t\t}\n\t\t\tconst memoryConfigurationForResource = this._memoryConfigurationByResource.get(resource);\n\t\t\tif (memoryConfigurationForResource) {\n\t\t\t\tconsolidateConfiguration = consolidateConfiguration.merge(memoryConfigurationForResource);\n\t\t\t}\n\t\t}\n\n\t\treturn consolidateConfiguration;\n\t}\n\n\tprivate getWorkspaceConsolidatedConfiguration(): ConfigurationModel {\n\t\tif (!this._workspaceConsolidatedConfiguration) {\n\t\t\tthis._workspaceConsolidatedConfiguration = this._defaultConfiguration.merge(this.userConfiguration, this._workspaceConfiguration, this._memoryConfiguration);\n\t\t\tif (this._freeze) {\n\t\t\t\tthis._workspaceConfiguration = this._workspaceConfiguration.freeze();\n\t\t\t}\n\t\t}\n\t\treturn this._workspaceConsolidatedConfiguration;\n\t}\n\n\tprivate getFolderConsolidatedConfiguration(folder: URI): ConfigurationModel {\n\t\tlet folderConsolidatedConfiguration = this._foldersConsolidatedConfigurations.get(folder);\n\t\tif (!folderConsolidatedConfiguration) {\n\t\t\tconst workspaceConsolidateConfiguration = this.getWorkspaceConsolidatedConfiguration();\n\t\t\tconst folderConfiguration = this._folderConfigurations.get(folder);\n\t\t\tif (folderConfiguration) {\n\t\t\t\tfolderConsolidatedConfiguration = workspaceConsolidateConfiguration.merge(folderConfiguration);\n\t\t\t\tif (this._freeze) {\n\t\t\t\t\tfolderConsolidatedConfiguration = folderConsolidatedConfiguration.freeze();\n\t\t\t\t}\n\t\t\t\tthis._foldersConsolidatedConfigurations.set(folder, folderConsolidatedConfiguration);\n\t\t\t} else {\n\t\t\t\tfolderConsolidatedConfiguration = workspaceConsolidateConfiguration;\n\t\t\t}\n\t\t}\n\t\treturn folderConsolidatedConfiguration;\n\t}\n\n\tprivate getFolderConfigurationModelForResource(resource: URI | null | undefined, workspace: Workspace | undefined): ConfigurationModel | undefined {\n\t\tif (workspace && resource) {\n\t\t\tconst root = workspace.getFolder(resource);\n\t\t\tif (root) {\n\t\t\t\treturn this._folderConfigurations.get(root.uri);\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\ttoData(): IConfigurationData {\n\t\treturn {\n\t\t\tdefaults: {\n\t\t\t\tcontents: this._defaultConfiguration.contents,\n\t\t\t\toverrides: this._defaultConfiguration.overrides,\n\t\t\t\tkeys: this._defaultConfiguration.keys\n\t\t\t},\n\t\t\tuser: {\n\t\t\t\tcontents: this.userConfiguration.contents,\n\t\t\t\toverrides: this.userConfiguration.overrides,\n\t\t\t\tkeys: this.userConfiguration.keys\n\t\t\t},\n\t\t\tworkspace: {\n\t\t\t\tcontents: this._workspaceConfiguration.contents,\n\t\t\t\toverrides: this._workspaceConfiguration.overrides,\n\t\t\t\tkeys: this._workspaceConfiguration.keys\n\t\t\t},\n\t\t\tfolders: [...this._folderConfigurations.keys()].reduce<[UriComponents, IConfigurationModel][]>((result, folder) => {\n\t\t\t\tconst { contents, overrides, keys } = this._folderConfigurations.get(folder)!;\n\t\t\t\tresult.push([folder, { contents, overrides, keys }]);\n\t\t\t\treturn result;\n\t\t\t}, [])\n\t\t};\n\t}\n\n\tallKeys(): string[] {\n\t\tconst keys: Set<string> = new Set<string>();\n\t\tthis._defaultConfiguration.freeze().keys.forEach(key => keys.add(key));\n\t\tthis.userConfiguration.freeze().keys.forEach(key => keys.add(key));\n\t\tthis._workspaceConfiguration.freeze().keys.forEach(key => keys.add(key));\n\t\tthis._folderConfigurations.forEach(folderConfiguraiton => folderConfiguraiton.freeze().keys.forEach(key => keys.add(key)));\n\t\treturn [...keys.values()];\n\t}\n\n\tprotected getAllKeysForOverrideIdentifier(overrideIdentifier: string): string[] {\n\t\tconst keys: Set<string> = new Set<string>();\n\t\tthis._defaultConfiguration.getKeysForOverrideIdentifier(overrideIdentifier).forEach(key => keys.add(key));\n\t\tthis.userConfiguration.getKeysForOverrideIdentifier(overrideIdentifier).forEach(key => keys.add(key));\n\t\tthis._workspaceConfiguration.getKeysForOverrideIdentifier(overrideIdentifier).forEach(key => keys.add(key));\n\t\tthis._folderConfigurations.forEach(folderConfiguraiton => folderConfiguraiton.getKeysForOverrideIdentifier(overrideIdentifier).forEach(key => keys.add(key)));\n\t\treturn [...keys.values()];\n\t}\n\n\tstatic parse(data: IConfigurationData): Configuration {\n\t\tconst defaultConfiguration = this.parseConfigurationModel(data.defaults);\n\t\tconst userConfiguration = this.parseConfigurationModel(data.user);\n\t\tconst workspaceConfiguration = this.parseConfigurationModel(data.workspace);\n\t\tconst folders: ResourceMap<ConfigurationModel> = data.folders.reduce((result, value) => {\n\t\t\tresult.set(URI.revive(value[0]), this.parseConfigurationModel(value[1]));\n\t\t\treturn result;\n\t\t}, new ResourceMap<ConfigurationModel>());\n\t\treturn new Configuration(defaultConfiguration, userConfiguration, new ConfigurationModel(), workspaceConfiguration, folders, new ConfigurationModel(), new ResourceMap<ConfigurationModel>(), false);\n\t}\n\n\tprivate static parseConfigurationModel(model: IConfigurationModel): ConfigurationModel {\n\t\treturn new ConfigurationModel(model.contents, model.keys, model.overrides).freeze();\n\t}\n\n}\n\nexport function mergeChanges(...changes: IConfigurationChange[]): IConfigurationChange {\n\tif (changes.length === 0) {\n\t\treturn { keys: [], overrides: [] };\n\t}\n\tif (changes.length === 1) {\n\t\treturn changes[0];\n\t}\n\tconst keysSet = new Set<string>();\n\tconst overridesMap = new Map<string, Set<string>>();\n\tfor (const change of changes) {\n\t\tchange.keys.forEach(key => keysSet.add(key));\n\t\tchange.overrides.forEach(([identifier, keys]) => {\n\t\t\tconst result = getOrSet(overridesMap, identifier, new Set<string>());\n\t\t\tkeys.forEach(key => result.add(key));\n\t\t});\n\t}\n\tconst overrides: [string, string[]][] = [];\n\toverridesMap.forEach((keys, identifier) => overrides.push([identifier, [...keys.values()]]));\n\treturn { keys: [...keysSet.values()], overrides };\n}\n\nexport class ConfigurationChangeEvent implements IConfigurationChangeEvent {\n\n\tprivate readonly affectedKeysTree: any;\n\treadonly affectedKeys: string[];\n\tsource!: ConfigurationTarget;\n\tsourceConfig: any;\n\n\tconstructor(readonly change: IConfigurationChange, private readonly previous: { workspace?: Workspace, data: IConfigurationData } | undefined, private readonly currentConfiguraiton: Configuration, private readonly currentWorkspace?: Workspace) {\n\t\tconst keysSet = new Set<string>();\n\t\tchange.keys.forEach(key => keysSet.add(key));\n\t\tchange.overrides.forEach(([, keys]) => keys.forEach(key => keysSet.add(key)));\n\t\tthis.affectedKeys = [...keysSet.values()];\n\n\t\tconst configurationModel = new ConfigurationModel();\n\t\tthis.affectedKeys.forEach(key => configurationModel.setValue(key, {}));\n\t\tthis.affectedKeysTree = configurationModel.contents;\n\t}\n\n\tprivate _previousConfiguration: Configuration | undefined = undefined;\n\tget previousConfiguration(): Configuration | undefined {\n\t\tif (!this._previousConfiguration && this.previous) {\n\t\t\tthis._previousConfiguration = Configuration.parse(this.previous.data);\n\t\t}\n\t\treturn this._previousConfiguration;\n\t}\n\n\taffectsConfiguration(section: string, overrides?: IConfigurationOverrides): boolean {\n\t\tif (this.doesAffectedKeysTreeContains(this.affectedKeysTree, section)) {\n\t\t\tif (overrides) {\n\t\t\t\tconst value1 = this.previousConfiguration ? this.previousConfiguration.getValue(section, overrides, this.previous?.workspace) : undefined;\n\t\t\t\tconst value2 = this.currentConfiguraiton.getValue(section, overrides, this.currentWorkspace);\n\t\t\t\treturn !objects.equals(value1, value2);\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate doesAffectedKeysTreeContains(affectedKeysTree: any, section: string): boolean {\n\t\tlet requestedTree = toValuesTree({ [section]: true }, () => { });\n\n\t\tlet key;\n\t\twhile (typeof requestedTree === 'object' && (key = Object.keys(requestedTree)[0])) { // Only one key should present, since we added only one property\n\t\t\taffectedKeysTree = affectedKeysTree[key];\n\t\t\tif (!affectedKeysTree) {\n\t\t\t\treturn false; // Requested tree is not found\n\t\t\t}\n\t\t\trequestedTree = requestedTree[key];\n\t\t}\n\t\treturn true;\n\t}\n}\n\nexport class AllKeysConfigurationChangeEvent extends ConfigurationChangeEvent {\n\tconstructor(configuration: Configuration, workspace: Workspace, public source: ConfigurationTarget, public sourceConfig: any) {\n\t\tsuper({ keys: configuration.allKeys(), overrides: [] }, undefined, configuration, workspace);\n\t}\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IConfigurationRegistry, Extensions } from 'vs/platform/configuration/common/configurationRegistry';\nimport { IDisposable, Disposable } from 'vs/base/common/lifecycle';\nimport { IConfigurationService, IConfigurationChangeEvent, IConfigurationOverrides, ConfigurationTarget, isConfigurationOverrides, IConfigurationData, IConfigurationValue, IConfigurationChange } from 'vs/platform/configuration/common/configuration';\nimport { DefaultConfigurationModel, Configuration, ConfigurationModel, ConfigurationChangeEvent, UserSettings } from 'vs/platform/configuration/common/configurationModels';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { URI } from 'vs/base/common/uri';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { RunOnceScheduler } from 'vs/base/common/async';\n\nexport class ConfigurationService extends Disposable implements IConfigurationService, IDisposable {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate configuration: Configuration;\n\tprivate userConfiguration: UserSettings;\n\tprivate readonly reloadConfigurationScheduler: RunOnceScheduler;\n\n\tprivate readonly _onDidChangeConfiguration: Emitter<IConfigurationChangeEvent> = this._register(new Emitter<IConfigurationChangeEvent>());\n\treadonly onDidChangeConfiguration: Event<IConfigurationChangeEvent> = this._onDidChangeConfiguration.event;\n\n\tconstructor(\n\t\tprivate readonly settingsResource: URI,\n\t\tfileService: IFileService\n\t) {\n\t\tsuper();\n\t\tthis.userConfiguration = this._register(new UserSettings(this.settingsResource, undefined, fileService));\n\t\tthis.configuration = new Configuration(new DefaultConfigurationModel(), new ConfigurationModel());\n\n\t\tthis.reloadConfigurationScheduler = this._register(new RunOnceScheduler(() => this.reloadConfiguration(), 50));\n\t\tthis._register(Registry.as<IConfigurationRegistry>(Extensions.Configuration).onDidUpdateConfiguration(configurationProperties => this.onDidDefaultConfigurationChange(configurationProperties)));\n\t\tthis._register(this.userConfiguration.onDidChange(() => this.reloadConfigurationScheduler.schedule()));\n\t}\n\n\tasync initialize(): Promise<void> {\n\t\tconst userConfiguration = await this.userConfiguration.loadConfiguration();\n\t\tthis.configuration = new Configuration(new DefaultConfigurationModel(), userConfiguration);\n\t}\n\n\tgetConfigurationData(): IConfigurationData {\n\t\treturn this.configuration.toData();\n\t}\n\n\tgetValue<T>(): T;\n\tgetValue<T>(section: string): T;\n\tgetValue<T>(overrides: IConfigurationOverrides): T;\n\tgetValue<T>(section: string, overrides: IConfigurationOverrides): T;\n\tgetValue(arg1?: any, arg2?: any): any {\n\t\tconst section = typeof arg1 === 'string' ? arg1 : undefined;\n\t\tconst overrides = isConfigurationOverrides(arg1) ? arg1 : isConfigurationOverrides(arg2) ? arg2 : {};\n\t\treturn this.configuration.getValue(section, overrides, undefined);\n\t}\n\n\tupdateValue(key: string, value: any): Promise<void>;\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides): Promise<void>;\n\tupdateValue(key: string, value: any, target: ConfigurationTarget): Promise<void>;\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides, target: ConfigurationTarget): Promise<void>;\n\tupdateValue(key: string, value: any, arg3?: any, arg4?: any): Promise<void> {\n\t\treturn Promise.reject(new Error('not supported'));\n\t}\n\n\tinspect<T>(key: string): IConfigurationValue<T> {\n\t\treturn this.configuration.inspect<T>(key, {}, undefined);\n\t}\n\n\tkeys(): {\n\t\tdefault: string[];\n\t\tuser: string[];\n\t\tworkspace: string[];\n\t\tworkspaceFolder: string[];\n\t} {\n\t\treturn this.configuration.keys(undefined);\n\t}\n\n\tasync reloadConfiguration(): Promise<void> {\n\t\tconst configurationModel = await this.userConfiguration.loadConfiguration();\n\t\tthis.onDidChangeUserConfiguration(configurationModel);\n\t}\n\n\tprivate onDidChangeUserConfiguration(userConfigurationModel: ConfigurationModel): void {\n\t\tconst previous = this.configuration.toData();\n\t\tconst change = this.configuration.compareAndUpdateLocalUserConfiguration(userConfigurationModel);\n\t\tthis.trigger(change, previous, ConfigurationTarget.USER);\n\t}\n\n\tprivate onDidDefaultConfigurationChange(keys: string[]): void {\n\t\tconst previous = this.configuration.toData();\n\t\tconst change = this.configuration.compareAndUpdateDefaultConfiguration(new DefaultConfigurationModel(), keys);\n\t\tthis.trigger(change, previous, ConfigurationTarget.DEFAULT);\n\t}\n\n\tprivate trigger(configurationChange: IConfigurationChange, previous: IConfigurationData, source: ConfigurationTarget): void {\n\t\tconst event = new ConfigurationChangeEvent(configurationChange, { data: previous }, this.configuration);\n\t\tevent.source = source;\n\t\tevent.sourceConfig = this.getTargetConfiguration(source);\n\t\tthis._onDidChangeConfiguration.fire(event);\n\t}\n\n\tprivate getTargetConfiguration(target: ConfigurationTarget): any {\n\t\tswitch (target) {\n\t\t\tcase ConfigurationTarget.DEFAULT:\n\t\t\t\treturn this.configuration.defaults.contents;\n\t\t\tcase ConfigurationTarget.USER:\n\t\t\t\treturn this.configuration.localUserConfiguration.contents;\n\t\t}\n\t\treturn {};\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { Event } from 'vs/base/common/event';\n\nexport const IRemoteAuthorityResolverService = createDecorator<IRemoteAuthorityResolverService>('remoteAuthorityResolverService');\n\nexport interface ResolvedAuthority {\n\treadonly authority: string;\n\treadonly host: string;\n\treadonly port: number;\n\treadonly connectionToken: string | undefined;\n}\n\nexport interface ResolvedOptions {\n\treadonly extensionHostEnv?: { [key: string]: string | null };\n}\n\nexport interface TunnelDescription {\n\tremoteAddress: { port: number, host: string };\n\tlocalAddress: { port: number, host: string } | string;\n}\nexport interface TunnelInformation {\n\tenvironmentTunnels?: TunnelDescription[];\n}\n\nexport interface ResolverResult {\n\tauthority: ResolvedAuthority;\n\toptions?: ResolvedOptions;\n\ttunnelInformation?: TunnelInformation;\n}\n\nexport interface IRemoteConnectionData {\n\thost: string;\n\tport: number;\n\tconnectionToken: string | undefined;\n}\n\nexport enum RemoteAuthorityResolverErrorCode {\n\tUnknown = 'Unknown',\n\tNotAvailable = 'NotAvailable',\n\tTemporarilyNotAvailable = 'TemporarilyNotAvailable',\n\tNoResolverFound = 'NoResolverFound'\n}\n\nexport class RemoteAuthorityResolverError extends Error {\n\n\tpublic static isTemporarilyNotAvailable(err: any): boolean {\n\t\treturn (err instanceof RemoteAuthorityResolverError) && err._code === RemoteAuthorityResolverErrorCode.TemporarilyNotAvailable;\n\t}\n\n\tpublic static isNoResolverFound(err: any): err is RemoteAuthorityResolverError {\n\t\treturn (err instanceof RemoteAuthorityResolverError) && err._code === RemoteAuthorityResolverErrorCode.NoResolverFound;\n\t}\n\n\tpublic static isHandled(err: any): boolean {\n\t\treturn (err instanceof RemoteAuthorityResolverError) && err.isHandled;\n\t}\n\n\tpublic readonly _message: string | undefined;\n\tpublic readonly _code: RemoteAuthorityResolverErrorCode;\n\tpublic readonly _detail: any;\n\n\tpublic isHandled: boolean;\n\n\tconstructor(message?: string, code: RemoteAuthorityResolverErrorCode = RemoteAuthorityResolverErrorCode.Unknown, detail?: any) {\n\t\tsuper(message);\n\n\t\tthis._message = message;\n\t\tthis._code = code;\n\t\tthis._detail = detail;\n\n\t\tthis.isHandled = (code === RemoteAuthorityResolverErrorCode.NotAvailable) && detail === true;\n\n\t\t// workaround when extending builtin objects and when compiling to ES5, see:\n\t\t// https://github.com/microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n\t\tif (typeof (<any>Object).setPrototypeOf === 'function') {\n\t\t\t(<any>Object).setPrototypeOf(this, RemoteAuthorityResolverError.prototype);\n\t\t}\n\t}\n}\n\nexport interface IRemoteAuthorityResolverService {\n\n\treadonly _serviceBrand: undefined;\n\n\treadonly onDidChangeConnectionData: Event<void>;\n\n\tresolveAuthority(authority: string): Promise<ResolverResult>;\n\tgetConnectionData(authority: string): IRemoteConnectionData | null;\n\n\t_clearResolvedAuthority(authority: string): void;\n\t_setResolvedAuthority(resolvedAuthority: ResolvedAuthority, resolvedOptions?: ResolvedOptions): void;\n\t_setResolvedAuthorityError(authority: string, err: any): void;\n\t_setAuthorityConnectionToken(authority: string, connectionToken: string): void;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { Schemas } from 'vs/base/common/network';\n\nexport function getRemoteAuthority(uri: URI): string | undefined {\n\treturn uri.scheme === Schemas.vscodeRemote ? uri.authority : undefined;\n}\n\nexport function getRemoteName(authority: string): string;\nexport function getRemoteName(authority: undefined): undefined;\nexport function getRemoteName(authority: string | undefined): string | undefined;\nexport function getRemoteName(authority: string | undefined): string | undefined {\n\tif (!authority) {\n\t\treturn undefined;\n\t}\n\tconst pos = authority.indexOf('+');\n\tif (pos < 0) {\n\t\t// funky? bad authority?\n\t\treturn authority;\n\t}\n\treturn authority.substr(0, pos);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IConfigurationRegistry, Extensions } from 'vs/platform/configuration/common/configurationRegistry';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { streamToBuffer } from 'vs/base/common/buffer';\nimport { IRequestOptions, IRequestContext } from 'vs/base/parts/request/common/request';\n\nexport const IRequestService = createDecorator<IRequestService>('requestService');\n\nexport interface IRequestService {\n\treadonly _serviceBrand: undefined;\n\n\trequest(options: IRequestOptions, token: CancellationToken): Promise<IRequestContext>;\n\n\tresolveProxy(url: string): Promise<string | undefined>;\n}\n\nexport function isSuccess(context: IRequestContext): boolean {\n\treturn (context.res.statusCode && context.res.statusCode >= 200 && context.res.statusCode < 300) || context.res.statusCode === 1223;\n}\n\nfunction hasNoContent(context: IRequestContext): boolean {\n\treturn context.res.statusCode === 204;\n}\n\nexport async function asText(context: IRequestContext): Promise<string | null> {\n\tif (!isSuccess(context)) {\n\t\tthrow new Error('Server returned ' + context.res.statusCode);\n\t}\n\tif (hasNoContent(context)) {\n\t\treturn null;\n\t}\n\tconst buffer = await streamToBuffer(context.stream);\n\treturn buffer.toString();\n}\n\nexport async function asJson<T = {}>(context: IRequestContext): Promise<T | null> {\n\tif (!isSuccess(context)) {\n\t\tthrow new Error('Server returned ' + context.res.statusCode);\n\t}\n\tif (hasNoContent(context)) {\n\t\treturn null;\n\t}\n\tconst buffer = await streamToBuffer(context.stream);\n\tconst str = buffer.toString();\n\ttry {\n\t\treturn JSON.parse(str);\n\t} catch (err) {\n\t\terr.message += ':\\n' + str;\n\t\tthrow err;\n\t}\n}\n\n\nexport interface IHTTPConfiguration {\n\thttp?: {\n\t\tproxy?: string;\n\t\tproxyStrictSSL?: boolean;\n\t\tproxyAuthorization?: string;\n\t};\n}\n\nRegistry.as<IConfigurationRegistry>(Extensions.Configuration)\n\t.registerConfiguration({\n\t\tid: 'http',\n\t\torder: 15,\n\t\ttitle: localize('httpConfigurationTitle', \"HTTP\"),\n\t\ttype: 'object',\n\t\tproperties: {\n\t\t\t'http.proxy': {\n\t\t\t\ttype: 'string',\n\t\t\t\tpattern: '^https?://([^:]*(:[^@]*)?@)?([^:]+|\\\\[[:0-9a-fA-F]+\\\\])(:\\\\d+)?/?$|^$',\n\t\t\t\tmarkdownDescription: localize('proxy', \"The proxy setting to use. If not set, will be inherited from the `http_proxy` and `https_proxy` environment variables.\")\n\t\t\t},\n\t\t\t'http.proxyStrictSSL': {\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: true,\n\t\t\t\tdescription: localize('strictSSL', \"Controls whether the proxy server certificate should be verified against the list of supplied CAs.\")\n\t\t\t},\n\t\t\t'http.proxyAuthorization': {\n\t\t\t\ttype: ['null', 'string'],\n\t\t\t\tdefault: null,\n\t\t\t\tmarkdownDescription: localize('proxyAuthorization', \"The value to send as the `Proxy-Authorization` header for every network request.\")\n\t\t\t},\n\t\t\t'http.proxySupport': {\n\t\t\t\ttype: 'string',\n\t\t\t\tenum: ['off', 'on', 'override'],\n\t\t\t\tenumDescriptions: [\n\t\t\t\t\tlocalize('proxySupportOff', \"Disable proxy support for extensions.\"),\n\t\t\t\t\tlocalize('proxySupportOn', \"Enable proxy support for extensions.\"),\n\t\t\t\t\tlocalize('proxySupportOverride', \"Enable proxy support for extensions, override request options.\"),\n\t\t\t\t],\n\t\t\t\tdefault: 'override',\n\t\t\t\tdescription: localize('proxySupport', \"Use the proxy support for extensions.\")\n\t\t\t},\n\t\t\t'http.systemCertificates': {\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: true,\n\t\t\t\tdescription: localize('systemCertificates', \"Controls whether CA certificates should be loaded from the OS. (On Windows and macOS a reload of the window is required after turning this off.)\")\n\t\t\t}\n\t\t}\n\t});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { Event } from 'vs/base/common/event';\nimport { IRequestService } from 'vs/platform/request/common/request';\nimport { IRequestOptions, IRequestContext, IHeaders } from 'vs/base/parts/request/common/request';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { VSBuffer, bufferToStream, streamToBuffer } from 'vs/base/common/buffer';\n\ntype RequestResponse = [\n\t{\n\t\theaders: IHeaders;\n\t\tstatusCode?: number;\n\t},\n\tVSBuffer\n];\n\nexport class RequestChannel implements IServerChannel {\n\n\tconstructor(private readonly service: IRequestService) { }\n\n\tlisten(context: any, event: string): Event<any> {\n\t\tthrow new Error('Invalid listen');\n\t}\n\n\tcall(context: any, command: string, args?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'request': return this.service.request(args[0], CancellationToken.None)\n\t\t\t\t.then(async ({ res, stream }) => {\n\t\t\t\t\tconst buffer = await streamToBuffer(stream);\n\t\t\t\t\treturn <RequestResponse>[{ statusCode: res.statusCode, headers: res.headers }, buffer];\n\t\t\t\t});\n\t\t}\n\t\tthrow new Error('Invalid call');\n\t}\n}\n\nexport class RequestChannelClient {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(private readonly channel: IChannel) { }\n\n\tasync request(options: IRequestOptions, token: CancellationToken): Promise<IRequestContext> {\n\t\treturn RequestChannelClient.request(this.channel, options, token);\n\t}\n\n\tstatic async request(channel: IChannel, options: IRequestOptions, token: CancellationToken): Promise<IRequestContext> {\n\t\tconst [res, buffer] = await channel.call<RequestResponse>('request', [options]);\n\t\treturn { res, stream: bufferToStream(buffer) };\n\t}\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Url, parse as parseUrl } from 'url';\nimport { isBoolean } from 'vs/base/common/types';\n\nexport type Agent = any;\n\nfunction getSystemProxyURI(requestURL: Url): string | null {\n\tif (requestURL.protocol === 'http:') {\n\t\treturn process.env.HTTP_PROXY || process.env.http_proxy || null;\n\t} else if (requestURL.protocol === 'https:') {\n\t\treturn process.env.HTTPS_PROXY || process.env.https_proxy || process.env.HTTP_PROXY || process.env.http_proxy || null;\n\t}\n\n\treturn null;\n}\n\nexport interface IOptions {\n\tproxyUrl?: string;\n\tstrictSSL?: boolean;\n}\n\nexport async function getProxyAgent(rawRequestURL: string, options: IOptions = {}): Promise<Agent> {\n\tconst requestURL = parseUrl(rawRequestURL);\n\tconst proxyURL = options.proxyUrl || getSystemProxyURI(requestURL);\n\n\tif (!proxyURL) {\n\t\treturn null;\n\t}\n\n\tconst proxyEndpoint = parseUrl(proxyURL);\n\n\tif (!/^https?:$/.test(proxyEndpoint.protocol || '')) {\n\t\treturn null;\n\t}\n\n\tconst opts = {\n\t\thost: proxyEndpoint.hostname || '',\n\t\tport: proxyEndpoint.port || (proxyEndpoint.protocol === 'https' ? '443' : '80'),\n\t\tauth: proxyEndpoint.auth,\n\t\trejectUnauthorized: isBoolean(options.strictSSL) ? options.strictSSL : true,\n\t};\n\n\treturn requestURL.protocol === 'http:'\n\t\t? new (await import('http-proxy-agent'))(opts as any as Url)\n\t\t: new (await import('https-proxy-agent'))(opts);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { StorageScope } from 'vs/platform/storage/common/storage';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { isUUID, generateUuid } from 'vs/base/common/uuid';\nimport { VSBuffer } from 'vs/base/common/buffer';\n\nexport async function getServiceMachineId(environmentService: IEnvironmentService, fileService: IFileService, storageService: {\n\tget: (key: string, scope: StorageScope, fallbackValue?: string | undefined) => string | undefined,\n\tstore: (key: string, value: string, scope: StorageScope) => void\n} | undefined): Promise<string> {\n\tlet uuid: string | null = storageService ? storageService.get('storage.serviceMachineId', StorageScope.GLOBAL) || null : null;\n\tif (uuid) {\n\t\treturn uuid;\n\t}\n\ttry {\n\t\tconst contents = await fileService.readFile(environmentService.serviceMachineIdResource);\n\t\tconst value = contents.value.toString();\n\t\tuuid = isUUID(value) ? value : null;\n\t} catch (e) {\n\t\tuuid = null;\n\t}\n\n\tif (!uuid) {\n\t\tuuid = generateUuid();\n\t\ttry {\n\t\t\tawait fileService.writeFile(environmentService.serviceMachineIdResource, VSBuffer.fromString(uuid));\n\t\t} catch (error) {\n\t\t\t//noop\n\t\t}\n\t}\n\tif (storageService) {\n\t\tstorageService.store('storage.serviceMachineId', uuid, StorageScope.GLOBAL);\n\t}\n\treturn uuid;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const IStateService = createDecorator<IStateService>('stateService');\n\nexport interface IStateService {\n\treadonly _serviceBrand: undefined;\n\n\tgetItem<T>(key: string, defaultValue: T): T;\n\tgetItem<T>(key: string, defaultValue?: T): T | undefined;\n\tsetItem(key: string, data?: object | string | number | boolean | undefined | null): void;\n\tremoveItem(key: string): void;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as path from 'vs/base/common/path';\nimport * as fs from 'fs';\nimport { INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { writeFileSync, readFile } from 'vs/base/node/pfs';\nimport { isUndefined, isUndefinedOrNull } from 'vs/base/common/types';\nimport { IStateService } from 'vs/platform/state/node/state';\nimport { ILogService } from 'vs/platform/log/common/log';\n\ntype StorageDatabase = { [key: string]: any; };\n\nexport class FileStorage {\n\n\tprivate _database: StorageDatabase | null = null;\n\tprivate lastFlushedSerializedDatabase: string | null = null;\n\n\tconstructor(private dbPath: string, private onError: (error: Error) => void) { }\n\n\tprivate get database(): StorageDatabase {\n\t\tif (!this._database) {\n\t\t\tthis._database = this.loadSync();\n\t\t}\n\n\t\treturn this._database;\n\t}\n\n\tasync init(): Promise<void> {\n\t\tif (this._database) {\n\t\t\treturn; // return if database was already loaded\n\t\t}\n\n\t\tconst database = await this.loadAsync();\n\n\t\tif (this._database) {\n\t\t\treturn; // return if database was already loaded\n\t\t}\n\n\t\tthis._database = database;\n\t}\n\n\tprivate loadSync(): StorageDatabase {\n\t\ttry {\n\t\t\tthis.lastFlushedSerializedDatabase = fs.readFileSync(this.dbPath).toString();\n\n\t\t\treturn JSON.parse(this.lastFlushedSerializedDatabase);\n\t\t} catch (error) {\n\t\t\tif (error.code !== 'ENOENT') {\n\t\t\t\tthis.onError(error);\n\t\t\t}\n\n\t\t\treturn {};\n\t\t}\n\t}\n\n\tprivate async loadAsync(): Promise<StorageDatabase> {\n\t\ttry {\n\t\t\tthis.lastFlushedSerializedDatabase = (await readFile(this.dbPath)).toString();\n\n\t\t\treturn JSON.parse(this.lastFlushedSerializedDatabase);\n\t\t} catch (error) {\n\t\t\tif (error.code !== 'ENOENT') {\n\t\t\t\tthis.onError(error);\n\t\t\t}\n\n\t\t\treturn {};\n\t\t}\n\t}\n\n\tgetItem<T>(key: string, defaultValue: T): T;\n\tgetItem<T>(key: string, defaultValue?: T): T | undefined;\n\tgetItem<T>(key: string, defaultValue?: T): T | undefined {\n\t\tconst res = this.database[key];\n\t\tif (isUndefinedOrNull(res)) {\n\t\t\treturn defaultValue;\n\t\t}\n\n\t\treturn res;\n\t}\n\n\tsetItem(key: string, data?: object | string | number | boolean | undefined | null): void {\n\n\t\t// Remove an item when it is undefined or null\n\t\tif (isUndefinedOrNull(data)) {\n\t\t\treturn this.removeItem(key);\n\t\t}\n\n\t\t// Shortcut for primitives that did not change\n\t\tif (typeof data === 'string' || typeof data === 'number' || typeof data === 'boolean') {\n\t\t\tif (this.database[key] === data) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis.database[key] = data;\n\t\tthis.saveSync();\n\t}\n\n\tremoveItem(key: string): void {\n\n\t\t// Only update if the key is actually present (not undefined)\n\t\tif (!isUndefined(this.database[key])) {\n\t\t\tthis.database[key] = undefined;\n\t\t\tthis.saveSync();\n\t\t}\n\t}\n\n\tprivate saveSync(): void {\n\t\tconst serializedDatabase = JSON.stringify(this.database, null, 4);\n\t\tif (serializedDatabase === this.lastFlushedSerializedDatabase) {\n\t\t\treturn; // return early if the database has not changed\n\t\t}\n\n\t\ttry {\n\t\t\twriteFileSync(this.dbPath, serializedDatabase); // permission issue can happen here\n\t\t\tthis.lastFlushedSerializedDatabase = serializedDatabase;\n\t\t} catch (error) {\n\t\t\tthis.onError(error);\n\t\t}\n\t}\n}\n\nexport class StateService implements IStateService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate static readonly STATE_FILE = 'storage.json';\n\n\tprivate fileStorage: FileStorage;\n\n\tconstructor(\n\t\t@INativeEnvironmentService environmentService: INativeEnvironmentService,\n\t\t@ILogService logService: ILogService\n\t) {\n\t\tthis.fileStorage = new FileStorage(path.join(environmentService.userDataPath, StateService.STATE_FILE), error => logService.error(error));\n\t}\n\n\tinit(): Promise<void> {\n\t\treturn this.fileStorage.init();\n\t}\n\n\tgetItem<T>(key: string, defaultValue: T): T;\n\tgetItem<T>(key: string, defaultValue: T | undefined): T | undefined;\n\tgetItem<T>(key: string, defaultValue?: T): T | undefined {\n\t\treturn this.fileStorage.getItem(key, defaultValue);\n\t}\n\n\tsetItem(key: string, data?: object | string | number | boolean | undefined | null): void {\n\t\tthis.fileStorage.setItem(key, data);\n\t}\n\n\tremoveItem(key: string): void {\n\t\tthis.fileStorage.removeItem(key);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { isUndefinedOrNull } from 'vs/base/common/types';\nimport { IWorkspaceInitializationPayload } from 'vs/platform/workspaces/common/workspaces';\n\nexport const IS_NEW_KEY = '__$__isNewStorageMarker';\n\nexport const IStorageService = createDecorator<IStorageService>('storageService');\n\nexport enum WillSaveStateReason {\n\tNONE = 0,\n\tSHUTDOWN = 1\n}\n\nexport interface IWillSaveStateEvent {\n\treason: WillSaveStateReason;\n}\n\nexport interface IStorageService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Emitted whenever data is updated or deleted.\n\t */\n\treadonly onDidChangeStorage: Event<IWorkspaceStorageChangeEvent>;\n\n\t/**\n\t * Emitted when the storage is about to persist. This is the right time\n\t * to persist data to ensure it is stored before the application shuts\n\t * down.\n\t *\n\t * The will save state event allows to optionally ask for the reason of\n\t * saving the state, e.g. to find out if the state is saved due to a\n\t * shutdown.\n\t *\n\t * Note: this event may be fired many times, not only on shutdown to prevent\n\t * loss of state in situations where the shutdown is not sufficient to\n\t * persist the data properly.\n\t */\n\treadonly onWillSaveState: Event<IWillSaveStateEvent>;\n\n\t/**\n\t * Retrieve an element stored with the given key from storage. Use\n\t * the provided defaultValue if the element is null or undefined.\n\t *\n\t * The scope argument allows to define the scope of the storage\n\t * operation to either the current workspace only or all workspaces.\n\t */\n\tget(key: string, scope: StorageScope, fallbackValue: string): string;\n\tget(key: string, scope: StorageScope, fallbackValue?: string): string | undefined;\n\n\t/**\n\t * Retrieve an element stored with the given key from storage. Use\n\t * the provided defaultValue if the element is null or undefined. The element\n\t * will be converted to a boolean.\n\t *\n\t * The scope argument allows to define the scope of the storage\n\t * operation to either the current workspace only or all workspaces.\n\t */\n\tgetBoolean(key: string, scope: StorageScope, fallbackValue: boolean): boolean;\n\tgetBoolean(key: string, scope: StorageScope, fallbackValue?: boolean): boolean | undefined;\n\n\t/**\n\t * Retrieve an element stored with the given key from storage. Use\n\t * the provided defaultValue if the element is null or undefined. The element\n\t * will be converted to a number using parseInt with a base of 10.\n\t *\n\t * The scope argument allows to define the scope of the storage\n\t * operation to either the current workspace only or all workspaces.\n\t */\n\tgetNumber(key: string, scope: StorageScope, fallbackValue: number): number;\n\tgetNumber(key: string, scope: StorageScope, fallbackValue?: number): number | undefined;\n\n\t/**\n\t * Store a value under the given key to storage. The value will be converted to a string.\n\t * Storing either undefined or null will remove the entry under the key.\n\t *\n\t * The scope argument allows to define the scope of the storage\n\t * operation to either the current workspace only or all workspaces.\n\t */\n\tstore(key: string, value: string | boolean | number | undefined | null, scope: StorageScope): Promise<void> | void;\n\n\t/**\n\t * Delete an element stored under the provided key from storage.\n\t *\n\t * The scope argument allows to define the scope of the storage\n\t * operation to either the current workspace only or all workspaces.\n\t */\n\tremove(key: string, scope: StorageScope): void;\n\n\t/**\n\t * Log the contents of the storage to the console.\n\t */\n\tlogStorage(): void;\n\n\t/**\n\t * Migrate the storage contents to another workspace.\n\t */\n\tmigrate(toWorkspace: IWorkspaceInitializationPayload): Promise<void>;\n\n\t/**\n\t * Whether the storage for the given scope was created during this session or\n\t * existed before.\n\t *\n\t */\n\tisNew(scope: StorageScope): boolean;\n\n\t/**\n\t * Allows to flush state, e.g. in cases where a shutdown is\n\t * imminent. This will send out the onWillSaveState to ask\n\t * everyone for latest state.\n\t */\n\tflush(): void;\n}\n\nexport const enum StorageScope {\n\n\t/**\n\t * The stored data will be scoped to all workspaces.\n\t */\n\tGLOBAL,\n\n\t/**\n\t * The stored data will be scoped to the current workspace.\n\t */\n\tWORKSPACE\n}\n\nexport interface IWorkspaceStorageChangeEvent {\n\treadonly key: string;\n\treadonly scope: StorageScope;\n}\n\nexport class InMemoryStorageService extends Disposable implements IStorageService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _onDidChangeStorage = this._register(new Emitter<IWorkspaceStorageChangeEvent>());\n\treadonly onDidChangeStorage = this._onDidChangeStorage.event;\n\n\tprotected readonly _onWillSaveState = this._register(new Emitter<IWillSaveStateEvent>());\n\treadonly onWillSaveState = this._onWillSaveState.event;\n\n\tprivate readonly globalCache = new Map<string, string>();\n\tprivate readonly workspaceCache = new Map<string, string>();\n\n\tprivate getCache(scope: StorageScope): Map<string, string> {\n\t\treturn scope === StorageScope.GLOBAL ? this.globalCache : this.workspaceCache;\n\t}\n\n\tget(key: string, scope: StorageScope, fallbackValue: string): string;\n\tget(key: string, scope: StorageScope, fallbackValue?: string): string | undefined {\n\t\tconst value = this.getCache(scope).get(key);\n\n\t\tif (isUndefinedOrNull(value)) {\n\t\t\treturn fallbackValue;\n\t\t}\n\n\t\treturn value;\n\t}\n\n\tgetBoolean(key: string, scope: StorageScope, fallbackValue: boolean): boolean;\n\tgetBoolean(key: string, scope: StorageScope, fallbackValue?: boolean): boolean | undefined {\n\t\tconst value = this.getCache(scope).get(key);\n\n\t\tif (isUndefinedOrNull(value)) {\n\t\t\treturn fallbackValue;\n\t\t}\n\n\t\treturn value === 'true';\n\t}\n\n\tgetNumber(key: string, scope: StorageScope, fallbackValue: number): number;\n\tgetNumber(key: string, scope: StorageScope, fallbackValue?: number): number | undefined {\n\t\tconst value = this.getCache(scope).get(key);\n\n\t\tif (isUndefinedOrNull(value)) {\n\t\t\treturn fallbackValue;\n\t\t}\n\n\t\treturn parseInt(value, 10);\n\t}\n\n\tstore(key: string, value: string | boolean | number | undefined | null, scope: StorageScope): Promise<void> {\n\n\t\t// We remove the key for undefined/null values\n\t\tif (isUndefinedOrNull(value)) {\n\t\t\treturn this.remove(key, scope);\n\t\t}\n\n\t\t// Otherwise, convert to String and store\n\t\tconst valueStr = String(value);\n\n\t\t// Return early if value already set\n\t\tconst currentValue = this.getCache(scope).get(key);\n\t\tif (currentValue === valueStr) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\t// Update in cache\n\t\tthis.getCache(scope).set(key, valueStr);\n\n\t\t// Events\n\t\tthis._onDidChangeStorage.fire({ scope, key });\n\n\t\treturn Promise.resolve();\n\t}\n\n\tremove(key: string, scope: StorageScope): Promise<void> {\n\t\tconst wasDeleted = this.getCache(scope).delete(key);\n\t\tif (!wasDeleted) {\n\t\t\treturn Promise.resolve(); // Return early if value already deleted\n\t\t}\n\n\t\t// Events\n\t\tthis._onDidChangeStorage.fire({ scope, key });\n\n\t\treturn Promise.resolve();\n\t}\n\n\tlogStorage(): void {\n\t\tlogStorage(this.globalCache, this.workspaceCache, 'inMemory', 'inMemory');\n\t}\n\n\tasync migrate(toWorkspace: IWorkspaceInitializationPayload): Promise<void> {\n\t\t// not supported\n\t}\n\n\tflush(): void {\n\t\tthis._onWillSaveState.fire({ reason: WillSaveStateReason.NONE });\n\t}\n\n\tisNew(): boolean {\n\t\treturn true; // always new when in-memory\n\t}\n\n\tasync close(): Promise<void> { }\n}\n\nexport async function logStorage(global: Map<string, string>, workspace: Map<string, string>, globalPath: string, workspacePath: string): Promise<void> {\n\tconst safeParse = (value: string) => {\n\t\ttry {\n\t\t\treturn JSON.parse(value);\n\t\t} catch (error) {\n\t\t\treturn value;\n\t\t}\n\t};\n\n\tconst globalItems = new Map<string, string>();\n\tconst globalItemsParsed = new Map<string, string>();\n\tglobal.forEach((value, key) => {\n\t\tglobalItems.set(key, value);\n\t\tglobalItemsParsed.set(key, safeParse(value));\n\t});\n\n\tconst workspaceItems = new Map<string, string>();\n\tconst workspaceItemsParsed = new Map<string, string>();\n\tworkspace.forEach((value, key) => {\n\t\tworkspaceItems.set(key, value);\n\t\tworkspaceItemsParsed.set(key, safeParse(value));\n\t});\n\n\tconsole.group(`Storage: Global (path: ${globalPath})`);\n\tlet globalValues: { key: string, value: string }[] = [];\n\tglobalItems.forEach((value, key) => {\n\t\tglobalValues.push({ key, value });\n\t});\n\tconsole.table(globalValues);\n\tconsole.groupEnd();\n\n\tconsole.log(globalItemsParsed);\n\n\tconsole.group(`Storage: Workspace (path: ${workspacePath})`);\n\tlet workspaceValues: { key: string, value: string }[] = [];\n\tworkspaceItems.forEach((value, key) => {\n\t\tworkspaceValues.push({ key, value });\n\t});\n\tconsole.table(workspaceValues);\n\tconsole.groupEnd();\n\n\tconsole.log(workspaceItemsParsed);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { binarySearch } from 'vs/base/common/arrays';\nimport * as Errors from 'vs/base/common/errors';\nimport { toDisposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { safeStringify } from 'vs/base/common/objects';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\n\ntype ErrorEventFragment = {\n\tcallstack: { classification: 'CallstackOrException', purpose: 'PerformanceAndHealth' };\n\tmsg?: { classification: 'CallstackOrException', purpose: 'PerformanceAndHealth' };\n\tfile?: { classification: 'CallstackOrException', purpose: 'PerformanceAndHealth' };\n\tline?: { classification: 'CallstackOrException', purpose: 'PerformanceAndHealth', isMeasurement: true };\n\tcolumn?: { classification: 'CallstackOrException', purpose: 'PerformanceAndHealth', isMeasurement: true };\n\tuncaught_error_name?: { classification: 'CallstackOrException', purpose: 'PerformanceAndHealth' };\n\tuncaught_error_msg?: { classification: 'CallstackOrException', purpose: 'PerformanceAndHealth' };\n\tcount?: { classification: 'CallstackOrException', purpose: 'PerformanceAndHealth', isMeasurement: true };\n};\nexport interface ErrorEvent {\n\tcallstack: string;\n\tmsg?: string;\n\tfile?: string;\n\tline?: number;\n\tcolumn?: number;\n\tuncaught_error_name?: string;\n\tuncaught_error_msg?: string;\n\tcount?: number;\n}\n\nexport namespace ErrorEvent {\n\texport function compare(a: ErrorEvent, b: ErrorEvent) {\n\t\tif (a.callstack < b.callstack) {\n\t\t\treturn -1;\n\t\t} else if (a.callstack > b.callstack) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t}\n}\n\nexport default abstract class BaseErrorTelemetry {\n\n\tpublic static ERROR_FLUSH_TIMEOUT: number = 5 * 1000;\n\n\tprivate _telemetryService: ITelemetryService;\n\tprivate _flushDelay: number;\n\tprivate _flushHandle: any = -1;\n\tprivate _buffer: ErrorEvent[] = [];\n\tprotected readonly _disposables = new DisposableStore();\n\n\tconstructor(telemetryService: ITelemetryService, flushDelay = BaseErrorTelemetry.ERROR_FLUSH_TIMEOUT) {\n\t\tthis._telemetryService = telemetryService;\n\t\tthis._flushDelay = flushDelay;\n\n\t\t// (1) check for unexpected but handled errors\n\t\tconst unbind = Errors.errorHandler.addListener((err) => this._onErrorEvent(err));\n\t\tthis._disposables.add(toDisposable(unbind));\n\n\t\t// (2) install implementation-specific error listeners\n\t\tthis.installErrorListeners();\n\t}\n\n\tdispose() {\n\t\tclearTimeout(this._flushHandle);\n\t\tthis._flushBuffer();\n\t\tthis._disposables.dispose();\n\t}\n\n\tprotected installErrorListeners(): void {\n\t\t// to override\n\t}\n\n\tprivate _onErrorEvent(err: any): void {\n\n\t\tif (!err) {\n\t\t\treturn;\n\t\t}\n\n\t\t// unwrap nested errors from loader\n\t\tif (err.detail && err.detail.stack) {\n\t\t\terr = err.detail;\n\t\t}\n\n\t\t// work around behavior in workerServer.ts that breaks up Error.stack\n\t\tlet callstack = Array.isArray(err.stack) ? err.stack.join('\\n') : err.stack;\n\t\tlet msg = err.message ? err.message : safeStringify(err);\n\n\t\t// errors without a stack are not useful telemetry\n\t\tif (!callstack) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._enqueue({ msg, callstack });\n\t}\n\n\tprotected _enqueue(e: ErrorEvent): void {\n\n\t\tconst idx = binarySearch(this._buffer, e, ErrorEvent.compare);\n\t\tif (idx < 0) {\n\t\t\te.count = 1;\n\t\t\tthis._buffer.splice(~idx, 0, e);\n\t\t} else {\n\t\t\tif (!this._buffer[idx].count) {\n\t\t\t\tthis._buffer[idx].count = 0;\n\t\t\t}\n\t\t\tthis._buffer[idx].count! += 1;\n\t\t}\n\n\t\tif (this._flushHandle === -1) {\n\t\t\tthis._flushHandle = setTimeout(() => {\n\t\t\t\tthis._flushBuffer();\n\t\t\t\tthis._flushHandle = -1;\n\t\t\t}, this._flushDelay);\n\t\t}\n\t}\n\n\tprivate _flushBuffer(): void {\n\t\tfor (let error of this._buffer) {\n\t\t\ttype UnhandledErrorClassification = {} & ErrorEventFragment;\n\t\t\tthis._telemetryService.publicLogError2<ErrorEvent, UnhandledErrorClassification>('UnhandledError', error);\n\t\t}\n\t\tthis._buffer.length = 0;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { toDisposable } from 'vs/base/common/lifecycle';\nimport { globals } from 'vs/base/common/platform';\nimport BaseErrorTelemetry, { ErrorEvent } from '../common/errorTelemetry';\n\nexport default class ErrorTelemetry extends BaseErrorTelemetry {\n\tprotected installErrorListeners(): void {\n\t\tlet oldOnError: Function;\n\t\tlet that = this;\n\t\tif (typeof globals.onerror === 'function') {\n\t\t\toldOnError = globals.onerror;\n\t\t}\n\t\tglobals.onerror = function (message: string, filename: string, line: number, column?: number, e?: any) {\n\t\t\tthat._onUncaughtError(message, filename, line, column, e);\n\t\t\tif (oldOnError) {\n\t\t\t\toldOnError.apply(this, arguments);\n\t\t\t}\n\t\t};\n\t\tthis._disposables.add(toDisposable(() => {\n\t\t\tif (oldOnError) {\n\t\t\t\tglobals.onerror = oldOnError;\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate _onUncaughtError(msg: string, file: string, line: number, column?: number, err?: any): void {\n\t\tlet data: ErrorEvent = {\n\t\t\tcallstack: msg,\n\t\t\tmsg,\n\t\t\tfile,\n\t\t\tline,\n\t\t\tcolumn\n\t\t};\n\n\t\tif (err) {\n\t\t\tlet { name, message, stack } = err;\n\t\t\tdata.uncaught_error_name = name;\n\t\t\tif (message) {\n\t\t\t\tdata.uncaught_error_msg = message;\n\t\t\t}\n\t\t\tif (stack) {\n\t\t\t\tdata.callstack = Array.isArray(err.stack)\n\t\t\t\t\t? err.stack = err.stack.join('\\n')\n\t\t\t\t\t: err.stack;\n\t\t\t}\n\t\t}\n\n\t\tthis._enqueue(data);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { ClassifiedEvent, StrictPropertyCheck, GDPRClassification } from 'vs/platform/telemetry/common/gdprTypings';\n\nexport const ITelemetryService = createDecorator<ITelemetryService>('telemetryService');\n\nexport interface ITelemetryInfo {\n\tsessionId: string;\n\tmachineId: string;\n\tinstanceId: string;\n\tmsftInternal?: boolean;\n}\n\nexport interface ITelemetryData {\n\tfrom?: string;\n\ttarget?: string;\n\t[key: string]: any;\n}\n\nexport interface ITelemetryService {\n\n\t/**\n\t * Whether error telemetry will get sent. If false, `publicLogError` will no-op.\n\t */\n\treadonly sendErrorTelemetry: boolean;\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Sends a telemetry event that has been privacy approved.\n\t * Do not call this unless you have been given approval.\n\t */\n\tpublicLog(eventName: string, data?: ITelemetryData, anonymizeFilePaths?: boolean): Promise<void>;\n\n\tpublicLog2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>, anonymizeFilePaths?: boolean): Promise<void>;\n\n\tpublicLogError(errorEventName: string, data?: ITelemetryData): Promise<void>;\n\n\tpublicLogError2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>): Promise<void>;\n\n\tsetEnabled(value: boolean): void;\n\n\tgetTelemetryInfo(): Promise<ITelemetryInfo>;\n\n\tsetExperimentProperty(name: string, value: string): void;\n\n\tisOptedIn: boolean;\n}\n\n// Keys\nexport const instanceStorageKey = 'telemetry.instanceId';\nexport const currentSessionDateStorageKey = 'telemetry.currentSessionDate';\nexport const firstSessionDateStorageKey = 'telemetry.firstSessionDate';\nexport const lastSessionDateStorageKey = 'telemetry.lastSessionDate';\nexport const machineIdKey = 'telemetry.machineId';\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getErrorMessage, isPromiseCanceledError, canceled } from 'vs/base/common/errors';\nimport { StatisticType, IGalleryExtension, IExtensionGalleryService, IGalleryExtensionAsset, IQueryOptions, SortBy, SortOrder, IExtensionIdentifier, IReportedExtension, InstallOperation, ITranslation, IGalleryExtensionVersion, IGalleryExtensionAssets, isIExtensionIdentifier, DefaultIconPath } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { getGalleryExtensionId, getGalleryExtensionTelemetryData, adoptToGalleryExtensionId } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { getOrDefault } from 'vs/base/common/objects';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IPager } from 'vs/base/common/paging';\nimport { IRequestService, asJson, asText } from 'vs/platform/request/common/request';\nimport { IRequestOptions, IRequestContext, IHeaders } from 'vs/base/parts/request/common/request';\nimport { isEngineValid } from 'vs/platform/extensions/common/extensionValidator';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IExtensionManifest } from 'vs/platform/extensions/common/extensions';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { URI } from 'vs/base/common/uri';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { IStorageService, StorageScope } from 'vs/platform/storage/common/storage';\nimport { getServiceMachineId } from 'vs/platform/serviceMachineId/common/serviceMachineId';\nimport { optional } from 'vs/platform/instantiation/common/instantiation';\nimport { joinPath } from 'vs/base/common/resources';\n\ninterface IRawGalleryExtensionFile {\n\tassetType: string;\n\tsource: string;\n}\n\ninterface IRawGalleryExtensionProperty {\n\tkey: string;\n\tvalue: string;\n}\n\ninterface IRawGalleryExtensionVersion {\n\tversion: string;\n\tlastUpdated: string;\n\tassetUri: string;\n\tfallbackAssetUri: string;\n\tfiles: IRawGalleryExtensionFile[];\n\tproperties?: IRawGalleryExtensionProperty[];\n}\n\ninterface IRawGalleryExtensionStatistics {\n\tstatisticName: string;\n\tvalue: number;\n}\n\ninterface IRawGalleryExtension {\n\textensionId: string;\n\textensionName: string;\n\tdisplayName: string;\n\tshortDescription: string;\n\tpublisher: { displayName: string, publisherId: string, publisherName: string; };\n\tversions: IRawGalleryExtensionVersion[];\n\tstatistics: IRawGalleryExtensionStatistics[];\n\tflags: string;\n}\n\ninterface IRawGalleryQueryResult {\n\tresults: {\n\t\textensions: IRawGalleryExtension[];\n\t\tresultMetadata: {\n\t\t\tmetadataType: string;\n\t\t\tmetadataItems: {\n\t\t\t\tname: string;\n\t\t\t\tcount: number;\n\t\t\t}[];\n\t\t}[]\n\t}[];\n}\n\nenum Flags {\n\tNone = 0x0,\n\tIncludeVersions = 0x1,\n\tIncludeFiles = 0x2,\n\tIncludeCategoryAndTags = 0x4,\n\tIncludeSharedAccounts = 0x8,\n\tIncludeVersionProperties = 0x10,\n\tExcludeNonValidated = 0x20,\n\tIncludeInstallationTargets = 0x40,\n\tIncludeAssetUri = 0x80,\n\tIncludeStatistics = 0x100,\n\tIncludeLatestVersionOnly = 0x200,\n\tUnpublished = 0x1000\n}\n\nfunction flagsToString(...flags: Flags[]): string {\n\treturn String(flags.reduce((r, f) => r | f, 0));\n}\n\nenum FilterType {\n\tTag = 1,\n\tExtensionId = 4,\n\tCategory = 5,\n\tExtensionName = 7,\n\tTarget = 8,\n\tFeatured = 9,\n\tSearchText = 10,\n\tExcludeWithFlags = 12\n}\n\nconst AssetType = {\n\tIcon: 'Microsoft.VisualStudio.Services.Icons.Default',\n\tDetails: 'Microsoft.VisualStudio.Services.Content.Details',\n\tChangelog: 'Microsoft.VisualStudio.Services.Content.Changelog',\n\tManifest: 'Microsoft.VisualStudio.Code.Manifest',\n\tVSIX: 'Microsoft.VisualStudio.Services.VSIXPackage',\n\tLicense: 'Microsoft.VisualStudio.Services.Content.License',\n\tRepository: 'Microsoft.VisualStudio.Services.Links.Source'\n};\n\nconst PropertyType = {\n\tDependency: 'Microsoft.VisualStudio.Code.ExtensionDependencies',\n\tExtensionPack: 'Microsoft.VisualStudio.Code.ExtensionPack',\n\tEngine: 'Microsoft.VisualStudio.Code.Engine',\n\tLocalizedLanguages: 'Microsoft.VisualStudio.Code.LocalizedLanguages',\n\tWebExtension: 'Microsoft.VisualStudio.Code.WebExtension'\n};\n\ninterface ICriterium {\n\tfilterType: FilterType;\n\tvalue?: string;\n}\n\nconst DefaultPageSize = 10;\n\ninterface IQueryState {\n\tpageNumber: number;\n\tpageSize: number;\n\tsortBy: SortBy;\n\tsortOrder: SortOrder;\n\tflags: Flags;\n\tcriteria: ICriterium[];\n\tassetTypes: string[];\n}\n\nconst DefaultQueryState: IQueryState = {\n\tpageNumber: 1,\n\tpageSize: DefaultPageSize,\n\tsortBy: SortBy.NoneOrRelevance,\n\tsortOrder: SortOrder.Default,\n\tflags: Flags.None,\n\tcriteria: [],\n\tassetTypes: []\n};\n\nclass Query {\n\n\tconstructor(private state = DefaultQueryState) { }\n\n\tget pageNumber(): number { return this.state.pageNumber; }\n\tget pageSize(): number { return this.state.pageSize; }\n\tget sortBy(): number { return this.state.sortBy; }\n\tget sortOrder(): number { return this.state.sortOrder; }\n\tget flags(): number { return this.state.flags; }\n\n\twithPage(pageNumber: number, pageSize: number = this.state.pageSize): Query {\n\t\treturn new Query({ ...this.state, pageNumber, pageSize });\n\t}\n\n\twithFilter(filterType: FilterType, ...values: string[]): Query {\n\t\tconst criteria = [\n\t\t\t...this.state.criteria,\n\t\t\t...values.length ? values.map(value => ({ filterType, value })) : [{ filterType }]\n\t\t];\n\n\t\treturn new Query({ ...this.state, criteria });\n\t}\n\n\twithSortBy(sortBy: SortBy): Query {\n\t\treturn new Query({ ...this.state, sortBy });\n\t}\n\n\twithSortOrder(sortOrder: SortOrder): Query {\n\t\treturn new Query({ ...this.state, sortOrder });\n\t}\n\n\twithFlags(...flags: Flags[]): Query {\n\t\treturn new Query({ ...this.state, flags: flags.reduce<number>((r, f) => r | f, 0) });\n\t}\n\n\twithAssetTypes(...assetTypes: string[]): Query {\n\t\treturn new Query({ ...this.state, assetTypes });\n\t}\n\n\tget raw(): any {\n\t\tconst { criteria, pageNumber, pageSize, sortBy, sortOrder, flags, assetTypes } = this.state;\n\t\tconst filters = [{ criteria, pageNumber, pageSize, sortBy, sortOrder }];\n\t\treturn { filters, assetTypes, flags };\n\t}\n\n\tget searchText(): string {\n\t\tconst criterium = this.state.criteria.filter(criterium => criterium.filterType === FilterType.SearchText)[0];\n\t\treturn criterium && criterium.value ? criterium.value : '';\n\t}\n}\n\nfunction getStatistic(statistics: IRawGalleryExtensionStatistics[], name: string): number {\n\tconst result = (statistics || []).filter(s => s.statisticName === name)[0];\n\treturn result ? result.value : 0;\n}\n\nfunction getCoreTranslationAssets(version: IRawGalleryExtensionVersion): [string, IGalleryExtensionAsset][] {\n\tconst coreTranslationAssetPrefix = 'Microsoft.VisualStudio.Code.Translation.';\n\tconst result = version.files.filter(f => f.assetType.indexOf(coreTranslationAssetPrefix) === 0);\n\treturn result.reduce<[string, IGalleryExtensionAsset][]>((result, file) => {\n\t\tconst asset = getVersionAsset(version, file.assetType);\n\t\tif (asset) {\n\t\t\tresult.push([file.assetType.substring(coreTranslationAssetPrefix.length), asset]);\n\t\t}\n\t\treturn result;\n\t}, []);\n}\n\nfunction getRepositoryAsset(version: IRawGalleryExtensionVersion): IGalleryExtensionAsset | null {\n\tif (version.properties) {\n\t\tconst results = version.properties.filter(p => p.key === AssetType.Repository);\n\t\tconst gitRegExp = new RegExp('((git|ssh|http(s)?)|(git@[\\w.]+))(:(//)?)([\\w.@\\:/\\-~]+)(.git)(/)?');\n\n\t\tconst uri = results.filter(r => gitRegExp.test(r.value))[0];\n\t\treturn uri ? { uri: uri.value, fallbackUri: uri.value } : null;\n\t}\n\treturn getVersionAsset(version, AssetType.Repository);\n}\n\nfunction getDownloadAsset(version: IRawGalleryExtensionVersion): IGalleryExtensionAsset {\n\treturn {\n\t\turi: `${version.fallbackAssetUri}/${AssetType.VSIX}?redirect=true`,\n\t\tfallbackUri: `${version.fallbackAssetUri}/${AssetType.VSIX}`\n\t};\n}\n\nfunction getIconAsset(version: IRawGalleryExtensionVersion): IGalleryExtensionAsset {\n\tconst asset = getVersionAsset(version, AssetType.Icon);\n\tif (asset) {\n\t\treturn asset;\n\t}\n\tconst uri = DefaultIconPath;\n\treturn { uri, fallbackUri: uri };\n}\n\nfunction getVersionAsset(version: IRawGalleryExtensionVersion, type: string): IGalleryExtensionAsset | null {\n\tconst result = version.files.filter(f => f.assetType === type)[0];\n\treturn result ? { uri: `${version.assetUri}/${type}`, fallbackUri: `${version.fallbackAssetUri}/${type}` } : null;\n}\n\nfunction getExtensions(version: IRawGalleryExtensionVersion, property: string): string[] {\n\tconst values = version.properties ? version.properties.filter(p => p.key === property) : [];\n\tconst value = values.length > 0 && values[0].value;\n\treturn value ? value.split(',').map(v => adoptToGalleryExtensionId(v)) : [];\n}\n\nfunction getEngine(version: IRawGalleryExtensionVersion): string {\n\tconst values = version.properties ? version.properties.filter(p => p.key === PropertyType.Engine) : [];\n\treturn (values.length > 0 && values[0].value) || '';\n}\n\nfunction getLocalizedLanguages(version: IRawGalleryExtensionVersion): string[] {\n\tconst values = version.properties ? version.properties.filter(p => p.key === PropertyType.LocalizedLanguages) : [];\n\tconst value = (values.length > 0 && values[0].value) || '';\n\treturn value ? value.split(',') : [];\n}\n\nfunction getIsPreview(flags: string): boolean {\n\treturn flags.indexOf('preview') !== -1;\n}\n\nfunction getIsWebExtension(version: IRawGalleryExtensionVersion): boolean {\n\tconst webExtensionProperty = version.properties ? version.properties.find(p => p.key === PropertyType.WebExtension) : undefined;\n\treturn !!webExtensionProperty && webExtensionProperty.value === 'true';\n}\n\nfunction getWebResource(version: IRawGalleryExtensionVersion): URI | undefined {\n\treturn version.files.some(f => f.assetType.startsWith('Microsoft.VisualStudio.Code.WebResources'))\n\t\t? joinPath(URI.parse(version.assetUri), 'Microsoft.VisualStudio.Code.WebResources', 'extension')\n\t\t: undefined;\n}\n\nfunction toExtension(galleryExtension: IRawGalleryExtension, version: IRawGalleryExtensionVersion, index: number, query: Query, querySource?: string): IGalleryExtension {\n\tconst assets = <IGalleryExtensionAssets>{\n\t\tmanifest: getVersionAsset(version, AssetType.Manifest),\n\t\treadme: getVersionAsset(version, AssetType.Details),\n\t\tchangelog: getVersionAsset(version, AssetType.Changelog),\n\t\tlicense: getVersionAsset(version, AssetType.License),\n\t\trepository: getRepositoryAsset(version),\n\t\tdownload: getDownloadAsset(version),\n\t\ticon: getIconAsset(version),\n\t\tcoreTranslations: getCoreTranslationAssets(version)\n\t};\n\n\treturn {\n\t\tidentifier: {\n\t\t\tid: getGalleryExtensionId(galleryExtension.publisher.publisherName, galleryExtension.extensionName),\n\t\t\tuuid: galleryExtension.extensionId\n\t\t},\n\t\tname: galleryExtension.extensionName,\n\t\tversion: version.version,\n\t\tdate: version.lastUpdated,\n\t\tdisplayName: galleryExtension.displayName,\n\t\tpublisherId: galleryExtension.publisher.publisherId,\n\t\tpublisher: galleryExtension.publisher.publisherName,\n\t\tpublisherDisplayName: galleryExtension.publisher.displayName,\n\t\tdescription: galleryExtension.shortDescription || '',\n\t\tinstallCount: getStatistic(galleryExtension.statistics, 'install'),\n\t\trating: getStatistic(galleryExtension.statistics, 'averagerating'),\n\t\tratingCount: getStatistic(galleryExtension.statistics, 'ratingcount'),\n\t\tassetUri: URI.parse(version.assetUri),\n\t\twebResource: getWebResource(version),\n\t\tassetTypes: version.files.map(({ assetType }) => assetType),\n\t\tassets,\n\t\tproperties: {\n\t\t\tdependencies: getExtensions(version, PropertyType.Dependency),\n\t\t\textensionPack: getExtensions(version, PropertyType.ExtensionPack),\n\t\t\tengine: getEngine(version),\n\t\t\tlocalizedLanguages: getLocalizedLanguages(version),\n\t\t\twebExtension: getIsWebExtension(version)\n\t\t},\n\t\t/* __GDPR__FRAGMENT__\n\t\t\t\"GalleryExtensionTelemetryData2\" : {\n\t\t\t\t\"index\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n\t\t\t\t\"searchText\": { \"classification\": \"CustomerContent\", \"purpose\": \"FeatureInsight\" },\n\t\t\t\t\"querySource\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t\t}\n\t\t*/\n\t\ttelemetryData: {\n\t\t\tindex: ((query.pageNumber - 1) * query.pageSize) + index,\n\t\t\tsearchText: query.searchText,\n\t\t\tquerySource\n\t\t},\n\t\tpreview: getIsPreview(galleryExtension.flags)\n\t};\n}\n\ninterface IRawExtensionsReport {\n\tmalicious: string[];\n\tslow: string[];\n}\n\nexport class ExtensionGalleryService implements IExtensionGalleryService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate extensionsGalleryUrl: string | undefined;\n\tprivate extensionsControlUrl: string | undefined;\n\n\tprivate readonly commonHeadersPromise: Promise<{ [key: string]: string; }>;\n\n\tconstructor(\n\t\t@IRequestService private readonly requestService: IRequestService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IEnvironmentService private readonly environmentService: IEnvironmentService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@optional(IStorageService) storageService: IStorageService,\n\t) {\n\t\tconst config = productService.extensionsGallery;\n\t\tthis.extensionsGalleryUrl = config && config.serviceUrl;\n\t\tthis.extensionsControlUrl = config && config.controlUrl;\n\t\tthis.commonHeadersPromise = resolveMarketplaceHeaders(productService.version, this.environmentService, this.fileService, storageService);\n\t}\n\n\tprivate api(path = ''): string {\n\t\treturn `${this.extensionsGalleryUrl}${path}`;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn !!this.extensionsGalleryUrl;\n\t}\n\n\tasync getExtensions(names: string[], token: CancellationToken): Promise<IGalleryExtension[]> {\n\t\tconst result: IGalleryExtension[] = [];\n\t\tlet { total, firstPage: pageResult, getPage } = await this.query({ names, pageSize: names.length }, token);\n\t\tresult.push(...pageResult);\n\t\tfor (let pageIndex = 1; result.length < total; pageIndex++) {\n\t\t\tpageResult = await getPage(pageIndex, token);\n\t\t\tif (pageResult.length) {\n\t\t\t\tresult.push(...pageResult);\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tasync getCompatibleExtension(arg1: IExtensionIdentifier | IGalleryExtension, version?: string): Promise<IGalleryExtension | null> {\n\t\tconst extension = await this.getCompatibleExtensionByEngine(arg1, version);\n\n\t\tif (extension?.properties.webExtension) {\n\t\t\treturn extension.webResource ? extension : null;\n\t\t} else {\n\t\t\treturn extension;\n\t\t}\n\t}\n\n\tprivate async getCompatibleExtensionByEngine(arg1: IExtensionIdentifier | IGalleryExtension, version?: string): Promise<IGalleryExtension | null> {\n\t\tconst extension: IGalleryExtension | null = isIExtensionIdentifier(arg1) ? null : arg1;\n\t\tif (extension && extension.properties.engine && isEngineValid(extension.properties.engine, this.productService.version)) {\n\t\t\treturn extension;\n\t\t}\n\t\tconst { id, uuid } = extension ? extension.identifier : <IExtensionIdentifier>arg1;\n\t\tlet query = new Query()\n\t\t\t.withFlags(Flags.IncludeAssetUri, Flags.IncludeStatistics, Flags.IncludeFiles, Flags.IncludeVersionProperties)\n\t\t\t.withPage(1, 1)\n\t\t\t.withFilter(FilterType.Target, 'Microsoft.VisualStudio.Code');\n\n\t\tif (uuid) {\n\t\t\tquery = query.withFilter(FilterType.ExtensionId, uuid);\n\t\t} else {\n\t\t\tquery = query.withFilter(FilterType.ExtensionName, id);\n\t\t}\n\n\t\tconst { galleryExtensions } = await this.queryGallery(query, CancellationToken.None);\n\t\tconst [rawExtension] = galleryExtensions;\n\t\tif (!rawExtension || !rawExtension.versions.length) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (version) {\n\t\t\tconst versionAsset = rawExtension.versions.filter(v => v.version === version)[0];\n\t\t\tif (versionAsset) {\n\t\t\t\tconst extension = toExtension(rawExtension, versionAsset, 0, query);\n\t\t\t\tif (extension.properties.engine && isEngineValid(extension.properties.engine, this.productService.version)) {\n\t\t\t\t\treturn extension;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tconst rawVersion = await this.getLastValidExtensionVersion(rawExtension, rawExtension.versions);\n\t\tif (rawVersion) {\n\t\t\treturn toExtension(rawExtension, rawVersion, 0, query);\n\t\t}\n\t\treturn null;\n\t}\n\n\tquery(token: CancellationToken): Promise<IPager<IGalleryExtension>>;\n\tquery(options: IQueryOptions, token: CancellationToken): Promise<IPager<IGalleryExtension>>;\n\tasync query(arg1: any, arg2?: any): Promise<IPager<IGalleryExtension>> {\n\t\tconst options: IQueryOptions = CancellationToken.isCancellationToken(arg1) ? {} : arg1;\n\t\tconst token: CancellationToken = CancellationToken.isCancellationToken(arg1) ? arg1 : arg2;\n\n\t\tif (!this.isEnabled()) {\n\t\t\tthrow new Error('No extension gallery service configured.');\n\t\t}\n\n\t\tconst type = options.names ? 'ids' : (options.text ? 'text' : 'all');\n\t\tlet text = options.text || '';\n\t\tconst pageSize = getOrDefault(options, o => o.pageSize, 50);\n\n\t\ttype GalleryServiceQueryClassification = {\n\t\t\ttype: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\t\t\ttext: { classification: 'CustomerContent', purpose: 'FeatureInsight' };\n\t\t};\n\t\ttype GalleryServiceQueryEvent = {\n\t\t\ttype: string;\n\t\t\ttext: string;\n\t\t};\n\t\tthis.telemetryService.publicLog2<GalleryServiceQueryEvent, GalleryServiceQueryClassification>('galleryService:query', { type, text });\n\n\t\tlet query = new Query()\n\t\t\t.withFlags(Flags.IncludeLatestVersionOnly, Flags.IncludeAssetUri, Flags.IncludeStatistics, Flags.IncludeFiles, Flags.IncludeVersionProperties)\n\t\t\t.withPage(1, pageSize)\n\t\t\t.withFilter(FilterType.Target, 'Microsoft.VisualStudio.Code');\n\n\t\tif (text) {\n\t\t\t// Use category filter instead of \"category:themes\"\n\t\t\ttext = text.replace(/\\bcategory:(\"([^\"]*)\"|([^\"]\\S*))(\\s+|\\b|$)/g, (_, quotedCategory, category) => {\n\t\t\t\tquery = query.withFilter(FilterType.Category, category || quotedCategory);\n\t\t\t\treturn '';\n\t\t\t});\n\n\t\t\t// Use tag filter instead of \"tag:debuggers\"\n\t\t\ttext = text.replace(/\\btag:(\"([^\"]*)\"|([^\"]\\S*))(\\s+|\\b|$)/g, (_, quotedTag, tag) => {\n\t\t\t\tquery = query.withFilter(FilterType.Tag, tag || quotedTag);\n\t\t\t\treturn '';\n\t\t\t});\n\n\t\t\t// Use featured filter\n\t\t\ttext = text.replace(/\\bfeatured(\\s+|\\b|$)/g, () => {\n\t\t\t\tquery = query.withFilter(FilterType.Featured);\n\t\t\t\treturn '';\n\t\t\t});\n\n\t\t\ttext = text.trim();\n\n\t\t\tif (text) {\n\t\t\t\ttext = text.length < 200 ? text : text.substring(0, 200);\n\t\t\t\tquery = query.withFilter(FilterType.SearchText, text);\n\t\t\t}\n\n\t\t\tquery = query.withSortBy(SortBy.NoneOrRelevance);\n\t\t} else if (options.ids) {\n\t\t\tquery = query.withFilter(FilterType.ExtensionId, ...options.ids);\n\t\t} else if (options.names) {\n\t\t\tquery = query.withFilter(FilterType.ExtensionName, ...options.names);\n\t\t} else {\n\t\t\tquery = query.withSortBy(SortBy.InstallCount);\n\t\t}\n\n\t\tif (typeof options.sortBy === 'number') {\n\t\t\tquery = query.withSortBy(options.sortBy);\n\t\t}\n\n\t\tif (typeof options.sortOrder === 'number') {\n\t\t\tquery = query.withSortOrder(options.sortOrder);\n\t\t}\n\n\t\tconst { galleryExtensions, total } = await this.queryGallery(query, token);\n\t\tconst extensions = galleryExtensions.map((e, index) => toExtension(e, e.versions[0], index, query, options.source));\n\t\tconst getPage = async (pageIndex: number, ct: CancellationToken) => {\n\t\t\tif (ct.isCancellationRequested) {\n\t\t\t\tthrow canceled();\n\t\t\t}\n\t\t\tconst nextPageQuery = query.withPage(pageIndex + 1);\n\t\t\tconst { galleryExtensions } = await this.queryGallery(nextPageQuery, ct);\n\t\t\treturn galleryExtensions.map((e, index) => toExtension(e, e.versions[0], index, nextPageQuery, options.source));\n\t\t};\n\n\t\treturn { firstPage: extensions, total, pageSize: query.pageSize, getPage } as IPager<IGalleryExtension>;\n\t}\n\n\tprivate async queryGallery(query: Query, token: CancellationToken): Promise<{ galleryExtensions: IRawGalleryExtension[], total: number; }> {\n\t\tif (!this.isEnabled()) {\n\t\t\tthrow new Error('No extension gallery service configured.');\n\t\t}\n\n\t\t// Always exclude non validated and unpublished extensions\n\t\tquery = query\n\t\t\t.withFlags(query.flags, Flags.ExcludeNonValidated)\n\t\t\t.withFilter(FilterType.ExcludeWithFlags, flagsToString(Flags.Unpublished));\n\n\t\tconst commonHeaders = await this.commonHeadersPromise;\n\t\tconst data = JSON.stringify(query.raw);\n\t\tconst headers = {\n\t\t\t...commonHeaders,\n\t\t\t'Content-Type': 'application/json',\n\t\t\t'Accept': 'application/json;api-version=3.0-preview.1',\n\t\t\t'Accept-Encoding': 'gzip',\n\t\t\t'Content-Length': String(data.length)\n\t\t};\n\n\t\tconst context = await this.requestService.request({\n\t\t\ttype: 'POST',\n\t\t\turl: this.api('/extensionquery'),\n\t\t\tdata,\n\t\t\theaders\n\t\t}, token);\n\n\t\tif (context.res.statusCode && context.res.statusCode >= 400 && context.res.statusCode < 500) {\n\t\t\treturn { galleryExtensions: [], total: 0 };\n\t\t}\n\n\t\tconst result = await asJson<IRawGalleryQueryResult>(context);\n\t\tif (result) {\n\t\t\tconst r = result.results[0];\n\t\t\tconst galleryExtensions = r.extensions;\n\t\t\tconst resultCount = r.resultMetadata && r.resultMetadata.filter(m => m.metadataType === 'ResultCount')[0];\n\t\t\tconst total = resultCount && resultCount.metadataItems.filter(i => i.name === 'TotalCount')[0].count || 0;\n\n\t\t\treturn { galleryExtensions, total };\n\t\t}\n\t\treturn { galleryExtensions: [], total: 0 };\n\t}\n\n\tasync reportStatistic(publisher: string, name: string, version: string, type: StatisticType): Promise<void> {\n\t\tif (!this.isEnabled()) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst commonHeaders = await this.commonHeadersPromise;\n\t\tconst headers = { ...commonHeaders, Accept: '*/*;api-version=4.0-preview.1' };\n\t\ttry {\n\t\t\tawait this.requestService.request({\n\t\t\t\ttype: 'POST',\n\t\t\t\turl: this.api(`/publishers/${publisher}/extensions/${name}/${version}/stats?statType=${type}`),\n\t\t\t\theaders\n\t\t\t}, CancellationToken.None);\n\t\t} catch (error) { /* Ignore */ }\n\t}\n\n\tasync download(extension: IGalleryExtension, location: URI, operation: InstallOperation): Promise<void> {\n\t\tthis.logService.trace('ExtensionGalleryService#download', extension.identifier.id);\n\t\tconst data = getGalleryExtensionTelemetryData(extension);\n\t\tconst startTime = new Date().getTime();\n\t\t/* __GDPR__\n\t\t\t\"galleryService:downloadVSIX\" : {\n\t\t\t\t\"duration\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"${include}\": [\n\t\t\t\t\t\"${GalleryExtensionTelemetryData}\"\n\t\t\t\t]\n\t\t\t}\n\t\t*/\n\t\tconst log = (duration: number) => this.telemetryService.publicLog('galleryService:downloadVSIX', { ...data, duration });\n\n\t\tconst operationParam = operation === InstallOperation.Install ? 'install' : operation === InstallOperation.Update ? 'update' : '';\n\t\tconst downloadAsset = operationParam ? {\n\t\t\turi: `${extension.assets.download.uri}&${operationParam}=true`,\n\t\t\tfallbackUri: `${extension.assets.download.fallbackUri}?${operationParam}=true`\n\t\t} : extension.assets.download;\n\n\t\tconst context = await this.getAsset(downloadAsset);\n\t\tawait this.fileService.writeFile(location, context.stream);\n\t\tlog(new Date().getTime() - startTime);\n\t}\n\n\tasync getReadme(extension: IGalleryExtension, token: CancellationToken): Promise<string> {\n\t\tif (extension.assets.readme) {\n\t\t\tconst context = await this.getAsset(extension.assets.readme, {}, token);\n\t\t\tconst content = await asText(context);\n\t\t\treturn content || '';\n\t\t}\n\t\treturn '';\n\t}\n\n\tasync getManifest(extension: IGalleryExtension, token: CancellationToken): Promise<IExtensionManifest | null> {\n\t\tif (extension.assets.manifest) {\n\t\t\tconst context = await this.getAsset(extension.assets.manifest, {}, token);\n\t\t\tconst text = await asText(context);\n\t\t\treturn text ? JSON.parse(text) : null;\n\t\t}\n\t\treturn null;\n\t}\n\n\tasync getCoreTranslation(extension: IGalleryExtension, languageId: string): Promise<ITranslation | null> {\n\t\tconst asset = extension.assets.coreTranslations.filter(t => t[0] === languageId.toUpperCase())[0];\n\t\tif (asset) {\n\t\t\tconst context = await this.getAsset(asset[1]);\n\t\t\tconst text = await asText(context);\n\t\t\treturn text ? JSON.parse(text) : null;\n\t\t}\n\t\treturn null;\n\t}\n\n\tasync getChangelog(extension: IGalleryExtension, token: CancellationToken): Promise<string> {\n\t\tif (extension.assets.changelog) {\n\t\t\tconst context = await this.getAsset(extension.assets.changelog, {}, token);\n\t\t\tconst content = await asText(context);\n\t\t\treturn content || '';\n\t\t}\n\t\treturn '';\n\t}\n\n\tasync getAllVersions(extension: IGalleryExtension, compatible: boolean): Promise<IGalleryExtensionVersion[]> {\n\t\tlet query = new Query()\n\t\t\t.withFlags(Flags.IncludeVersions, Flags.IncludeFiles, Flags.IncludeVersionProperties)\n\t\t\t.withPage(1, 1)\n\t\t\t.withFilter(FilterType.Target, 'Microsoft.VisualStudio.Code');\n\n\t\tif (extension.identifier.uuid) {\n\t\t\tquery = query.withFilter(FilterType.ExtensionId, extension.identifier.uuid);\n\t\t} else {\n\t\t\tquery = query.withFilter(FilterType.ExtensionName, extension.identifier.id);\n\t\t}\n\n\t\tconst result: IGalleryExtensionVersion[] = [];\n\t\tconst { galleryExtensions } = await this.queryGallery(query, CancellationToken.None);\n\t\tif (galleryExtensions.length) {\n\t\t\tif (compatible) {\n\t\t\t\tawait Promise.all(galleryExtensions[0].versions.map(async v => {\n\t\t\t\t\tlet engine: string | undefined;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tengine = await this.getEngine(v);\n\t\t\t\t\t} catch (error) { /* Ignore error and skip version */ }\n\t\t\t\t\tif (engine && isEngineValid(engine, this.productService.version)) {\n\t\t\t\t\t\tresult.push({ version: v!.version, date: v!.lastUpdated });\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t} else {\n\t\t\t\tresult.push(...galleryExtensions[0].versions.map(v => ({ version: v.version, date: v.lastUpdated })));\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate async getAsset(asset: IGalleryExtensionAsset, options: IRequestOptions = {}, token: CancellationToken = CancellationToken.None): Promise<IRequestContext> {\n\t\tconst commonHeaders = await this.commonHeadersPromise;\n\t\tconst baseOptions = { type: 'GET' };\n\t\tconst headers = { ...commonHeaders, ...(options.headers || {}) };\n\t\toptions = { ...options, ...baseOptions, headers };\n\n\t\tconst url = asset.uri;\n\t\tconst fallbackUrl = asset.fallbackUri;\n\t\tconst firstOptions = { ...options, url };\n\n\t\ttry {\n\t\t\tconst context = await this.requestService.request(firstOptions, token);\n\t\t\tif (context.res.statusCode === 200) {\n\t\t\t\treturn context;\n\t\t\t}\n\t\t\tconst message = await asText(context);\n\t\t\tthrow new Error(`Expected 200, got back ${context.res.statusCode} instead.\\n\\n${message}`);\n\t\t} catch (err) {\n\t\t\tif (isPromiseCanceledError(err)) {\n\t\t\t\tthrow err;\n\t\t\t}\n\n\t\t\tconst message = getErrorMessage(err);\n\t\t\ttype GalleryServiceCDNFallbackClassification = {\n\t\t\t\turl: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\t\t\t\tmessage: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\t\t\t};\n\t\t\ttype GalleryServiceCDNFallbackEvent = {\n\t\t\t\turl: string;\n\t\t\t\tmessage: string;\n\t\t\t};\n\t\t\tthis.telemetryService.publicLog2<GalleryServiceCDNFallbackEvent, GalleryServiceCDNFallbackClassification>('galleryService:cdnFallback', { url, message });\n\n\t\t\tconst fallbackOptions = { ...options, url: fallbackUrl };\n\t\t\treturn this.requestService.request(fallbackOptions, token);\n\t\t}\n\t}\n\n\tprivate async getLastValidExtensionVersion(extension: IRawGalleryExtension, versions: IRawGalleryExtensionVersion[]): Promise<IRawGalleryExtensionVersion | null> {\n\t\tconst version = this.getLastValidExtensionVersionFromProperties(extension, versions);\n\t\tif (version) {\n\t\t\treturn version;\n\t\t}\n\t\treturn this.getLastValidExtensionVersionRecursively(extension, versions);\n\t}\n\n\tprivate getLastValidExtensionVersionFromProperties(extension: IRawGalleryExtension, versions: IRawGalleryExtensionVersion[]): IRawGalleryExtensionVersion | null {\n\t\tfor (const version of versions) {\n\t\t\tconst engine = getEngine(version);\n\t\t\tif (!engine) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (isEngineValid(engine, this.productService.version)) {\n\t\t\t\treturn version;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate async getEngine(version: IRawGalleryExtensionVersion): Promise<string> {\n\t\tconst engine = getEngine(version);\n\t\tif (engine) {\n\t\t\treturn engine;\n\t\t}\n\n\t\tconst manifestAsset = getVersionAsset(version, AssetType.Manifest);\n\t\tif (!manifestAsset) {\n\t\t\tthrow new Error('Manifest was not found');\n\t\t}\n\n\t\tconst headers = { 'Accept-Encoding': 'gzip' };\n\t\tconst context = await this.getAsset(manifestAsset, { headers });\n\t\tconst manifest = await asJson<IExtensionManifest>(context);\n\t\tif (manifest) {\n\t\t\treturn manifest.engines.vscode;\n\t\t}\n\n\t\tthrow new Error('Error while reading manifest');\n\t}\n\n\tprivate async getLastValidExtensionVersionRecursively(extension: IRawGalleryExtension, versions: IRawGalleryExtensionVersion[]): Promise<IRawGalleryExtensionVersion | null> {\n\t\tif (!versions.length) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst version = versions[0];\n\t\tconst engine = await this.getEngine(version);\n\t\tif (!isEngineValid(engine, this.productService.version)) {\n\t\t\treturn this.getLastValidExtensionVersionRecursively(extension, versions.slice(1));\n\t\t}\n\n\t\tversion.properties = version.properties || [];\n\t\tversion.properties.push({ key: PropertyType.Engine, value: engine });\n\t\treturn version;\n\t}\n\n\tasync getExtensionsReport(): Promise<IReportedExtension[]> {\n\t\tif (!this.isEnabled()) {\n\t\t\tthrow new Error('No extension gallery service configured.');\n\t\t}\n\n\t\tif (!this.extensionsControlUrl) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst context = await this.requestService.request({ type: 'GET', url: this.extensionsControlUrl }, CancellationToken.None);\n\t\tif (context.res.statusCode !== 200) {\n\t\t\tthrow new Error('Could not get extensions report.');\n\t\t}\n\n\t\tconst result = await asJson<IRawExtensionsReport>(context);\n\t\tconst map = new Map<string, IReportedExtension>();\n\n\t\tif (result) {\n\t\t\tfor (const id of result.malicious) {\n\t\t\t\tconst ext = map.get(id) || { id: { id }, malicious: true, slow: false };\n\t\t\t\text.malicious = true;\n\t\t\t\tmap.set(id, ext);\n\t\t\t}\n\t\t}\n\n\t\treturn [...map.values()];\n\t}\n}\n\nexport async function resolveMarketplaceHeaders(version: string, environmentService: IEnvironmentService, fileService: IFileService, storageService: {\n\tget: (key: string, scope: StorageScope) => string | undefined,\n\tstore: (key: string, value: string, scope: StorageScope) => void\n} | undefined): Promise<{ [key: string]: string; }> {\n\tconst headers: IHeaders = {\n\t\t'X-Market-Client-Id': `VSCode ${version}`,\n\t\t'User-Agent': `VSCode ${version}`\n\t};\n\tconst uuid = await getServiceMachineId(environmentService, fileService, storageService);\n\theaders['X-Market-User-Id'] = uuid;\n\treturn headers;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport product from 'vs/platform/product/common/product';\nimport { localize } from 'vs/nls';\nimport { escapeRegExpCharacters } from 'vs/base/common/strings';\nimport { ITelemetryService, ITelemetryInfo, ITelemetryData } from 'vs/platform/telemetry/common/telemetry';\nimport { ITelemetryAppender } from 'vs/platform/telemetry/common/telemetryUtils';\nimport { optional } from 'vs/platform/instantiation/common/instantiation';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IConfigurationRegistry, Extensions } from 'vs/platform/configuration/common/configurationRegistry';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { cloneAndChange, mixin } from 'vs/base/common/objects';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { ClassifiedEvent, StrictPropertyCheck, GDPRClassification } from 'vs/platform/telemetry/common/gdprTypings';\n\nexport interface ITelemetryServiceConfig {\n\tappender: ITelemetryAppender;\n\tsendErrorTelemetry?: boolean;\n\tcommonProperties?: Promise<{ [name: string]: any }>;\n\tpiiPaths?: string[];\n}\n\nexport class TelemetryService implements ITelemetryService {\n\n\tstatic readonly IDLE_START_EVENT_NAME = 'UserIdleStart';\n\tstatic readonly IDLE_STOP_EVENT_NAME = 'UserIdleStop';\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate _appender: ITelemetryAppender;\n\tprivate _commonProperties: Promise<{ [name: string]: any; }>;\n\tprivate _experimentProperties: { [name: string]: string } = {};\n\tprivate _piiPaths: string[];\n\tprivate _userOptIn: boolean;\n\tprivate _enabled: boolean;\n\tpublic readonly sendErrorTelemetry: boolean;\n\n\tprivate readonly _disposables = new DisposableStore();\n\tprivate _cleanupPatterns: RegExp[] = [];\n\n\tconstructor(\n\t\tconfig: ITelemetryServiceConfig,\n\t\t@optional(IConfigurationService) private _configurationService: IConfigurationService\n\t) {\n\t\tthis._appender = config.appender;\n\t\tthis._commonProperties = config.commonProperties || Promise.resolve({});\n\t\tthis._piiPaths = config.piiPaths || [];\n\t\tthis._userOptIn = true;\n\t\tthis._enabled = true;\n\t\tthis.sendErrorTelemetry = !!config.sendErrorTelemetry;\n\n\t\t// static cleanup pattern for: `file:///DANGEROUS/PATH/resources/app/Useful/Information`\n\t\tthis._cleanupPatterns = [/file:\\/\\/\\/.*?\\/resources\\/app\\//gi];\n\n\t\tfor (let piiPath of this._piiPaths) {\n\t\t\tthis._cleanupPatterns.push(new RegExp(escapeRegExpCharacters(piiPath), 'gi'));\n\t\t}\n\n\t\tif (this._configurationService) {\n\t\t\tthis._updateUserOptIn();\n\t\t\tthis._configurationService.onDidChangeConfiguration(this._updateUserOptIn, this, this._disposables);\n\t\t\ttype OptInClassification = {\n\t\t\t\toptIn: { classification: 'SystemMetaData', purpose: 'BusinessInsight', isMeasurement: true };\n\t\t\t};\n\t\t\ttype OptInEvent = {\n\t\t\t\toptIn: boolean;\n\t\t\t};\n\t\t\tthis.publicLog2<OptInEvent, OptInClassification>('optInStatus', { optIn: this._userOptIn });\n\n\t\t\tthis._commonProperties.then(values => {\n\t\t\t\tconst isHashedId = /^[a-f0-9]+$/i.test(values['common.machineId']);\n\n\t\t\t\ttype MachineIdFallbackClassification = {\n\t\t\t\t\tusingFallbackGuid: { classification: 'SystemMetaData', purpose: 'BusinessInsight', isMeasurement: true };\n\t\t\t\t};\n\t\t\t\tthis.publicLog2<{ usingFallbackGuid: boolean }, MachineIdFallbackClassification>('machineIdFallback', { usingFallbackGuid: !isHashedId });\n\t\t\t});\n\t\t}\n\t}\n\n\tsetExperimentProperty(name: string, value: string): void {\n\t\tthis._experimentProperties[name] = value;\n\t}\n\n\tsetEnabled(value: boolean): void {\n\t\tthis._enabled = value;\n\t}\n\n\tprivate _updateUserOptIn(): void {\n\t\tconst config = this._configurationService?.getValue<any>(TELEMETRY_SECTION_ID);\n\t\tthis._userOptIn = config ? config.enableTelemetry : this._userOptIn;\n\t}\n\n\tget isOptedIn(): boolean {\n\t\treturn this._userOptIn && this._enabled;\n\t}\n\n\tasync getTelemetryInfo(): Promise<ITelemetryInfo> {\n\t\tconst values = await this._commonProperties;\n\n\t\t// well known properties\n\t\tlet sessionId = values['sessionID'];\n\t\tlet instanceId = values['common.instanceId'];\n\t\tlet machineId = values['common.machineId'];\n\t\tlet msftInternal = values['common.msftInternal'];\n\n\t\treturn { sessionId, instanceId, machineId, msftInternal };\n\t}\n\n\tdispose(): void {\n\t\tthis._disposables.dispose();\n\t}\n\n\tpublicLog(eventName: string, data?: ITelemetryData, anonymizeFilePaths?: boolean): Promise<any> {\n\t\t// don't send events when the user is optout\n\t\tif (!this.isOptedIn) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\treturn this._commonProperties.then(values => {\n\n\t\t\t// (first) add common properties\n\t\t\tdata = mixin(data, values);\n\n\t\t\t// (next) add experiment properties\n\t\t\tdata = mixin(data, this._experimentProperties);\n\n\t\t\t// (last) remove all PII from data\n\t\t\tdata = cloneAndChange(data, value => {\n\t\t\t\tif (typeof value === 'string') {\n\t\t\t\t\treturn this._cleanupInfo(value, anonymizeFilePaths);\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t});\n\n\t\t\tthis._appender.log(eventName, data);\n\n\t\t}, err => {\n\t\t\t// unsure what to do now...\n\t\t\tconsole.error(err);\n\t\t});\n\t}\n\n\tpublicLog2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>, anonymizeFilePaths?: boolean): Promise<any> {\n\t\treturn this.publicLog(eventName, data as ITelemetryData, anonymizeFilePaths);\n\t}\n\n\tpublicLogError(errorEventName: string, data?: ITelemetryData): Promise<any> {\n\t\tif (!this.sendErrorTelemetry) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\t// Send error event and anonymize paths\n\t\treturn this.publicLog(errorEventName, data, true);\n\t}\n\n\tpublicLogError2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>): Promise<any> {\n\t\treturn this.publicLogError(eventName, data as ITelemetryData);\n\t}\n\n\tprivate _cleanupInfo(stack: string, anonymizeFilePaths?: boolean): string {\n\t\tlet updatedStack = stack;\n\n\t\tif (anonymizeFilePaths) {\n\t\t\tconst cleanUpIndexes: [number, number][] = [];\n\t\t\tfor (let regexp of this._cleanupPatterns) {\n\t\t\t\twhile (true) {\n\t\t\t\t\tconst result = regexp.exec(stack);\n\t\t\t\t\tif (!result) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcleanUpIndexes.push([result.index, regexp.lastIndex]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst nodeModulesRegex = /^[\\\\\\/]?(node_modules|node_modules\\.asar)[\\\\\\/]/;\n\t\t\tconst fileRegex = /(file:\\/\\/)?([a-zA-Z]:(\\\\\\\\|\\\\|\\/)|(\\\\\\\\|\\\\|\\/))?([\\w-\\._]+(\\\\\\\\|\\\\|\\/))+[\\w-\\._]*/g;\n\t\t\tlet lastIndex = 0;\n\t\t\tupdatedStack = '';\n\n\t\t\twhile (true) {\n\t\t\t\tconst result = fileRegex.exec(stack);\n\t\t\t\tif (!result) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t// Anoynimize user file paths that do not need to be retained or cleaned up.\n\t\t\t\tif (!nodeModulesRegex.test(result[0]) && cleanUpIndexes.every(([x, y]) => result.index < x || result.index >= y)) {\n\t\t\t\t\tupdatedStack += stack.substring(lastIndex, result.index) + '<REDACTED: user-file-path>';\n\t\t\t\t\tlastIndex = fileRegex.lastIndex;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (lastIndex < stack.length) {\n\t\t\t\tupdatedStack += stack.substr(lastIndex);\n\t\t\t}\n\t\t}\n\n\t\t// sanitize with configured cleanup patterns\n\t\tfor (let regexp of this._cleanupPatterns) {\n\t\t\tupdatedStack = updatedStack.replace(regexp, '');\n\t\t}\n\t\treturn updatedStack;\n\t}\n}\n\n\nconst TELEMETRY_SECTION_ID = 'telemetry';\n\n\nRegistry.as<IConfigurationRegistry>(Extensions.Configuration).registerConfiguration({\n\t'id': TELEMETRY_SECTION_ID,\n\t'order': 110,\n\t'type': 'object',\n\t'title': localize('telemetryConfigurationTitle', \"Telemetry\"),\n\t'properties': {\n\t\t'telemetry.enableTelemetry': {\n\t\t\t'type': 'boolean',\n\t\t\t'markdownDescription':\n\t\t\t\t!product.privacyStatementUrl ?\n\t\t\t\t\tlocalize('telemetry.enableTelemetry', \"Enable usage data and errors to be sent to a Microsoft online service.\") :\n\t\t\t\t\tlocalize('telemetry.enableTelemetryMd', \"Enable usage data and errors to be sent to a Microsoft online service. Read our privacy statement [here]({0}).\", product.privacyStatementUrl),\n\t\t\t'default': true,\n\t\t\t'tags': ['usesOnlineServices']\n\t\t}\n\t}\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { IConfigurationService, ConfigurationTarget, ConfigurationTargetToString } from 'vs/platform/configuration/common/configuration';\nimport { ITelemetryService, ITelemetryInfo, ITelemetryData } from 'vs/platform/telemetry/common/telemetry';\nimport { ClassifiedEvent, StrictPropertyCheck, GDPRClassification } from 'vs/platform/telemetry/common/gdprTypings';\nimport { safeStringify } from 'vs/base/common/objects';\nimport { isObject } from 'vs/base/common/types';\n\nexport const NullTelemetryService = new class implements ITelemetryService {\n\tdeclare readonly _serviceBrand: undefined;\n\treadonly sendErrorTelemetry = false;\n\n\tpublicLog(eventName: string, data?: ITelemetryData) {\n\t\treturn Promise.resolve(undefined);\n\t}\n\tpublicLog2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>) {\n\t\treturn this.publicLog(eventName, data as ITelemetryData);\n\t}\n\tpublicLogError(eventName: string, data?: ITelemetryData) {\n\t\treturn Promise.resolve(undefined);\n\t}\n\tpublicLogError2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>) {\n\t\treturn this.publicLogError(eventName, data as ITelemetryData);\n\t}\n\n\tsetExperimentProperty() { }\n\tsetEnabled() { }\n\tisOptedIn = true;\n\tgetTelemetryInfo(): Promise<ITelemetryInfo> {\n\t\treturn Promise.resolve({\n\t\t\tinstanceId: 'someValue.instanceId',\n\t\t\tsessionId: 'someValue.sessionId',\n\t\t\tmachineId: 'someValue.machineId'\n\t\t});\n\t}\n};\n\nexport interface ITelemetryAppender {\n\tlog(eventName: string, data: any): void;\n\tflush(): Promise<any>;\n}\n\nexport function combinedAppender(...appenders: ITelemetryAppender[]): ITelemetryAppender {\n\treturn {\n\t\tlog: (e, d) => appenders.forEach(a => a.log(e, d)),\n\t\tflush: () => Promise.all(appenders.map(a => a.flush()))\n\t};\n}\n\nexport const NullAppender: ITelemetryAppender = { log: () => null, flush: () => Promise.resolve(null) };\n\n\n/* __GDPR__FRAGMENT__\n\t\"URIDescriptor\" : {\n\t\t\"mimeType\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"scheme\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"ext\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"path\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t}\n*/\nexport interface URIDescriptor {\n\tmimeType?: string;\n\tscheme?: string;\n\text?: string;\n\tpath?: string;\n}\n\nexport function configurationTelemetry(telemetryService: ITelemetryService, configurationService: IConfigurationService): IDisposable {\n\treturn configurationService.onDidChangeConfiguration(event => {\n\t\tif (event.source !== ConfigurationTarget.DEFAULT) {\n\t\t\ttype UpdateConfigurationClassification = {\n\t\t\t\tconfigurationSource: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\t\t\t\tconfigurationKeys: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\t\t\t};\n\t\t\ttype UpdateConfigurationEvent = {\n\t\t\t\tconfigurationSource: string;\n\t\t\t\tconfigurationKeys: string[];\n\t\t\t};\n\t\t\ttelemetryService.publicLog2<UpdateConfigurationEvent, UpdateConfigurationClassification>('updateConfiguration', {\n\t\t\t\tconfigurationSource: ConfigurationTargetToString(event.source),\n\t\t\t\tconfigurationKeys: flattenKeys(event.sourceConfig)\n\t\t\t});\n\t\t}\n\t});\n}\n\nexport interface Properties {\n\t[key: string]: string;\n}\n\nexport interface Measurements {\n\t[key: string]: number;\n}\n\nexport function validateTelemetryData(data?: any): { properties: Properties, measurements: Measurements } {\n\n\tconst properties: Properties = Object.create(null);\n\tconst measurements: Measurements = Object.create(null);\n\n\tconst flat = Object.create(null);\n\tflatten(data, flat);\n\n\tfor (let prop in flat) {\n\t\t// enforce property names less than 150 char, take the last 150 char\n\t\tprop = prop.length > 150 ? prop.substr(prop.length - 149) : prop;\n\t\tconst value = flat[prop];\n\n\t\tif (typeof value === 'number') {\n\t\t\tmeasurements[prop] = value;\n\n\t\t} else if (typeof value === 'boolean') {\n\t\t\tmeasurements[prop] = value ? 1 : 0;\n\n\t\t} else if (typeof value === 'string') {\n\t\t\t//enforce property value to be less than 1024 char, take the first 1024 char\n\t\t\tproperties[prop] = value.substring(0, 1023);\n\n\t\t} else if (typeof value !== 'undefined' && value !== null) {\n\t\t\tproperties[prop] = value;\n\t\t}\n\t}\n\n\treturn {\n\t\tproperties,\n\t\tmeasurements\n\t};\n}\n\nexport function cleanRemoteAuthority(remoteAuthority?: string): string {\n\tif (!remoteAuthority) {\n\t\treturn 'none';\n\t}\n\n\tlet ret = 'other';\n\tconst allowedAuthorities = ['ssh-remote', 'dev-container', 'attached-container', 'wsl'];\n\tallowedAuthorities.forEach((res: string) => {\n\t\tif (remoteAuthority!.indexOf(`${res}+`) === 0) {\n\t\t\tret = res;\n\t\t}\n\t});\n\n\treturn ret;\n}\n\nfunction flatten(obj: any, result: { [key: string]: any }, order: number = 0, prefix?: string): void {\n\tif (!obj) {\n\t\treturn;\n\t}\n\n\tfor (let item of Object.getOwnPropertyNames(obj)) {\n\t\tconst value = obj[item];\n\t\tconst index = prefix ? prefix + item : item;\n\n\t\tif (Array.isArray(value)) {\n\t\t\tresult[index] = safeStringify(value);\n\n\t\t} else if (value instanceof Date) {\n\t\t\t// TODO unsure why this is here and not in _getData\n\t\t\tresult[index] = value.toISOString();\n\n\t\t} else if (isObject(value)) {\n\t\t\tif (order < 2) {\n\t\t\t\tflatten(value, result, order + 1, index + '.');\n\t\t\t} else {\n\t\t\t\tresult[index] = safeStringify(value);\n\t\t\t}\n\t\t} else {\n\t\t\tresult[index] = value;\n\t\t}\n\t}\n}\n\nfunction flattenKeys(value: Object | undefined): string[] {\n\tif (!value) {\n\t\treturn [];\n\t}\n\tconst result: string[] = [];\n\tflatKeys(result, '', value);\n\treturn result;\n}\n\nfunction flatKeys(result: string[], prefix: string, value: { [key: string]: any } | undefined): void {\n\tif (value && typeof value === 'object' && !Array.isArray(value)) {\n\t\tObject.keys(value)\n\t\t\t.forEach(key => flatKeys(result, prefix ? `${prefix}.${key}` : key, value[key]));\n\t} else {\n\t\tresult.push(prefix);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { ILogger, ILoggerService } from 'vs/platform/log/common/log';\nimport { ITelemetryAppender, validateTelemetryData } from 'vs/platform/telemetry/common/telemetryUtils';\n\nexport class TelemetryLogAppender extends Disposable implements ITelemetryAppender {\n\n\tprivate readonly logger: ILogger;\n\n\tconstructor(\n\t\t@ILoggerService loggerService: ILoggerService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService\n\t) {\n\t\tsuper();\n\t\tthis.logger = this._register(loggerService.getLogger(environmentService.telemetryLogResource));\n\t\tthis.logger.info('The below are logs for every telemetry event sent from VS Code once the log level is set to trace.');\n\t\tthis.logger.info('===========================================================');\n\t}\n\n\tflush(): Promise<any> {\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tlog(eventName: string, data: any): void {\n\t\tthis.logger.trace(`telemetry/${eventName}`, validateTelemetryData(data));\n\t}\n}\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as appInsights from 'applicationinsights';\nimport { mixin } from 'vs/base/common/objects';\nimport { ITelemetryAppender, validateTelemetryData } from 'vs/platform/telemetry/common/telemetryUtils';\n\nfunction getClient(aiKey: string): appInsights.TelemetryClient {\n\n\tlet client: appInsights.TelemetryClient;\n\tif (appInsights.defaultClient) {\n\t\tclient = new appInsights.TelemetryClient(aiKey);\n\t\tclient.channel.setUseDiskRetryCaching(true);\n\t} else {\n\t\tappInsights.setup(aiKey)\n\t\t\t.setAutoCollectRequests(false)\n\t\t\t.setAutoCollectPerformance(false)\n\t\t\t.setAutoCollectExceptions(false)\n\t\t\t.setAutoCollectDependencies(false)\n\t\t\t.setAutoDependencyCorrelation(false)\n\t\t\t.setAutoCollectConsole(false)\n\t\t\t.setInternalLogging(false, false)\n\t\t\t.setUseDiskRetryCaching(true)\n\t\t\t.start();\n\t\tclient = appInsights.defaultClient;\n\t}\n\n\tif (aiKey.indexOf('AIF-') === 0) {\n\t\tclient.config.endpointUrl = 'https://vortex.data.microsoft.com/collect/v1';\n\t}\n\treturn client;\n}\n\n\nexport class AppInsightsAppender implements ITelemetryAppender {\n\n\tprivate _aiClient?: appInsights.TelemetryClient;\n\n\tconstructor(\n\t\tprivate _eventPrefix: string,\n\t\tprivate _defaultData: { [key: string]: any } | null,\n\t\taiKeyOrClientFactory: string | (() => appInsights.TelemetryClient), // allow factory function for testing\n\t) {\n\t\tif (!this._defaultData) {\n\t\t\tthis._defaultData = Object.create(null);\n\t\t}\n\n\t\tif (typeof aiKeyOrClientFactory === 'string') {\n\t\t\tthis._aiClient = getClient(aiKeyOrClientFactory);\n\t\t} else if (typeof aiKeyOrClientFactory === 'function') {\n\t\t\tthis._aiClient = aiKeyOrClientFactory();\n\t\t}\n\t}\n\n\tlog(eventName: string, data?: any): void {\n\t\tif (!this._aiClient) {\n\t\t\treturn;\n\t\t}\n\t\tdata = mixin(data, this._defaultData);\n\t\tdata = validateTelemetryData(data);\n\n\t\tthis._aiClient.trackEvent({\n\t\t\tname: this._eventPrefix + '/' + eventName,\n\t\t\tproperties: data.properties,\n\t\t\tmeasurements: data.measurements\n\t\t});\n\t}\n\n\tflush(): Promise<any> {\n\t\tif (this._aiClient) {\n\t\t\treturn new Promise(resolve => {\n\t\t\t\tthis._aiClient!.flush({\n\t\t\t\t\tcallback: () => {\n\t\t\t\t\t\t// all data flushed\n\t\t\t\t\t\tthis._aiClient = undefined;\n\t\t\t\t\t\tresolve(undefined);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\treturn Promise.resolve(undefined);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as Platform from 'vs/base/common/platform';\nimport * as os from 'os';\nimport * as uuid from 'vs/base/common/uuid';\nimport { readFile } from 'vs/base/node/pfs';\n\nexport async function resolveCommonProperties(\n\tcommit: string | undefined,\n\tversion: string | undefined,\n\tmachineId: string | undefined,\n\tmsftInternalDomains: string[] | undefined,\n\tinstallSourcePath: string,\n\tproduct?: string\n): Promise<{ [name: string]: string | boolean | undefined; }> {\n\tconst result: { [name: string]: string | boolean | undefined; } = Object.create(null);\n\n\t// __GDPR__COMMON__ \"common.machineId\" : { \"endPoint\": \"MacAddressHash\", \"classification\": \"EndUserPseudonymizedInformation\", \"purpose\": \"FeatureInsight\" }\n\tresult['common.machineId'] = machineId;\n\t// __GDPR__COMMON__ \"sessionID\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['sessionID'] = uuid.generateUuid() + Date.now();\n\t// __GDPR__COMMON__ \"commitHash\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['commitHash'] = commit;\n\t// __GDPR__COMMON__ \"version\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['version'] = version;\n\t// __GDPR__COMMON__ \"common.platformVersion\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['common.platformVersion'] = (os.release() || '').replace(/^(\\d+)(\\.\\d+)?(\\.\\d+)?(.*)/, '$1$2$3');\n\t// __GDPR__COMMON__ \"common.platform\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['common.platform'] = Platform.PlatformToString(Platform.platform);\n\t// __GDPR__COMMON__ \"common.nodePlatform\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['common.nodePlatform'] = process.platform;\n\t// __GDPR__COMMON__ \"common.nodeArch\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['common.nodeArch'] = process.arch;\n\t// __GDPR__COMMON__ \"common.product\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['common.product'] = product || 'desktop';\n\n\tconst msftInternal = verifyMicrosoftInternalDomain(msftInternalDomains || []);\n\tif (msftInternal) {\n\t\t// __GDPR__COMMON__ \"common.msftInternal\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true }\n\t\tresult['common.msftInternal'] = msftInternal;\n\t}\n\n\t// dynamic properties which value differs on each call\n\tlet seq = 0;\n\tconst startTime = Date.now();\n\tObject.defineProperties(result, {\n\t\t// __GDPR__COMMON__ \"timestamp\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t'timestamp': {\n\t\t\tget: () => new Date(),\n\t\t\tenumerable: true\n\t\t},\n\t\t// __GDPR__COMMON__ \"common.timesincesessionstart\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true }\n\t\t'common.timesincesessionstart': {\n\t\t\tget: () => Date.now() - startTime,\n\t\t\tenumerable: true\n\t\t},\n\t\t// __GDPR__COMMON__ \"common.sequence\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true }\n\t\t'common.sequence': {\n\t\t\tget: () => seq++,\n\t\t\tenumerable: true\n\t\t}\n\t});\n\n\tif (process.platform === 'linux' && process.env.SNAP && process.env.SNAP_REVISION) {\n\t\t// __GDPR__COMMON__ \"common.snap\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\tresult['common.snap'] = 'true';\n\t}\n\n\ttry {\n\t\tconst contents = await readFile(installSourcePath, 'utf8');\n\n\t\t// __GDPR__COMMON__ \"common.source\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\tresult['common.source'] = contents.slice(0, 30);\n\t} catch (error) {\n\t\t// ignore error\n\t}\n\n\treturn result;\n}\n\nfunction verifyMicrosoftInternalDomain(domainList: readonly string[]): boolean {\n\tif (!process || !process.env || !process.env['USERDNSDOMAIN']) {\n\t\treturn false;\n\t}\n\n\tconst domain = process.env['USERDNSDOMAIN']!.toLowerCase();\n\treturn domainList.some(msftDomain => domain === msftDomain);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { readdirSync } from 'vs/base/node/pfs';\nimport { statSync, readFileSync } from 'fs';\nimport { join } from 'vs/base/common/path';\n\nexport function buildTelemetryMessage(appRoot: string, extensionsPath?: string): string {\n\tconst mergedTelemetry = Object.create(null);\n\t// Simple function to merge the telemetry into one json object\n\tconst mergeTelemetry = (contents: string, dirName: string) => {\n\t\tconst telemetryData = JSON.parse(contents);\n\t\tmergedTelemetry[dirName] = telemetryData;\n\t};\n\tif (extensionsPath) {\n\t\t// Gets all the directories inside the extension directory\n\t\tconst dirs = readdirSync(extensionsPath).filter(files => {\n\t\t\t// This handles case where broken symbolic links can cause statSync to throw and error\n\t\t\ttry {\n\t\t\t\treturn statSync(join(extensionsPath, files)).isDirectory();\n\t\t\t} catch {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t\tconst telemetryJsonFolders: string[] = [];\n\t\tdirs.forEach((dir) => {\n\t\t\tconst files = readdirSync(join(extensionsPath, dir)).filter(file => file === 'telemetry.json');\n\t\t\t// We know it contains a telemetry.json file so we add it to the list of folders which have one\n\t\t\tif (files.length === 1) {\n\t\t\t\ttelemetryJsonFolders.push(dir);\n\t\t\t}\n\t\t});\n\t\ttelemetryJsonFolders.forEach((folder) => {\n\t\t\tconst contents = readFileSync(join(extensionsPath, folder, 'telemetry.json')).toString();\n\t\t\tmergeTelemetry(contents, folder);\n\t\t});\n\t}\n\tlet contents = readFileSync(join(appRoot, 'telemetry-core.json')).toString();\n\tmergeTelemetry(contents, 'vscode-core');\n\tcontents = readFileSync(join(appRoot, 'telemetry-extensions.json')).toString();\n\tmergeTelemetry(contents, 'vscode-extensions');\n\treturn JSON.stringify(mergedTelemetry, null, 4);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { localize } from 'vs/nls';\nimport { IWorkspaceFolder, IWorkspace } from 'vs/platform/workspace/common/workspace';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { isWindows, isLinux, isMacintosh } from 'vs/base/common/platform';\nimport { extname, isAbsolute } from 'vs/base/common/path';\nimport { dirname, resolvePath, isEqualAuthority, relativePath, extname as resourceExtname, extUriBiasedIgnorePathCase } from 'vs/base/common/resources';\nimport * as jsonEdit from 'vs/base/common/jsonEdit';\nimport * as json from 'vs/base/common/json';\nimport { Schemas } from 'vs/base/common/network';\nimport { normalizeDriveLetter } from 'vs/base/common/labels';\nimport { toSlashes } from 'vs/base/common/extpath';\nimport { FormattingOptions } from 'vs/base/common/jsonFormatter';\nimport { getRemoteAuthority } from 'vs/platform/remote/common/remoteHosts';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { Event } from 'vs/base/common/event';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\n\nexport const WORKSPACE_EXTENSION = 'code-workspace';\nexport const WORKSPACE_FILTER = [{ name: localize('codeWorkspace', \"Code Workspace\"), extensions: [WORKSPACE_EXTENSION] }];\nexport const UNTITLED_WORKSPACE_NAME = 'workspace.json';\n\nexport const IWorkspacesService = createDecorator<IWorkspacesService>('workspacesService');\n\nexport interface IWorkspacesService {\n\n\treadonly _serviceBrand: undefined;\n\n\t// Workspaces Management\n\tenterWorkspace(path: URI): Promise<IEnterWorkspaceResult | null>;\n\tcreateUntitledWorkspace(folders?: IWorkspaceFolderCreationData[], remoteAuthority?: string): Promise<IWorkspaceIdentifier>;\n\tdeleteUntitledWorkspace(workspace: IWorkspaceIdentifier): Promise<void>;\n\tgetWorkspaceIdentifier(workspacePath: URI): Promise<IWorkspaceIdentifier>;\n\n\t// Workspaces History\n\treadonly onRecentlyOpenedChange: Event<void>;\n\taddRecentlyOpened(recents: IRecent[]): Promise<void>;\n\tremoveRecentlyOpened(workspaces: URI[]): Promise<void>;\n\tclearRecentlyOpened(): Promise<void>;\n\tgetRecentlyOpened(): Promise<IRecentlyOpened>;\n\n\t// Dirty Workspaces\n\tgetDirtyWorkspaces(): Promise<Array<IWorkspaceIdentifier | URI>>;\n}\n\nexport interface IRecentlyOpened {\n\tworkspaces: Array<IRecentWorkspace | IRecentFolder>;\n\tfiles: IRecentFile[];\n}\n\nexport type IRecent = IRecentWorkspace | IRecentFolder | IRecentFile;\n\nexport interface IRecentWorkspace {\n\tworkspace: IWorkspaceIdentifier;\n\tlabel?: string;\n}\n\nexport interface IRecentFolder {\n\tfolderUri: ISingleFolderWorkspaceIdentifier;\n\tlabel?: string;\n}\n\nexport interface IRecentFile {\n\tfileUri: URI;\n\tlabel?: string;\n}\n\nexport function isRecentWorkspace(curr: IRecent): curr is IRecentWorkspace {\n\treturn curr.hasOwnProperty('workspace');\n}\n\nexport function isRecentFolder(curr: IRecent): curr is IRecentFolder {\n\treturn curr.hasOwnProperty('folderUri');\n}\n\nexport function isRecentFile(curr: IRecent): curr is IRecentFile {\n\treturn curr.hasOwnProperty('fileUri');\n}\n\n/**\n * A single folder workspace identifier is just the path to the folder.\n */\nexport type ISingleFolderWorkspaceIdentifier = URI;\n\nexport interface IWorkspaceIdentifier {\n\tid: string;\n\tconfigPath: URI;\n}\n\nexport function reviveWorkspaceIdentifier(workspace: { id: string, configPath: UriComponents; }): IWorkspaceIdentifier {\n\treturn { id: workspace.id, configPath: URI.revive(workspace.configPath) };\n}\n\nexport function isStoredWorkspaceFolder(thing: unknown): thing is IStoredWorkspaceFolder {\n\treturn isRawFileWorkspaceFolder(thing) || isRawUriWorkspaceFolder(thing);\n}\n\nexport function isRawFileWorkspaceFolder(thing: any): thing is IRawFileWorkspaceFolder {\n\treturn thing\n\t\t&& typeof thing === 'object'\n\t\t&& typeof thing.path === 'string'\n\t\t&& (!thing.name || typeof thing.name === 'string');\n}\n\nexport function isRawUriWorkspaceFolder(thing: any): thing is IRawUriWorkspaceFolder {\n\treturn thing\n\t\t&& typeof thing === 'object'\n\t\t&& typeof thing.uri === 'string'\n\t\t&& (!thing.name || typeof thing.name === 'string');\n}\n\nexport interface IRawFileWorkspaceFolder {\n\tpath: string;\n\tname?: string;\n}\n\nexport interface IRawUriWorkspaceFolder {\n\turi: string;\n\tname?: string;\n}\n\nexport type IStoredWorkspaceFolder = IRawFileWorkspaceFolder | IRawUriWorkspaceFolder;\n\nexport interface IResolvedWorkspace extends IWorkspaceIdentifier {\n\tfolders: IWorkspaceFolder[];\n\tremoteAuthority?: string;\n}\n\nexport interface IStoredWorkspace {\n\tfolders: IStoredWorkspaceFolder[];\n\tremoteAuthority?: string;\n}\n\nexport interface IWorkspaceFolderCreationData {\n\turi: URI;\n\tname?: string;\n}\n\nexport interface IUntitledWorkspaceInfo {\n\tworkspace: IWorkspaceIdentifier;\n\tremoteAuthority?: string;\n}\n\nexport interface IEnterWorkspaceResult {\n\tworkspace: IWorkspaceIdentifier;\n\tbackupPath?: string;\n}\n\nexport function isSingleFolderWorkspaceIdentifier(obj: unknown): obj is ISingleFolderWorkspaceIdentifier {\n\treturn obj instanceof URI;\n}\n\nexport function isWorkspaceIdentifier(obj: unknown): obj is IWorkspaceIdentifier {\n\tconst workspaceIdentifier = obj as IWorkspaceIdentifier;\n\n\treturn workspaceIdentifier && typeof workspaceIdentifier.id === 'string' && workspaceIdentifier.configPath instanceof URI;\n}\n\nexport function toWorkspaceIdentifier(workspace: IWorkspace): IWorkspaceIdentifier | ISingleFolderWorkspaceIdentifier | undefined {\n\tif (workspace.configuration) {\n\t\treturn {\n\t\t\tconfigPath: workspace.configuration,\n\t\t\tid: workspace.id\n\t\t};\n\t}\n\n\tif (workspace.folders.length === 1) {\n\t\treturn workspace.folders[0].uri;\n\t}\n\n\t// Empty workspace\n\treturn undefined;\n}\n\nexport function isUntitledWorkspace(path: URI, environmentService: IEnvironmentService): boolean {\n\treturn extUriBiasedIgnorePathCase.isEqualOrParent(path, environmentService.untitledWorkspacesHome);\n}\n\nexport type IMultiFolderWorkspaceInitializationPayload = IWorkspaceIdentifier;\nexport interface ISingleFolderWorkspaceInitializationPayload { id: string; folder: ISingleFolderWorkspaceIdentifier; }\nexport interface IEmptyWorkspaceInitializationPayload { id: string; }\n\nexport type IWorkspaceInitializationPayload = IMultiFolderWorkspaceInitializationPayload | ISingleFolderWorkspaceInitializationPayload | IEmptyWorkspaceInitializationPayload;\n\nexport function isSingleFolderWorkspaceInitializationPayload(obj: any): obj is ISingleFolderWorkspaceInitializationPayload {\n\treturn isSingleFolderWorkspaceIdentifier((obj.folder as ISingleFolderWorkspaceIdentifier));\n}\n\nconst WORKSPACE_SUFFIX = '.' + WORKSPACE_EXTENSION;\n\nexport function hasWorkspaceFileExtension(path: string | URI) {\n\tconst ext = (typeof path === 'string') ? extname(path) : resourceExtname(path);\n\n\treturn ext === WORKSPACE_SUFFIX;\n}\n\nconst SLASH = '/';\n\n/**\n * Given a folder URI and the workspace config folder, computes the IStoredWorkspaceFolder using\n* a relative or absolute path or a uri.\n * Undefined is returned if the folderURI and the targetConfigFolderURI don't have the same schema or authority\n *\n * @param folderURI a workspace folder\n * @param forceAbsolute if set, keep the path absolute\n * @param folderName a workspace name\n * @param targetConfigFolderURI the folder where the workspace is living in\n * @param useSlashForPath if set, use forward slashes for file paths on windows\n */\nexport function getStoredWorkspaceFolder(folderURI: URI, forceAbsolute: boolean, folderName: string | undefined, targetConfigFolderURI: URI, useSlashForPath = !isWindows): IStoredWorkspaceFolder {\n\tif (folderURI.scheme !== targetConfigFolderURI.scheme) {\n\t\treturn { name: folderName, uri: folderURI.toString(true) };\n\t}\n\n\tlet folderPath = !forceAbsolute ? relativePath(targetConfigFolderURI, folderURI) : undefined;\n\tif (folderPath !== undefined) {\n\t\tif (folderPath.length === 0) {\n\t\t\tfolderPath = '.';\n\t\t} else if (isWindows && folderURI.scheme === Schemas.file && !useSlashForPath) {\n\t\t\t// Windows gets special treatment:\n\t\t\t// - use backslahes unless slash is used by other existing folders\n\t\t\tfolderPath = folderPath.replace(/\\//g, '\\\\');\n\t\t}\n\t} else {\n\n\t\t// use absolute path\n\t\tif (folderURI.scheme === Schemas.file) {\n\t\t\tfolderPath = folderURI.fsPath;\n\t\t\tif (isWindows) {\n\t\t\t\t// Windows gets special treatment:\n\t\t\t\t// - normalize all paths to get nice casing of drive letters\n\t\t\t\t// - use backslahes unless slash is used by other existing folders\n\t\t\t\tfolderPath = normalizeDriveLetter(folderPath);\n\t\t\t\tif (useSlashForPath) {\n\t\t\t\t\tfolderPath = toSlashes(folderPath);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (!isEqualAuthority(folderURI.authority, targetConfigFolderURI.authority)) {\n\t\t\t\treturn { name: folderName, uri: folderURI.toString(true) };\n\t\t\t}\n\t\t\tfolderPath = folderURI.path;\n\t\t}\n\t}\n\n\treturn { name: folderName, path: folderPath };\n}\n\n/**\n * Rewrites the content of a workspace file to be saved at a new location.\n * Throws an exception if file is not a valid workspace file\n */\nexport function rewriteWorkspaceFileForNewLocation(rawWorkspaceContents: string, configPathURI: URI, isFromUntitledWorkspace: boolean, targetConfigPathURI: URI) {\n\tlet storedWorkspace = doParseStoredWorkspace(configPathURI, rawWorkspaceContents);\n\n\tconst sourceConfigFolder = dirname(configPathURI);\n\tconst targetConfigFolder = dirname(targetConfigPathURI);\n\n\tconst rewrittenFolders: IStoredWorkspaceFolder[] = [];\n\tconst slashForPath = useSlashForPath(storedWorkspace.folders);\n\n\tfor (const folder of storedWorkspace.folders) {\n\t\tconst folderURI = isRawFileWorkspaceFolder(folder) ? resolvePath(sourceConfigFolder, folder.path) : URI.parse(folder.uri);\n\t\tlet absolute;\n\t\tif (isFromUntitledWorkspace) {\n\t\t\t// if it was an untitled workspace, try to make paths relative\n\t\t\tabsolute = false;\n\t\t} else {\n\t\t\t// for existing workspaces, preserve whether a path was absolute or relative\n\t\t\tabsolute = !isRawFileWorkspaceFolder(folder) || isAbsolute(folder.path);\n\t\t}\n\t\trewrittenFolders.push(getStoredWorkspaceFolder(folderURI, absolute, folder.name, targetConfigFolder, slashForPath));\n\t}\n\n\t// Preserve as much of the existing workspace as possible by using jsonEdit\n\t// and only changing the folders portion.\n\tconst formattingOptions: FormattingOptions = { insertSpaces: false, tabSize: 4, eol: (isLinux || isMacintosh) ? '\\n' : '\\r\\n' };\n\tconst edits = jsonEdit.setProperty(rawWorkspaceContents, ['folders'], rewrittenFolders, formattingOptions);\n\tlet newContent = jsonEdit.applyEdits(rawWorkspaceContents, edits);\n\n\tif (storedWorkspace.remoteAuthority === getRemoteAuthority(targetConfigPathURI)) {\n\t\t// unsaved remote workspaces have the remoteAuthority set. Remove it when no longer nexessary.\n\t\tnewContent = jsonEdit.applyEdits(newContent, jsonEdit.removeProperty(newContent, ['remoteAuthority'], formattingOptions));\n\t}\n\n\treturn newContent;\n}\n\nfunction doParseStoredWorkspace(path: URI, contents: string): IStoredWorkspace {\n\n\t// Parse workspace file\n\tlet storedWorkspace: IStoredWorkspace = json.parse(contents); // use fault tolerant parser\n\n\t// Filter out folders which do not have a path or uri set\n\tif (storedWorkspace && Array.isArray(storedWorkspace.folders)) {\n\t\tstoredWorkspace.folders = storedWorkspace.folders.filter(folder => isStoredWorkspaceFolder(folder));\n\t} else {\n\t\tthrow new Error(`${path} looks like an invalid workspace file.`);\n\t}\n\n\treturn storedWorkspace;\n}\n\nexport function useSlashForPath(storedFolders: IStoredWorkspaceFolder[]): boolean {\n\tif (isWindows) {\n\t\treturn storedFolders.some(folder => isRawFileWorkspaceFolder(folder) && folder.path.indexOf(SLASH) >= 0);\n\t}\n\n\treturn true;\n}\n\n//#region Workspace Storage\n\ninterface ISerializedRecentlyOpened {\n\tworkspaces3: Array<ISerializedWorkspace | string>; // workspace or URI.toString() // added in 1.32\n\tworkspaceLabels?: Array<string | null>; // added in 1.33\n\tfiles2: string[]; // files as URI.toString() // added in 1.32\n\tfileLabels?: Array<string | null>; // added in 1.33\n}\n\ninterface ISerializedWorkspace { id: string; configURIPath: string; }\n\nexport type RecentlyOpenedStorageData = object;\n\nexport function restoreRecentlyOpened(data: RecentlyOpenedStorageData | undefined, logService: ILogService): IRecentlyOpened {\n\tconst result: IRecentlyOpened = { workspaces: [], files: [] };\n\tif (data) {\n\t\tconst restoreGracefully = function <T>(entries: T[], func: (entry: T, index: number) => void) {\n\t\t\tfor (let i = 0; i < entries.length; i++) {\n\t\t\t\ttry {\n\t\t\t\t\tfunc(entries[i], i);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tlogService.warn(`Error restoring recent entry ${JSON.stringify(entries[i])}: ${e.toString()}. Skip entry.`);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tconst storedRecents = data as ISerializedRecentlyOpened;\n\t\tif (Array.isArray(storedRecents.workspaces3)) {\n\t\t\trestoreGracefully(storedRecents.workspaces3, (workspace, i) => {\n\t\t\t\tconst label: string | undefined = (Array.isArray(storedRecents.workspaceLabels) && storedRecents.workspaceLabels[i]) || undefined;\n\t\t\t\tif (typeof workspace === 'object' && typeof workspace.id === 'string' && typeof workspace.configURIPath === 'string') {\n\t\t\t\t\tresult.workspaces.push({ label, workspace: { id: workspace.id, configPath: URI.parse(workspace.configURIPath) } });\n\t\t\t\t} else if (typeof workspace === 'string') {\n\t\t\t\t\tresult.workspaces.push({ label, folderUri: URI.parse(workspace) });\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tif (Array.isArray(storedRecents.files2)) {\n\t\t\trestoreGracefully(storedRecents.files2, (file, i) => {\n\t\t\t\tconst label: string | undefined = (Array.isArray(storedRecents.fileLabels) && storedRecents.fileLabels[i]) || undefined;\n\t\t\t\tif (typeof file === 'string') {\n\t\t\t\t\tresult.files.push({ label, fileUri: URI.parse(file) });\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function toStoreData(recents: IRecentlyOpened): RecentlyOpenedStorageData {\n\tconst serialized: ISerializedRecentlyOpened = { workspaces3: [], files2: [] };\n\n\tlet hasLabel = false;\n\tconst workspaceLabels: (string | null)[] = [];\n\tfor (const recent of recents.workspaces) {\n\t\tif (isRecentFolder(recent)) {\n\t\t\tserialized.workspaces3.push(recent.folderUri.toString());\n\t\t} else {\n\t\t\tserialized.workspaces3.push({ id: recent.workspace.id, configURIPath: recent.workspace.configPath.toString() });\n\t\t}\n\t\tworkspaceLabels.push(recent.label || null);\n\t\thasLabel = hasLabel || !!recent.label;\n\t}\n\n\tif (hasLabel) {\n\t\tserialized.workspaceLabels = workspaceLabels;\n\t}\n\n\thasLabel = false;\n\n\tconst fileLabels: (string | null)[] = [];\n\tfor (const recent of recents.files) {\n\t\tserialized.files2.push(recent.fileUri.toString());\n\t\tfileLabels.push(recent.label || null);\n\t\thasLabel = hasLabel || !!recent.label;\n\t}\n\n\tif (hasLabel) {\n\t\tserialized.fileLabels = fileLabels;\n\t}\n\n\treturn serialized;\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport * as resources from 'vs/base/common/resources';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { TernarySearchTree } from 'vs/base/common/map';\nimport { Event } from 'vs/base/common/event';\nimport { IWorkspaceIdentifier, IStoredWorkspaceFolder, isRawFileWorkspaceFolder, isRawUriWorkspaceFolder, ISingleFolderWorkspaceIdentifier } from 'vs/platform/workspaces/common/workspaces';\nimport { IWorkspaceFolderProvider } from 'vs/base/common/labels';\n\nexport const IWorkspaceContextService = createDecorator<IWorkspaceContextService>('contextService');\n\nexport interface IWorkspaceContextService extends IWorkspaceFolderProvider {\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * An event which fires on workbench state changes.\n\t */\n\treadonly onDidChangeWorkbenchState: Event<WorkbenchState>;\n\n\t/**\n\t * An event which fires on workspace name changes.\n\t */\n\treadonly onDidChangeWorkspaceName: Event<void>;\n\n\t/**\n\t * An event which fires on workspace folders change.\n\t */\n\treadonly onDidChangeWorkspaceFolders: Event<IWorkspaceFoldersChangeEvent>;\n\n\t/**\n\t * Provides access to the complete workspace object.\n\t */\n\tgetCompleteWorkspace(): Promise<IWorkspace>;\n\n\t/**\n\t * Provides access to the workspace object the window is running with.\n\t * Use `getCompleteWorkspace` to get complete workspace object.\n\t */\n\tgetWorkspace(): IWorkspace;\n\n\t/**\n\t * Return the state of the workbench.\n\t *\n\t * WorkbenchState.EMPTY - if the workbench was opened with empty window or file\n\t * WorkbenchState.FOLDER - if the workbench was opened with a folder\n\t * WorkbenchState.WORKSPACE - if the workbench was opened with a workspace\n\t */\n\tgetWorkbenchState(): WorkbenchState;\n\n\t/**\n\t * Returns the folder for the given resource from the workspace.\n\t * Can be null if there is no workspace or the resource is not inside the workspace.\n\t */\n\tgetWorkspaceFolder(resource: URI): IWorkspaceFolder | null;\n\n\t/**\n\t * Return `true` if the current workspace has the given identifier otherwise `false`.\n\t */\n\tisCurrentWorkspace(workspaceIdentifier: ISingleFolderWorkspaceIdentifier | IWorkspaceIdentifier): boolean;\n\n\t/**\n\t * Returns if the provided resource is inside the workspace or not.\n\t */\n\tisInsideWorkspace(resource: URI): boolean;\n}\n\nexport const enum WorkbenchState {\n\tEMPTY = 1,\n\tFOLDER,\n\tWORKSPACE\n}\n\nexport interface IWorkspaceFoldersChangeEvent {\n\tadded: IWorkspaceFolder[];\n\tremoved: IWorkspaceFolder[];\n\tchanged: IWorkspaceFolder[];\n}\n\nexport namespace IWorkspace {\n\texport function isIWorkspace(thing: unknown): thing is IWorkspace {\n\t\treturn !!(thing && typeof thing === 'object'\n\t\t\t&& typeof (thing as IWorkspace).id === 'string'\n\t\t\t&& Array.isArray((thing as IWorkspace).folders));\n\t}\n}\n\nexport interface IWorkspace {\n\n\t/**\n\t * the unique identifier of the workspace.\n\t */\n\treadonly id: string;\n\n\t/**\n\t * Folders in the workspace.\n\t */\n\treadonly folders: IWorkspaceFolder[];\n\n\t/**\n\t * the location of the workspace configuration\n\t */\n\treadonly configuration?: URI | null;\n}\n\nexport interface IWorkspaceFolderData {\n\n\t/**\n\t * The associated URI for this workspace folder.\n\t */\n\treadonly uri: URI;\n\n\t/**\n\t * The name of this workspace folder. Defaults to\n\t * the basename of its [uri-path](#Uri.path)\n\t */\n\treadonly name: string;\n\n\t/**\n\t * The ordinal number of this workspace folder.\n\t */\n\treadonly index: number;\n}\n\nexport namespace IWorkspaceFolder {\n\texport function isIWorkspaceFolder(thing: unknown): thing is IWorkspaceFolder {\n\t\treturn !!(thing && typeof thing === 'object'\n\t\t\t&& URI.isUri((thing as IWorkspaceFolder).uri)\n\t\t\t&& typeof (thing as IWorkspaceFolder).name === 'string'\n\t\t\t&& typeof (thing as IWorkspaceFolder).toResource === 'function');\n\t}\n}\n\nexport interface IWorkspaceFolder extends IWorkspaceFolderData {\n\n\t/**\n\t * Given workspace folder relative path, returns the resource with the absolute path.\n\t */\n\ttoResource: (relativePath: string) => URI;\n}\n\nexport class Workspace implements IWorkspace {\n\n\tprivate _foldersMap: TernarySearchTree<URI, WorkspaceFolder> = TernarySearchTree.forUris<WorkspaceFolder>();\n\tprivate _folders!: WorkspaceFolder[];\n\n\tconstructor(\n\t\tprivate _id: string,\n\t\tfolders: WorkspaceFolder[] = [],\n\t\tprivate _configuration: URI | null = null\n\t) {\n\t\tthis.folders = folders;\n\t}\n\n\tupdate(workspace: Workspace) {\n\t\tthis._id = workspace.id;\n\t\tthis._configuration = workspace.configuration;\n\t\tthis.folders = workspace.folders;\n\t}\n\n\tget folders(): WorkspaceFolder[] {\n\t\treturn this._folders;\n\t}\n\n\tset folders(folders: WorkspaceFolder[]) {\n\t\tthis._folders = folders;\n\t\tthis.updateFoldersMap();\n\t}\n\n\tget id(): string {\n\t\treturn this._id;\n\t}\n\n\tget configuration(): URI | null {\n\t\treturn this._configuration;\n\t}\n\n\tset configuration(configuration: URI | null) {\n\t\tthis._configuration = configuration;\n\t}\n\n\tgetFolder(resource: URI): IWorkspaceFolder | null {\n\t\tif (!resource) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this._foldersMap.findSubstr(resource.with({\n\t\t\tscheme: resource.scheme,\n\t\t\tauthority: resource.authority,\n\t\t\tpath: resource.path\n\t\t})) || null;\n\t}\n\n\tprivate updateFoldersMap(): void {\n\t\tthis._foldersMap = TernarySearchTree.forUris<WorkspaceFolder>();\n\t\tfor (const folder of this.folders) {\n\t\t\tthis._foldersMap.set(folder.uri, folder);\n\t\t}\n\t}\n\n\ttoJSON(): IWorkspace {\n\t\treturn { id: this.id, folders: this.folders, configuration: this.configuration };\n\t}\n}\n\nexport class WorkspaceFolder implements IWorkspaceFolder {\n\n\treadonly uri: URI;\n\tname: string;\n\tindex: number;\n\n\tconstructor(data: IWorkspaceFolderData,\n\t\treadonly raw?: IStoredWorkspaceFolder) {\n\t\tthis.uri = data.uri;\n\t\tthis.index = data.index;\n\t\tthis.name = data.name;\n\t}\n\n\ttoResource(relativePath: string): URI {\n\t\treturn resources.joinPath(this.uri, relativePath);\n\t}\n\n\ttoJSON(): IWorkspaceFolderData {\n\t\treturn { uri: this.uri, name: this.name, index: this.index };\n\t}\n}\n\nexport function toWorkspaceFolder(resource: URI): WorkspaceFolder {\n\treturn new WorkspaceFolder({ uri: resource, index: 0, name: resources.basenameOrAuthority(resource) }, { uri: resource.toString() });\n}\n\nexport function toWorkspaceFolders(configuredFolders: IStoredWorkspaceFolder[], workspaceConfigFile: URI): WorkspaceFolder[] {\n\tlet result: WorkspaceFolder[] = [];\n\tlet seen: Set<string> = new Set();\n\n\tconst relativeTo = resources.dirname(workspaceConfigFile);\n\tfor (let configuredFolder of configuredFolders) {\n\t\tlet uri: URI | null = null;\n\t\tif (isRawFileWorkspaceFolder(configuredFolder)) {\n\t\t\tif (configuredFolder.path) {\n\t\t\t\turi = resources.resolvePath(relativeTo, configuredFolder.path);\n\t\t\t}\n\t\t} else if (isRawUriWorkspaceFolder(configuredFolder)) {\n\t\t\ttry {\n\t\t\t\turi = URI.parse(configuredFolder.uri);\n\t\t\t\t// this makes sure all workspace folder are absolute\n\t\t\t\tif (uri.path[0] !== '/') {\n\t\t\t\t\turi = uri.with({ path: '/' + uri.path });\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tconsole.warn(e);\n\t\t\t\t// ignore\n\t\t\t}\n\t\t}\n\t\tif (uri) {\n\t\t\t// remove duplicates\n\t\t\tlet comparisonKey = resources.getComparisonKey(uri);\n\t\t\tif (!seen.has(comparisonKey)) {\n\t\t\t\tseen.add(comparisonKey);\n\n\t\t\t\tconst name = configuredFolder.name || resources.basenameOrAuthority(uri);\n\t\t\t\tresult.push(new WorkspaceFolder({ uri, name, index: result.length }, configuredFolder));\n\t\t\t}\n\t\t}\n\t}\n\n\treturn result;\n}\n","import { ReadWriteConnection } from '@coder/node-browser';\nimport { Event } from 'vs/base/common/event';\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const INodeProxyService = createDecorator<INodeProxyService>('nodeProxyService');\n\nexport interface INodeProxyService extends ReadWriteConnection {\n\t_serviceBrand: any;\n\tsend(message: string): void;\n\tonMessage: Event<string>;\n\tonUp: Event<void>;\n\tonClose: Event<void>;\n\tonDown: Event<void>;\n}\n\nexport class NodeProxyChannel implements IServerChannel {\n\tconstructor(private service: INodeProxyService) {}\n\n\tlisten(_: unknown, event: string): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase 'onMessage': return this.service.onMessage;\n\t\t}\n\t\tthrow new Error(`Invalid listen ${event}`);\n\t}\n\n\tasync call(_: unknown, command: string, args?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'send': return this.service.send(args[0]);\n\t\t}\n\t\tthrow new Error(`Invalid call ${command}`);\n\t}\n}\n\nexport class NodeProxyChannelClient {\n\t_serviceBrand: any;\n\n\tpublic readonly onMessage: Event<string>;\n\n\tconstructor(private readonly channel: IChannel) {\n\t\tthis.onMessage = this.channel.listen<string>('onMessage');\n\t}\n\n\tpublic send(data: string): void {\n\t\tthis.channel.call('send', [data]);\n\t}\n}\n","import { ITelemetryData } from 'vs/base/common/actions';\nimport { Event } from 'vs/base/common/event';\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { ClassifiedEvent, GDPRClassification, StrictPropertyCheck } from 'vs/platform/telemetry/common/gdprTypings';\nimport { ITelemetryInfo, ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\n\nexport class TelemetryChannel implements IServerChannel {\n\tconstructor(private service: ITelemetryService) {}\n\n\tlisten(_: unknown, event: string): Event<any> {\n\t\tthrow new Error(`Invalid listen ${event}`);\n\t}\n\n\tcall(_: unknown, command: string, args?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'publicLog': return this.service.publicLog(args[0], args[1], args[2]);\n\t\t\tcase 'publicLog2': return this.service.publicLog2(args[0], args[1], args[2]);\n\t\t\tcase 'publicLogError': return this.service.publicLogError(args[0], args[1]);\n\t\t\tcase 'publicLogError2': return this.service.publicLogError2(args[0], args[1]);\n\t\t\tcase 'setEnabled': return Promise.resolve(this.service.setEnabled(args[0]));\n\t\t\tcase 'getTelemetryInfo': return this.service.getTelemetryInfo();\n\t\t\tcase 'setExperimentProperty': return Promise.resolve(this.service.setExperimentProperty(args[0], args[1]));\n\t\t}\n\t\tthrow new Error(`Invalid call ${command}`);\n\t}\n}\n\nexport class TelemetryChannelClient implements ITelemetryService {\n\t_serviceBrand: any;\n\n\t// These don't matter; telemetry is sent to the Node side which decides\n\t// whether to send the telemetry event.\n\tpublic isOptedIn = true;\n\tpublic sendErrorTelemetry = true;\n\n\tconstructor(private readonly channel: IChannel) {}\n\n\tpublic publicLog(eventName: string, data?: ITelemetryData, anonymizeFilePaths?: boolean): Promise<void> {\n\t\treturn this.channel.call('publicLog', [eventName, data, anonymizeFilePaths]);\n\t}\n\n\tpublic publicLog2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>, anonymizeFilePaths?: boolean): Promise<void> {\n\t\treturn this.channel.call('publicLog2', [eventName, data, anonymizeFilePaths]);\n\t}\n\n\tpublic publicLogError(errorEventName: string, data?: ITelemetryData): Promise<void> {\n\t\treturn this.channel.call('publicLogError', [errorEventName, data]);\n\t}\n\n\tpublic publicLogError2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>): Promise<void> {\n\t\treturn this.channel.call('publicLogError2', [eventName, data]);\n\t}\n\n\tpublic setEnabled(value: boolean): void {\n\t\tthis.channel.call('setEnable', [value]);\n\t}\n\n\tpublic getTelemetryInfo(): Promise<ITelemetryInfo> {\n\t\treturn this.channel.call('getTelemetryInfo');\n\t}\n\n\tpublic setExperimentProperty(name: string, value: string): void {\n\t\tthis.channel.call('setExperimentProperty', [name, value]);\n\t}\n}\n","import * as appInsights from 'applicationinsights';\nimport * as https from 'https';\nimport * as http from 'http';\nimport * as os from 'os';\n\nclass Channel {\n\tpublic get _sender() {\n\t\tthrow new Error('unimplemented');\n\t}\n\tpublic get _buffer() {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic setUseDiskRetryCaching(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\tpublic send(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\tpublic triggerSend(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n}\n\nexport class TelemetryClient  {\n\tpublic context: any = undefined;\n\tpublic commonProperties: any = undefined;\n\tpublic config: any = {};\n\n\tpublic channel: any = new Channel();\n\n\tpublic addTelemetryProcessor(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic clearTelemetryProcessors(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic runTelemetryProcessors(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackTrace(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackMetric(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackException(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackRequest(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackDependency(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic track(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackNodeHttpRequestSync(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackNodeHttpRequest(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackNodeHttpDependency(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackEvent(options: appInsights.Contracts.EventTelemetry): void {\n\t\tif (!options.properties) {\n\t\t\toptions.properties = {};\n\t\t}\n\t\tif (!options.measurements) {\n\t\t\toptions.measurements = {};\n\t\t}\n\n\t\ttry {\n\t\t\tconst cpus = os.cpus();\n\t\t\toptions.measurements.cores = cpus.length;\n\t\t\toptions.properties['common.cpuModel'] = cpus[0].model;\n\t\t} catch (error) {}\n\n\t\ttry {\n\t\t\toptions.measurements.memoryFree = os.freemem();\n\t\t\toptions.measurements.memoryTotal = os.totalmem();\n\t\t} catch (error) {}\n\n\t\ttry {\n\t\t\toptions.properties['common.shell'] = os.userInfo().shell;\n\t\t\toptions.properties['common.release'] = os.release();\n\t\t\toptions.properties['common.arch'] = os.arch();\n\t\t} catch (error) {}\n\n\t\ttry {\n\t\t\tconst url = process.env.TELEMETRY_URL || 'https://v1.telemetry.coder.com/track';\n\t\t\tconst request = (/^http:/.test(url) ? http : https).request(url, {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t},\n\t\t\t});\n\t\t\trequest.on('error', () => { /* We don't care. */ });\n\t\t\trequest.write(JSON.stringify(options));\n\t\t\trequest.end();\n\t\t} catch (error) {}\n\t}\n\n\tpublic flush(options: { callback: (v: string) => void }): void {\n\t\tif (options.callback) {\n\t\t\toptions.callback('');\n\t\t}\n\t}\n}\n","import { logger as baseLogger } from '@coder/logger';\nexport const logger = baseLogger.named('vscode');\n","import * as fs from 'fs';\nimport * as path from 'path';\nimport * as util from 'util';\nimport { getPathFromAmdModule } from 'vs/base/common/amd';\nimport * as lp from 'vs/base/node/languagePacks';\nimport product from 'vs/platform/product/common/product';\nimport { Translations } from 'vs/workbench/services/extensions/common/extensionPoints';\n\nconst configurations = new Map<string, Promise<lp.NLSConfiguration>>();\nconst metadataPath = path.join(getPathFromAmdModule(require, ''), 'nls.metadata.json');\n\nexport const isInternalConfiguration = (config: lp.NLSConfiguration): config is lp.InternalNLSConfiguration => {\n\treturn config && !!(<lp.InternalNLSConfiguration>config)._languagePackId;\n};\n\nconst DefaultConfiguration = {\n\tlocale: 'en',\n\tavailableLanguages: {},\n};\n\nexport const getNlsConfiguration = async (locale: string, userDataPath: string): Promise<lp.NLSConfiguration> => {\n\tconst id = `${locale}: ${userDataPath}`;\n\tif (!configurations.has(id)) {\n\t\tconfigurations.set(id, new Promise(async (resolve) =>  {\n\t\t\tconst config = product.commit && await util.promisify(fs.exists)(metadataPath)\n\t\t\t\t? await lp.getNLSConfiguration(product.commit, userDataPath, metadataPath, locale)\n\t\t\t\t: DefaultConfiguration;\n\t\t\tif (isInternalConfiguration(config)) {\n\t\t\t\tconfig._languagePackSupport = true;\n\t\t\t}\n\t\t\t// If the configuration has no results keep trying since code-server\n\t\t\t// doesn't restart when a language is installed so this result would\n\t\t\t// persist (the plugin might not be installed yet or something).\n\t\t\tif (config.locale !== 'en' && config.locale !== 'en-us' && Object.keys(config.availableLanguages).length === 0) {\n\t\t\t\tconfigurations.delete(id);\n\t\t\t}\n\t\t\tresolve(config);\n\t\t}));\n\t}\n\treturn configurations.get(id)!;\n};\n\nexport const getTranslations = async (locale: string, userDataPath: string): Promise<Translations> => {\n\tconst config = await getNlsConfiguration(locale, userDataPath);\n\tif (isInternalConfiguration(config)) {\n\t\ttry {\n\t\t\treturn JSON.parse(await util.promisify(fs.readFile)(config._translationsConfigFile, 'utf8'));\n\t\t} catch (error) { /* Nothing yet. */}\n\t}\n\treturn {};\n};\n\nexport const getLocaleFromConfig = async (userDataPath: string): Promise<string> => {\n\tconst files = ['locale.json', 'argv.json'];\n\tfor (let i = 0; i < files.length; ++i) {\n\t\ttry {\n\t\t\tconst localeConfigUri = path.join(userDataPath, 'User', files[i]);\n\t\t\tconst content = stripComments(await util.promisify(fs.readFile)(localeConfigUri, 'utf8'));\n\t\t\treturn JSON.parse(content).locale;\n\t\t} catch (error) { /* Ignore. */ }\n\t}\n\treturn 'en';\n};\n\n// Taken from src/main.js in the main VS Code source.\nconst stripComments = (content: string): string => {\n\tconst regexp = /('(?:[^\\\\']*(?:\\\\.)?)*')|('(?:[^\\\\']*(?:\\\\.)?)*')|(\\/\\*(?:\\r?\\n|.)*?\\*\\/)|(\\/{2,}.*?(?:(?:\\r?\\n)|$))/g;\n\n\treturn content.replace(regexp, (match, _m1, _m2, m3, m4) => {\n\t\t// Only one of m1, m2, m3, m4 matches\n\t\tif (m3) {\n\t\t\t// A block comment. Replace with nothing\n\t\t\treturn '';\n\t\t} else if (m4) {\n\t\t\t// A line comment. If it ends in \\r?\\n then keep it.\n\t\t\tconst length_1 = m4.length;\n\t\t\tif (length_1 > 2 && m4[length_1 - 1] === '\\n') {\n\t\t\t\treturn m4[length_1 - 2] === '\\r' ? '\\r\\n' : '\\n';\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t} else {\n\t\t\t// We match a string\n\t\t\treturn match;\n\t\t}\n\t});\n};\n","import { field, Logger, logger } from '@coder/logger';\nimport * as cp from 'child_process';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { Emitter } from 'vs/base/common/event';\nimport { FileAccess } from 'vs/base/common/network';\nimport { ISocket } from 'vs/base/parts/ipc/common/ipc.net';\nimport { NodeSocket } from 'vs/base/parts/ipc/node/ipc.net';\nimport { INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { getNlsConfiguration } from 'vs/server/node/nls';\nimport { Protocol } from 'vs/server/node/protocol';\nimport { IExtHostReadyMessage } from 'vs/workbench/services/extensions/common/extensionHostProtocol';\n\nexport abstract class Connection {\n\tprivate readonly _onClose = new Emitter<void>();\n\tpublic readonly onClose = this._onClose.event;\n\tprivate disposed = false;\n\tprivate _offline: number | undefined;\n\n\tpublic constructor(protected protocol: Protocol, public readonly token: string) {}\n\n\tpublic get offline(): number | undefined {\n\t\treturn this._offline;\n\t}\n\n\tpublic reconnect(socket: ISocket, buffer: VSBuffer): void {\n\t\tthis._offline = undefined;\n\t\tthis.doReconnect(socket, buffer);\n\t}\n\n\tpublic dispose(): void {\n\t\tif (!this.disposed) {\n\t\t\tthis.disposed = true;\n\t\t\tthis.doDispose();\n\t\t\tthis._onClose.fire();\n\t\t}\n\t}\n\n\tprotected setOffline(): void {\n\t\tif (!this._offline) {\n\t\t\tthis._offline = Date.now();\n\t\t}\n\t}\n\n\t/**\n\t * Set up the connection on a new socket.\n\t */\n\tprotected abstract doReconnect(socket: ISocket, buffer: VSBuffer): void;\n\tprotected abstract doDispose(): void;\n}\n\n/**\n * Used for all the IPC channels.\n */\nexport class ManagementConnection extends Connection {\n\tpublic constructor(protected protocol: Protocol, token: string) {\n\t\tsuper(protocol, token);\n\t\tprotocol.onClose(() => this.dispose()); // Explicit close.\n\t\tprotocol.onSocketClose(() => this.setOffline()); // Might reconnect.\n\t}\n\n\tprotected doDispose(): void {\n\t\tthis.protocol.sendDisconnect();\n\t\tthis.protocol.dispose();\n\t\tthis.protocol.getUnderlyingSocket().destroy();\n\t}\n\n\tprotected doReconnect(socket: ISocket, buffer: VSBuffer): void {\n\t\tthis.protocol.beginAcceptReconnection(socket, buffer);\n\t\tthis.protocol.endAcceptReconnection();\n\t}\n}\n\ninterface DisconnectedMessage {\n\ttype: 'VSCODE_EXTHOST_DISCONNECTED';\n}\n\ninterface ConsoleMessage {\n\ttype: '__$console';\n\t// See bootstrap-fork.js#L135.\n\tseverity: 'log' | 'warn' | 'error';\n\targuments: any[];\n}\n\ntype ExtHostMessage = DisconnectedMessage | ConsoleMessage | IExtHostReadyMessage;\n\nexport class ExtensionHostConnection extends Connection {\n\tprivate process?: cp.ChildProcess;\n\tprivate readonly logger: Logger;\n\n\tpublic constructor(\n\t\tlocale:string, protocol: Protocol, buffer: VSBuffer, token: string,\n\t\tprivate readonly environment: INativeEnvironmentService,\n\t) {\n\t\tsuper(protocol, token);\n\t\tthis.logger = logger.named('exthost', field('token', token));\n\t\tthis.protocol.dispose();\n\t\tthis.spawn(locale, buffer).then((p) => this.process = p);\n\t\tthis.protocol.getUnderlyingSocket().pause();\n\t}\n\n\tprotected doDispose(): void {\n\t\tif (this.process) {\n\t\t\tthis.process.kill();\n\t\t}\n\t\tthis.protocol.getUnderlyingSocket().destroy();\n\t}\n\n\tprotected doReconnect(socket: ISocket, buffer: VSBuffer): void {\n\t\t// This is just to set the new socket.\n\t\tthis.protocol.beginAcceptReconnection(socket, null);\n\t\tthis.protocol.dispose();\n\t\tthis.sendInitMessage(buffer);\n\t}\n\n\tprivate sendInitMessage(buffer: VSBuffer): void {\n\t\tconst socket = this.protocol.getUnderlyingSocket();\n\t\tsocket.pause();\n\t\tthis.logger.trace('Sending socket');\n\t\tthis.process!.send({ // Process must be set at this point.\n\t\t\ttype: 'VSCODE_EXTHOST_IPC_SOCKET',\n\t\t\tinitialDataChunk: (buffer.buffer as Buffer).toString('base64'),\n\t\t\tskipWebSocketFrames: this.protocol.getSocket() instanceof NodeSocket,\n\t\t}, socket);\n\t}\n\n\tprivate async spawn(locale: string, buffer: VSBuffer): Promise<cp.ChildProcess> {\n\t\tthis.logger.trace('Getting NLS configuration...');\n\t\tconst config = await getNlsConfiguration(locale, this.environment.userDataPath);\n\t\tthis.logger.trace('Spawning extension host...');\n\t\tconst proc = cp.fork(\n\t\t\tFileAccess.asFileUri('bootstrap-fork', require).fsPath,\n\t\t\t// While not technically necessary, makes it easier to tell which process\n\t\t\t// bootstrap-fork is executing. Can also do pkill -f extensionHost\n\t\t\t// Other spawns in the VS Code codebase behave similarly.\n\t\t\t[ '--type=extensionHost' ],\n\t\t\t{\n\t\t\t\tenv: {\n\t\t\t\t\t...process.env,\n\t\t\t\t\tAMD_ENTRYPOINT: 'vs/workbench/services/extensions/node/extensionHostProcess',\n\t\t\t\t\tPIPE_LOGGING: 'true',\n\t\t\t\t\tVERBOSE_LOGGING: 'true',\n\t\t\t\t\tVSCODE_EXTHOST_WILL_SEND_SOCKET: 'true',\n\t\t\t\t\tVSCODE_HANDLES_UNCAUGHT_ERRORS: 'true',\n\t\t\t\t\tVSCODE_LOG_STACK: 'false',\n\t\t\t\t\tVSCODE_LOG_LEVEL: process.env.LOG_LEVEL,\n\t\t\t\t\tVSCODE_NLS_CONFIG: JSON.stringify(config),\n\t\t\t\t},\n\t\t\t\tsilent: true,\n\t\t\t},\n\t\t);\n\n\t\tproc.on('error', (error) => {\n\t\t\tthis.logger.error('Exited unexpectedly', field('error', error));\n\t\t\tthis.dispose();\n\t\t});\n\t\tproc.on('exit', (code) => {\n\t\t\tthis.logger.trace('Exited', field('code', code));\n\t\t\tthis.dispose();\n\t\t});\n\t\tif (proc.stdout && proc.stderr) {\n\t\t\tproc.stdout.setEncoding('utf8').on('data', (d) => this.logger.info(d));\n\t\t\tproc.stderr.setEncoding('utf8').on('data', (d) => this.logger.error(d));\n\t\t}\n\n\t\tproc.on('message', (event: ExtHostMessage) => {\n\t\t\tswitch (event.type) {\n\t\t\t\tcase '__$console':\n\t\t\t\t\tconst fn = this.logger[event.severity === 'log' ? 'info' : event.severity];\n\t\t\t\t\tif (fn) {\n\t\t\t\t\t\tfn.bind(this.logger)('console', field('arguments', event.arguments));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.logger.error('Unexpected severity', field('event', event));\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'VSCODE_EXTHOST_DISCONNECTED':\n\t\t\t\t\tthis.logger.trace('Going offline');\n\t\t\t\t\tthis.setOffline();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'VSCODE_EXTHOST_IPC_READY':\n\t\t\t\t\tthis.logger.trace('Got ready message');\n\t\t\t\t\tthis.sendInitMessage(buffer);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthis.logger.error('Unexpected message', field('event', event));\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\n\t\tthis.logger.trace('Waiting for handshake...');\n\t\treturn proc;\n\t}\n}\n","import { field } from '@coder/logger';\nimport * as net from 'net';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { PersistentProtocol } from 'vs/base/parts/ipc/common/ipc.net';\nimport { NodeSocket, WebSocketNodeSocket } from 'vs/base/parts/ipc/node/ipc.net';\nimport { AuthRequest, ConnectionTypeRequest, HandshakeMessage } from 'vs/platform/remote/common/remoteAgentConnection';\nimport { logger } from 'vs/server/node/logger';\n\nexport interface SocketOptions {\n\treadonly reconnectionToken: string;\n\treadonly reconnection: boolean;\n\treadonly skipWebSocketFrames: boolean;\n}\n\nexport class Protocol extends PersistentProtocol {\n\tpublic constructor(socket: net.Socket, public readonly options: SocketOptions) {\n\t\tsuper(\n\t\t\toptions.skipWebSocketFrames\n\t\t\t\t? new NodeSocket(socket)\n\t\t\t\t: new WebSocketNodeSocket(new NodeSocket(socket)),\n\t\t);\n\t}\n\n\tpublic getUnderlyingSocket(): net.Socket {\n\t\tconst socket = this.getSocket();\n\t\treturn socket instanceof NodeSocket\n\t\t\t? socket.socket\n\t\t\t: (socket as WebSocketNodeSocket).socket.socket;\n\t}\n\n\t/**\n\t * Perform a handshake to get a connection request.\n\t */\n\tpublic handshake(): Promise<ConnectionTypeRequest> {\n\t\tlogger.trace('Protocol handshake', field('token', this.options.reconnectionToken));\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst timeout = setTimeout(() => {\n\t\t\t\tlogger.error('Handshake timed out', field('token', this.options.reconnectionToken));\n\t\t\t\treject(new Error('timed out'));\n\t\t\t}, 10000); // Matches the client timeout.\n\n\t\t\tconst handler = this.onControlMessage((rawMessage) => {\n\t\t\t\ttry {\n\t\t\t\t\tconst raw = rawMessage.toString();\n\t\t\t\t\tlogger.trace('Protocol message', field('token', this.options.reconnectionToken), field('message', raw));\n\t\t\t\t\tconst message = JSON.parse(raw);\n\t\t\t\t\tswitch (message.type) {\n\t\t\t\t\t\tcase 'auth':\n\t\t\t\t\t\t\treturn this.authenticate(message);\n\t\t\t\t\t\tcase 'connectionType':\n\t\t\t\t\t\t\thandler.dispose();\n\t\t\t\t\t\t\tclearTimeout(timeout);\n\t\t\t\t\t\t\treturn resolve(message);\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tthrow new Error('Unrecognized message type');\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\thandler.dispose();\n\t\t\t\t\tclearTimeout(timeout);\n\t\t\t\t\treject(error);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Kick off the handshake in case we missed the client's opening shot.\n\t\t\t// TODO: Investigate why that message seems to get lost.\n\t\t\tthis.authenticate();\n\t\t});\n\t}\n\n\t/**\n\t * TODO: This ignores the authentication process entirely for now.\n\t */\n\tprivate authenticate(_?: AuthRequest): void {\n\t\tthis.sendMessage({ type: 'sign', data: '' });\n\t}\n\n\t/**\n\t * TODO: implement.\n\t */\n\tpublic tunnel(): void {\n\t\tthrow new Error('Tunnel is not implemented yet');\n\t}\n\n\t/**\n\t * Send a handshake message. In the case of the extension host, it just sends\n\t * back a debug port.\n\t */\n\tpublic sendMessage(message: HandshakeMessage | { debugPort?: number } ): void {\n\t\tthis.sendControl(VSBuffer.fromString(JSON.stringify(message)));\n\t}\n}\n","import { URITransformer } from 'vs/base/common/uriIpc';\n\nexport const getUriTransformer = (remoteAuthority: string): URITransformer => {\n\treturn new URITransformer(remoteAuthority);\n};\n\n/**\n * Encode a path for opening via the folder or workspace query parameter. This\n * preserves slashes so it can be edited by hand more easily.\n */\nexport const encodePath = (path: string): string => {\n\treturn path.split('/').map((p) => encodeURIComponent(p)).join('/');\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { withNullAsUndefined, assertIsDefined } from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport { IDisposable, Disposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { IEditor, IEditorViewState, ScrollType, IDiffEditor } from 'vs/editor/common/editorCommon';\nimport { IEditorModel, IEditorOptions, ITextEditorOptions, IBaseResourceEditorInput, IResourceEditorInput, EditorActivation, EditorOpenContext, ITextEditorSelection, TextEditorSelectionRevealType } from 'vs/platform/editor/common/editor';\nimport { IInstantiationService, IConstructorSignature0, ServicesAccessor, BrandedService } from 'vs/platform/instantiation/common/instantiation';\nimport { IContextKeyService, RawContextKey } from 'vs/platform/contextkey/common/contextkey';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { ITextModel } from 'vs/editor/common/model';\nimport { IEditorGroup } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { ICompositeControl, IComposite } from 'vs/workbench/common/composite';\nimport { ActionRunner, IAction } from 'vs/base/common/actions';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { IPathData } from 'vs/platform/windows/common/windows';\nimport { coalesce, firstOrDefault } from 'vs/base/common/arrays';\nimport { IResourceEditorInputType } from 'vs/workbench/services/editor/common/editorService';\nimport { IRange } from 'vs/editor/common/core/range';\nimport { IExtUri } from 'vs/base/common/resources';\n\n// Editor State Context Keys\nexport const ActiveEditorDirtyContext = new RawContextKey<boolean>('activeEditorIsDirty', false);\nexport const ActiveEditorPinnedContext = new RawContextKey<boolean>('activeEditorIsNotPreview', false);\nexport const ActiveEditorStickyContext = new RawContextKey<boolean>('activeEditorIsPinned', false);\nexport const ActiveEditorReadonlyContext = new RawContextKey<boolean>('activeEditorIsReadonly', false);\n\n// Editor Kind Context Keys\nexport const ActiveEditorContext = new RawContextKey<string | null>('activeEditor', null);\nexport const ActiveEditorAvailableEditorIdsContext = new RawContextKey<string>('activeEditorAvailableEditorIds', '');\nexport const TextCompareEditorVisibleContext = new RawContextKey<boolean>('textCompareEditorVisible', false);\nexport const TextCompareEditorActiveContext = new RawContextKey<boolean>('textCompareEditorActive', false);\n\n// Editor Group Context Keys\nexport const EditorGroupEditorsCountContext = new RawContextKey<number>('groupEditorsCount', 0);\nexport const ActiveEditorGroupEmptyContext = new RawContextKey<boolean>('activeEditorGroupEmpty', false);\nexport const ActiveEditorGroupIndexContext = new RawContextKey<number>('activeEditorGroupIndex', 0);\nexport const ActiveEditorGroupLastContext = new RawContextKey<boolean>('activeEditorGroupLast', false);\nexport const MultipleEditorGroupsContext = new RawContextKey<boolean>('multipleEditorGroups', false);\nexport const SingleEditorGroupsContext = MultipleEditorGroupsContext.toNegated();\n\n// Editor Layout Context Keys\nexport const EditorsVisibleContext = new RawContextKey<boolean>('editorIsOpen', false);\nexport const InEditorZenModeContext = new RawContextKey<boolean>('inZenMode', false);\nexport const IsCenteredLayoutContext = new RawContextKey<boolean>('isCenteredLayout', false);\nexport const SplitEditorsVertically = new RawContextKey<boolean>('splitEditorsVertically', false);\nexport const EditorAreaVisibleContext = new RawContextKey<boolean>('editorAreaVisible', true);\n\n/**\n * Text diff editor id.\n */\nexport const TEXT_DIFF_EDITOR_ID = 'workbench.editors.textDiffEditor';\n\n/**\n * Binary diff editor id.\n */\nexport const BINARY_DIFF_EDITOR_ID = 'workbench.editors.binaryResourceDiffEditor';\n\n/**\n * The editor pane is the container for workbench editors.\n */\nexport interface IEditorPane extends IComposite {\n\n\t/**\n\t * The assigned input of this editor.\n\t */\n\treadonly input: IEditorInput | undefined;\n\n\t/**\n\t * The assigned options of the editor.\n\t */\n\treadonly options: EditorOptions | undefined;\n\n\t/**\n\t * The assigned group this editor is showing in.\n\t */\n\treadonly group: IEditorGroup | undefined;\n\n\t/**\n\t * The minimum width of this editor.\n\t */\n\treadonly minimumWidth: number;\n\n\t/**\n\t * The maximum width of this editor.\n\t */\n\treadonly maximumWidth: number;\n\n\t/**\n\t * The minimum height of this editor.\n\t */\n\treadonly minimumHeight: number;\n\n\t/**\n\t * The maximum height of this editor.\n\t */\n\treadonly maximumHeight: number;\n\n\t/**\n\t * An event to notify whenever minimum/maximum width/height changes.\n\t */\n\treadonly onDidSizeConstraintsChange: Event<{ width: number; height: number; } | undefined>;\n\n\t/**\n\t * The context key service for this editor. Should be overridden by\n\t * editors that have their own ScopedContextKeyService\n\t */\n\treadonly scopedContextKeyService: IContextKeyService | undefined;\n\n\t/**\n\t * Returns the underlying control of this editor. Callers need to cast\n\t * the control to a specific instance as needed, e.g. by using the\n\t * `isCodeEditor` helper method to access the text code editor.\n\t */\n\tgetControl(): IEditorControl | undefined;\n\n\t/**\n\t * Finds out if this editor is visible or not.\n\t */\n\tisVisible(): boolean;\n}\n\n/**\n * Overrides `IEditorPane` where `input` and `group` are known to be set.\n */\nexport interface IVisibleEditorPane extends IEditorPane {\n\treadonly input: IEditorInput;\n\treadonly group: IEditorGroup;\n}\n\n/**\n * The text editor pane is the container for workbench text editors.\n */\nexport interface ITextEditorPane extends IEditorPane {\n\n\t/**\n\t * Returns the underlying text editor widget of this editor.\n\t */\n\tgetControl(): IEditor | undefined;\n\n\t/**\n\t * Returns the current view state of the text editor if any.\n\t */\n\tgetViewState(): IEditorViewState | undefined;\n}\n\nexport function isTextEditorPane(thing: IEditorPane | undefined): thing is ITextEditorPane {\n\tconst candidate = thing as ITextEditorPane | undefined;\n\n\treturn typeof candidate?.getViewState === 'function';\n}\n\n/**\n * The text editor pane is the container for workbench text diff editors.\n */\nexport interface ITextDiffEditorPane extends IEditorPane {\n\n\t/**\n\t * Returns the underlying text editor widget of this editor.\n\t */\n\tgetControl(): IDiffEditor | undefined;\n}\n\n/**\n * Marker interface for the control inside an editor pane. Callers\n * have to cast the control to work with it, e.g. via methods\n * such as `isCodeEditor(control)`.\n */\nexport interface IEditorControl extends ICompositeControl { }\n\nexport interface IFileEditorInputFactory {\n\n\t/**\n\t * Creates new new editor input capable of showing files.\n\t */\n\tcreateFileEditorInput(resource: URI, preferredResource: URI | undefined, encoding: string | undefined, mode: string | undefined, instantiationService: IInstantiationService): IFileEditorInput;\n\n\t/**\n\t * Check if the provided object is a file editor input.\n\t */\n\tisFileEditorInput(obj: unknown): obj is IFileEditorInput;\n}\n\ninterface ICustomEditorInputFactory {\n\tcreateCustomEditorInput(resource: URI, instantiationService: IInstantiationService): Promise<IEditorInput>;\n\tcanResolveBackup(editorInput: IEditorInput, backupResource: URI): boolean;\n}\n\nexport interface IEditorInputFactoryRegistry {\n\n\t/**\n\t * Registers the file editor input factory to use for file inputs.\n\t */\n\tregisterFileEditorInputFactory(factory: IFileEditorInputFactory): void;\n\n\t/**\n\t * Returns the file editor input factory to use for file inputs.\n\t */\n\tgetFileEditorInputFactory(): IFileEditorInputFactory;\n\n\t/**\n\t * Registers the custom editor input factory to use for custom inputs.\n\t */\n\tregisterCustomEditorInputFactory(scheme: string, factory: ICustomEditorInputFactory): void;\n\n\t/**\n\t * Returns the custom editor input factory to use for custom inputs.\n\t */\n\tgetCustomEditorInputFactory(scheme: string): ICustomEditorInputFactory | undefined;\n\n\t/**\n\t * Registers a editor input factory for the given editor input to the registry. An editor input factory\n\t * is capable of serializing and deserializing editor inputs from string data.\n\t *\n\t * @param editorInputId the identifier of the editor input\n\t * @param factory the editor input factory for serialization/deserialization\n\t */\n\tregisterEditorInputFactory<Services extends BrandedService[]>(editorInputId: string, ctor: { new(...Services: Services): IEditorInputFactory }): IDisposable;\n\n\t/**\n\t * Returns the editor input factory for the given editor input.\n\t *\n\t * @param editorInputId the identifier of the editor input\n\t */\n\tgetEditorInputFactory(editorInputId: string): IEditorInputFactory | undefined;\n\n\t/**\n\t * Starts the registry by providing the required services.\n\t */\n\tstart(accessor: ServicesAccessor): void;\n}\n\nexport interface IEditorInputFactory {\n\n\t/**\n\t * Determines whether the given editor input can be serialized by the factory.\n\t */\n\tcanSerialize(editorInput: IEditorInput): boolean;\n\n\t/**\n\t * Returns a string representation of the provided editor input that contains enough information\n\t * to deserialize back to the original editor input from the deserialize() method.\n\t */\n\tserialize(editorInput: IEditorInput): string | undefined;\n\n\t/**\n\t * Returns an editor input from the provided serialized form of the editor input. This form matches\n\t * the value returned from the serialize() method.\n\t */\n\tdeserialize(instantiationService: IInstantiationService, serializedEditorInput: string): EditorInput | undefined;\n}\n\nexport interface IUntitledTextResourceEditorInput extends IBaseResourceEditorInput {\n\n\t/**\n\t * Optional resource. If the resource is not provided a new untitled file is created (e.g. Untitled-1).\n\t * If the used scheme for the resource is not `untitled://`, `forceUntitled: true` must be configured to\n\t * force use the provided resource as associated path. As such, the resource will be used when saving\n\t * the untitled editor.\n\t */\n\treadonly resource?: URI;\n\n\t/**\n\t * Optional language of the untitled resource.\n\t */\n\treadonly mode?: string;\n\n\t/**\n\t * Optional contents of the untitled resource.\n\t */\n\treadonly contents?: string;\n\n\t/**\n\t * Optional encoding of the untitled resource.\n\t */\n\treadonly encoding?: string;\n}\n\nexport interface IResourceDiffEditorInput extends IBaseResourceEditorInput {\n\n\t/**\n\t * The left hand side URI to open inside a diff editor.\n\t */\n\treadonly leftResource: URI;\n\n\t/**\n\t * The right hand side URI to open inside a diff editor.\n\t */\n\treadonly rightResource: URI;\n}\n\nexport const enum Verbosity {\n\tSHORT,\n\tMEDIUM,\n\tLONG\n}\n\nexport const enum SaveReason {\n\n\t/**\n\t * Explicit user gesture.\n\t */\n\tEXPLICIT = 1,\n\n\t/**\n\t * Auto save after a timeout.\n\t */\n\tAUTO = 2,\n\n\t/**\n\t * Auto save after editor focus change.\n\t */\n\tFOCUS_CHANGE = 3,\n\n\t/**\n\t * Auto save after window change.\n\t */\n\tWINDOW_CHANGE = 4\n}\n\nexport interface ISaveOptions {\n\n\t/**\n\t * An indicator how the save operation was triggered.\n\t */\n\treason?: SaveReason;\n\n\t/**\n\t * Forces to save the contents of the working copy\n\t * again even if the working copy is not dirty.\n\t */\n\treadonly force?: boolean;\n\n\t/**\n\t * Instructs the save operation to skip any save participants.\n\t */\n\treadonly skipSaveParticipants?: boolean;\n\n\t/**\n\t * A hint as to which file systems should be available for saving.\n\t */\n\treadonly availableFileSystems?: string[];\n}\n\nexport interface IRevertOptions {\n\n\t/**\n\t * Forces to load the contents of the working copy\n\t * again even if the working copy is not dirty.\n\t */\n\treadonly force?: boolean;\n\n\t/**\n\t * A soft revert will clear dirty state of a working copy\n\t * but will not attempt to load it from its persisted state.\n\t *\n\t * This option may be used in scenarios where an editor is\n\t * closed and where we do not require to load the contents.\n\t */\n\treadonly soft?: boolean;\n}\n\nexport interface IMoveResult {\n\teditor: EditorInput | IResourceEditorInputType;\n\toptions?: IEditorOptions;\n}\n\nexport interface IEditorInput extends IDisposable {\n\n\t/**\n\t * Triggered when this input is disposed.\n\t */\n\treadonly onDispose: Event<void>;\n\n\t/**\n\t * Triggered when this input changes its dirty state.\n\t */\n\treadonly onDidChangeDirty: Event<void>;\n\n\t/**\n\t * Triggered when this input changes its label\n\t */\n\treadonly onDidChangeLabel: Event<void>;\n\n\t/**\n\t * Returns the optional associated resource of this input.\n\t *\n\t * This resource should be unique for all editors of the same\n\t * kind and input and is often used to identify the editor input among\n\t * others.\n\t *\n\t * **Note:** DO NOT use this property for anything but identity\n\t * checks. DO NOT use this property to present as label to the user.\n\t * Please refer to `EditorResourceAccessor` documentation in that case.\n\t */\n\treadonly resource: URI | undefined;\n\n\t/**\n\t * Unique type identifier for this inpput.\n\t */\n\tgetTypeId(): string;\n\n\t/**\n\t * Returns the display name of this input.\n\t */\n\tgetName(): string;\n\n\t/**\n\t * Returns the display description of this input.\n\t */\n\tgetDescription(verbosity?: Verbosity): string | undefined;\n\n\t/**\n\t * Returns the display title of this input.\n\t */\n\tgetTitle(verbosity?: Verbosity): string | undefined;\n\n\t/**\n\t * Returns the aria label to be read out by a screen reader.\n\t */\n\tgetAriaLabel(): string;\n\n\t/**\n\t * Returns a type of `IEditorModel` that represents the resolved input.\n\t * Subclasses should override to provide a meaningful model or return\n\t * `null` if the editor does not require a model.\n\t */\n\tresolve(): Promise<IEditorModel | null>;\n\n\t/**\n\t * Returns if this input is readonly or not.\n\t */\n\tisReadonly(): boolean;\n\n\t/**\n\t * Returns if the input is an untitled editor or not.\n\t */\n\tisUntitled(): boolean;\n\n\t/**\n\t * Returns if this input is dirty or not.\n\t */\n\tisDirty(): boolean;\n\n\t/**\n\t * Returns if this input is currently being saved or soon to be\n\t * saved. Based on this assumption the editor may for example\n\t * decide to not signal the dirty state to the user assuming that\n\t * the save is scheduled to happen anyway.\n\t */\n\tisSaving(): boolean;\n\n\t/**\n\t * Saves the editor. The provided groupId helps implementors\n\t * to e.g. preserve view state of the editor and re-open it\n\t * in the correct group after saving.\n\t *\n\t * @returns the resulting editor input (typically the same) of\n\t * this operation or `undefined` to indicate that the operation\n\t * failed or was canceled.\n\t */\n\tsave(group: GroupIdentifier, options?: ISaveOptions): Promise<IEditorInput | undefined>;\n\n\t/**\n\t * Saves the editor to a different location. The provided `group`\n\t * helps implementors to e.g. preserve view state of the editor\n\t * and re-open it in the correct group after saving.\n\t *\n\t * @returns the resulting editor input (typically a different one)\n\t * of this operation or `undefined` to indicate that the operation\n\t * failed or was canceled.\n\t */\n\tsaveAs(group: GroupIdentifier, options?: ISaveOptions): Promise<IEditorInput | undefined>;\n\n\t/**\n\t * Reverts this input from the provided group.\n\t */\n\trevert(group: GroupIdentifier, options?: IRevertOptions): Promise<void>;\n\n\t/**\n\t * Called to determine how to handle a resource that is renamed that matches\n\t * the editors resource (or is a child of).\n\t *\n\t * Implementors are free to not implement this method to signal no intent\n\t * to participate. If an editor is returned though, it will replace the\n\t * current one with that editor and optional options.\n\t */\n\trename(group: GroupIdentifier, target: URI): IMoveResult | undefined;\n\n\t/**\n\t * Subclasses can set this to false if it does not make sense to split the editor input.\n\t */\n\tsupportsSplitEditor(): boolean;\n\n\t/**\n\t * Returns if the other object matches this input.\n\t */\n\tmatches(other: unknown): boolean;\n\n\t/**\n\t * Returns if this editor is disposed.\n\t */\n\tisDisposed(): boolean;\n}\n\n/**\n * Editor inputs are lightweight objects that can be passed to the workbench API to open inside the editor part.\n * Each editor input is mapped to an editor that is capable of opening it through the Platform facade.\n */\nexport abstract class EditorInput extends Disposable implements IEditorInput {\n\n\tprotected readonly _onDidChangeDirty = this._register(new Emitter<void>());\n\treadonly onDidChangeDirty = this._onDidChangeDirty.event;\n\n\tprotected readonly _onDidChangeLabel = this._register(new Emitter<void>());\n\treadonly onDidChangeLabel = this._onDidChangeLabel.event;\n\n\tprivate readonly _onDispose = this._register(new Emitter<void>());\n\treadonly onDispose = this._onDispose.event;\n\n\tprivate disposed: boolean = false;\n\n\tabstract get resource(): URI | undefined;\n\n\tabstract getTypeId(): string;\n\n\tgetName(): string {\n\t\treturn `Editor ${this.getTypeId()}`;\n\t}\n\n\tgetDescription(verbosity?: Verbosity): string | undefined {\n\t\treturn undefined;\n\t}\n\n\tgetTitle(verbosity?: Verbosity): string {\n\t\treturn this.getName();\n\t}\n\n\tgetAriaLabel(): string {\n\t\treturn this.getTitle(Verbosity.SHORT);\n\t}\n\n\t/**\n\t * Returns the preferred editor for this input. A list of candidate editors is passed in that whee registered\n\t * for the input. This allows subclasses to decide late which editor to use for the input on a case by case basis.\n\t */\n\tgetPreferredEditorId(candidates: string[]): string | undefined {\n\t\treturn firstOrDefault(candidates);\n\t}\n\n\t/**\n\t* Returns a descriptor suitable for telemetry events.\n\t*\n\t* Subclasses should extend if they can contribute.\n\t*/\n\tgetTelemetryDescriptor(): { [key: string]: unknown } {\n\t\t/* __GDPR__FRAGMENT__\n\t\t\t\"EditorTelemetryDescriptor\" : {\n\t\t\t\t\"typeId\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t\t}\n\t\t*/\n\t\treturn { typeId: this.getTypeId() };\n\t}\n\n\tisReadonly(): boolean {\n\t\treturn true;\n\t}\n\n\tisUntitled(): boolean {\n\t\treturn false;\n\t}\n\n\tisDirty(): boolean {\n\t\treturn false;\n\t}\n\n\tisSaving(): boolean {\n\t\treturn false;\n\t}\n\n\tasync resolve(): Promise<IEditorModel | null> {\n\t\treturn null;\n\t}\n\n\tasync save(group: GroupIdentifier, options?: ISaveOptions): Promise<IEditorInput | undefined> {\n\t\treturn this;\n\t}\n\n\tasync saveAs(group: GroupIdentifier, options?: ISaveOptions): Promise<IEditorInput | undefined> {\n\t\treturn this;\n\t}\n\n\tasync revert(group: GroupIdentifier, options?: IRevertOptions): Promise<void> { }\n\n\trename(group: GroupIdentifier, target: URI): IMoveResult | undefined {\n\t\treturn undefined;\n\t}\n\n\tsupportsSplitEditor(): boolean {\n\t\treturn true;\n\t}\n\n\tmatches(otherInput: unknown): boolean {\n\t\treturn this === otherInput;\n\t}\n\n\tisDisposed(): boolean {\n\t\treturn this.disposed;\n\t}\n\n\tdispose(): void {\n\t\tif (!this.disposed) {\n\t\t\tthis.disposed = true;\n\t\t\tthis._onDispose.fire();\n\t\t}\n\n\t\tsuper.dispose();\n\t}\n}\n\nexport const enum EncodingMode {\n\n\t/**\n\t * Instructs the encoding support to encode the current input with the provided encoding\n\t */\n\tEncode,\n\n\t/**\n\t * Instructs the encoding support to decode the current input with the provided encoding\n\t */\n\tDecode\n}\n\nexport interface IEncodingSupport {\n\n\t/**\n\t * Gets the encoding of the type if known.\n\t */\n\tgetEncoding(): string | undefined;\n\n\t/**\n\t * Sets the encoding for the type for saving.\n\t */\n\tsetEncoding(encoding: string, mode: EncodingMode): void;\n}\n\nexport interface IModeSupport {\n\n\t/**\n\t * Sets the language mode of the type.\n\t */\n\tsetMode(mode: string): void;\n}\n\nexport interface IEditorInputWithPreferredResource {\n\n\t/**\n\t * An editor may provide an additional preferred resource alongside\n\t * the `resource` property. While the `resource` property serves as\n\t * unique identifier of the editor that should be used whenever we\n\t * compare to other editors, the `preferredResource` should be used\n\t * in places where e.g. the resource is shown to the user.\n\t *\n\t * For example: on Windows and macOS, the same URI with different\n\t * casing may point to the same file. The editor may chose to\n\t * \"normalize\" the URIs so that only one editor opens for different\n\t * URIs. But when displaying the editor label to the user, the\n\t * preferred URI should be used.\n\t *\n\t * Not all editors have a `preferredResouce`. The `EditorResourceAccessor`\n\t * utility can be used to always get the right resource without having\n\t * to do instanceof checks.\n\t */\n\treadonly preferredResource: URI;\n}\n\nexport function isEditorInputWithPreferredResource(obj: unknown): obj is IEditorInputWithPreferredResource {\n\tconst editorInputWithPreferredResource = obj as IEditorInputWithPreferredResource;\n\n\treturn editorInputWithPreferredResource && !!editorInputWithPreferredResource.preferredResource;\n}\n\n/**\n * This is a tagging interface to declare an editor input being capable of dealing with files. It is only used in the editor registry\n * to register this kind of input to the platform.\n */\nexport interface IFileEditorInput extends IEditorInput, IEncodingSupport, IModeSupport, IEditorInputWithPreferredResource {\n\n\t/**\n\t * Gets the resource this file input is about. This will always be the\n\t * canonical form of the resource, so it may differ from the original\n\t * resource that was provided to create the input. Use `preferredResource`\n\t * for the form as it was created.\n\t */\n\treadonly resource: URI;\n\n\t/**\n\t * Sets the preferred resource to use for this file input.\n\t */\n\tsetPreferredResource(preferredResource: URI): void;\n\n\t/**\n\t * Sets the preferred encoding to use for this file input.\n\t */\n\tsetPreferredEncoding(encoding: string): void;\n\n\t/**\n\t * Sets the preferred language mode to use for this file input.\n\t */\n\tsetPreferredMode(mode: string): void;\n\n\t/**\n\t * Forces this file input to open as binary instead of text.\n\t */\n\tsetForceOpenAsBinary(): void;\n\n\t/**\n\t * Figure out if the file input has been resolved or not.\n\t */\n\tisResolved(): boolean;\n}\n\n/**\n * Side by side editor inputs that have a primary and secondary side.\n */\nexport class SideBySideEditorInput extends EditorInput {\n\n\tstatic readonly ID: string = 'workbench.editorinputs.sidebysideEditorInput';\n\n\tconstructor(\n\t\tprotected readonly name: string | undefined,\n\t\tprivate readonly description: string | undefined,\n\t\tprivate readonly _secondary: EditorInput,\n\t\tprivate readonly _primary: EditorInput\n\t) {\n\t\tsuper();\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\n\t\t// When the primary or secondary input gets disposed, dispose this diff editor input\n\t\tconst onceSecondaryDisposed = Event.once(this.secondary.onDispose);\n\t\tthis._register(onceSecondaryDisposed(() => {\n\t\t\tif (!this.isDisposed()) {\n\t\t\t\tthis.dispose();\n\t\t\t}\n\t\t}));\n\n\t\tconst oncePrimaryDisposed = Event.once(this.primary.onDispose);\n\t\tthis._register(oncePrimaryDisposed(() => {\n\t\t\tif (!this.isDisposed()) {\n\t\t\t\tthis.dispose();\n\t\t\t}\n\t\t}));\n\n\t\t// Reemit some events from the primary side to the outside\n\t\tthis._register(this.primary.onDidChangeDirty(() => this._onDidChangeDirty.fire()));\n\t\tthis._register(this.primary.onDidChangeLabel(() => this._onDidChangeLabel.fire()));\n\t}\n\n\t/**\n\t * Use `EditorResourceAccessor` utility method to access the resources\n\t * of both sides of the diff editor.\n\t */\n\tget resource(): URI | undefined {\n\t\treturn undefined;\n\t}\n\n\tget primary(): EditorInput {\n\t\treturn this._primary;\n\t}\n\n\tget secondary(): EditorInput {\n\t\treturn this._secondary;\n\t}\n\n\tgetTypeId(): string {\n\t\treturn SideBySideEditorInput.ID;\n\t}\n\n\tgetName(): string {\n\t\tif (!this.name) {\n\t\t\treturn localize('sideBySideLabels', \"{0} - {1}\", this._secondary.getName(), this._primary.getName());\n\t\t}\n\n\t\treturn this.name;\n\t}\n\n\tgetDescription(): string | undefined {\n\t\treturn this.description;\n\t}\n\n\tisReadonly(): boolean {\n\t\treturn this.primary.isReadonly();\n\t}\n\n\tisUntitled(): boolean {\n\t\treturn this.primary.isUntitled();\n\t}\n\n\tisDirty(): boolean {\n\t\treturn this.primary.isDirty();\n\t}\n\n\tisSaving(): boolean {\n\t\treturn this.primary.isSaving();\n\t}\n\n\tsave(group: GroupIdentifier, options?: ISaveOptions): Promise<IEditorInput | undefined> {\n\t\treturn this.primary.save(group, options);\n\t}\n\n\tsaveAs(group: GroupIdentifier, options?: ISaveOptions): Promise<IEditorInput | undefined> {\n\t\treturn this.primary.saveAs(group, options);\n\t}\n\n\trevert(group: GroupIdentifier, options?: IRevertOptions): Promise<void> {\n\t\treturn this.primary.revert(group, options);\n\t}\n\n\tgetTelemetryDescriptor(): { [key: string]: unknown } {\n\t\tconst descriptor = this.primary.getTelemetryDescriptor();\n\n\t\treturn Object.assign(descriptor, super.getTelemetryDescriptor());\n\t}\n\n\tmatches(otherInput: unknown): boolean {\n\t\tif (otherInput === this) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (otherInput instanceof SideBySideEditorInput) {\n\t\t\treturn this.primary.matches(otherInput.primary) && this.secondary.matches(otherInput.secondary);\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\nexport interface ITextEditorModel extends IEditorModel {\n\ttextEditorModel: ITextModel;\n}\n\n/**\n * The editor model is the heavyweight counterpart of editor input. Depending on the editor input, it\n * connects to the disk to retrieve content and may allow for saving it back or reverting it. Editor models\n * are typically cached for some while because they are expensive to construct.\n */\nexport class EditorModel extends Disposable implements IEditorModel {\n\n\tprivate readonly _onDispose = this._register(new Emitter<void>());\n\treadonly onDispose = this._onDispose.event;\n\n\tprivate disposed = false;\n\n\t/**\n\t * Causes this model to load returning a promise when loading is completed.\n\t */\n\tasync load(): Promise<IEditorModel> {\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns whether this model was loaded or not.\n\t */\n\tisResolved(): boolean {\n\t\treturn true;\n\t}\n\n\t/**\n\t * Find out if this model has been disposed.\n\t */\n\tisDisposed(): boolean {\n\t\treturn this.disposed;\n\t}\n\n\t/**\n\t * Subclasses should implement to free resources that have been claimed through loading.\n\t */\n\tdispose(): void {\n\t\tthis.disposed = true;\n\t\tthis._onDispose.fire();\n\n\t\tsuper.dispose();\n\t}\n}\n\nexport interface IEditorInputWithOptions {\n\teditor: IEditorInput;\n\toptions?: IEditorOptions | ITextEditorOptions;\n}\n\nexport function isEditorInputWithOptions(obj: unknown): obj is IEditorInputWithOptions {\n\tconst editorInputWithOptions = obj as IEditorInputWithOptions;\n\n\treturn !!editorInputWithOptions && !!editorInputWithOptions.editor;\n}\n\n/**\n * The editor options is the base class of options that can be passed in when opening an editor.\n */\nexport class EditorOptions implements IEditorOptions {\n\n\t/**\n\t * Helper to create EditorOptions inline.\n\t */\n\tstatic create(settings: IEditorOptions): EditorOptions {\n\t\tconst options = new EditorOptions();\n\t\toptions.overwrite(settings);\n\n\t\treturn options;\n\t}\n\n\t/**\n\t * Tells the editor to not receive keyboard focus when the editor is being opened.\n\t *\n\t * Will also not activate the group the editor opens in unless the group is already\n\t * the active one. This behaviour can be overridden via the `activation` option.\n\t */\n\tpreserveFocus: boolean | undefined;\n\n\t/**\n\t * This option is only relevant if an editor is opened into a group that is not active\n\t * already and allows to control if the inactive group should become active, restored\n\t * or preserved.\n\t *\n\t * By default, the editor group will become active unless `preserveFocus` or `inactive`\n\t * is specified.\n\t */\n\tactivation: EditorActivation | undefined;\n\n\t/**\n\t * Tells the editor to reload the editor input in the editor even if it is identical to the one\n\t * already showing. By default, the editor will not reload the input if it is identical to the\n\t * one showing.\n\t */\n\tforceReload: boolean | undefined;\n\n\t/**\n\t * Will reveal the editor if it is already opened and visible in any of the opened editor groups.\n\t */\n\trevealIfVisible: boolean | undefined;\n\n\t/**\n\t * Will reveal the editor if it is already opened (even when not visible) in any of the opened editor groups.\n\t */\n\trevealIfOpened: boolean | undefined;\n\n\t/**\n\t * An editor that is pinned remains in the editor stack even when another editor is being opened.\n\t * An editor that is not pinned will always get replaced by another editor that is not pinned.\n\t */\n\tpinned: boolean | undefined;\n\n\t/**\n\t * An editor that is sticky moves to the beginning of the editors list within the group and will remain\n\t * there unless explicitly closed. Operations such as \"Close All\" will not close sticky editors.\n\t */\n\tsticky: boolean | undefined;\n\n\t/**\n\t * The index in the document stack where to insert the editor into when opening.\n\t */\n\tindex: number | undefined;\n\n\t/**\n\t * An active editor that is opened will show its contents directly. Set to true to open an editor\n\t * in the background without loading its contents.\n\t *\n\t * Will also not activate the group the editor opens in unless the group is already\n\t * the active one. This behaviour can be overridden via the `activation` option.\n\t */\n\tinactive: boolean | undefined;\n\n\t/**\n\t * Will not show an error in case opening the editor fails and thus allows to show a custom error\n\t * message as needed. By default, an error will be presented as notification if opening was not possible.\n\t */\n\tignoreError: boolean | undefined;\n\n\t/**\n\t * Allows to override the editor that should be used to display the input:\n\t * - `undefined`: let the editor decide for itself\n\t * - `false`: disable overrides\n\t * - `string`: specific override by id\n\t */\n\toverride?: false | string;\n\n\t/**\n\t * A optional hint to signal in which context the editor opens.\n\t *\n\t * If configured to be `EditorOpenContext.USER`, this hint can be\n\t * used in various places to control the experience. For example,\n\t * if the editor to open fails with an error, a notification could\n\t * inform about this in a modal dialog. If the editor opened through\n\t * some background task, the notification would show in the background,\n\t * not as a modal dialog.\n\t */\n\tcontext: EditorOpenContext | undefined;\n\n\t/**\n\t * Overwrites option values from the provided bag.\n\t */\n\toverwrite(options: IEditorOptions): EditorOptions {\n\t\tif (typeof options.forceReload === 'boolean') {\n\t\t\tthis.forceReload = options.forceReload;\n\t\t}\n\n\t\tif (typeof options.revealIfVisible === 'boolean') {\n\t\t\tthis.revealIfVisible = options.revealIfVisible;\n\t\t}\n\n\t\tif (typeof options.revealIfOpened === 'boolean') {\n\t\t\tthis.revealIfOpened = options.revealIfOpened;\n\t\t}\n\n\t\tif (typeof options.preserveFocus === 'boolean') {\n\t\t\tthis.preserveFocus = options.preserveFocus;\n\t\t}\n\n\t\tif (typeof options.activation === 'number') {\n\t\t\tthis.activation = options.activation;\n\t\t}\n\n\t\tif (typeof options.pinned === 'boolean') {\n\t\t\tthis.pinned = options.pinned;\n\t\t}\n\n\t\tif (typeof options.sticky === 'boolean') {\n\t\t\tthis.sticky = options.sticky;\n\t\t}\n\n\t\tif (typeof options.inactive === 'boolean') {\n\t\t\tthis.inactive = options.inactive;\n\t\t}\n\n\t\tif (typeof options.ignoreError === 'boolean') {\n\t\t\tthis.ignoreError = options.ignoreError;\n\t\t}\n\n\t\tif (typeof options.index === 'number') {\n\t\t\tthis.index = options.index;\n\t\t}\n\n\t\tif (typeof options.override === 'string' || options.override === false) {\n\t\t\tthis.override = options.override;\n\t\t}\n\n\t\tif (typeof options.context === 'number') {\n\t\t\tthis.context = options.context;\n\t\t}\n\n\t\treturn this;\n\t}\n}\n\n/**\n * Base Text Editor Options.\n */\nexport class TextEditorOptions extends EditorOptions implements ITextEditorOptions {\n\n\t/**\n\t * Text editor selection.\n\t */\n\tselection: ITextEditorSelection | undefined;\n\n\t/**\n\t * Text editor view state.\n\t */\n\teditorViewState: IEditorViewState | undefined;\n\n\t/**\n\t * Option to control the text editor selection reveal type.\n\t */\n\tselectionRevealType: TextEditorSelectionRevealType | undefined;\n\n\tstatic from(input?: IBaseResourceEditorInput): TextEditorOptions | undefined {\n\t\tif (!input?.options) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn TextEditorOptions.create(input.options);\n\t}\n\n\t/**\n\t * Helper to convert options bag to real class\n\t */\n\tstatic create(options: ITextEditorOptions = Object.create(null)): TextEditorOptions {\n\t\tconst textEditorOptions = new TextEditorOptions();\n\t\ttextEditorOptions.overwrite(options);\n\n\t\treturn textEditorOptions;\n\t}\n\n\t/**\n\t * Overwrites option values from the provided bag.\n\t */\n\toverwrite(options: ITextEditorOptions): TextEditorOptions {\n\t\tsuper.overwrite(options);\n\n\t\tif (options.selection) {\n\t\t\tthis.selection = {\n\t\t\t\tstartLineNumber: options.selection.startLineNumber,\n\t\t\t\tstartColumn: options.selection.startColumn,\n\t\t\t\tendLineNumber: options.selection.endLineNumber ?? options.selection.startLineNumber,\n\t\t\t\tendColumn: options.selection.endColumn ?? options.selection.startColumn\n\t\t\t};\n\t\t}\n\n\t\tif (options.viewState) {\n\t\t\tthis.editorViewState = options.viewState as IEditorViewState;\n\t\t}\n\n\t\tif (typeof options.selectionRevealType !== 'undefined') {\n\t\t\tthis.selectionRevealType = options.selectionRevealType;\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns if this options object has objects defined for the editor.\n\t */\n\thasOptionsDefined(): boolean {\n\t\treturn !!this.editorViewState || !!this.selectionRevealType || !!this.selection;\n\t}\n\n\t/**\n\t * Create a TextEditorOptions inline to be used when the editor is opening.\n\t */\n\tstatic fromEditor(editor: IEditor, settings?: IEditorOptions): TextEditorOptions {\n\t\tconst options = TextEditorOptions.create(settings);\n\n\t\t// View state\n\t\toptions.editorViewState = withNullAsUndefined(editor.saveViewState());\n\n\t\treturn options;\n\t}\n\n\t/**\n\t * Apply the view state or selection to the given editor.\n\t *\n\t * @return if something was applied\n\t */\n\tapply(editor: IEditor, scrollType: ScrollType): boolean {\n\t\tlet gotApplied = false;\n\n\t\t// First try viewstate\n\t\tif (this.editorViewState) {\n\t\t\teditor.restoreViewState(this.editorViewState);\n\t\t\tgotApplied = true;\n\t\t}\n\n\t\t// Otherwise check for selection\n\t\telse if (this.selection) {\n\t\t\tconst range: IRange = {\n\t\t\t\tstartLineNumber: this.selection.startLineNumber,\n\t\t\t\tstartColumn: this.selection.startColumn,\n\t\t\t\tendLineNumber: this.selection.endLineNumber ?? this.selection.startLineNumber,\n\t\t\t\tendColumn: this.selection.endColumn ?? this.selection.startColumn\n\t\t\t};\n\n\t\t\teditor.setSelection(range);\n\n\t\t\tif (this.selectionRevealType === TextEditorSelectionRevealType.NearTop) {\n\t\t\t\teditor.revealRangeNearTop(range, scrollType);\n\t\t\t} else if (this.selectionRevealType === TextEditorSelectionRevealType.NearTopIfOutsideViewport) {\n\t\t\t\teditor.revealRangeNearTopIfOutsideViewport(range, scrollType);\n\t\t\t} else if (this.selectionRevealType === TextEditorSelectionRevealType.CenterIfOutsideViewport) {\n\t\t\t\teditor.revealRangeInCenterIfOutsideViewport(range, scrollType);\n\t\t\t} else {\n\t\t\t\teditor.revealRangeInCenter(range, scrollType);\n\t\t\t}\n\n\t\t\tgotApplied = true;\n\t\t}\n\n\t\treturn gotApplied;\n\t}\n}\n\n/**\n * Context passed into `EditorPane#setInput` to give additional\n * context information around why the editor was opened.\n */\nexport interface IEditorOpenContext {\n\n\t/**\n\t * An indicator if the editor input is new for the group the editor is in.\n\t * An editor is new for a group if it was not part of the group before and\n\t * otherwise was already opened in the group and just became the active editor.\n\t *\n\t * This hint can e.g. be used to decide wether to restore view state or not.\n\t */\n\tnewInGroup?: boolean;\n}\n\nexport interface IEditorIdentifier {\n\tgroupId: GroupIdentifier;\n\teditor: IEditorInput;\n}\n\n/**\n * The editor commands context is used for editor commands (e.g. in the editor title)\n * and we must ensure that the context is serializable because it potentially travels\n * to the extension host!\n */\nexport interface IEditorCommandsContext {\n\tgroupId: GroupIdentifier;\n\teditorIndex?: number;\n}\n\nexport class EditorCommandsContextActionRunner extends ActionRunner {\n\n\tconstructor(\n\t\tprivate context: IEditorCommandsContext\n\t) {\n\t\tsuper();\n\t}\n\n\trun(action: IAction): Promise<void> {\n\t\treturn super.run(action, this.context);\n\t}\n}\n\nexport interface IEditorCloseEvent extends IEditorIdentifier {\n\treplaced: boolean;\n\tindex: number;\n\tsticky: boolean;\n}\n\nexport type GroupIdentifier = number;\n\nexport interface IWorkbenchEditorConfiguration {\n\tworkbench: {\n\t\teditor: IEditorPartConfiguration,\n\t\ticonTheme: string;\n\t};\n}\n\ninterface IEditorPartConfiguration {\n\tshowTabs?: boolean;\n\tscrollToSwitchTabs?: boolean;\n\thighlightModifiedTabs?: boolean;\n\ttabCloseButton?: 'left' | 'right' | 'off';\n\ttabSizing?: 'fit' | 'shrink';\n\tpinnedTabSizing?: 'normal' | 'compact' | 'shrink';\n\ttitleScrollbarSizing?: 'default' | 'large';\n\tfocusRecentEditorAfterClose?: boolean;\n\tshowIcons?: boolean;\n\tenablePreview?: boolean;\n\tenablePreviewFromQuickOpen?: boolean;\n\tcloseOnFileDelete?: boolean;\n\topenPositioning?: 'left' | 'right' | 'first' | 'last';\n\topenSideBySideDirection?: 'right' | 'down';\n\tcloseEmptyGroups?: boolean;\n\trevealIfOpen?: boolean;\n\tmouseBackForwardToNavigate?: boolean;\n\tlabelFormat?: 'default' | 'short' | 'medium' | 'long';\n\trestoreViewState?: boolean;\n\tsplitSizing?: 'split' | 'distribute';\n\tlimit?: {\n\t\tenabled?: boolean;\n\t\tvalue?: number;\n\t\tperEditorGroup?: boolean;\n\t};\n}\n\nexport interface IEditorPartOptions extends IEditorPartConfiguration {\n\thasIcons?: boolean;\n}\n\nexport interface IEditorPartOptionsChangeEvent {\n\toldPartOptions: IEditorPartOptions;\n\tnewPartOptions: IEditorPartOptions;\n}\n\nexport enum SideBySideEditor {\n\tPRIMARY = 1,\n\tSECONDARY = 2,\n\tBOTH = 3\n}\n\nexport interface IEditorResourceAccessorOptions {\n\n\t/**\n\t * Allows to access the `resource(s)` of side by side editors. If not\n\t * specified, a `resource` for a side by side editor will always be\n\t * `undefined`.\n\t */\n\tsupportSideBySide?: SideBySideEditor;\n\n\t/**\n\t * Allows to filter the scheme to consider. A resource scheme that does\n\t * not match a filter will not be considered.\n\t */\n\tfilterByScheme?: string | string[];\n}\n\nclass EditorResourceAccessorImpl {\n\n\t/**\n\t * The original URI of an editor is the URI that was used originally to open\n\t * the editor and should be used whenever the URI is presented to the user,\n\t * e.g. as a label.\n\t *\n\t * In contrast, the canonical URI (#getCanonicalUri) may be different and should\n\t * be used whenever the URI is used to e.g. compare with other editors or when\n\t * caching certain data based on the URI.\n\t *\n\t * For example: on Windows and macOS, the same file URI with different casing may\n\t * point to the same file. The editor may chose to \"normalize\" the URI into a canonical\n\t * form so that only one editor opens for same file URIs with different casing. As\n\t * such, the original URI and the canonical URI can be different.\n\t */\n\tgetOriginalUri(editor: IEditorInput | undefined | null): URI | undefined;\n\tgetOriginalUri(editor: IEditorInput | undefined | null, options: IEditorResourceAccessorOptions & { supportSideBySide?: SideBySideEditor.PRIMARY | SideBySideEditor.SECONDARY }): URI | undefined;\n\tgetOriginalUri(editor: IEditorInput | undefined | null, options: IEditorResourceAccessorOptions & { supportSideBySide: SideBySideEditor.BOTH }): URI | { primary?: URI, secondary?: URI } | undefined;\n\tgetOriginalUri(editor: IEditorInput | undefined | null, options?: IEditorResourceAccessorOptions): URI | { primary?: URI, secondary?: URI } | undefined {\n\t\tif (!editor) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// Optionally support side-by-side editors\n\t\tif (options?.supportSideBySide && editor instanceof SideBySideEditorInput) {\n\t\t\tif (options?.supportSideBySide === SideBySideEditor.BOTH) {\n\t\t\t\treturn {\n\t\t\t\t\tprimary: this.getOriginalUri(editor.primary, { filterByScheme: options.filterByScheme }),\n\t\t\t\t\tsecondary: this.getOriginalUri(editor.secondary, { filterByScheme: options.filterByScheme })\n\t\t\t\t};\n\t\t\t}\n\n\t\t\teditor = options.supportSideBySide === SideBySideEditor.PRIMARY ? editor.primary : editor.secondary;\n\t\t}\n\n\t\t// Original URI is the `preferredResource` of an editor if any\n\t\tconst originalResource = isEditorInputWithPreferredResource(editor) ? editor.preferredResource : editor.resource;\n\t\tif (!originalResource || !options || !options.filterByScheme) {\n\t\t\treturn originalResource;\n\t\t}\n\n\t\treturn this.filterUri(originalResource, options.filterByScheme);\n\t}\n\n\t/**\n\t * The canonical URI of an editor is the true unique identifier of the editor\n\t * and should be used whenever the URI is used e.g. to compare with other\n\t * editors or when caching certain data based on the URI.\n\t *\n\t * In contrast, the original URI (#getOriginalUri) may be different and should\n\t * be used whenever the URI is presented to the user, e.g. as a label.\n\t *\n\t * For example: on Windows and macOS, the same file URI with different casing may\n\t * point to the same file. The editor may chose to \"normalize\" the URI into a canonical\n\t * form so that only one editor opens for same file URIs with different casing. As\n\t * such, the original URI and the canonical URI can be different.\n\t */\n\tgetCanonicalUri(editor: IEditorInput | undefined | null): URI | undefined;\n\tgetCanonicalUri(editor: IEditorInput | undefined | null, options: IEditorResourceAccessorOptions & { supportSideBySide?: SideBySideEditor.PRIMARY | SideBySideEditor.SECONDARY }): URI | undefined;\n\tgetCanonicalUri(editor: IEditorInput | undefined | null, options: IEditorResourceAccessorOptions & { supportSideBySide: SideBySideEditor.BOTH }): URI | { primary?: URI, secondary?: URI } | undefined;\n\tgetCanonicalUri(editor: IEditorInput | undefined | null, options?: IEditorResourceAccessorOptions): URI | { primary?: URI, secondary?: URI } | undefined {\n\t\tif (!editor) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// Optionally support side-by-side editors\n\t\tif (options?.supportSideBySide && editor instanceof SideBySideEditorInput) {\n\t\t\tif (options?.supportSideBySide === SideBySideEditor.BOTH) {\n\t\t\t\treturn {\n\t\t\t\t\tprimary: this.getCanonicalUri(editor.primary, { filterByScheme: options.filterByScheme }),\n\t\t\t\t\tsecondary: this.getCanonicalUri(editor.secondary, { filterByScheme: options.filterByScheme })\n\t\t\t\t};\n\t\t\t}\n\n\t\t\teditor = options.supportSideBySide === SideBySideEditor.PRIMARY ? editor.primary : editor.secondary;\n\t\t}\n\n\t\t// Canonical URI is the `resource` of an editor\n\t\tconst canonicalResource = editor.resource;\n\t\tif (!canonicalResource || !options || !options.filterByScheme) {\n\t\t\treturn canonicalResource;\n\t\t}\n\n\t\treturn this.filterUri(canonicalResource, options.filterByScheme);\n\t}\n\n\tprivate filterUri(resource: URI, filter: string | string[]): URI | undefined {\n\n\t\t// Multiple scheme filter\n\t\tif (Array.isArray(filter)) {\n\t\t\tif (filter.some(scheme => resource.scheme === scheme)) {\n\t\t\t\treturn resource;\n\t\t\t}\n\t\t}\n\n\t\t// Single scheme filter\n\t\telse {\n\t\t\tif (filter === resource.scheme) {\n\t\t\t\treturn resource;\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n}\n\nexport const EditorResourceAccessor = new EditorResourceAccessorImpl();\n\nexport const enum CloseDirection {\n\tLEFT,\n\tRIGHT\n}\n\nexport interface IEditorMemento<T> {\n\n\tsaveEditorState(group: IEditorGroup, resource: URI, state: T): void;\n\tsaveEditorState(group: IEditorGroup, editor: EditorInput, state: T): void;\n\n\tloadEditorState(group: IEditorGroup, resource: URI): T | undefined;\n\tloadEditorState(group: IEditorGroup, editor: EditorInput): T | undefined;\n\n\tclearEditorState(resource: URI, group?: IEditorGroup): void;\n\tclearEditorState(editor: EditorInput, group?: IEditorGroup): void;\n\n\tmoveEditorState(source: URI, target: URI, comparer: IExtUri): void;\n}\n\nclass EditorInputFactoryRegistry implements IEditorInputFactoryRegistry {\n\tprivate instantiationService: IInstantiationService | undefined;\n\tprivate fileEditorInputFactory: IFileEditorInputFactory | undefined;\n\tprivate customEditorInputFactoryInstances: Map<string, ICustomEditorInputFactory> = new Map();\n\n\tprivate readonly editorInputFactoryConstructors: Map<string, IConstructorSignature0<IEditorInputFactory>> = new Map();\n\tprivate readonly editorInputFactoryInstances: Map<string, IEditorInputFactory> = new Map();\n\n\tstart(accessor: ServicesAccessor): void {\n\t\tconst instantiationService = this.instantiationService = accessor.get(IInstantiationService);\n\n\t\tthis.editorInputFactoryConstructors.forEach((ctor, key) => {\n\t\t\tthis.createEditorInputFactory(key, ctor, instantiationService);\n\t\t});\n\n\t\tthis.editorInputFactoryConstructors.clear();\n\t}\n\n\tprivate createEditorInputFactory(editorInputId: string, ctor: IConstructorSignature0<IEditorInputFactory>, instantiationService: IInstantiationService): void {\n\t\tconst instance = instantiationService.createInstance(ctor);\n\t\tthis.editorInputFactoryInstances.set(editorInputId, instance);\n\t}\n\n\tregisterFileEditorInputFactory(factory: IFileEditorInputFactory): void {\n\t\tthis.fileEditorInputFactory = factory;\n\t}\n\n\tgetFileEditorInputFactory(): IFileEditorInputFactory {\n\t\treturn assertIsDefined(this.fileEditorInputFactory);\n\t}\n\n\tregisterCustomEditorInputFactory(scheme: string, factory: ICustomEditorInputFactory): void {\n\t\tthis.customEditorInputFactoryInstances.set(scheme, factory);\n\t}\n\n\tgetCustomEditorInputFactory(scheme: string): ICustomEditorInputFactory | undefined {\n\t\treturn this.customEditorInputFactoryInstances.get(scheme);\n\t}\n\n\tregisterEditorInputFactory(editorInputId: string, ctor: IConstructorSignature0<IEditorInputFactory>): IDisposable {\n\t\tif (!this.instantiationService) {\n\t\t\tthis.editorInputFactoryConstructors.set(editorInputId, ctor);\n\t\t} else {\n\t\t\tthis.createEditorInputFactory(editorInputId, ctor, this.instantiationService);\n\n\t\t}\n\n\t\treturn toDisposable(() => {\n\t\t\tthis.editorInputFactoryConstructors.delete(editorInputId);\n\t\t\tthis.editorInputFactoryInstances.delete(editorInputId);\n\t\t});\n\t}\n\n\tgetEditorInputFactory(editorInputId: string): IEditorInputFactory | undefined {\n\t\treturn this.editorInputFactoryInstances.get(editorInputId);\n\t}\n}\n\nexport const Extensions = {\n\tEditorInputFactories: 'workbench.contributions.editor.inputFactories'\n};\n\nRegistry.add(Extensions.EditorInputFactories, new EditorInputFactoryRegistry());\n\nexport async function pathsToEditors(paths: IPathData[] | undefined, fileService: IFileService): Promise<(IResourceEditorInput | IUntitledTextResourceEditorInput)[]> {\n\tif (!paths || !paths.length) {\n\t\treturn [];\n\t}\n\n\tconst editors = await Promise.all(paths.map(async path => {\n\t\tconst resource = URI.revive(path.fileUri);\n\t\tif (!resource || !fileService.canHandleResource(resource)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst exists = (typeof path.exists === 'boolean') ? path.exists : await fileService.exists(resource);\n\t\tif (!exists && path.openOnlyIfExists) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst options: ITextEditorOptions = (exists && typeof path.lineNumber === 'number') ? {\n\t\t\tselection: {\n\t\t\t\tstartLineNumber: path.lineNumber,\n\t\t\t\tstartColumn: path.columnNumber || 1\n\t\t\t},\n\t\t\tpinned: true,\n\t\t\toverride: path.overrideId\n\t\t} : {\n\t\t\t\tpinned: true,\n\t\t\t\toverride: path.overrideId\n\t\t\t};\n\n\t\tlet input: IResourceEditorInput | IUntitledTextResourceEditorInput;\n\t\tif (!exists) {\n\t\t\tinput = { resource, options, forceUntitled: true };\n\t\t} else {\n\t\t\tinput = { resource, options, forceFile: true };\n\t\t}\n\n\t\treturn input;\n\t}));\n\n\treturn coalesce(editors);\n}\n\nexport const enum EditorsOrder {\n\n\t/**\n\t * Editors sorted by most recent activity (most recent active first)\n\t */\n\tMOST_RECENTLY_ACTIVE,\n\n\t/**\n\t * Editors sorted by sequential order\n\t */\n\tSEQUENTIAL\n}\n\nexport function computeEditorAriaLabel(input: IEditorInput, index: number | undefined, group: IEditorGroup | undefined, groupCount: number): string {\n\tlet ariaLabel = input.getAriaLabel();\n\tif (group && !group.isPinned(input)) {\n\t\tariaLabel = localize('preview', \"{0}, preview\", ariaLabel);\n\t}\n\n\tif (group && group.isSticky(index ?? input)) {\n\t\tariaLabel = localize('pinned', \"{0}, pinned\", ariaLabel);\n\t}\n\n\t// Apply group information to help identify in\n\t// which group we are (only if more than one group\n\t// is actually opened)\n\tif (group && groupCount > 1) {\n\t\tariaLabel = `${ariaLabel}, ${group.ariaLabel}`;\n\t}\n\n\treturn ariaLabel;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { Event } from 'vs/base/common/event';\nimport { IProcessEnvironment } from 'vs/base/common/platform';\n\nexport const IEnvironmentVariableService = createDecorator<IEnvironmentVariableService>('environmentVariableService');\n\nexport enum EnvironmentVariableMutatorType {\n\tReplace = 1,\n\tAppend = 2,\n\tPrepend = 3\n}\n\nexport interface IEnvironmentVariableMutator {\n\treadonly value: string;\n\treadonly type: EnvironmentVariableMutatorType;\n}\n\nexport interface IExtensionOwnedEnvironmentVariableMutator extends IEnvironmentVariableMutator {\n\treadonly extensionIdentifier: string;\n}\n\nexport interface IEnvironmentVariableCollection {\n\treadonly map: ReadonlyMap<string, IEnvironmentVariableMutator>;\n}\n\nexport interface IEnvironmentVariableCollectionWithPersistence extends IEnvironmentVariableCollection {\n\treadonly persistent: boolean;\n}\n\nexport interface IMergedEnvironmentVariableCollectionDiff {\n\tadded: ReadonlyMap<string, IExtensionOwnedEnvironmentVariableMutator[]>;\n\tchanged: ReadonlyMap<string, IExtensionOwnedEnvironmentVariableMutator[]>;\n\tremoved: ReadonlyMap<string, IExtensionOwnedEnvironmentVariableMutator[]>;\n}\n\n/**\n * Represents an environment variable collection that results from merging several collections\n * together.\n */\nexport interface IMergedEnvironmentVariableCollection {\n\treadonly map: ReadonlyMap<string, IExtensionOwnedEnvironmentVariableMutator[]>;\n\n\t/**\n\t * Applies this collection to a process environment.\n\t */\n\tapplyToProcessEnvironment(env: IProcessEnvironment): void;\n\n\t/**\n\t * Generates a diff of this connection against another. Returns undefined if the collections are\n\t * the same.\n\t */\n\tdiff(other: IMergedEnvironmentVariableCollection): IMergedEnvironmentVariableCollectionDiff | undefined;\n}\n\n/**\n * Tracks and persists environment variable collections as defined by extensions.\n */\nexport interface IEnvironmentVariableService {\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Gets a single collection constructed by merging all environment variable collections into\n\t * one.\n\t */\n\treadonly collections: ReadonlyMap<string, IEnvironmentVariableCollection>;\n\n\t/**\n\t * Gets a single collection constructed by merging all environment variable collections into\n\t * one.\n\t */\n\treadonly mergedCollection: IMergedEnvironmentVariableCollection;\n\n\t/**\n\t * An event that is fired when an extension's environment variable collection changes, the event\n\t * provides the new merged collection.\n\t */\n\tonDidChangeCollections: Event<IMergedEnvironmentVariableCollection>;\n\n\t/**\n\t * Sets an extension's environment variable collection.\n\t */\n\tset(extensionIdentifier: string, collection: IEnvironmentVariableCollection): void;\n\n\t/**\n\t * Deletes an extension's environment variable collection.\n\t */\n\tdelete(extensionIdentifier: string): void;\n}\n\n/** [variable, mutator] */\nexport type ISerializableEnvironmentVariableCollection = [string, IEnvironmentVariableMutator][];\n\nexport interface IEnvironmentVariableInfo {\n\treadonly requiresAction: boolean;\n\tgetInfo(): string;\n\tgetIcon(): string;\n\tgetActions?(): { label: string, iconClass?: string, run: () => void, commandId: string }[];\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IEnvironmentVariableCollection, EnvironmentVariableMutatorType, IMergedEnvironmentVariableCollection, IMergedEnvironmentVariableCollectionDiff, IExtensionOwnedEnvironmentVariableMutator } from 'vs/workbench/contrib/terminal/common/environmentVariable';\nimport { IProcessEnvironment, isWindows } from 'vs/base/common/platform';\n\nexport class MergedEnvironmentVariableCollection implements IMergedEnvironmentVariableCollection {\n\treadonly map: Map<string, IExtensionOwnedEnvironmentVariableMutator[]> = new Map();\n\n\tconstructor(collections: Map<string, IEnvironmentVariableCollection>) {\n\t\tcollections.forEach((collection, extensionIdentifier) => {\n\t\t\tconst it = collection.map.entries();\n\t\t\tlet next = it.next();\n\t\t\twhile (!next.done) {\n\t\t\t\tconst variable = next.value[0];\n\t\t\t\tlet entry = this.map.get(variable);\n\t\t\t\tif (!entry) {\n\t\t\t\t\tentry = [];\n\t\t\t\t\tthis.map.set(variable, entry);\n\t\t\t\t}\n\n\t\t\t\t// If the first item in the entry is replace ignore any other entries as they would\n\t\t\t\t// just get replaced by this one.\n\t\t\t\tif (entry.length > 0 && entry[0].type === EnvironmentVariableMutatorType.Replace) {\n\t\t\t\t\tnext = it.next();\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Mutators get applied in the reverse order than they are created\n\t\t\t\tconst mutator = next.value[1];\n\t\t\t\tentry.unshift({\n\t\t\t\t\textensionIdentifier,\n\t\t\t\t\tvalue: mutator.value,\n\t\t\t\t\ttype: mutator.type\n\t\t\t\t});\n\n\t\t\t\tnext = it.next();\n\t\t\t}\n\t\t});\n\t}\n\n\tapplyToProcessEnvironment(env: IProcessEnvironment): void {\n\t\tlet lowerToActualVariableNames: { [lowerKey: string]: string | undefined } | undefined;\n\t\tif (isWindows) {\n\t\t\tlowerToActualVariableNames = {};\n\t\t\tObject.keys(env).forEach(e => lowerToActualVariableNames![e.toLowerCase()] = e);\n\t\t}\n\t\tthis.map.forEach((mutators, variable) => {\n\t\t\tconst actualVariable = isWindows ? lowerToActualVariableNames![variable.toLowerCase()] || variable : variable;\n\t\t\tmutators.forEach(mutator => {\n\t\t\t\tswitch (mutator.type) {\n\t\t\t\t\tcase EnvironmentVariableMutatorType.Append:\n\t\t\t\t\t\tenv[actualVariable] = (env[actualVariable] || '') + mutator.value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase EnvironmentVariableMutatorType.Prepend:\n\t\t\t\t\t\tenv[actualVariable] = mutator.value + (env[actualVariable] || '');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase EnvironmentVariableMutatorType.Replace:\n\t\t\t\t\t\tenv[actualVariable] = mutator.value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tdiff(other: IMergedEnvironmentVariableCollection): IMergedEnvironmentVariableCollectionDiff | undefined {\n\t\tconst added: Map<string, IExtensionOwnedEnvironmentVariableMutator[]> = new Map();\n\t\tconst changed: Map<string, IExtensionOwnedEnvironmentVariableMutator[]> = new Map();\n\t\tconst removed: Map<string, IExtensionOwnedEnvironmentVariableMutator[]> = new Map();\n\n\t\t// Find added\n\t\tother.map.forEach((otherMutators, variable) => {\n\t\t\tconst currentMutators = this.map.get(variable);\n\t\t\tconst result = getMissingMutatorsFromArray(otherMutators, currentMutators);\n\t\t\tif (result) {\n\t\t\t\tadded.set(variable, result);\n\t\t\t}\n\t\t});\n\n\t\t// Find removed\n\t\tthis.map.forEach((currentMutators, variable) => {\n\t\t\tconst otherMutators = other.map.get(variable);\n\t\t\tconst result = getMissingMutatorsFromArray(currentMutators, otherMutators);\n\t\t\tif (result) {\n\t\t\t\tremoved.set(variable, result);\n\t\t\t}\n\t\t});\n\n\t\t// Find changed\n\t\tthis.map.forEach((currentMutators, variable) => {\n\t\t\tconst otherMutators = other.map.get(variable);\n\t\t\tconst result = getChangedMutatorsFromArray(currentMutators, otherMutators);\n\t\t\tif (result) {\n\t\t\t\tchanged.set(variable, result);\n\t\t\t}\n\t\t});\n\n\t\tif (added.size === 0 && changed.size === 0 && removed.size === 0) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn { added, changed, removed };\n\t}\n}\n\nfunction getMissingMutatorsFromArray(\n\tcurrent: IExtensionOwnedEnvironmentVariableMutator[],\n\tother: IExtensionOwnedEnvironmentVariableMutator[] | undefined\n): IExtensionOwnedEnvironmentVariableMutator[] | undefined {\n\t// If it doesn't exist, all are removed\n\tif (!other) {\n\t\treturn current;\n\t}\n\n\t// Create a map to help\n\tconst otherMutatorExtensions = new Set<string>();\n\tother.forEach(m => otherMutatorExtensions.add(m.extensionIdentifier));\n\n\t// Find entries removed from other\n\tconst result: IExtensionOwnedEnvironmentVariableMutator[] = [];\n\tcurrent.forEach(mutator => {\n\t\tif (!otherMutatorExtensions.has(mutator.extensionIdentifier)) {\n\t\t\tresult.push(mutator);\n\t\t}\n\t});\n\n\treturn result.length === 0 ? undefined : result;\n}\n\nfunction getChangedMutatorsFromArray(\n\tcurrent: IExtensionOwnedEnvironmentVariableMutator[],\n\tother: IExtensionOwnedEnvironmentVariableMutator[] | undefined\n): IExtensionOwnedEnvironmentVariableMutator[] | undefined {\n\t// If it doesn't exist, none are changed (they are removed)\n\tif (!other) {\n\t\treturn undefined;\n\t}\n\n\t// Create a map to help\n\tconst otherMutatorExtensions = new Map<string, IExtensionOwnedEnvironmentVariableMutator>();\n\tother.forEach(m => otherMutatorExtensions.set(m.extensionIdentifier, m));\n\n\t// Find entries that exist in both but are not equal\n\tconst result: IExtensionOwnedEnvironmentVariableMutator[] = [];\n\tcurrent.forEach(mutator => {\n\t\tconst otherMutator = otherMutatorExtensions.get(mutator.extensionIdentifier);\n\t\tif (otherMutator && (mutator.type !== otherMutator.type || mutator.value !== otherMutator.value)) {\n\t\t\t// Return the new result, not the old one\n\t\t\tresult.push(otherMutator);\n\t\t}\n\t});\n\n\treturn result.length === 0 ? undefined : result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IEnvironmentVariableMutator, ISerializableEnvironmentVariableCollection } from 'vs/workbench/contrib/terminal/common/environmentVariable';\n\n// This file is shared between the renderer and extension host\n\nexport function serializeEnvironmentVariableCollection(collection: ReadonlyMap<string, IEnvironmentVariableMutator>): ISerializableEnvironmentVariableCollection {\n\treturn [...collection.entries()];\n}\n\nexport function deserializeEnvironmentVariableCollection(\n\tserializedCollection: ISerializableEnvironmentVariableCollection\n): Map<string, IEnvironmentVariableMutator> {\n\treturn new Map<string, IEnvironmentVariableMutator>(serializedCollection);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { Event } from 'vs/base/common/event';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { RawContextKey } from 'vs/platform/contextkey/common/contextkey';\nimport { URI } from 'vs/base/common/uri';\nimport { OperatingSystem } from 'vs/base/common/platform';\nimport { IEnvironmentVariableInfo } from 'vs/workbench/contrib/terminal/common/environmentVariable';\nimport { IExtensionPointDescriptor } from 'vs/workbench/services/extensions/common/extensionsRegistry';\n\nexport const TERMINAL_VIEW_ID = 'terminal';\n\n/** A context key that is set when there is at least one opened integrated terminal. */\nexport const KEYBINDING_CONTEXT_TERMINAL_IS_OPEN = new RawContextKey<boolean>('terminalIsOpen', false);\n\n/** A context key that is set when the integrated terminal has focus. */\nexport const KEYBINDING_CONTEXT_TERMINAL_FOCUS = new RawContextKey<boolean>('terminalFocus', false);\n\nexport const KEYBINDING_CONTEXT_TERMINAL_SHELL_TYPE_KEY = 'terminalShellType';\n/** A context key that is set to the detected shell for the most recently active terminal, this is set to the last known value when no terminals exist. */\nexport const KEYBINDING_CONTEXT_TERMINAL_SHELL_TYPE = new RawContextKey<string>(KEYBINDING_CONTEXT_TERMINAL_SHELL_TYPE_KEY, undefined);\n\n/** A context key that is set when the integrated terminal does not have focus. */\nexport const KEYBINDING_CONTEXT_TERMINAL_NOT_FOCUSED = KEYBINDING_CONTEXT_TERMINAL_FOCUS.toNegated();\n\n/** A context key that is set when the user is navigating the accessibility tree */\nexport const KEYBINDING_CONTEXT_TERMINAL_A11Y_TREE_FOCUS = new RawContextKey<boolean>('terminalA11yTreeFocus', false);\n\n/** A keybinding context key that is set when the integrated terminal has text selected. */\nexport const KEYBINDING_CONTEXT_TERMINAL_TEXT_SELECTED = new RawContextKey<boolean>('terminalTextSelected', false);\n/** A keybinding context key that is set when the integrated terminal does not have text selected. */\nexport const KEYBINDING_CONTEXT_TERMINAL_TEXT_NOT_SELECTED = KEYBINDING_CONTEXT_TERMINAL_TEXT_SELECTED.toNegated();\n\n/**  A context key that is set when the find widget in integrated terminal is visible. */\nexport const KEYBINDING_CONTEXT_TERMINAL_FIND_VISIBLE = new RawContextKey<boolean>('terminalFindVisible', false);\n/**  A context key that is set when the find widget in integrated terminal is not visible. */\nexport const KEYBINDING_CONTEXT_TERMINAL_FIND_NOT_VISIBLE = KEYBINDING_CONTEXT_TERMINAL_FIND_VISIBLE.toNegated();\n/**  A context key that is set when the find widget find input in integrated terminal is focused. */\nexport const KEYBINDING_CONTEXT_TERMINAL_FIND_INPUT_FOCUSED = new RawContextKey<boolean>('terminalFindInputFocused', false);\n/**  A context key that is set when the find widget in integrated terminal is focused. */\nexport const KEYBINDING_CONTEXT_TERMINAL_FIND_FOCUSED = new RawContextKey<boolean>('terminalFindFocused', false);\n/**  A context key that is set when the find widget find input in integrated terminal is not focused. */\nexport const KEYBINDING_CONTEXT_TERMINAL_FIND_INPUT_NOT_FOCUSED = KEYBINDING_CONTEXT_TERMINAL_FIND_INPUT_FOCUSED.toNegated();\n\nexport const KEYBINDING_CONTEXT_TERMINAL_PROCESS_SUPPORTED = new RawContextKey<boolean>('terminalProcessSupported', false);\n\nexport const IS_WORKSPACE_SHELL_ALLOWED_STORAGE_KEY = 'terminal.integrated.isWorkspaceShellAllowed';\nexport const NEVER_MEASURE_RENDER_TIME_STORAGE_KEY = 'terminal.integrated.neverMeasureRenderTime';\n\n// The creation of extension host terminals is delayed by this value (milliseconds). The purpose of\n// this delay is to allow the terminal instance to initialize correctly and have its ID set before\n// trying to create the corressponding object on the ext host.\nexport const EXT_HOST_CREATION_DELAY = 100;\n\nexport const TerminalCursorStyle = {\n\tBLOCK: 'block',\n\tLINE: 'line',\n\tUNDERLINE: 'underline'\n};\n\nexport const TERMINAL_CONFIG_SECTION = 'terminal.integrated';\n\nexport const TERMINAL_ACTION_CATEGORY = nls.localize('terminalCategory', \"Terminal\");\n\nexport const DEFAULT_LETTER_SPACING = 0;\nexport const MINIMUM_LETTER_SPACING = -5;\nexport const DEFAULT_LINE_HEIGHT = 1;\n\nexport const MINIMUM_FONT_WEIGHT = 1;\nexport const MAXIMUM_FONT_WEIGHT = 1000;\nexport const DEFAULT_FONT_WEIGHT = 'normal';\nexport const DEFAULT_BOLD_FONT_WEIGHT = 'bold';\nexport const SUGGESTIONS_FONT_WEIGHT = ['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900'];\n\nexport type FontWeight = 'normal' | 'bold' | number;\n\nexport interface ITerminalConfiguration {\n\tshell: {\n\t\tlinux: string | null;\n\t\tosx: string | null;\n\t\twindows: string | null;\n\t};\n\tautomationShell: {\n\t\tlinux: string | null;\n\t\tosx: string | null;\n\t\twindows: string | null;\n\t};\n\tshellArgs: {\n\t\tlinux: string[];\n\t\tosx: string[];\n\t\twindows: string[];\n\t};\n\tmacOptionIsMeta: boolean;\n\tmacOptionClickForcesSelection: boolean;\n\trendererType: 'auto' | 'canvas' | 'dom' | 'experimentalWebgl';\n\trightClickBehavior: 'default' | 'copyPaste' | 'paste' | 'selectWord';\n\tcursorBlinking: boolean;\n\tcursorStyle: string;\n\tcursorWidth: number;\n\tdrawBoldTextInBrightColors: boolean;\n\tfastScrollSensitivity: number;\n\tfontFamily: string;\n\tfontWeight: FontWeight;\n\tfontWeightBold: FontWeight;\n\tminimumContrastRatio: number;\n\tmouseWheelScrollSensitivity: number;\n\t// fontLigatures: boolean;\n\tfontSize: number;\n\tletterSpacing: number;\n\tlineHeight: number;\n\tdetectLocale: 'auto' | 'off' | 'on';\n\tscrollback: number;\n\tcommandsToSkipShell: string[];\n\tallowChords: boolean;\n\tallowMnemonics: boolean;\n\tcwd: string;\n\tconfirmOnExit: boolean;\n\tenableBell: boolean;\n\tinheritEnv: boolean;\n\tenv: {\n\t\tlinux: { [key: string]: string };\n\t\tosx: { [key: string]: string };\n\t\twindows: { [key: string]: string };\n\t};\n\tenvironmentChangesIndicator: 'off' | 'on' | 'warnonly';\n\tshowExitAlert: boolean;\n\tsplitCwd: 'workspaceRoot' | 'initial' | 'inherited';\n\twindowsEnableConpty: boolean;\n\twordSeparators: string;\n\texperimentalUseTitleEvent: boolean;\n\tenableFileLinks: boolean;\n\tunicodeVersion: '6' | '11';\n\texperimentalLinkProvider: boolean;\n\tlocalEchoLatencyThreshold: number;\n\tlocalEchoStyle: 'bold' | 'dim' | 'italic' | 'underlined' | 'inverted' | string;\n\tserverSpawn: boolean;\n\tenablePersistentSessions: boolean;\n}\n\nexport interface ITerminalConfigHelper {\n\tconfig: ITerminalConfiguration;\n\n\tonWorkspacePermissionsChanged: Event<boolean>;\n\n\tconfigFontIsMonospace(): boolean;\n\tgetFont(): ITerminalFont;\n\t/** Sets whether a workspace shell configuration is allowed or not */\n\tsetWorkspaceShellAllowed(isAllowed: boolean): void;\n\tcheckWorkspaceShellPermissions(osOverride?: OperatingSystem): boolean;\n\tshowRecommendations(shellLaunchConfig: IShellLaunchConfig): void;\n}\n\nexport interface ITerminalFont {\n\tfontFamily: string;\n\tfontSize: number;\n\tletterSpacing: number;\n\tlineHeight: number;\n\tcharWidth?: number;\n\tcharHeight?: number;\n}\n\nexport interface ITerminalEnvironment {\n\t[key: string]: string | null;\n}\n\nexport interface IRemoteTerminalAttachTarget {\n\tid: number;\n\tpid: number;\n\ttitle: string;\n\tcwd: string;\n\tworkspaceId: string;\n\tworkspaceName: string;\n}\n\nexport interface IShellLaunchConfig {\n\t/**\n\t * The name of the terminal, if this is not set the name of the process will be used.\n\t */\n\tname?: string;\n\n\t/**\n\t * The shell executable (bash, cmd, etc.).\n\t */\n\texecutable?: string;\n\n\t/**\n\t * The CLI arguments to use with executable, a string[] is in argv format and will be escaped,\n\t * a string is in \"CommandLine\" pre-escaped format and will be used as is. The string option is\n\t * only supported on Windows and will throw an exception if used on macOS or Linux.\n\t */\n\targs?: string[] | string;\n\n\t/**\n\t * The current working directory of the terminal, this overrides the `terminal.integrated.cwd`\n\t * settings key.\n\t */\n\tcwd?: string | URI;\n\n\t/**\n\t * A custom environment for the terminal, if this is not set the environment will be inherited\n\t * from the VS Code process.\n\t */\n\tenv?: ITerminalEnvironment;\n\n\t/**\n\t * Whether to ignore a custom cwd from the `terminal.integrated.cwd` settings key (e.g. if the\n\t * shell is being launched by an extension).\n\t */\n\tignoreConfigurationCwd?: boolean;\n\n\t/** Whether to wait for a key press before closing the terminal. */\n\twaitOnExit?: boolean | string;\n\n\t/**\n\t * A string including ANSI escape sequences that will be written to the terminal emulator\n\t * _before_ the terminal process has launched, a trailing \\n is added at the end of the string.\n\t * This allows for example the terminal instance to display a styled message as the first line\n\t * of the terminal. Use \\x1b over \\033 or \\e for the escape control character.\n\t */\n\tinitialText?: string;\n\n\t/**\n\t * Whether an extension is controlling the terminal via a `vscode.Pseudoterminal`.\n\t */\n\tisExtensionTerminal?: boolean;\n\n\t/**\n\t * This is a terminal that attaches to an already running remote terminal.\n\t */\n\tremoteAttach?: { id: number; pid: number; title: string; cwd: string; };\n\n\t/**\n\t * Whether the terminal process environment should be exactly as provided in\n\t * `TerminalOptions.env`. When this is false (default), the environment will be based on the\n\t * window's environment and also apply configured platform settings like\n\t * `terminal.integrated.windows.env` on top. When this is true, the complete environment must be\n\t * provided as nothing will be inherited from the process or any configuration.\n\t */\n\tstrictEnv?: boolean;\n\n\t/**\n\t * When enabled the terminal will run the process as normal but not be surfaced to the user\n\t * until `Terminal.show` is called. The typical usage for this is when you need to run\n\t * something that may need interactivity but only want to tell the user about it when\n\t * interaction is needed. Note that the terminals will still be exposed to all extensions\n\t * as normal.\n\t */\n\thideFromUser?: boolean;\n\n\t/**\n\t * Whether this terminal is not a terminal that the user directly created and uses, but rather\n\t * a terminal used to drive some VS Code feature.\n\t */\n\tisFeatureTerminal?: boolean;\n}\n\n/**\n * Provides access to native Windows calls that can be injected into non-native layers.\n */\nexport interface ITerminalNativeWindowsDelegate {\n\t/**\n\t * Gets the Windows build number, eg. this would be `19041` for Windows 10 version 2004\n\t */\n\tgetWindowsBuildNumber(): number;\n\t/**\n\t * Converts a regular Windows path into the WSL path equivalent, eg. `C:\\` -> `/mnt/c`\n\t * @param path The Windows path.\n\t */\n\tgetWslPath(path: string): Promise<string>;\n}\n\nexport interface IShellDefinition {\n\tlabel: string;\n\tpath: string;\n}\n\nexport interface ITerminalDimensions {\n\t/**\n\t * The columns of the terminal.\n\t */\n\treadonly cols: number;\n\n\t/**\n\t * The rows of the terminal.\n\t */\n\treadonly rows: number;\n}\n\nexport interface ITerminalDimensionsOverride extends ITerminalDimensions {\n\t/**\n\t * indicate that xterm must receive these exact dimensions, even if they overflow the ui!\n\t */\n\tforceExactSize?: boolean;\n}\n\nexport interface ICommandTracker {\n\tscrollToPreviousCommand(): void;\n\tscrollToNextCommand(): void;\n\tselectToPreviousCommand(): void;\n\tselectToNextCommand(): void;\n\tselectToPreviousLine(): void;\n\tselectToNextLine(): void;\n}\n\nexport interface INavigationMode {\n\texitNavigationMode(): void;\n\tfocusPreviousLine(): void;\n\tfocusNextLine(): void;\n}\n\nexport interface IBeforeProcessDataEvent {\n\t/**\n\t * The data of the event, this can be modified by the event listener to change what gets sent\n\t * to the terminal.\n\t */\n\tdata: string;\n}\n\nexport interface IProcessDataEvent {\n\tdata: string;\n\tsync: boolean;\n}\n\nexport interface ITerminalProcessManager extends IDisposable {\n\treadonly processState: ProcessState;\n\treadonly ptyProcessReady: Promise<void>;\n\treadonly shellProcessId: number | undefined;\n\treadonly remoteAuthority: string | undefined;\n\treadonly os: OperatingSystem | undefined;\n\treadonly userHome: string | undefined;\n\treadonly environmentVariableInfo: IEnvironmentVariableInfo | undefined;\n\n\treadonly onProcessReady: Event<void>;\n\treadonly onBeforeProcessData: Event<IBeforeProcessDataEvent>;\n\treadonly onProcessData: Event<IProcessDataEvent>;\n\treadonly onProcessTitle: Event<string>;\n\treadonly onProcessExit: Event<number | undefined>;\n\treadonly onProcessOverrideDimensions: Event<ITerminalDimensionsOverride | undefined>;\n\treadonly onProcessResolvedShellLaunchConfig: Event<IShellLaunchConfig>;\n\treadonly onEnvironmentVariableInfoChanged: Event<IEnvironmentVariableInfo>;\n\n\tdispose(immediate?: boolean): void;\n\tcreateProcess(shellLaunchConfig: IShellLaunchConfig, cols: number, rows: number, isScreenReaderModeEnabled: boolean): Promise<ITerminalLaunchError | undefined>;\n\twrite(data: string): void;\n\tsetDimensions(cols: number, rows: number): void;\n\n\tgetInitialCwd(): Promise<string>;\n\tgetCwd(): Promise<string>;\n\tgetLatency(): Promise<number>;\n}\n\nexport const enum ProcessState {\n\t// The process has not been initialized yet.\n\tUNINITIALIZED,\n\t// The process is currently launching, the process is marked as launching\n\t// for a short duration after being created and is helpful to indicate\n\t// whether the process died as a result of bad shell and args.\n\tLAUNCHING,\n\t// The process is running normally.\n\tRUNNING,\n\t// The process was killed during launch, likely as a result of bad shell and\n\t// args.\n\tKILLED_DURING_LAUNCH,\n\t// The process was killed by the user (the event originated from VS Code).\n\tKILLED_BY_USER,\n\t// The process was killed by itself, for example the shell crashed or `exit`\n\t// was run.\n\tKILLED_BY_PROCESS\n}\n\nexport interface ITerminalProcessExtHostProxy extends IDisposable {\n\treadonly terminalId: number;\n\n\temitData(data: string): void;\n\temitTitle(title: string): void;\n\temitReady(pid: number, cwd: string): void;\n\temitExit(exitCode: number | undefined): void;\n\temitOverrideDimensions(dimensions: ITerminalDimensions | undefined): void;\n\temitResolvedShellLaunchConfig(shellLaunchConfig: IShellLaunchConfig): void;\n\temitInitialCwd(initialCwd: string): void;\n\temitCwd(cwd: string): void;\n\temitLatency(latency: number): void;\n\n\tonInput: Event<string>;\n\tonResize: Event<{ cols: number, rows: number }>;\n\tonShutdown: Event<boolean>;\n\tonRequestInitialCwd: Event<void>;\n\tonRequestCwd: Event<void>;\n\tonRequestLatency: Event<void>;\n}\n\nexport interface ISpawnExtHostProcessRequest {\n\tproxy: ITerminalProcessExtHostProxy;\n\tshellLaunchConfig: IShellLaunchConfig;\n\tactiveWorkspaceRootUri: URI | undefined;\n\tcols: number;\n\trows: number;\n\tisWorkspaceShellAllowed: boolean;\n\tcallback: (error: ITerminalLaunchError | undefined) => void;\n}\n\nexport interface IStartExtensionTerminalRequest {\n\tproxy: ITerminalProcessExtHostProxy;\n\tcols: number;\n\trows: number;\n\tcallback: (error: ITerminalLaunchError | undefined) => void;\n}\n\nexport interface IAvailableShellsRequest {\n\tcallback: (shells: IShellDefinition[]) => void;\n}\n\nexport interface IDefaultShellAndArgsRequest {\n\tuseAutomationShell: boolean;\n\tcallback: (shell: string, args: string[] | string | undefined) => void;\n}\n\nexport enum LinuxDistro {\n\tFedora,\n\tUbuntu,\n\tUnknown\n}\n\nexport enum TitleEventSource {\n\t/** From the API or the rename command that overrides any other type */\n\tApi,\n\t/** From the process name property*/\n\tProcess,\n\t/** From the VT sequence */\n\tSequence\n}\n\nexport interface IWindowsShellHelper extends IDisposable {\n\treadonly onShellNameChange: Event<string>;\n\n\tgetShellName(): Promise<string>;\n}\n\nexport interface ITerminalLaunchError {\n\tmessage: string;\n\tcode?: number;\n}\n\n/**\n * An interface representing a raw terminal child process, this contains a subset of the\n * child_process.ChildProcess node.js interface.\n */\nexport interface ITerminalChildProcess {\n\tonProcessData: Event<IProcessDataEvent | string>;\n\tonProcessExit: Event<number | undefined>;\n\tonProcessReady: Event<{ pid: number, cwd: string }>;\n\tonProcessTitleChanged: Event<string>;\n\tonProcessOverrideDimensions?: Event<ITerminalDimensionsOverride | undefined>;\n\tonProcessResolvedShellLaunchConfig?: Event<IShellLaunchConfig>;\n\n\t/**\n\t * Starts the process.\n\t *\n\t * @returns undefined when the process was successfully started, otherwise an object containing\n\t * information on what went wrong.\n\t */\n\tstart(): Promise<ITerminalLaunchError | undefined>;\n\n\t/**\n\t * Shutdown the terminal process.\n\t *\n\t * @param immediate When true the process will be killed immediately, otherwise the process will\n\t * be given some time to make sure no additional data comes through.\n\t */\n\tshutdown(immediate: boolean): void;\n\tinput(data: string): void;\n\tresize(cols: number, rows: number): void;\n\n\tgetInitialCwd(): Promise<string>;\n\tgetCwd(): Promise<string>;\n\tgetLatency(): Promise<number>;\n}\n\nexport const enum TERMINAL_COMMAND_ID {\n\tFIND_NEXT = 'workbench.action.terminal.findNext',\n\tFIND_PREVIOUS = 'workbench.action.terminal.findPrevious',\n\tTOGGLE = 'workbench.action.terminal.toggleTerminal',\n\tKILL = 'workbench.action.terminal.kill',\n\tQUICK_KILL = 'workbench.action.terminal.quickKill',\n\tCOPY_SELECTION = 'workbench.action.terminal.copySelection',\n\tSELECT_ALL = 'workbench.action.terminal.selectAll',\n\tDELETE_WORD_LEFT = 'workbench.action.terminal.deleteWordLeft',\n\tDELETE_WORD_RIGHT = 'workbench.action.terminal.deleteWordRight',\n\tDELETE_TO_LINE_START = 'workbench.action.terminal.deleteToLineStart',\n\tMOVE_TO_LINE_START = 'workbench.action.terminal.moveToLineStart',\n\tMOVE_TO_LINE_END = 'workbench.action.terminal.moveToLineEnd',\n\tNEW = 'workbench.action.terminal.new',\n\tNEW_WITH_CWD = 'workbench.action.terminal.newWithCwd',\n\tNEW_LOCAL = 'workbench.action.terminal.newLocal',\n\tNEW_IN_ACTIVE_WORKSPACE = 'workbench.action.terminal.newInActiveWorkspace',\n\tSPLIT = 'workbench.action.terminal.split',\n\tSPLIT_IN_ACTIVE_WORKSPACE = 'workbench.action.terminal.splitInActiveWorkspace',\n\tRELAUNCH = 'workbench.action.terminal.relaunch',\n\tFOCUS_PREVIOUS_PANE = 'workbench.action.terminal.focusPreviousPane',\n\tFOCUS_NEXT_PANE = 'workbench.action.terminal.focusNextPane',\n\tRESIZE_PANE_LEFT = 'workbench.action.terminal.resizePaneLeft',\n\tRESIZE_PANE_RIGHT = 'workbench.action.terminal.resizePaneRight',\n\tRESIZE_PANE_UP = 'workbench.action.terminal.resizePaneUp',\n\tRESIZE_PANE_DOWN = 'workbench.action.terminal.resizePaneDown',\n\tFOCUS = 'workbench.action.terminal.focus',\n\tFOCUS_NEXT = 'workbench.action.terminal.focusNext',\n\tFOCUS_PREVIOUS = 'workbench.action.terminal.focusPrevious',\n\tPASTE = 'workbench.action.terminal.paste',\n\tSELECT_DEFAULT_SHELL = 'workbench.action.terminal.selectDefaultShell',\n\tRUN_SELECTED_TEXT = 'workbench.action.terminal.runSelectedText',\n\tRUN_ACTIVE_FILE = 'workbench.action.terminal.runActiveFile',\n\tSWITCH_TERMINAL = 'workbench.action.terminal.switchTerminal',\n\tSCROLL_DOWN_LINE = 'workbench.action.terminal.scrollDown',\n\tSCROLL_DOWN_PAGE = 'workbench.action.terminal.scrollDownPage',\n\tSCROLL_TO_BOTTOM = 'workbench.action.terminal.scrollToBottom',\n\tSCROLL_UP_LINE = 'workbench.action.terminal.scrollUp',\n\tSCROLL_UP_PAGE = 'workbench.action.terminal.scrollUpPage',\n\tSCROLL_TO_TOP = 'workbench.action.terminal.scrollToTop',\n\tCLEAR = 'workbench.action.terminal.clear',\n\tCLEAR_SELECTION = 'workbench.action.terminal.clearSelection',\n\tMANAGE_WORKSPACE_SHELL_PERMISSIONS = 'workbench.action.terminal.manageWorkspaceShellPermissions',\n\tRENAME = 'workbench.action.terminal.rename',\n\tRENAME_WITH_ARG = 'workbench.action.terminal.renameWithArg',\n\tFIND_FOCUS = 'workbench.action.terminal.focusFind',\n\tFIND_HIDE = 'workbench.action.terminal.hideFind',\n\tQUICK_OPEN_TERM = 'workbench.action.quickOpenTerm',\n\tSCROLL_TO_PREVIOUS_COMMAND = 'workbench.action.terminal.scrollToPreviousCommand',\n\tSCROLL_TO_NEXT_COMMAND = 'workbench.action.terminal.scrollToNextCommand',\n\tSELECT_TO_PREVIOUS_COMMAND = 'workbench.action.terminal.selectToPreviousCommand',\n\tSELECT_TO_NEXT_COMMAND = 'workbench.action.terminal.selectToNextCommand',\n\tSELECT_TO_PREVIOUS_LINE = 'workbench.action.terminal.selectToPreviousLine',\n\tSELECT_TO_NEXT_LINE = 'workbench.action.terminal.selectToNextLine',\n\tTOGGLE_ESCAPE_SEQUENCE_LOGGING = 'toggleEscapeSequenceLogging',\n\tSEND_SEQUENCE = 'workbench.action.terminal.sendSequence',\n\tTOGGLE_FIND_REGEX = 'workbench.action.terminal.toggleFindRegex',\n\tTOGGLE_FIND_WHOLE_WORD = 'workbench.action.terminal.toggleFindWholeWord',\n\tTOGGLE_FIND_CASE_SENSITIVE = 'workbench.action.terminal.toggleFindCaseSensitive',\n\tNAVIGATION_MODE_EXIT = 'workbench.action.terminal.navigationModeExit',\n\tNAVIGATION_MODE_FOCUS_NEXT = 'workbench.action.terminal.navigationModeFocusNext',\n\tNAVIGATION_MODE_FOCUS_PREVIOUS = 'workbench.action.terminal.navigationModeFocusPrevious',\n\tSHOW_ENVIRONMENT_INFORMATION = 'workbench.action.terminal.showEnvironmentInformation',\n\tSEARCH_WORKSPACE = 'workbench.action.terminal.searchWorkspace',\n\tATTACH_TO_REMOTE_TERMINAL = 'workbench.action.terminal.attachToSession'\n}\n\nexport const DEFAULT_COMMANDS_TO_SKIP_SHELL: string[] = [\n\tTERMINAL_COMMAND_ID.CLEAR_SELECTION,\n\tTERMINAL_COMMAND_ID.CLEAR,\n\tTERMINAL_COMMAND_ID.COPY_SELECTION,\n\tTERMINAL_COMMAND_ID.DELETE_TO_LINE_START,\n\tTERMINAL_COMMAND_ID.DELETE_WORD_LEFT,\n\tTERMINAL_COMMAND_ID.DELETE_WORD_RIGHT,\n\tTERMINAL_COMMAND_ID.FIND_FOCUS,\n\tTERMINAL_COMMAND_ID.FIND_HIDE,\n\tTERMINAL_COMMAND_ID.FIND_NEXT,\n\tTERMINAL_COMMAND_ID.FIND_PREVIOUS,\n\tTERMINAL_COMMAND_ID.TOGGLE_FIND_REGEX,\n\tTERMINAL_COMMAND_ID.TOGGLE_FIND_WHOLE_WORD,\n\tTERMINAL_COMMAND_ID.TOGGLE_FIND_CASE_SENSITIVE,\n\tTERMINAL_COMMAND_ID.FOCUS_NEXT_PANE,\n\tTERMINAL_COMMAND_ID.FOCUS_NEXT,\n\tTERMINAL_COMMAND_ID.FOCUS_PREVIOUS_PANE,\n\tTERMINAL_COMMAND_ID.FOCUS_PREVIOUS,\n\tTERMINAL_COMMAND_ID.FOCUS,\n\tTERMINAL_COMMAND_ID.KILL,\n\tTERMINAL_COMMAND_ID.MOVE_TO_LINE_END,\n\tTERMINAL_COMMAND_ID.MOVE_TO_LINE_START,\n\tTERMINAL_COMMAND_ID.NEW_IN_ACTIVE_WORKSPACE,\n\tTERMINAL_COMMAND_ID.NEW,\n\tTERMINAL_COMMAND_ID.PASTE,\n\tTERMINAL_COMMAND_ID.RESIZE_PANE_DOWN,\n\tTERMINAL_COMMAND_ID.RESIZE_PANE_LEFT,\n\tTERMINAL_COMMAND_ID.RESIZE_PANE_RIGHT,\n\tTERMINAL_COMMAND_ID.RESIZE_PANE_UP,\n\tTERMINAL_COMMAND_ID.RUN_ACTIVE_FILE,\n\tTERMINAL_COMMAND_ID.RUN_SELECTED_TEXT,\n\tTERMINAL_COMMAND_ID.SCROLL_DOWN_LINE,\n\tTERMINAL_COMMAND_ID.SCROLL_DOWN_PAGE,\n\tTERMINAL_COMMAND_ID.SCROLL_TO_BOTTOM,\n\tTERMINAL_COMMAND_ID.SCROLL_TO_NEXT_COMMAND,\n\tTERMINAL_COMMAND_ID.SCROLL_TO_PREVIOUS_COMMAND,\n\tTERMINAL_COMMAND_ID.SCROLL_TO_TOP,\n\tTERMINAL_COMMAND_ID.SCROLL_UP_LINE,\n\tTERMINAL_COMMAND_ID.SCROLL_UP_PAGE,\n\tTERMINAL_COMMAND_ID.SEND_SEQUENCE,\n\tTERMINAL_COMMAND_ID.SELECT_ALL,\n\tTERMINAL_COMMAND_ID.SELECT_TO_NEXT_COMMAND,\n\tTERMINAL_COMMAND_ID.SELECT_TO_NEXT_LINE,\n\tTERMINAL_COMMAND_ID.SELECT_TO_PREVIOUS_COMMAND,\n\tTERMINAL_COMMAND_ID.SELECT_TO_PREVIOUS_LINE,\n\tTERMINAL_COMMAND_ID.SPLIT_IN_ACTIVE_WORKSPACE,\n\tTERMINAL_COMMAND_ID.SPLIT,\n\tTERMINAL_COMMAND_ID.TOGGLE,\n\tTERMINAL_COMMAND_ID.NAVIGATION_MODE_EXIT,\n\tTERMINAL_COMMAND_ID.NAVIGATION_MODE_FOCUS_NEXT,\n\tTERMINAL_COMMAND_ID.NAVIGATION_MODE_FOCUS_PREVIOUS,\n\t'editor.action.toggleTabFocusMode',\n\t'workbench.action.quickOpen',\n\t'workbench.action.quickOpenPreviousEditor',\n\t'workbench.action.showCommands',\n\t'workbench.action.tasks.build',\n\t'workbench.action.tasks.restartTask',\n\t'workbench.action.tasks.runTask',\n\t'workbench.action.tasks.reRunTask',\n\t'workbench.action.tasks.showLog',\n\t'workbench.action.tasks.showTasks',\n\t'workbench.action.tasks.terminate',\n\t'workbench.action.tasks.test',\n\t'workbench.action.toggleFullScreen',\n\t'workbench.action.terminal.focusAtIndex1',\n\t'workbench.action.terminal.focusAtIndex2',\n\t'workbench.action.terminal.focusAtIndex3',\n\t'workbench.action.terminal.focusAtIndex4',\n\t'workbench.action.terminal.focusAtIndex5',\n\t'workbench.action.terminal.focusAtIndex6',\n\t'workbench.action.terminal.focusAtIndex7',\n\t'workbench.action.terminal.focusAtIndex8',\n\t'workbench.action.terminal.focusAtIndex9',\n\t'workbench.action.focusSecondEditorGroup',\n\t'workbench.action.focusThirdEditorGroup',\n\t'workbench.action.focusFourthEditorGroup',\n\t'workbench.action.focusFifthEditorGroup',\n\t'workbench.action.focusSixthEditorGroup',\n\t'workbench.action.focusSeventhEditorGroup',\n\t'workbench.action.focusEighthEditorGroup',\n\t'workbench.action.focusNextPart',\n\t'workbench.action.focusPreviousPart',\n\t'workbench.action.nextPanelView',\n\t'workbench.action.previousPanelView',\n\t'workbench.action.nextSideBarView',\n\t'workbench.action.previousSideBarView',\n\t'workbench.action.debug.start',\n\t'workbench.action.debug.stop',\n\t'workbench.action.debug.run',\n\t'workbench.action.debug.restart',\n\t'workbench.action.debug.continue',\n\t'workbench.action.debug.pause',\n\t'workbench.action.debug.stepInto',\n\t'workbench.action.debug.stepOut',\n\t'workbench.action.debug.stepOver',\n\t'workbench.action.nextEditor',\n\t'workbench.action.previousEditor',\n\t'workbench.action.nextEditorInGroup',\n\t'workbench.action.previousEditorInGroup',\n\t'workbench.action.openNextRecentlyUsedEditor',\n\t'workbench.action.openPreviousRecentlyUsedEditor',\n\t'workbench.action.openNextRecentlyUsedEditorInGroup',\n\t'workbench.action.openPreviousRecentlyUsedEditorInGroup',\n\t'workbench.action.quickOpenPreviousRecentlyUsedEditor',\n\t'workbench.action.quickOpenLeastRecentlyUsedEditor',\n\t'workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup',\n\t'workbench.action.quickOpenLeastRecentlyUsedEditorInGroup',\n\t'workbench.action.focusActiveEditorGroup',\n\t'workbench.action.focusFirstEditorGroup',\n\t'workbench.action.focusLastEditorGroup',\n\t'workbench.action.firstEditorInGroup',\n\t'workbench.action.lastEditorInGroup',\n\t'workbench.action.navigateUp',\n\t'workbench.action.navigateDown',\n\t'workbench.action.navigateRight',\n\t'workbench.action.navigateLeft',\n\t'workbench.action.togglePanel',\n\t'workbench.action.quickOpenView',\n\t'workbench.action.toggleMaximizedPanel'\n];\n\nexport interface ITerminalContributions {\n\ttypes?: ITerminalTypeContribution[];\n}\n\nexport interface ITerminalTypeContribution {\n\ttitle: string;\n\tcommand: string;\n}\n\nexport const terminalContributionsDescriptor: IExtensionPointDescriptor = {\n\textensionPoint: 'terminal',\n\tdefaultExtensionKind: 'workspace',\n\tjsonSchema: {\n\t\tdescription: nls.localize('vscode.extension.contributes.terminal', 'Contributes terminal functionality.'),\n\t\ttype: 'object',\n\t\tproperties: {\n\t\t\ttypes: {\n\t\t\t\ttype: 'array',\n\t\t\t\tdescription: nls.localize('vscode.extension.contributes.terminal.types', \"Defines additional terminal types that the user can create.\"),\n\t\t\t\titems: {\n\t\t\t\t\ttype: 'object',\n\t\t\t\t\trequired: ['command', 'title'],\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\tcommand: {\n\t\t\t\t\t\t\tdescription: nls.localize('vscode.extension.contributes.terminal.types.command', \"Command to execute when the user creates this type of terminal.\"),\n\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttitle: {\n\t\t\t\t\t\t\tdescription: nls.localize('vscode.extension.contributes.terminal.types.title', \"Title for this type of terminal.\"),\n\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { IProcessDataEvent } from 'vs/workbench/contrib/terminal/common/terminal';\n\ninterface TerminalDataBuffer extends IDisposable {\n\tdata: string[];\n\ttimeoutId: any;\n}\n\nexport class TerminalDataBufferer implements IDisposable {\n\tprivate readonly _terminalBufferMap = new Map<number, TerminalDataBuffer>();\n\n\tconstructor(private readonly _callback: (id: number, data: string) => void) {\n\t}\n\n\tdispose() {\n\t\tfor (const buffer of this._terminalBufferMap.values()) {\n\t\t\tbuffer.dispose();\n\t\t}\n\t}\n\n\tstartBuffering(id: number, event: Event<string | IProcessDataEvent>, throttleBy: number = 5): IDisposable {\n\t\tlet disposable: IDisposable;\n\t\tdisposable = event((e: string | IProcessDataEvent) => {\n\t\t\tconst data = (typeof e === 'string' ? e : e.data);\n\t\t\tlet buffer = this._terminalBufferMap.get(id);\n\t\t\tif (buffer) {\n\t\t\t\tbuffer.data.push(data);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst timeoutId = setTimeout(() => this._flushBuffer(id), throttleBy);\n\t\t\tbuffer = {\n\t\t\t\tdata: [data],\n\t\t\t\ttimeoutId: timeoutId,\n\t\t\t\tdispose: () => {\n\t\t\t\t\tclearTimeout(timeoutId);\n\t\t\t\t\tthis._flushBuffer(id);\n\t\t\t\t\tdisposable.dispose();\n\t\t\t\t}\n\t\t\t};\n\t\t\tthis._terminalBufferMap.set(id, buffer);\n\t\t});\n\t\treturn disposable;\n\t}\n\n\tstopBuffering(id: number) {\n\t\tconst buffer = this._terminalBufferMap.get(id);\n\t\tif (buffer) {\n\t\t\tbuffer.dispose();\n\t\t}\n\t}\n\n\tprivate _flushBuffer(id: number): void {\n\t\tconst buffer = this._terminalBufferMap.get(id);\n\t\tif (buffer) {\n\t\t\tthis._terminalBufferMap.delete(id);\n\t\t\tthis._callback(id, buffer.data.join(''));\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as path from 'vs/base/common/path';\nimport * as platform from 'vs/base/common/platform';\nimport { URI as Uri } from 'vs/base/common/uri';\nimport { IWorkspaceFolder } from 'vs/platform/workspace/common/workspace';\nimport { IShellLaunchConfig, ITerminalEnvironment } from 'vs/workbench/contrib/terminal/common/terminal';\nimport { IConfigurationResolverService } from 'vs/workbench/services/configurationResolver/common/configurationResolver';\nimport { sanitizeProcessEnvironment } from 'vs/base/common/processes';\nimport { ILogService } from 'vs/platform/log/common/log';\n\n/**\n * This module contains utility functions related to the environment, cwd and paths.\n */\n\nexport function mergeEnvironments(parent: platform.IProcessEnvironment, other: ITerminalEnvironment | undefined): void {\n\tif (!other) {\n\t\treturn;\n\t}\n\n\t// On Windows apply the new values ignoring case, while still retaining\n\t// the case of the original key.\n\tif (platform.isWindows) {\n\t\tfor (const configKey in other) {\n\t\t\tlet actualKey = configKey;\n\t\t\tfor (const envKey in parent) {\n\t\t\t\tif (configKey.toLowerCase() === envKey.toLowerCase()) {\n\t\t\t\t\tactualKey = envKey;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst value = other[configKey];\n\t\t\t_mergeEnvironmentValue(parent, actualKey, value);\n\t\t}\n\t} else {\n\t\tObject.keys(other).forEach((key) => {\n\t\t\tconst value = other[key];\n\t\t\t_mergeEnvironmentValue(parent, key, value);\n\t\t});\n\t}\n}\n\nfunction _mergeEnvironmentValue(env: ITerminalEnvironment, key: string, value: string | null): void {\n\tif (typeof value === 'string') {\n\t\tenv[key] = value;\n\t} else {\n\t\tdelete env[key];\n\t}\n}\n\nexport function addTerminalEnvironmentKeys(env: platform.IProcessEnvironment, version: string | undefined, locale: string | undefined, detectLocale: 'auto' | 'off' | 'on'): void {\n\tenv['TERM_PROGRAM'] = 'vscode';\n\tif (version) {\n\t\tenv['TERM_PROGRAM_VERSION'] = version;\n\t}\n\tif (shouldSetLangEnvVariable(env, detectLocale)) {\n\t\tenv['LANG'] = getLangEnvVariable(locale);\n\t}\n\tenv['COLORTERM'] = 'truecolor';\n}\n\nfunction mergeNonNullKeys(env: platform.IProcessEnvironment, other: ITerminalEnvironment | undefined) {\n\tif (!other) {\n\t\treturn;\n\t}\n\tfor (const key of Object.keys(other)) {\n\t\tconst value = other[key];\n\t\tif (value) {\n\t\t\tenv[key] = value;\n\t\t}\n\t}\n}\n\nfunction resolveConfigurationVariables(variableResolver: VariableResolver, env: ITerminalEnvironment): ITerminalEnvironment {\n\tObject.keys(env).forEach((key) => {\n\t\tconst value = env[key];\n\t\tif (typeof value === 'string') {\n\t\t\ttry {\n\t\t\t\tenv[key] = variableResolver(value);\n\t\t\t} catch (e) {\n\t\t\t\tenv[key] = value;\n\t\t\t}\n\t\t}\n\t});\n\treturn env;\n}\n\nexport function shouldSetLangEnvVariable(env: platform.IProcessEnvironment, detectLocale: 'auto' | 'off' | 'on'): boolean {\n\tif (detectLocale === 'on') {\n\t\treturn true;\n\t}\n\tif (detectLocale === 'auto') {\n\t\treturn !env['LANG'] || (env['LANG'].search(/\\.UTF\\-8$/) === -1 && env['LANG'].search(/\\.utf8$/) === -1);\n\t}\n\treturn false; // 'off'\n}\n\nexport function getLangEnvVariable(locale?: string): string {\n\tconst parts = locale ? locale.split('-') : [];\n\tconst n = parts.length;\n\tif (n === 0) {\n\t\t// Fallback to en_US if the locale is unknown\n\t\treturn 'en_US.UTF-8';\n\t}\n\tif (n === 1) {\n\t\t// The local may only contain the language, not the variant, if this is the case guess the\n\t\t// variant such that it can be used as a valid $LANG variable. The language variant chosen\n\t\t// is the original and/or most prominent with help from\n\t\t// https://stackoverflow.com/a/2502675/1156119\n\t\t// The list of locales was generated by running `locale -a` on macOS\n\t\tconst languageVariants: { [key: string]: string } = {\n\t\t\taf: 'ZA',\n\t\t\tam: 'ET',\n\t\t\tbe: 'BY',\n\t\t\tbg: 'BG',\n\t\t\tca: 'ES',\n\t\t\tcs: 'CZ',\n\t\t\tda: 'DK',\n\t\t\t// de: 'AT',\n\t\t\t// de: 'CH',\n\t\t\tde: 'DE',\n\t\t\tel: 'GR',\n\t\t\t// en: 'AU',\n\t\t\t// en: 'CA',\n\t\t\t// en: 'GB',\n\t\t\t// en: 'IE',\n\t\t\t// en: 'NZ',\n\t\t\ten: 'US',\n\t\t\tes: 'ES',\n\t\t\tet: 'EE',\n\t\t\teu: 'ES',\n\t\t\tfi: 'FI',\n\t\t\t// fr: 'BE',\n\t\t\t// fr: 'CA',\n\t\t\t// fr: 'CH',\n\t\t\tfr: 'FR',\n\t\t\the: 'IL',\n\t\t\thr: 'HR',\n\t\t\thu: 'HU',\n\t\t\thy: 'AM',\n\t\t\tis: 'IS',\n\t\t\t// it: 'CH',\n\t\t\tit: 'IT',\n\t\t\tja: 'JP',\n\t\t\tkk: 'KZ',\n\t\t\tko: 'KR',\n\t\t\tlt: 'LT',\n\t\t\t// nl: 'BE',\n\t\t\tnl: 'NL',\n\t\t\tno: 'NO',\n\t\t\tpl: 'PL',\n\t\t\tpt: 'BR',\n\t\t\t// pt: 'PT',\n\t\t\tro: 'RO',\n\t\t\tru: 'RU',\n\t\t\tsk: 'SK',\n\t\t\tsl: 'SI',\n\t\t\tsr: 'YU',\n\t\t\tsv: 'SE',\n\t\t\ttr: 'TR',\n\t\t\tuk: 'UA',\n\t\t\tzh: 'CN',\n\t\t};\n\t\tif (parts[0] in languageVariants) {\n\t\t\tparts.push(languageVariants[parts[0]]);\n\t\t}\n\t} else {\n\t\t// Ensure the variant is uppercase to be a valid $LANG\n\t\tparts[1] = parts[1].toUpperCase();\n\t}\n\treturn parts.join('_') + '.UTF-8';\n}\n\nexport function getCwd(\n\tshell: IShellLaunchConfig,\n\tuserHome: string | undefined,\n\tvariableResolver: VariableResolver | undefined,\n\troot: Uri | undefined,\n\tcustomCwd: string | undefined,\n\tlogService?: ILogService\n): string {\n\tif (shell.cwd) {\n\t\tconst unresolved = (typeof shell.cwd === 'object') ? shell.cwd.fsPath : shell.cwd;\n\t\tconst resolved = _resolveCwd(unresolved, variableResolver);\n\t\treturn _sanitizeCwd(resolved || unresolved);\n\t}\n\n\tlet cwd: string | undefined;\n\n\tif (!shell.ignoreConfigurationCwd && customCwd) {\n\t\tif (variableResolver) {\n\t\t\tcustomCwd = _resolveCwd(customCwd, variableResolver, logService);\n\t\t}\n\t\tif (customCwd) {\n\t\t\tif (path.isAbsolute(customCwd)) {\n\t\t\t\tcwd = customCwd;\n\t\t\t} else if (root) {\n\t\t\t\tcwd = path.join(root.fsPath, customCwd);\n\t\t\t}\n\t\t}\n\t}\n\n\t// If there was no custom cwd or it was relative with no workspace\n\tif (!cwd) {\n\t\tcwd = root ? root.fsPath : userHome || '';\n\t}\n\n\treturn _sanitizeCwd(cwd);\n}\n\nfunction _resolveCwd(cwd: string, variableResolver: VariableResolver | undefined, logService?: ILogService): string | undefined {\n\tif (variableResolver) {\n\t\ttry {\n\t\t\treturn variableResolver(cwd);\n\t\t} catch (e) {\n\t\t\tlogService?.error('Could not resolve terminal cwd', e);\n\t\t\treturn undefined;\n\t\t}\n\t}\n\treturn cwd;\n}\n\nfunction _sanitizeCwd(cwd: string): string {\n\t// Make the drive letter uppercase on Windows (see #9448)\n\tif (platform.platform === platform.Platform.Windows && cwd && cwd[1] === ':') {\n\t\treturn cwd[0].toUpperCase() + cwd.substr(1);\n\t}\n\treturn cwd;\n}\n\nexport function escapeNonWindowsPath(path: string): string {\n\tlet newPath = path;\n\tif (newPath.indexOf('\\\\') !== 0) {\n\t\tnewPath = newPath.replace(/\\\\/g, '\\\\\\\\');\n\t}\n\tif (!newPath && (newPath.indexOf('\"') !== -1)) {\n\t\tnewPath = '\\'' + newPath + '\\'';\n\t} else if (newPath.indexOf(' ') !== -1) {\n\t\tnewPath = newPath.replace(/ /g, '\\\\ ');\n\t}\n\treturn newPath;\n}\n\nexport type TerminalShellSetting = (\n\t`terminal.integrated.automationShell.windows`\n\t| `terminal.integrated.automationShell.osx`\n\t| `terminal.integrated.automationShell.linux`\n\t| `terminal.integrated.shell.windows`\n\t| `terminal.integrated.shell.osx`\n\t| `terminal.integrated.shell.linux`\n);\n\nexport type TerminalShellArgsSetting = (\n\t`terminal.integrated.shellArgs.windows`\n\t| `terminal.integrated.shellArgs.osx`\n\t| `terminal.integrated.shellArgs.linux`\n);\n\nexport type VariableResolver = (str: string) => string;\n\nexport function createVariableResolver(lastActiveWorkspace: IWorkspaceFolder | undefined, configurationResolverService: IConfigurationResolverService | undefined): VariableResolver | undefined {\n\tif (!configurationResolverService) {\n\t\treturn undefined;\n\t}\n\treturn (str) => configurationResolverService.resolve(lastActiveWorkspace, str);\n}\n\nexport function getDefaultShell(\n\tfetchSetting: (key: TerminalShellSetting) => { userValue?: string | string[], value?: string | string[], defaultValue?: string | string[] },\n\tisWorkspaceShellAllowed: boolean,\n\tdefaultShell: string,\n\tisWoW64: boolean,\n\twindir: string | undefined,\n\tvariableResolver: VariableResolver | undefined,\n\tlogService: ILogService,\n\tuseAutomationShell: boolean,\n\tplatformOverride: platform.Platform = platform.platform\n): string {\n\tlet maybeExecutable: string | null = null;\n\tif (useAutomationShell) {\n\t\t// If automationShell is specified, this should override the normal setting\n\t\tmaybeExecutable = getShellSetting(fetchSetting, isWorkspaceShellAllowed, 'automationShell', platformOverride);\n\t}\n\tif (!maybeExecutable) {\n\t\tmaybeExecutable = getShellSetting(fetchSetting, isWorkspaceShellAllowed, 'shell', platformOverride);\n\t}\n\tlet executable: string = maybeExecutable || defaultShell;\n\n\t// Change Sysnative to System32 if the OS is Windows but NOT WoW64. It's\n\t// safe to assume that this was used by accident as Sysnative does not\n\t// exist and will break the terminal in non-WoW64 environments.\n\tif ((platformOverride === platform.Platform.Windows) && !isWoW64 && windir) {\n\t\tconst sysnativePath = path.join(windir, 'Sysnative').replace(/\\//g, '\\\\').toLowerCase();\n\t\tif (executable && executable.toLowerCase().indexOf(sysnativePath) === 0) {\n\t\t\texecutable = path.join(windir, 'System32', executable.substr(sysnativePath.length + 1));\n\t\t}\n\t}\n\n\t// Convert / to \\ on Windows for convenience\n\tif (executable && platformOverride === platform.Platform.Windows) {\n\t\texecutable = executable.replace(/\\//g, '\\\\');\n\t}\n\n\tif (variableResolver) {\n\t\ttry {\n\t\t\texecutable = variableResolver(executable);\n\t\t} catch (e) {\n\t\t\tlogService.error(`Could not resolve shell`, e);\n\t\t}\n\t}\n\n\treturn executable;\n}\n\nexport function getDefaultShellArgs(\n\tfetchSetting: (key: TerminalShellSetting | TerminalShellArgsSetting) => { userValue?: string | string[], value?: string | string[], defaultValue?: string | string[] },\n\tisWorkspaceShellAllowed: boolean,\n\tuseAutomationShell: boolean,\n\tvariableResolver: VariableResolver | undefined,\n\tlogService: ILogService,\n\tplatformOverride: platform.Platform = platform.platform,\n): string | string[] {\n\tif (useAutomationShell) {\n\t\tif (!!getShellSetting(fetchSetting, isWorkspaceShellAllowed, 'automationShell', platformOverride)) {\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tconst platformKey = platformOverride === platform.Platform.Windows ? 'windows' : platformOverride === platform.Platform.Mac ? 'osx' : 'linux';\n\tconst shellArgsConfigValue = fetchSetting(<TerminalShellArgsSetting>`terminal.integrated.shellArgs.${platformKey}`);\n\tlet args = ((isWorkspaceShellAllowed ? shellArgsConfigValue.value : shellArgsConfigValue.userValue) || shellArgsConfigValue.defaultValue);\n\tif (!args) {\n\t\treturn [];\n\t}\n\tif (typeof args === 'string' && platformOverride === platform.Platform.Windows) {\n\t\treturn variableResolver ? variableResolver(args) : args;\n\t}\n\tif (variableResolver) {\n\t\tconst resolvedArgs: string[] = [];\n\t\tfor (const arg of args) {\n\t\t\ttry {\n\t\t\t\tresolvedArgs.push(variableResolver(arg));\n\t\t\t} catch (e) {\n\t\t\t\tlogService.error(`Could not resolve terminal.integrated.shellArgs.${platformKey}`, e);\n\t\t\t\tresolvedArgs.push(arg);\n\t\t\t}\n\t\t}\n\t\targs = resolvedArgs;\n\t}\n\treturn args;\n}\n\nfunction getShellSetting(\n\tfetchSetting: (key: TerminalShellSetting) => { userValue?: string | string[], value?: string | string[], defaultValue?: string | string[] },\n\tisWorkspaceShellAllowed: boolean,\n\ttype: 'automationShell' | 'shell',\n\tplatformOverride: platform.Platform = platform.platform,\n): string | null {\n\tconst platformKey = platformOverride === platform.Platform.Windows ? 'windows' : platformOverride === platform.Platform.Mac ? 'osx' : 'linux';\n\tconst shellConfigValue = fetchSetting(<TerminalShellSetting>`terminal.integrated.${type}.${platformKey}`);\n\tconst executable = (isWorkspaceShellAllowed ? <string>shellConfigValue.value : <string>shellConfigValue.userValue) || (<string | null>shellConfigValue.defaultValue);\n\treturn executable;\n}\n\nexport function createTerminalEnvironment(\n\tshellLaunchConfig: IShellLaunchConfig,\n\tenvFromConfig: { userValue?: ITerminalEnvironment, value?: ITerminalEnvironment, defaultValue?: ITerminalEnvironment },\n\tvariableResolver: VariableResolver | undefined,\n\tisWorkspaceShellAllowed: boolean,\n\tversion: string | undefined,\n\tdetectLocale: 'auto' | 'off' | 'on',\n\tbaseEnv: platform.IProcessEnvironment\n): platform.IProcessEnvironment {\n\t// Create a terminal environment based on settings, launch config and permissions\n\tlet env: platform.IProcessEnvironment = {};\n\tif (shellLaunchConfig.strictEnv) {\n\t\t// strictEnv is true, only use the requested env (ignoring null entries)\n\t\tmergeNonNullKeys(env, shellLaunchConfig.env);\n\t} else {\n\t\t// Merge process env with the env from config and from shellLaunchConfig\n\t\tmergeNonNullKeys(env, baseEnv);\n\n\t\t// const platformKey = platform.isWindows ? 'windows' : (platform.isMacintosh ? 'osx' : 'linux');\n\t\t// const envFromConfigValue = this._workspaceConfigurationService.inspect<ITerminalEnvironment | undefined>(`terminal.integrated.env.${platformKey}`);\n\t\tconst allowedEnvFromConfig = { ...(isWorkspaceShellAllowed ? envFromConfig.value : envFromConfig.userValue) };\n\n\t\t// Resolve env vars from config and shell\n\t\tif (variableResolver) {\n\t\t\tif (allowedEnvFromConfig) {\n\t\t\t\tresolveConfigurationVariables(variableResolver, allowedEnvFromConfig);\n\t\t\t}\n\t\t\tif (shellLaunchConfig.env) {\n\t\t\t\tresolveConfigurationVariables(variableResolver, shellLaunchConfig.env);\n\t\t\t}\n\t\t}\n\n\t\t// Sanitize the environment, removing any undesirable VS Code and Electron environment\n\t\t// variables\n\t\tsanitizeProcessEnvironment(env, 'VSCODE_IPC_HOOK_CLI');\n\n\t\t// Merge config (settings) and ShellLaunchConfig environments\n\t\tmergeEnvironments(env, allowedEnvFromConfig);\n\t\tmergeEnvironments(env, shellLaunchConfig.env);\n\n\t\t// Adding other env keys necessary to create the process\n\t\taddTerminalEnvironmentKeys(env, version, platform.locale, detectLocale);\n\t}\n\treturn env;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as os from 'os';\nimport * as platform from 'vs/base/common/platform';\nimport * as processes from 'vs/base/node/processes';\nimport { readFile, fileExists, stat } from 'vs/base/node/pfs';\nimport { LinuxDistro, IShellDefinition } from 'vs/workbench/contrib/terminal/common/terminal';\nimport { coalesce } from 'vs/base/common/arrays';\nimport { normalize, basename } from 'vs/base/common/path';\n\n/**\n * Gets the detected default shell for the _system_, not to be confused with VS Code's _default_\n * shell that the terminal uses by default.\n * @param p The platform to detect the shell of.\n */\nexport function getSystemShell(p: platform.Platform, environment: platform.IProcessEnvironment = process.env as platform.IProcessEnvironment): string {\n\tif (p === platform.Platform.Windows) {\n\t\tif (platform.isWindows) {\n\t\t\treturn getSystemShellWindows(environment);\n\t\t}\n\t\t// Don't detect Windows shell when not on Windows\n\t\treturn processes.getWindowsShell(environment);\n\t}\n\t// Only use $SHELL for the current OS\n\tif (platform.isLinux && p === platform.Platform.Mac || platform.isMacintosh && p === platform.Platform.Linux) {\n\t\treturn '/bin/bash';\n\t}\n\treturn getSystemShellUnixLike(environment);\n}\n\nlet _TERMINAL_DEFAULT_SHELL_UNIX_LIKE: string | null = null;\nfunction getSystemShellUnixLike(environment: platform.IProcessEnvironment): string {\n\tif (!_TERMINAL_DEFAULT_SHELL_UNIX_LIKE) {\n\t\tlet unixLikeTerminal = 'sh';\n\t\tif (!platform.isWindows && environment.SHELL) {\n\t\t\tunixLikeTerminal = environment.SHELL;\n\t\t\t// Some systems have $SHELL set to /bin/false which breaks the terminal\n\t\t\tif (unixLikeTerminal === '/bin/false') {\n\t\t\t\tunixLikeTerminal = '/bin/bash';\n\t\t\t}\n\t\t}\n\t\tif (platform.isWindows) {\n\t\t\tunixLikeTerminal = '/bin/bash'; // for WSL\n\t\t}\n\t\t_TERMINAL_DEFAULT_SHELL_UNIX_LIKE = unixLikeTerminal;\n\t}\n\treturn _TERMINAL_DEFAULT_SHELL_UNIX_LIKE;\n}\n\nlet _TERMINAL_DEFAULT_SHELL_WINDOWS: string | null = null;\nfunction getSystemShellWindows(environment: platform.IProcessEnvironment): string {\n\tif (!_TERMINAL_DEFAULT_SHELL_WINDOWS) {\n\t\tconst isAtLeastWindows10 = platform.isWindows && parseFloat(os.release()) >= 10;\n\t\tconst is32ProcessOn64Windows = environment.hasOwnProperty('PROCESSOR_ARCHITEW6432');\n\t\tconst powerShellPath = `${environment.windir}\\\\${is32ProcessOn64Windows ? 'Sysnative' : 'System32'}\\\\WindowsPowerShell\\\\v1.0\\\\powershell.exe`;\n\t\t_TERMINAL_DEFAULT_SHELL_WINDOWS = isAtLeastWindows10 ? powerShellPath : processes.getWindowsShell(environment);\n\t}\n\treturn _TERMINAL_DEFAULT_SHELL_WINDOWS;\n}\n\nlet detectedDistro = LinuxDistro.Unknown;\nif (platform.isLinux) {\n\tconst file = '/etc/os-release';\n\tfileExists(file).then(async exists => {\n\t\tif (!exists) {\n\t\t\treturn;\n\t\t}\n\t\tconst buffer = await readFile(file);\n\t\tconst contents = buffer.toString();\n\t\tif (/NAME=\"?Fedora\"?/.test(contents)) {\n\t\t\tdetectedDistro = LinuxDistro.Fedora;\n\t\t} else if (/NAME=\"?Ubuntu\"?/.test(contents)) {\n\t\t\tdetectedDistro = LinuxDistro.Ubuntu;\n\t\t}\n\t});\n}\n\nexport const linuxDistro = detectedDistro;\n\nexport function getWindowsBuildNumber(): number {\n\tconst osVersion = (/(\\d+)\\.(\\d+)\\.(\\d+)/g).exec(os.release());\n\tlet buildNumber: number = 0;\n\tif (osVersion && osVersion.length === 4) {\n\t\tbuildNumber = parseInt(osVersion[3]);\n\t}\n\treturn buildNumber;\n}\n\nexport function detectAvailableShells(): Promise<IShellDefinition[]> {\n\treturn platform.isWindows ? detectAvailableWindowsShells() : detectAvailableUnixShells();\n}\n\nasync function detectAvailableWindowsShells(): Promise<IShellDefinition[]> {\n\t// Determine the correct System32 path. We want to point to Sysnative\n\t// when the 32-bit version of VS Code is running on a 64-bit machine.\n\t// The reason for this is because PowerShell's important PSReadline\n\t// module doesn't work if this is not the case. See #27915.\n\tconst is32ProcessOn64Windows = process.env.hasOwnProperty('PROCESSOR_ARCHITEW6432');\n\tconst system32Path = `${process.env['windir']}\\\\${is32ProcessOn64Windows ? 'Sysnative' : 'System32'}`;\n\n\tlet useWSLexe = false;\n\n\tif (getWindowsBuildNumber() >= 16299) {\n\t\tuseWSLexe = true;\n\t}\n\n\tconst expectedLocations: { [key: string]: string[] } = {\n\t\t'Command Prompt': [`${system32Path}\\\\cmd.exe`],\n\t\t'Windows PowerShell': [`${system32Path}\\\\WindowsPowerShell\\\\v1.0\\\\powershell.exe`],\n\t\t'PowerShell': [await getShellPathFromRegistry('pwsh')],\n\t\t'WSL Bash': [`${system32Path}\\\\${useWSLexe ? 'wsl.exe' : 'bash.exe'}`],\n\t\t'Git Bash': [\n\t\t\t`${process.env['ProgramW6432']}\\\\Git\\\\bin\\\\bash.exe`,\n\t\t\t`${process.env['ProgramW6432']}\\\\Git\\\\usr\\\\bin\\\\bash.exe`,\n\t\t\t`${process.env['ProgramFiles']}\\\\Git\\\\bin\\\\bash.exe`,\n\t\t\t`${process.env['ProgramFiles']}\\\\Git\\\\usr\\\\bin\\\\bash.exe`,\n\t\t\t`${process.env['LocalAppData']}\\\\Programs\\\\Git\\\\bin\\\\bash.exe`,\n\t\t],\n\t\t// See #75945\n\t\t// Cygwin: [\n\t\t// \t`${process.env['HOMEDRIVE']}\\\\cygwin64\\\\bin\\\\bash.exe`,\n\t\t// \t`${process.env['HOMEDRIVE']}\\\\cygwin\\\\bin\\\\bash.exe`\n\t\t// ]\n\t};\n\tconst promises: Promise<IShellDefinition | undefined>[] = [];\n\tObject.keys(expectedLocations).forEach(key => promises.push(validateShellPaths(key, expectedLocations[key])));\n\tconst shells = await Promise.all(promises);\n\treturn coalesce(shells);\n}\n\nasync function detectAvailableUnixShells(): Promise<IShellDefinition[]> {\n\tconst contents = await readFile('/etc/shells', 'utf8');\n\tconst shells = contents.split('\\n').filter(e => e.trim().indexOf('#') !== 0 && e.trim().length > 0);\n\treturn shells.map(e => {\n\t\treturn {\n\t\t\tlabel: basename(e),\n\t\t\tpath: e\n\t\t};\n\t});\n}\n\nasync function validateShellPaths(label: string, potentialPaths: string[]): Promise<IShellDefinition | undefined> {\n\tif (potentialPaths.length === 0) {\n\t\treturn Promise.resolve(undefined);\n\t}\n\tconst current = potentialPaths.shift()!;\n\tif (current! === '') {\n\t\treturn validateShellPaths(label, potentialPaths);\n\t}\n\ttry {\n\t\tconst result = await stat(normalize(current));\n\t\tif (result.isFile || result.isSymbolicLink) {\n\t\t\treturn {\n\t\t\t\tlabel,\n\t\t\t\tpath: current\n\t\t\t};\n\t\t}\n\t} catch { /* noop */ }\n\treturn validateShellPaths(label, potentialPaths);\n}\n\nasync function getShellPathFromRegistry(shellName: string): Promise<string> {\n\tconst Registry = await import('vscode-windows-registry');\n\ttry {\n\t\tconst shellPath = Registry.GetStringRegKey('HKEY_LOCAL_MACHINE', `SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\App Paths\\\\${shellName}.exe`, '');\n\t\treturn shellPath ? shellPath : '';\n\t} catch (error) {\n\t\treturn '';\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IProcessEnvironment, isLinux, isMacintosh, isWindows } from 'vs/base/common/platform';\nimport { readFile, exists } from 'vs/base/node/pfs';\nimport * as path from 'vs/base/common/path';\nimport { isString } from 'vs/base/common/types';\nimport { getCaseInsensitive } from 'vs/base/common/objects';\n\nlet mainProcessParentEnv: IProcessEnvironment | undefined;\n\nexport async function getMainProcessParentEnv(baseEnvironment: IProcessEnvironment = process.env as IProcessEnvironment): Promise<IProcessEnvironment> {\n\tif (mainProcessParentEnv) {\n\t\treturn mainProcessParentEnv;\n\t}\n\n\t// For Linux use /proc/<pid>/status to get the parent of the main process and then fetch its\n\t// env using /proc/<pid>/environ.\n\tif (isLinux) {\n\t\tconst mainProcessId = process.ppid;\n\t\tconst codeProcessName = path.basename(process.argv[0]);\n\t\tlet pid: number = 0;\n\t\tlet ppid: number = mainProcessId;\n\t\tlet name: string = codeProcessName;\n\t\tdo {\n\t\t\tpid = ppid;\n\t\t\tconst status = await readFile(`/proc/${pid}/status`, 'utf8');\n\t\t\tconst splitByLine = status.split('\\n');\n\t\t\tsplitByLine.forEach(line => {\n\t\t\t\tif (line.indexOf('Name:') === 0) {\n\t\t\t\t\tname = line.replace(/^Name:\\s+/, '');\n\t\t\t\t}\n\t\t\t\tif (line.indexOf('PPid:') === 0) {\n\t\t\t\t\tppid = parseInt(line.replace(/^PPid:\\s+/, ''));\n\t\t\t\t}\n\t\t\t});\n\t\t} while (name === codeProcessName);\n\t\tconst rawEnv = await readFile(`/proc/${pid}/environ`, 'utf8');\n\t\tconst env: IProcessEnvironment = {};\n\t\trawEnv.split('\\0').forEach(e => {\n\t\t\tconst i = e.indexOf('=');\n\t\t\tenv[e.substr(0, i)] = e.substr(i + 1);\n\t\t});\n\t\tmainProcessParentEnv = env;\n\t}\n\n\t// For macOS we want the \"root\" environment as shells by default run as login shells. It\n\t// doesn't appear to be possible to get the \"root\" environment as `ps eww -o command` for\n\t// PID 1 (the parent of the main process when launched from the dock/finder) returns no\n\t// environment, because of this we will fill in the root environment using a allowlist of\n\t// environment variables that we have.\n\tif (isMacintosh) {\n\t\tmainProcessParentEnv = {};\n\t\t// This list was generated by diffing launching a terminal with {} and the system\n\t\t// terminal launched from finder.\n\t\tconst rootEnvVars = [\n\t\t\t'SHELL',\n\t\t\t'SSH_AUTH_SOCK',\n\t\t\t'Apple_PubSub_Socket_Render',\n\t\t\t'XPC_FLAGS',\n\t\t\t'XPC_SERVICE_NAME',\n\t\t\t'HOME',\n\t\t\t'LOGNAME',\n\t\t\t'TMPDIR'\n\t\t];\n\t\trootEnvVars.forEach(k => {\n\t\t\tif (baseEnvironment[k]) {\n\t\t\t\tmainProcessParentEnv![k] = baseEnvironment[k]!;\n\t\t\t}\n\t\t});\n\t}\n\n\t// TODO: Windows should return a fresh environment block, might need native code?\n\tif (isWindows) {\n\t\tmainProcessParentEnv = baseEnvironment;\n\t}\n\n\treturn mainProcessParentEnv!;\n}\n\nexport async function findExecutable(command: string, cwd?: string, paths?: string[], env: IProcessEnvironment = process.env as IProcessEnvironment): Promise<string | undefined> {\n\t// If we have an absolute path then we take it.\n\tif (path.isAbsolute(command)) {\n\t\treturn await exists(command) ? command : undefined;\n\t}\n\tif (cwd === undefined) {\n\t\tcwd = process.cwd();\n\t}\n\tconst dir = path.dirname(command);\n\tif (dir !== '.') {\n\t\t// We have a directory and the directory is relative (see above). Make the path absolute\n\t\t// to the current working directory.\n\t\tconst fullPath = path.join(cwd, command);\n\t\treturn await exists(fullPath) ? fullPath : undefined;\n\t}\n\tconst envPath = getCaseInsensitive(env, 'PATH');\n\tif (paths === undefined && isString(envPath)) {\n\t\tpaths = envPath.split(path.delimiter);\n\t}\n\t// No PATH environment. Make path absolute to the cwd.\n\tif (paths === undefined || paths.length === 0) {\n\t\tconst fullPath = path.join(cwd, command);\n\t\treturn await exists(fullPath) ? fullPath : undefined;\n\t}\n\t// We have a simple file name. We get the path variable from the env\n\t// and try to find the executable on the path.\n\tfor (let pathEntry of paths) {\n\t\t// The path entry is absolute.\n\t\tlet fullPath: string;\n\t\tif (path.isAbsolute(pathEntry)) {\n\t\t\tfullPath = path.join(pathEntry, command);\n\t\t} else {\n\t\t\tfullPath = path.join(cwd, pathEntry, command);\n\t\t}\n\n\t\tif (await exists(fullPath)) {\n\t\t\treturn fullPath;\n\t\t}\n\t\tif (isWindows) {\n\t\t\tlet withExtension = fullPath + '.com';\n\t\t\tif (await exists(withExtension)) {\n\t\t\t\treturn withExtension;\n\t\t\t}\n\t\t\twithExtension = fullPath + '.exe';\n\t\t\tif (await exists(withExtension)) {\n\t\t\t\treturn withExtension;\n\t\t\t}\n\t\t}\n\t}\n\tconst fullPath = path.join(cwd, command);\n\treturn await exists(fullPath) ? fullPath : undefined;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as path from 'vs/base/common/path';\nimport * as platform from 'vs/base/common/platform';\nimport type * as pty from 'node-pty';\nimport * as fs from 'fs';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { getWindowsBuildNumber } from 'vs/workbench/contrib/terminal/node/terminal';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IShellLaunchConfig, ITerminalChildProcess, ITerminalLaunchError } from 'vs/workbench/contrib/terminal/common/terminal';\nimport { exec } from 'child_process';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { stat } from 'vs/base/node/pfs';\nimport { findExecutable } from 'vs/workbench/contrib/terminal/node/terminalEnvironment';\nimport { URI } from 'vs/base/common/uri';\nimport { localize } from 'vs/nls';\n\n// Writing large amounts of data can be corrupted for some reason, after looking into this is\n// appears to be a race condition around writing to the FD which may be based on how powerful the\n// hardware is. The workaround for this is to space out when large amounts of data is being written\n// to the terminal. See https://github.com/microsoft/vscode/issues/38137\nconst WRITE_MAX_CHUNK_SIZE = 50;\nconst WRITE_INTERVAL_MS = 5;\n\nexport class TerminalProcess extends Disposable implements ITerminalChildProcess {\n\tprivate _exitCode: number | undefined;\n\tprivate _exitMessage: string | undefined;\n\tprivate _closeTimeout: any;\n\tprivate _ptyProcess: pty.IPty | undefined;\n\tprivate _currentTitle: string = '';\n\tprivate _processStartupComplete: Promise<void> | undefined;\n\tprivate _isDisposed: boolean = false;\n\tprivate _titleInterval: NodeJS.Timer | null = null;\n\tprivate _writeQueue: string[] = [];\n\tprivate _writeTimeout: NodeJS.Timeout | undefined;\n\tprivate _delayedResizer: DelayedResizer | undefined;\n\tprivate readonly _initialCwd: string;\n\tprivate readonly _ptyOptions: pty.IPtyForkOptions | pty.IWindowsPtyForkOptions;\n\n\tpublic get exitMessage(): string | undefined { return this._exitMessage; }\n\n\tprivate readonly _onProcessData = this._register(new Emitter<string>());\n\tpublic get onProcessData(): Event<string> { return this._onProcessData.event; }\n\tprivate readonly _onProcessExit = this._register(new Emitter<number>());\n\tpublic get onProcessExit(): Event<number> { return this._onProcessExit.event; }\n\tprivate readonly _onProcessReady = this._register(new Emitter<{ pid: number, cwd: string }>());\n\tpublic get onProcessReady(): Event<{ pid: number, cwd: string }> { return this._onProcessReady.event; }\n\tprivate readonly _onProcessTitleChanged = this._register(new Emitter<string>());\n\tpublic get onProcessTitleChanged(): Event<string> { return this._onProcessTitleChanged.event; }\n\n\tconstructor(\n\t\tprivate readonly _shellLaunchConfig: IShellLaunchConfig,\n\t\tcwd: string,\n\t\tcols: number,\n\t\trows: number,\n\t\tenv: platform.IProcessEnvironment,\n\t\t/**\n\t\t * environment used for `findExecutable`\n\t\t */\n\t\tprivate readonly _executableEnv: platform.IProcessEnvironment,\n\t\twindowsEnableConpty: boolean,\n\t\t@ILogService private readonly _logService: ILogService\n\t) {\n\t\tsuper();\n\t\tlet name: string;\n\t\tif (platform.isWindows) {\n\t\t\tname = path.basename(this._shellLaunchConfig.executable || '');\n\t\t} else {\n\t\t\t// Using 'xterm-256color' here helps ensure that the majority of Linux distributions will use a\n\t\t\t// color prompt as defined in the default ~/.bashrc file.\n\t\t\tname = 'xterm-256color';\n\t\t}\n\t\tthis._initialCwd = cwd;\n\t\tconst useConpty = windowsEnableConpty && process.platform === 'win32' && getWindowsBuildNumber() >= 18309;\n\t\tthis._ptyOptions = {\n\t\t\tname,\n\t\t\tcwd,\n\t\t\tenv,\n\t\t\tcols,\n\t\t\trows,\n\t\t\tuseConpty,\n\t\t\t// This option will force conpty to not redraw the whole viewport on launch\n\t\t\tconptyInheritCursor: useConpty && !!_shellLaunchConfig.initialText\n\t\t};\n\t\t// Delay resizes to avoid conpty not respecting very early resize calls\n\t\tif (platform.isWindows && useConpty && cols === 0 && rows === 0 && this._shellLaunchConfig.executable?.endsWith('Git\\\\bin\\\\bash.exe')) {\n\t\t\tthis._delayedResizer = new DelayedResizer();\n\t\t\tthis._register(this._delayedResizer.onTrigger(dimensions => {\n\t\t\t\tthis._delayedResizer?.dispose();\n\t\t\t\tthis._delayedResizer = undefined;\n\t\t\t\tif (dimensions.cols && dimensions.rows) {\n\t\t\t\t\tthis.resize(dimensions.cols, dimensions.rows);\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\t}\n\n\tpublic async start(): Promise<ITerminalLaunchError | undefined> {\n\t\tconst results = await Promise.all([this._validateCwd(), this._validateExecutable()]);\n\t\tconst firstError = results.find(r => r !== undefined);\n\t\tif (firstError) {\n\t\t\treturn firstError;\n\t\t}\n\n\t\ttry {\n\t\t\tawait this.setupPtyProcess(this._shellLaunchConfig, this._ptyOptions);\n\t\t\treturn undefined;\n\t\t} catch (err) {\n\t\t\tthis._logService.trace('IPty#spawn native exception', err);\n\t\t\treturn { message: `A native exception occurred during launch (${err.message})` };\n\t\t}\n\t}\n\n\tprivate async _validateCwd(): Promise<undefined | ITerminalLaunchError> {\n\t\ttry {\n\t\t\tconst result = await stat(this._initialCwd);\n\t\t\tif (!result.isDirectory()) {\n\t\t\t\treturn { message: localize('launchFail.cwdNotDirectory', \"Starting directory (cwd) \\\"{0}\\\" is not a directory\", this._initialCwd.toString()) };\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tif (err?.code === 'ENOENT') {\n\t\t\t\treturn { message: localize('launchFail.cwdDoesNotExist', \"Starting directory (cwd) \\\"{0}\\\" does not exist\", this._initialCwd.toString()) };\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate async _validateExecutable(): Promise<undefined | ITerminalLaunchError> {\n\t\tconst slc = this._shellLaunchConfig;\n\t\tif (!slc.executable) {\n\t\t\tthrow new Error('IShellLaunchConfig.executable not set');\n\t\t}\n\t\ttry {\n\t\t\tconst result = await stat(slc.executable);\n\t\t\tif (!result.isFile() && !result.isSymbolicLink()) {\n\t\t\t\treturn { message: localize('launchFail.executableIsNotFileOrSymlink', \"Path to shell executable \\\"{0}\\\" is not a file of a symlink\", slc.executable) };\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tif (err?.code === 'ENOENT') {\n\t\t\t\t// The executable isn't an absolute path, try find it on the PATH or CWD\n\t\t\t\tlet cwd = slc.cwd instanceof URI ? slc.cwd.path : slc.cwd!;\n\t\t\t\tconst envPaths: string[] | undefined = (slc.env && slc.env.PATH) ? slc.env.PATH.split(path.delimiter) : undefined;\n\t\t\t\tconst executable = await findExecutable(slc.executable!, cwd, envPaths, this._executableEnv);\n\t\t\t\tif (!executable) {\n\t\t\t\t\treturn { message: localize('launchFail.executableDoesNotExist', \"Path to shell executable \\\"{0}\\\" does not exist\", slc.executable) };\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate async setupPtyProcess(shellLaunchConfig: IShellLaunchConfig, options: pty.IPtyForkOptions): Promise<void> {\n\t\tconst args = shellLaunchConfig.args || [];\n\t\tthis._logService.trace('IPty#spawn', shellLaunchConfig.executable, args, options);\n\t\tconst ptyProcess = (await import('node-pty')).spawn(shellLaunchConfig.executable!, args, options);\n\t\tthis._ptyProcess = ptyProcess;\n\t\tthis._processStartupComplete = new Promise<void>(c => {\n\t\t\tthis.onProcessReady(() => c());\n\t\t});\n\t\tptyProcess.onData(data => {\n\t\t\tthis._onProcessData.fire(data);\n\t\t\tif (this._closeTimeout) {\n\t\t\t\tclearTimeout(this._closeTimeout);\n\t\t\t\tthis._queueProcessExit();\n\t\t\t}\n\t\t});\n\t\tptyProcess.onExit(e => {\n\t\t\tthis._exitCode = e.exitCode;\n\t\t\tthis._queueProcessExit();\n\t\t});\n\t\tthis._setupTitlePolling(ptyProcess);\n\t\tthis._sendProcessId(ptyProcess.pid);\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._isDisposed = true;\n\t\tif (this._titleInterval) {\n\t\t\tclearInterval(this._titleInterval);\n\t\t}\n\t\tthis._titleInterval = null;\n\t\tthis._onProcessData.dispose();\n\t\tthis._onProcessExit.dispose();\n\t\tthis._onProcessReady.dispose();\n\t\tthis._onProcessTitleChanged.dispose();\n\t\tsuper.dispose();\n\t}\n\n\tprivate _setupTitlePolling(ptyProcess: pty.IPty) {\n\t\t// Send initial timeout async to give event listeners a chance to init\n\t\tsetTimeout(() => {\n\t\t\tthis._sendProcessTitle(ptyProcess);\n\t\t}, 0);\n\t\t// Setup polling for non-Windows, for Windows `process` doesn't change\n\t\tif (!platform.isWindows) {\n\t\t\tthis._titleInterval = setInterval(() => {\n\t\t\t\tif (this._currentTitle !== ptyProcess.process) {\n\t\t\t\t\tthis._sendProcessTitle(ptyProcess);\n\t\t\t\t}\n\t\t\t}, 200);\n\t\t}\n\t}\n\n\t// Allow any trailing data events to be sent before the exit event is sent.\n\t// See https://github.com/Tyriar/node-pty/issues/72\n\tprivate _queueProcessExit() {\n\t\tif (this._closeTimeout) {\n\t\t\tclearTimeout(this._closeTimeout);\n\t\t}\n\t\tthis._closeTimeout = setTimeout(() => this._kill(), 250);\n\t}\n\n\tprivate async _kill(): Promise<void> {\n\t\t// Wait to kill to process until the start up code has run. This prevents us from firing a process exit before a\n\t\t// process start.\n\t\tawait this._processStartupComplete;\n\t\tif (this._isDisposed) {\n\t\t\treturn;\n\t\t}\n\t\t// Attempt to kill the pty, it may have already been killed at this\n\t\t// point but we want to make sure\n\t\ttry {\n\t\t\tif (this._ptyProcess) {\n\t\t\t\tthis._logService.trace('IPty#kill');\n\t\t\t\tthis._ptyProcess.kill();\n\t\t\t}\n\t\t} catch (ex) {\n\t\t\t// Swallow, the pty has already been killed\n\t\t}\n\t\tthis._onProcessExit.fire(this._exitCode || 0);\n\t\tthis.dispose();\n\t}\n\n\tprivate _sendProcessId(pid: number) {\n\t\tthis._onProcessReady.fire({ pid, cwd: this._initialCwd });\n\t}\n\n\tprivate _sendProcessTitle(ptyProcess: pty.IPty): void {\n\t\tif (this._isDisposed) {\n\t\t\treturn;\n\t\t}\n\t\tthis._currentTitle = ptyProcess.process;\n\t\tthis._onProcessTitleChanged.fire(this._currentTitle);\n\t}\n\n\tpublic shutdown(immediate: boolean): void {\n\t\tif (immediate) {\n\t\t\tthis._kill();\n\t\t} else {\n\t\t\tthis._queueProcessExit();\n\t\t}\n\t}\n\n\tpublic input(data: string): void {\n\t\tif (this._isDisposed || !this._ptyProcess) {\n\t\t\treturn;\n\t\t}\n\t\tfor (let i = 0; i <= Math.floor(data.length / WRITE_MAX_CHUNK_SIZE); i++) {\n\t\t\tthis._writeQueue.push(data.substr(i * WRITE_MAX_CHUNK_SIZE, WRITE_MAX_CHUNK_SIZE));\n\t\t}\n\t\tthis._startWrite();\n\t}\n\n\tprivate _startWrite(): void {\n\t\t// Don't write if it's already queued of is there is nothing to write\n\t\tif (this._writeTimeout !== undefined || this._writeQueue.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._doWrite();\n\n\t\t// Don't queue more writes if the queue is empty\n\t\tif (this._writeQueue.length === 0) {\n\t\t\tthis._writeTimeout = undefined;\n\t\t\treturn;\n\t\t}\n\n\t\t// Queue the next write\n\t\tthis._writeTimeout = setTimeout(() => {\n\t\t\tthis._writeTimeout = undefined;\n\t\t\tthis._startWrite();\n\t\t}, WRITE_INTERVAL_MS);\n\t}\n\n\tprivate _doWrite(): void {\n\t\tconst data = this._writeQueue.shift()!;\n\t\tthis._logService.trace('IPty#write', `${data.length} characters`);\n\t\tthis._ptyProcess!.write(data);\n\t}\n\n\tpublic resize(cols: number, rows: number): void {\n\t\tif (this._isDisposed) {\n\t\t\treturn;\n\t\t}\n\t\tif (typeof cols !== 'number' || typeof rows !== 'number' || isNaN(cols) || isNaN(rows)) {\n\t\t\treturn;\n\t\t}\n\t\t// Ensure that cols and rows are always >= 1, this prevents a native\n\t\t// exception in winpty.\n\t\tif (this._ptyProcess) {\n\t\t\tcols = Math.max(cols, 1);\n\t\t\trows = Math.max(rows, 1);\n\n\t\t\t// Delay resize if needed\n\t\t\tif (this._delayedResizer) {\n\t\t\t\tthis._delayedResizer.cols = cols;\n\t\t\t\tthis._delayedResizer.rows = rows;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._logService.trace('IPty#resize', cols, rows);\n\t\t\ttry {\n\t\t\t\tthis._ptyProcess.resize(cols, rows);\n\t\t\t} catch (e) {\n\t\t\t\t// Swallow error if the pty has already exited\n\t\t\t\tthis._logService.trace('IPty#resize exception ' + e.message);\n\t\t\t\tif (this._exitCode !== undefined && e.message !== 'ioctl(2) failed, EBADF') {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic getInitialCwd(): Promise<string> {\n\t\treturn Promise.resolve(this._initialCwd);\n\t}\n\n\tpublic getCwd(): Promise<string> {\n\t\tif (platform.isMacintosh) {\n\t\t\treturn new Promise<string>(resolve => {\n\t\t\t\tif (!this._ptyProcess) {\n\t\t\t\t\tresolve(this._initialCwd);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis._logService.trace('IPty#pid');\n\t\t\t\texec('lsof -OPl -p ' + this._ptyProcess.pid + ' | grep cwd', (error, stdout, stderr) => {\n\t\t\t\t\tif (stdout !== '') {\n\t\t\t\t\t\tresolve(stdout.substring(stdout.indexOf('/'), stdout.length - 1));\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\tif (platform.isLinux) {\n\t\t\treturn new Promise<string>(resolve => {\n\t\t\t\tif (!this._ptyProcess) {\n\t\t\t\t\tresolve(this._initialCwd);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis._logService.trace('IPty#pid');\n\t\t\t\tfs.readlink('/proc/' + this._ptyProcess.pid + '/cwd', (err, linkedstr) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tresolve(this._initialCwd);\n\t\t\t\t\t}\n\t\t\t\t\tresolve(linkedstr);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\treturn new Promise<string>(resolve => {\n\t\t\tresolve(this._initialCwd);\n\t\t});\n\t}\n\n\tpublic getLatency(): Promise<number> {\n\t\treturn Promise.resolve(0);\n\t}\n}\n\n/**\n * Tracks the latest resize event to be trigger at a later point.\n */\nclass DelayedResizer extends Disposable {\n\tpublic rows: number | undefined;\n\tpublic cols: number | undefined;\n\tprivate _timeout: NodeJS.Timeout;\n\n\tprivate readonly _onTrigger = this._register(new Emitter<{ rows?: number, cols?: number }>());\n\tpublic get onTrigger(): Event<{ rows?: number, cols?: number }> { return this._onTrigger.event; }\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis._timeout = setTimeout(() => {\n\t\t\tthis._onTrigger.fire({ rows: this.rows, cols: this.cols });\n\t\t}, 1000);\n\t\tthis._register({\n\t\t\tdispose: () => {\n\t\t\t\tclearTimeout(this._timeout);\n\t\t\t}\n\t\t});\n\t}\n\n\tdispose(): void {\n\t\tsuper.dispose();\n\t\tclearTimeout(this._timeout);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IWorkspaceFolder } from 'vs/platform/workspace/common/workspace';\nimport { ConfigurationTarget } from 'vs/platform/configuration/common/configuration';\n\nexport const IConfigurationResolverService = createDecorator<IConfigurationResolverService>('configurationResolverService');\n\nexport interface IConfigurationResolverService {\n\treadonly _serviceBrand: undefined;\n\n\tresolve(folder: IWorkspaceFolder | undefined, value: string): string;\n\tresolve(folder: IWorkspaceFolder | undefined, value: string[]): string[];\n\tresolve(folder: IWorkspaceFolder | undefined, value: IStringDictionary<string>): IStringDictionary<string>;\n\n\t/**\n\t * Recursively resolves all variables in the given config and returns a copy of it with substituted values.\n\t * Command variables are only substituted if a \"commandValueMapping\" dictionary is given and if it contains an entry for the command.\n\t */\n\tresolveAny(folder: IWorkspaceFolder | undefined, config: any, commandValueMapping?: IStringDictionary<string>): any;\n\n\t/**\n\t * Recursively resolves all variables (including commands and user input) in the given config and returns a copy of it with substituted values.\n\t * If a \"variables\" dictionary (with names -> command ids) is given, command variables are first mapped through it before being resolved.\n\t *\n\t * @param section For example, 'tasks' or 'debug'. Used for resolving inputs.\n\t * @param variables Aliases for commands.\n\t */\n\tresolveWithInteractionReplace(folder: IWorkspaceFolder | undefined, config: any, section?: string, variables?: IStringDictionary<string>, target?: ConfigurationTarget): Promise<any>;\n\n\t/**\n\t * Similar to resolveWithInteractionReplace, except without the replace. Returns a map of variables and their resolution.\n\t * Keys in the map will be of the format input:variableName or command:variableName.\n\t */\n\tresolveWithInteraction(folder: IWorkspaceFolder | undefined, config: any, section?: string, variables?: IStringDictionary<string>, target?: ConfigurationTarget): Promise<Map<string, string> | undefined>;\n\n\t/**\n\t * Contributes a variable that can be resolved later. Consumers that use resolveAny, resolveWithInteraction,\n\t * and resolveWithInteractionReplace will have contributed variables resolved.\n\t */\n\tcontributeVariable(variable: string, resolution: () => Promise<string | undefined>): void;\n}\n\nexport interface PromptStringInputInfo {\n\tid: string;\n\ttype: 'promptString';\n\tdescription: string;\n\tdefault?: string;\n\tpassword?: boolean;\n}\n\nexport interface PickStringInputInfo {\n\tid: string;\n\ttype: 'pickString';\n\tdescription: string;\n\toptions: (string | { value: string, label?: string })[];\n\tdefault?: string;\n}\n\nexport interface CommandInputInfo {\n\tid: string;\n\ttype: 'command';\n\tcommand: string;\n\targs?: any;\n}\n\nexport type ConfiguredInput = PromptStringInputInfo | PickStringInputInfo | CommandInputInfo;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as paths from 'vs/base/common/path';\nimport * as process from 'vs/base/common/process';\nimport * as types from 'vs/base/common/types';\nimport * as objects from 'vs/base/common/objects';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport { IProcessEnvironment, isWindows, isMacintosh, isLinux } from 'vs/base/common/platform';\nimport { normalizeDriveLetter } from 'vs/base/common/labels';\nimport { localize } from 'vs/nls';\nimport { URI as uri } from 'vs/base/common/uri';\nimport { IConfigurationResolverService } from 'vs/workbench/services/configurationResolver/common/configurationResolver';\nimport { IWorkspaceFolder } from 'vs/platform/workspace/common/workspace';\nimport { ILabelService } from 'vs/platform/label/common/label';\n\nexport interface IVariableResolveContext {\n\tgetFolderUri(folderName: string): uri | undefined;\n\tgetWorkspaceFolderCount(): number;\n\tgetConfigurationValue(folderUri: uri, section: string): string | undefined;\n\tgetExecPath(): string | undefined;\n\tgetFilePath(): string | undefined;\n\tgetSelectedText(): string | undefined;\n\tgetLineNumber(): string | undefined;\n}\n\nexport class AbstractVariableResolverService implements IConfigurationResolverService {\n\n\tstatic readonly VARIABLE_REGEXP = /\\$\\{(.*?)\\}/g;\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate _context: IVariableResolveContext;\n\tprivate _labelService?: ILabelService;\n\tprivate _envVariables?: IProcessEnvironment;\n\tprotected _contributedVariables: Map<string, () => Promise<string | undefined>> = new Map();\n\n\n\tconstructor(_context: IVariableResolveContext, _labelService?: ILabelService, _envVariables?: IProcessEnvironment, private _ignoreEditorVariables = false) {\n\t\tthis._context = _context;\n\t\tthis._labelService = _labelService;\n\t\tif (_envVariables) {\n\t\t\tif (isWindows) {\n\t\t\t\t// windows env variables are case insensitive\n\t\t\t\tconst ev: IProcessEnvironment = Object.create(null);\n\t\t\t\tthis._envVariables = ev;\n\t\t\t\tObject.keys(_envVariables).forEach(key => {\n\t\t\t\t\tev[key.toLowerCase()] = _envVariables[key];\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis._envVariables = _envVariables;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic resolve(root: IWorkspaceFolder | undefined, value: string): string;\n\tpublic resolve(root: IWorkspaceFolder | undefined, value: string[]): string[];\n\tpublic resolve(root: IWorkspaceFolder | undefined, value: IStringDictionary<string>): IStringDictionary<string>;\n\tpublic resolve(root: IWorkspaceFolder | undefined, value: any): any {\n\t\treturn this.recursiveResolve(root ? root.uri : undefined, value);\n\t}\n\n\tpublic resolveAnyBase(workspaceFolder: IWorkspaceFolder | undefined, config: any, commandValueMapping?: IStringDictionary<string>, resolvedVariables?: Map<string, string>): any {\n\n\t\tconst result = objects.deepClone(config) as any;\n\n\t\t// hoist platform specific attributes to top level\n\t\tif (isWindows && result.windows) {\n\t\t\tObject.keys(result.windows).forEach(key => result[key] = result.windows[key]);\n\t\t} else if (isMacintosh && result.osx) {\n\t\t\tObject.keys(result.osx).forEach(key => result[key] = result.osx[key]);\n\t\t} else if (isLinux && result.linux) {\n\t\t\tObject.keys(result.linux).forEach(key => result[key] = result.linux[key]);\n\t\t}\n\n\t\t// delete all platform specific sections\n\t\tdelete result.windows;\n\t\tdelete result.osx;\n\t\tdelete result.linux;\n\n\t\t// substitute all variables recursively in string values\n\t\treturn this.recursiveResolve(workspaceFolder ? workspaceFolder.uri : undefined, result, commandValueMapping, resolvedVariables);\n\t}\n\n\tpublic resolveAny(workspaceFolder: IWorkspaceFolder | undefined, config: any, commandValueMapping?: IStringDictionary<string>): any {\n\t\treturn this.resolveAnyBase(workspaceFolder, config, commandValueMapping);\n\t}\n\n\tpublic resolveAnyMap(workspaceFolder: IWorkspaceFolder | undefined, config: any, commandValueMapping?: IStringDictionary<string>): { newConfig: any, resolvedVariables: Map<string, string> } {\n\t\tconst resolvedVariables = new Map<string, string>();\n\t\tconst newConfig = this.resolveAnyBase(workspaceFolder, config, commandValueMapping, resolvedVariables);\n\t\treturn { newConfig, resolvedVariables };\n\t}\n\n\tpublic resolveWithInteractionReplace(folder: IWorkspaceFolder | undefined, config: any, section?: string, variables?: IStringDictionary<string>): Promise<any> {\n\t\tthrow new Error('resolveWithInteractionReplace not implemented.');\n\t}\n\n\tpublic resolveWithInteraction(folder: IWorkspaceFolder | undefined, config: any, section?: string, variables?: IStringDictionary<string>): Promise<Map<string, string> | undefined> {\n\t\tthrow new Error('resolveWithInteraction not implemented.');\n\t}\n\n\tpublic contributeVariable(variable: string, resolution: () => Promise<string | undefined>): void {\n\t\tif (this._contributedVariables.has(variable)) {\n\t\t\tthrow new Error('Variable ' + variable + ' is contributed twice.');\n\t\t} else {\n\t\t\tthis._contributedVariables.set(variable, resolution);\n\t\t}\n\t}\n\n\tprivate recursiveResolve(folderUri: uri | undefined, value: any, commandValueMapping?: IStringDictionary<string>, resolvedVariables?: Map<string, string>): any {\n\t\tif (types.isString(value)) {\n\t\t\treturn this.resolveString(folderUri, value, commandValueMapping, resolvedVariables);\n\t\t} else if (types.isArray(value)) {\n\t\t\treturn value.map(s => this.recursiveResolve(folderUri, s, commandValueMapping, resolvedVariables));\n\t\t} else if (types.isObject(value)) {\n\t\t\tlet result: IStringDictionary<string | IStringDictionary<string> | string[]> = Object.create(null);\n\t\t\tObject.keys(value).forEach(key => {\n\t\t\t\tconst replaced = this.resolveString(folderUri, key, commandValueMapping, resolvedVariables);\n\t\t\t\tresult[replaced] = this.recursiveResolve(folderUri, value[key], commandValueMapping, resolvedVariables);\n\t\t\t});\n\t\t\treturn result;\n\t\t}\n\t\treturn value;\n\t}\n\n\tprivate resolveString(folderUri: uri | undefined, value: string, commandValueMapping: IStringDictionary<string> | undefined, resolvedVariables?: Map<string, string>): string {\n\n\t\t// loop through all variables occurrences in 'value'\n\t\tconst replaced = value.replace(AbstractVariableResolverService.VARIABLE_REGEXP, (match: string, variable: string) => {\n\n\t\t\tlet resolvedValue = this.evaluateSingleVariable(match, variable, folderUri, commandValueMapping);\n\n\t\t\tif (resolvedVariables) {\n\t\t\t\tresolvedVariables.set(variable, resolvedValue);\n\t\t\t}\n\n\t\t\treturn resolvedValue;\n\t\t});\n\n\t\treturn replaced;\n\t}\n\n\tprivate fsPath(displayUri: uri): string {\n\t\treturn this._labelService ? this._labelService.getUriLabel(displayUri, { noPrefix: true }) : displayUri.fsPath;\n\t}\n\n\tprivate evaluateSingleVariable(match: string, variable: string, folderUri: uri | undefined, commandValueMapping: IStringDictionary<string> | undefined): string {\n\n\t\t// try to separate variable arguments from variable name\n\t\tlet argument: string | undefined;\n\t\tconst parts = variable.split(':');\n\t\tif (parts.length > 1) {\n\t\t\tvariable = parts[0];\n\t\t\targument = parts[1];\n\t\t}\n\n\t\t// common error handling for all variables that require an open editor\n\t\tconst getFilePath = (): string => {\n\n\t\t\tconst filePath = this._context.getFilePath();\n\t\t\tif (filePath) {\n\t\t\t\treturn filePath;\n\t\t\t}\n\t\t\tthrow new Error(localize('canNotResolveFile', \"'{0}' can not be resolved. Please open an editor.\", match));\n\t\t};\n\n\t\t// common error handling for all variables that require an open folder and accept a folder name argument\n\t\tconst getFolderUri = (withArg = true): uri => {\n\n\t\t\tif (withArg && argument) {\n\t\t\t\tconst folder = this._context.getFolderUri(argument);\n\t\t\t\tif (folder) {\n\t\t\t\t\treturn folder;\n\t\t\t\t}\n\t\t\t\tthrow new Error(localize('canNotFindFolder', \"'{0}' can not be resolved. No such folder '{1}'.\", match, argument));\n\t\t\t}\n\n\t\t\tif (folderUri) {\n\t\t\t\treturn folderUri;\n\t\t\t}\n\n\t\t\tif (this._context.getWorkspaceFolderCount() > 1) {\n\t\t\t\tthrow new Error(localize('canNotResolveWorkspaceFolderMultiRoot', \"'{0}' can not be resolved in a multi folder workspace. Scope this variable using ':' and a workspace folder name.\", match));\n\t\t\t}\n\t\t\tthrow new Error(localize('canNotResolveWorkspaceFolder', \"'{0}' can not be resolved. Please open a folder.\", match));\n\t\t};\n\n\n\t\tswitch (variable) {\n\n\t\t\tcase 'env':\n\t\t\t\tif (argument) {\n\t\t\t\t\tif (this._envVariables) {\n\t\t\t\t\t\tconst env = this._envVariables[isWindows ? argument.toLowerCase() : argument];\n\t\t\t\t\t\tif (types.isString(env)) {\n\t\t\t\t\t\t\treturn env;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// For `env` we should do the same as a normal shell does - evaluates undefined envs to an empty string #46436\n\t\t\t\t\treturn '';\n\t\t\t\t}\n\t\t\t\tthrow new Error(localize('missingEnvVarName', \"'{0}' can not be resolved because no environment variable name is given.\", match));\n\n\t\t\tcase 'config':\n\t\t\t\tif (argument) {\n\t\t\t\t\tconst config = this._context.getConfigurationValue(getFolderUri(false), argument);\n\t\t\t\t\tif (types.isUndefinedOrNull(config)) {\n\t\t\t\t\t\tthrow new Error(localize('configNotFound', \"'{0}' can not be resolved because setting '{1}' not found.\", match, argument));\n\t\t\t\t\t}\n\t\t\t\t\tif (types.isObject(config)) {\n\t\t\t\t\t\tthrow new Error(localize('configNoString', \"'{0}' can not be resolved because '{1}' is a structured value.\", match, argument));\n\t\t\t\t\t}\n\t\t\t\t\treturn config;\n\t\t\t\t}\n\t\t\t\tthrow new Error(localize('missingConfigName', \"'{0}' can not be resolved because no settings name is given.\", match));\n\n\t\t\tcase 'command':\n\t\t\t\treturn this.resolveFromMap(match, argument, commandValueMapping, 'command');\n\n\t\t\tcase 'input':\n\t\t\t\treturn this.resolveFromMap(match, argument, commandValueMapping, 'input');\n\n\t\t\tdefault: {\n\n\t\t\t\tswitch (variable) {\n\t\t\t\t\tcase 'workspaceRoot':\n\t\t\t\t\tcase 'workspaceFolder':\n\t\t\t\t\t\treturn normalizeDriveLetter(this.fsPath(getFolderUri()));\n\n\t\t\t\t\tcase 'cwd':\n\t\t\t\t\t\treturn ((folderUri || argument) ? normalizeDriveLetter(this.fsPath(getFolderUri())) : process.cwd());\n\n\t\t\t\t\tcase 'workspaceRootFolderName':\n\t\t\t\t\tcase 'workspaceFolderBasename':\n\t\t\t\t\t\treturn paths.basename(this.fsPath(getFolderUri()));\n\n\t\t\t\t\tcase 'lineNumber':\n\t\t\t\t\t\tif (this._ignoreEditorVariables) {\n\t\t\t\t\t\t\treturn match;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst lineNumber = this._context.getLineNumber();\n\t\t\t\t\t\tif (lineNumber) {\n\t\t\t\t\t\t\treturn lineNumber;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthrow new Error(localize('canNotResolveLineNumber', \"'{0}' can not be resolved. Make sure to have a line selected in the active editor.\", match));\n\n\t\t\t\t\tcase 'selectedText':\n\t\t\t\t\t\tif (this._ignoreEditorVariables) {\n\t\t\t\t\t\t\treturn match;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst selectedText = this._context.getSelectedText();\n\t\t\t\t\t\tif (selectedText) {\n\t\t\t\t\t\t\treturn selectedText;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthrow new Error(localize('canNotResolveSelectedText', \"'{0}' can not be resolved. Make sure to have some text selected in the active editor.\", match));\n\n\t\t\t\t\tcase 'file':\n\t\t\t\t\t\tif (this._ignoreEditorVariables) {\n\t\t\t\t\t\t\treturn match;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn getFilePath();\n\n\t\t\t\t\tcase 'relativeFile':\n\t\t\t\t\t\tif (this._ignoreEditorVariables) {\n\t\t\t\t\t\t\treturn match;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (folderUri || argument) {\n\t\t\t\t\t\t\treturn paths.relative(this.fsPath(getFolderUri()), getFilePath());\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn getFilePath();\n\n\t\t\t\t\tcase 'relativeFileDirname':\n\t\t\t\t\t\tif (this._ignoreEditorVariables) {\n\t\t\t\t\t\t\treturn match;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst dirname = paths.dirname(getFilePath());\n\t\t\t\t\t\tif (folderUri || argument) {\n\t\t\t\t\t\t\tconst relative = paths.relative(this.fsPath(getFolderUri()), dirname);\n\t\t\t\t\t\t\treturn relative.length === 0 ? '.' : relative;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn dirname;\n\n\t\t\t\t\tcase 'fileDirname':\n\t\t\t\t\t\tif (this._ignoreEditorVariables) {\n\t\t\t\t\t\t\treturn match;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn paths.dirname(getFilePath());\n\n\t\t\t\t\tcase 'fileExtname':\n\t\t\t\t\t\tif (this._ignoreEditorVariables) {\n\t\t\t\t\t\t\treturn match;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn paths.extname(getFilePath());\n\n\t\t\t\t\tcase 'fileBasename':\n\t\t\t\t\t\tif (this._ignoreEditorVariables) {\n\t\t\t\t\t\t\treturn match;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn paths.basename(getFilePath());\n\n\t\t\t\t\tcase 'fileBasenameNoExtension':\n\t\t\t\t\t\tif (this._ignoreEditorVariables) {\n\t\t\t\t\t\t\treturn match;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst basename = paths.basename(getFilePath());\n\t\t\t\t\t\treturn (basename.slice(0, basename.length - paths.extname(basename).length));\n\n\t\t\t\t\tcase 'execPath':\n\t\t\t\t\t\tconst ep = this._context.getExecPath();\n\t\t\t\t\t\tif (ep) {\n\t\t\t\t\t\t\treturn ep;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn match;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\treturn this.resolveFromMap(match, variable, commandValueMapping, undefined);\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\treturn match;\n\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate resolveFromMap(match: string, argument: string | undefined, commandValueMapping: IStringDictionary<string> | undefined, prefix: string | undefined): string {\n\t\tif (argument && commandValueMapping) {\n\t\t\tconst v = (prefix === undefined) ? commandValueMapping[argument] : commandValueMapping[prefix + ':' + argument];\n\t\t\tif (typeof v === 'string') {\n\t\t\t\treturn v;\n\t\t\t}\n\t\t\tthrow new Error(localize('noValueForCommand', \"'{0}' can not be resolved because the command has no value.\", match));\n\t\t}\n\t\treturn match;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IResourceEditorInput, IEditorOptions, ITextEditorOptions } from 'vs/platform/editor/common/editor';\nimport { IEditorInput, IEditorPane, GroupIdentifier, IEditorInputWithOptions, IUntitledTextResourceEditorInput, IResourceDiffEditorInput, ITextEditorPane, ITextDiffEditorPane, IEditorIdentifier, ISaveOptions, IRevertOptions, EditorsOrder, IVisibleEditorPane, IEditorCloseEvent } from 'vs/workbench/common/editor';\nimport { Event } from 'vs/base/common/event';\nimport { IEditor, IDiffEditor } from 'vs/editor/common/editorCommon';\nimport { IEditorGroup, IEditorReplacement, OpenEditorContext } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\n\nexport const IEditorService = createDecorator<IEditorService>('editorService');\n\nexport type IResourceEditorInputType = IResourceEditorInput | IUntitledTextResourceEditorInput | IResourceDiffEditorInput;\n\nexport interface IResourceEditorReplacement {\n\treadonly editor: IResourceEditorInputType;\n\treadonly replacement: IResourceEditorInputType;\n}\n\nexport const ACTIVE_GROUP = -1;\nexport type ACTIVE_GROUP_TYPE = typeof ACTIVE_GROUP;\n\nexport const SIDE_GROUP = -2;\nexport type SIDE_GROUP_TYPE = typeof SIDE_GROUP;\n\nexport interface IOpenEditorOverrideEntry {\n\tid: string;\n\tlabel: string;\n\tactive: boolean;\n\tdetail?: string;\n}\n\nexport interface IOpenEditorOverrideHandler {\n\topen(editor: IEditorInput, options: IEditorOptions | ITextEditorOptions | undefined, group: IEditorGroup, context: OpenEditorContext): IOpenEditorOverride | undefined;\n\tgetEditorOverrides?(resource: URI, options: IEditorOptions | undefined, group: IEditorGroup | undefined): IOpenEditorOverrideEntry[];\n}\n\nexport interface IOpenEditorOverride {\n\n\t/**\n\t * If defined, will prevent the opening of an editor and replace the resulting\n\t * promise with the provided promise for the openEditor() call.\n\t */\n\toverride?: Promise<IEditorPane | undefined>;\n}\n\nexport interface ISaveEditorsOptions extends ISaveOptions {\n\n\t/**\n\t * If true, will ask for a location of the editor to save to.\n\t */\n\treadonly saveAs?: boolean;\n}\n\nexport interface IBaseSaveRevertAllEditorOptions {\n\n\t/**\n\t * Whether to include untitled editors as well.\n\t */\n\treadonly includeUntitled?: boolean;\n\n\t/**\n\t * Whether to exclude sticky editors.\n\t */\n\treadonly excludeSticky?: boolean;\n}\n\nexport interface ISaveAllEditorsOptions extends ISaveEditorsOptions, IBaseSaveRevertAllEditorOptions { }\n\nexport interface IRevertAllEditorsOptions extends IRevertOptions, IBaseSaveRevertAllEditorOptions { }\n\nexport interface ICustomEditorInfo {\n\treadonly id: string;\n\treadonly displayName: string;\n\treadonly providerDisplayName: string;\n}\n\nexport interface ICustomEditorViewTypesHandler {\n\treadonly onDidChangeViewTypes: Event<void>;\n\n\tgetViewTypes(): ICustomEditorInfo[];\n}\n\nexport interface IEditorService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Emitted when the currently active editor changes.\n\t *\n\t * @see `IEditorService.activeEditorPane`\n\t */\n\treadonly onDidActiveEditorChange: Event<void>;\n\n\t/**\n\t * Emitted when any of the current visible editors changes.\n\t *\n\t * @see `IEditorService.visibleEditorPanes`\n\t */\n\treadonly onDidVisibleEditorsChange: Event<void>;\n\n\t/**\n\t * Emitted when an editor is closed.\n\t */\n\treadonly onDidCloseEditor: Event<IEditorCloseEvent>;\n\n\t/**\n\t * The currently active editor pane or `undefined` if none. The editor pane is\n\t * the workbench container for editors of any kind.\n\t *\n\t * @see `IEditorService.activeEditor` for access to the active editor input\n\t */\n\treadonly activeEditorPane: IVisibleEditorPane | undefined;\n\n\t/**\n\t * The currently active editor or `undefined` if none. An editor is active when it is\n\t * located in the currently active editor group. It will be `undefined` if the active\n\t * editor group has no editors open.\n\t */\n\treadonly activeEditor: IEditorInput | undefined;\n\n\t/**\n\t * The currently active text editor control or `undefined` if there is currently no active\n\t * editor or the active editor widget is neither a text nor a diff editor.\n\t *\n\t * @see `IEditorService.activeEditor`\n\t */\n\treadonly activeTextEditorControl: IEditor | IDiffEditor | undefined;\n\n\t/**\n\t * The currently active text editor mode or `undefined` if there is currently no active\n\t * editor or the active editor control is neither a text nor a diff editor. If the active\n\t * editor is a diff editor, the modified side's mode will be taken.\n\t */\n\treadonly activeTextEditorMode: string | undefined;\n\n\t/**\n\t * All editor panes that are currently visible across all editor groups.\n\t *\n\t * @see `IEditorService.visibleEditors` for access to the visible editor inputs\n\t */\n\treadonly visibleEditorPanes: ReadonlyArray<IVisibleEditorPane>;\n\n\t/**\n\t * All editors that are currently visible. An editor is visible when it is opened in an\n\t * editor group and active in that group. Multiple editor groups can be opened at the same time.\n\t */\n\treadonly visibleEditors: ReadonlyArray<IEditorInput>;\n\n\t/**\n\t * All text editor widgets that are currently visible across all editor groups. A text editor\n\t * widget is either a text or a diff editor.\n\t */\n\treadonly visibleTextEditorControls: ReadonlyArray<IEditor | IDiffEditor>;\n\n\t/**\n\t * All editors that are opened across all editor groups in sequential order\n\t * of appearance.\n\t *\n\t * This includes active as well as inactive editors in each editor group.\n\t */\n\treadonly editors: ReadonlyArray<IEditorInput>;\n\n\t/**\n\t * The total number of editors that are opened either inactive or active.\n\t */\n\treadonly count: number;\n\n\t/**\n\t * All editors that are opened across all editor groups with their group\n\t * identifier.\n\t *\n\t * @param order the order of the editors to use\n\t * @param options wether to exclude sticky editors or not\n\t */\n\tgetEditors(order: EditorsOrder, options?: { excludeSticky?: boolean }): ReadonlyArray<IEditorIdentifier>;\n\n\t/**\n\t * Open an editor in an editor group.\n\t *\n\t * @param editor the editor to open\n\t * @param options the options to use for the editor\n\t * @param group the target group. If unspecified, the editor will open in the currently\n\t * active group. Use `SIDE_GROUP_TYPE` to open the editor in a new editor group to the side\n\t * of the currently active group.\n\t *\n\t * @returns the editor that opened or `undefined` if the operation failed or the editor was not\n\t * opened to be active.\n\t */\n\topenEditor(editor: IEditorInput, options?: IEditorOptions | ITextEditorOptions, group?: IEditorGroup | GroupIdentifier | SIDE_GROUP_TYPE | ACTIVE_GROUP_TYPE): Promise<IEditorPane | undefined>;\n\topenEditor(editor: IResourceEditorInput | IUntitledTextResourceEditorInput, group?: IEditorGroup | GroupIdentifier | SIDE_GROUP_TYPE | ACTIVE_GROUP_TYPE): Promise<ITextEditorPane | undefined>;\n\topenEditor(editor: IResourceDiffEditorInput, group?: IEditorGroup | GroupIdentifier | SIDE_GROUP_TYPE | ACTIVE_GROUP_TYPE): Promise<ITextDiffEditorPane | undefined>;\n\n\t/**\n\t * Open editors in an editor group.\n\t *\n\t * @param editors the editors to open with associated options\n\t * @param group the target group. If unspecified, the editor will open in the currently\n\t * active group. Use `SIDE_GROUP_TYPE` to open the editor in a new editor group to the side\n\t * of the currently active group.\n\t *\n\t * @returns the editors that opened. The array can be empty or have less elements for editors\n\t * that failed to open or were instructed to open as inactive.\n\t */\n\topenEditors(editors: IEditorInputWithOptions[], group?: IEditorGroup | GroupIdentifier | SIDE_GROUP_TYPE | ACTIVE_GROUP_TYPE): Promise<ReadonlyArray<IEditorPane>>;\n\topenEditors(editors: IResourceEditorInputType[], group?: IEditorGroup | GroupIdentifier | SIDE_GROUP_TYPE | ACTIVE_GROUP_TYPE): Promise<ReadonlyArray<IEditorPane>>;\n\n\t/**\n\t * Replaces editors in an editor group with the provided replacement.\n\t *\n\t * @param editors the editors to replace\n\t *\n\t * @returns a promise that is resolved when the replaced active\n\t * editor (if any) has finished loading.\n\t */\n\treplaceEditors(editors: IResourceEditorReplacement[], group: IEditorGroup | GroupIdentifier): Promise<void>;\n\treplaceEditors(editors: IEditorReplacement[], group: IEditorGroup | GroupIdentifier): Promise<void>;\n\n\t/**\n\t * Find out if the provided editor is opened in any editor group.\n\t *\n\t * Note: An editor can be opened but not actively visible.\n\t *\n\t * @param editor the editor to check for being opened. If a\n\t * `IResourceEditorInput` is passed in, the resource is checked on\n\t * all opened editors. In case of a side by side editor, the\n\t * right hand side resource is considered only.\n\t */\n\tisOpen(editor: IResourceEditorInput): boolean;\n\tisOpen(editor: IEditorInput): boolean;\n\n\t/**\n\t * Get all available editor overrides for the editor input.\n\t */\n\tgetEditorOverrides(resource: URI, options: IEditorOptions | undefined, group: IEditorGroup | undefined): [IOpenEditorOverrideHandler, IOpenEditorOverrideEntry][];\n\n\t/**\n\t * Allows to override the opening of editors by installing a handler that will\n\t * be called each time an editor is about to open allowing to override the\n\t * operation to open a different editor.\n\t */\n\toverrideOpenEditor(handler: IOpenEditorOverrideHandler): IDisposable;\n\n\t/**\n\t * Register handlers for custom editor view types.\n\t * The handler will provide all available custom editors registered\n\t * and also notify the editor service when a custom editor view type is registered/unregistered.\n\t */\n\tregisterCustomEditorViewTypesHandler(source: string, handler: ICustomEditorViewTypesHandler): IDisposable;\n\n\t/**\n\t * Converts a lightweight input to a workbench editor input.\n\t */\n\tcreateEditorInput(input: IResourceEditorInputType): IEditorInput;\n\n\t/**\n\t * Save the provided list of editors.\n\t *\n\t * @returns `true` if all editors saved and `false` otherwise.\n\t */\n\tsave(editors: IEditorIdentifier | IEditorIdentifier[], options?: ISaveEditorsOptions): Promise<boolean>;\n\n\t/**\n\t * Save all editors.\n\t *\n\t * @returns `true` if all editors saved and `false` otherwise.\n\t */\n\tsaveAll(options?: ISaveAllEditorsOptions): Promise<boolean>;\n\n\t/**\n\t * Reverts the provided list of editors.\n\t *\n\t * @returns `true` if all editors reverted and `false` otherwise.\n\t */\n\trevert(editors: IEditorIdentifier | IEditorIdentifier[], options?: IRevertOptions): Promise<boolean>;\n\n\t/**\n\t * Reverts all editors.\n\t *\n\t * @returns `true` if all editors reverted and `false` otherwise.\n\t */\n\trevertAll(options?: IRevertAllEditorsOptions): Promise<boolean>;\n\n\t/**\n\t * Track the provided editors until all have been closed.\n\t *\n\t * @param options use `waitForSaved: true` to wait for the resources\n\t * being saved. If auto-save is enabled, it may be possible to close\n\t * an editor while the save continues in the background.\n\t */\n\twhenClosed(editors: IResourceEditorInput[], options?: { waitForSaved: boolean }): Promise<void>;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { withNullAsUndefined } from 'vs/base/common/types';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { IChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IRemoteAuthorityResolverService } from 'vs/platform/remote/common/remoteAuthorityResolver';\nimport { IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';\nimport { IEnvironmentVariableService, ISerializableEnvironmentVariableCollection } from 'vs/workbench/contrib/terminal/common/environmentVariable';\nimport { serializeEnvironmentVariableCollection } from 'vs/workbench/contrib/terminal/common/environmentVariableShared';\nimport { ITerminalConfiguration, ITerminalEnvironment, ITerminalLaunchError, TERMINAL_CONFIG_SECTION } from 'vs/workbench/contrib/terminal/common/terminal';\nimport { IConfigurationResolverService } from 'vs/workbench/services/configurationResolver/common/configurationResolver';\nimport { SideBySideEditor, EditorResourceAccessor } from 'vs/workbench/common/editor';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { Schemas } from 'vs/base/common/network';\nimport { ILabelService } from 'vs/platform/label/common/label';\n\nexport const REMOTE_TERMINAL_CHANNEL_NAME = 'remoteterminal';\n\nexport interface IShellLaunchConfigDto {\n\tname?: string;\n\texecutable?: string;\n\targs?: string[] | string;\n\tcwd?: string | UriComponents;\n\tenv?: { [key: string]: string | null; };\n\thideFromUser?: boolean;\n}\n\nexport interface ISingleTerminalConfiguration<T> {\n\tuserValue: T | undefined;\n\tvalue: T | undefined;\n\tdefaultValue: T | undefined;\n}\n\nexport interface ICompleteTerminalConfiguration {\n\t'terminal.integrated.automationShell.windows': ISingleTerminalConfiguration<string | string[]>;\n\t'terminal.integrated.automationShell.osx': ISingleTerminalConfiguration<string | string[]>;\n\t'terminal.integrated.automationShell.linux': ISingleTerminalConfiguration<string | string[]>;\n\t'terminal.integrated.shell.windows': ISingleTerminalConfiguration<string | string[]>;\n\t'terminal.integrated.shell.osx': ISingleTerminalConfiguration<string | string[]>;\n\t'terminal.integrated.shell.linux': ISingleTerminalConfiguration<string | string[]>;\n\t'terminal.integrated.shellArgs.windows': ISingleTerminalConfiguration<string | string[]>;\n\t'terminal.integrated.shellArgs.osx': ISingleTerminalConfiguration<string | string[]>;\n\t'terminal.integrated.shellArgs.linux': ISingleTerminalConfiguration<string | string[]>;\n\t'terminal.integrated.env.windows': ISingleTerminalConfiguration<ITerminalEnvironment>;\n\t'terminal.integrated.env.osx': ISingleTerminalConfiguration<ITerminalEnvironment>;\n\t'terminal.integrated.env.linux': ISingleTerminalConfiguration<ITerminalEnvironment>;\n\t'terminal.integrated.inheritEnv': boolean;\n\t'terminal.integrated.cwd': string;\n\t'terminal.integrated.detectLocale': 'auto' | 'off' | 'on';\n}\n\nexport type ITerminalEnvironmentVariableCollections = [string, ISerializableEnvironmentVariableCollection][];\n\nexport interface IWorkspaceFolderData {\n\turi: UriComponents;\n\tname: string;\n\tindex: number;\n}\n\nexport interface ICreateTerminalProcessArguments {\n\tconfiguration: ICompleteTerminalConfiguration;\n\tresolvedVariables: { [name: string]: string; };\n\tenvVariableCollections: ITerminalEnvironmentVariableCollections;\n\tshellLaunchConfig: IShellLaunchConfigDto;\n\tworkspaceId: string;\n\tworkspaceName: string;\n\tworkspaceFolders: IWorkspaceFolderData[];\n\tactiveWorkspaceFolder: IWorkspaceFolderData | null;\n\tactiveFileResource: UriComponents | undefined;\n\tshouldPersistTerminal: boolean;\n\tcols: number;\n\trows: number;\n\tisWorkspaceShellAllowed: boolean;\n\tresolverEnv: { [key: string]: string | null; } | undefined\n}\n\nexport interface ICreateTerminalProcessResult {\n\tterminalId: number;\n\tresolvedShellLaunchConfig: IShellLaunchConfigDto;\n}\n\nexport interface IStartTerminalProcessArguments {\n\tid: number;\n}\n\nexport interface ISendInputToTerminalProcessArguments {\n\tid: number;\n\tdata: string;\n}\n\nexport interface IShutdownTerminalProcessArguments {\n\tid: number;\n\timmediate: boolean;\n}\n\nexport interface IResizeTerminalProcessArguments {\n\tid: number;\n\tcols: number;\n\trows: number;\n}\n\nexport interface IGetTerminalInitialCwdArguments {\n\tid: number;\n}\n\nexport interface IGetTerminalCwdArguments {\n\tid: number;\n}\n\nexport interface ISendCommandResultToTerminalProcessArguments {\n\tid: number;\n\treqId: number;\n\tisError: boolean;\n\tpayload: any;\n}\n\nexport interface IOrphanQuestionReplyArgs {\n\tid: number;\n}\n\nexport interface IListTerminalsArgs {\n\tisInitialization: boolean;\n}\n\nexport interface IRemoteTerminalDescriptionDto {\n\tid: number;\n\tpid: number;\n\ttitle: string;\n\tcwd: string;\n\tworkspaceId: string;\n\tworkspaceName: string;\n}\n\nexport interface ITriggerTerminalDataReplayArguments {\n\tid: number;\n}\n\nexport interface IRemoteTerminalProcessReadyEvent {\n\ttype: 'ready';\n\tpid: number;\n\tcwd: string;\n}\nexport interface IRemoteTerminalProcessTitleChangedEvent {\n\ttype: 'titleChanged';\n\ttitle: string;\n}\nexport interface IRemoteTerminalProcessDataEvent {\n\ttype: 'data';\n\tdata: string;\n}\nexport interface ReplayEntry { cols: number; rows: number; data: string; }\nexport interface IRemoteTerminalProcessReplayEvent {\n\ttype: 'replay';\n\tevents: ReplayEntry[];\n}\nexport interface IRemoteTerminalProcessExitEvent {\n\ttype: 'exit';\n\texitCode: number | undefined;\n}\nexport interface IRemoteTerminalProcessExecCommandEvent {\n\ttype: 'execCommand';\n\treqId: number;\n\tcommandId: string;\n\tcommandArgs: any[];\n}\nexport interface IRemoteTerminalProcessOrphanQuestionEvent {\n\ttype: 'orphan?';\n}\nexport type IRemoteTerminalProcessEvent = (\n\tIRemoteTerminalProcessReadyEvent\n\t| IRemoteTerminalProcessTitleChangedEvent\n\t| IRemoteTerminalProcessDataEvent\n\t| IRemoteTerminalProcessReplayEvent\n\t| IRemoteTerminalProcessExitEvent\n\t| IRemoteTerminalProcessExecCommandEvent\n\t| IRemoteTerminalProcessOrphanQuestionEvent\n);\n\nexport interface IOnTerminalProcessEventArguments {\n\tid: number;\n}\n\nexport class RemoteTerminalChannelClient {\n\n\tconstructor(\n\t\tprivate readonly _remoteAuthority: string,\n\t\tprivate readonly _channel: IChannel,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t\t@IWorkspaceContextService private readonly _workspaceContextService: IWorkspaceContextService,\n\t\t@IConfigurationResolverService private readonly _resolverService: IConfigurationResolverService,\n\t\t@IEnvironmentVariableService private readonly _environmentVariableService: IEnvironmentVariableService,\n\t\t@IRemoteAuthorityResolverService private readonly _remoteAuthorityResolverService: IRemoteAuthorityResolverService,\n\t\t@ILogService private readonly _logService: ILogService,\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@ILabelService private readonly _labelService: ILabelService,\n\t) { }\n\n\tprivate _readSingleTerminalConfiguration<T>(key: string): ISingleTerminalConfiguration<T> {\n\t\tconst result = this._configurationService.inspect<T>(key);\n\t\treturn {\n\t\t\tuserValue: result.userValue,\n\t\t\tvalue: result.value,\n\t\t\tdefaultValue: result.defaultValue,\n\t\t};\n\t}\n\n\tpublic async createTerminalProcess(shellLaunchConfig: IShellLaunchConfigDto, activeWorkspaceRootUri: URI | undefined, shouldPersistTerminal: boolean, cols: number, rows: number, isWorkspaceShellAllowed: boolean): Promise<ICreateTerminalProcessResult> {\n\t\tconst terminalConfig = this._configurationService.getValue<ITerminalConfiguration>(TERMINAL_CONFIG_SECTION);\n\t\tconst configuration: ICompleteTerminalConfiguration = {\n\t\t\t'terminal.integrated.automationShell.windows': this._readSingleTerminalConfiguration('terminal.integrated.automationShell.windows'),\n\t\t\t'terminal.integrated.automationShell.osx': this._readSingleTerminalConfiguration('terminal.integrated.automationShell.osx'),\n\t\t\t'terminal.integrated.automationShell.linux': this._readSingleTerminalConfiguration('terminal.integrated.automationShell.linux'),\n\t\t\t'terminal.integrated.shell.windows': this._readSingleTerminalConfiguration('terminal.integrated.shell.windows'),\n\t\t\t'terminal.integrated.shell.osx': this._readSingleTerminalConfiguration('terminal.integrated.shell.osx'),\n\t\t\t'terminal.integrated.shell.linux': this._readSingleTerminalConfiguration('terminal.integrated.shell.linux'),\n\t\t\t'terminal.integrated.shellArgs.windows': this._readSingleTerminalConfiguration('terminal.integrated.shellArgs.windows'),\n\t\t\t'terminal.integrated.shellArgs.osx': this._readSingleTerminalConfiguration('terminal.integrated.shellArgs.osx'),\n\t\t\t'terminal.integrated.shellArgs.linux': this._readSingleTerminalConfiguration('terminal.integrated.shellArgs.linux'),\n\t\t\t'terminal.integrated.env.windows': this._readSingleTerminalConfiguration('terminal.integrated.env.windows'),\n\t\t\t'terminal.integrated.env.osx': this._readSingleTerminalConfiguration('terminal.integrated.env.osx'),\n\t\t\t'terminal.integrated.env.linux': this._readSingleTerminalConfiguration('terminal.integrated.env.linux'),\n\t\t\t'terminal.integrated.inheritEnv': terminalConfig.inheritEnv,\n\t\t\t'terminal.integrated.cwd': terminalConfig.cwd,\n\t\t\t'terminal.integrated.detectLocale': terminalConfig.detectLocale,\n\t\t};\n\n\t\t// We will use the resolver service to resolve all the variables in the config / launch config\n\t\t// But then we will keep only some variables, since the rest need to be resolved on the remote side\n\t\tconst resolvedVariables = Object.create(null);\n\t\tconst lastActiveWorkspace = activeWorkspaceRootUri ? withNullAsUndefined(this._workspaceContextService.getWorkspaceFolder(activeWorkspaceRootUri)) : undefined;\n\t\tlet allResolvedVariables: Map<string, string> | undefined = undefined;\n\t\ttry {\n\t\t\tallResolvedVariables = await this._resolverService.resolveWithInteraction(lastActiveWorkspace, {\n\t\t\t\tshellLaunchConfig,\n\t\t\t\tconfiguration\n\t\t\t});\n\t\t} catch (err) {\n\t\t\tthis._logService.error(err);\n\t\t}\n\t\tif (allResolvedVariables) {\n\t\t\tfor (const [name, value] of allResolvedVariables.entries()) {\n\t\t\t\tif (/^config:/.test(name) || name === 'selectedText' || name === 'lineNumber') {\n\t\t\t\t\tresolvedVariables[name] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst envVariableCollections: ITerminalEnvironmentVariableCollections = [];\n\t\tfor (const [k, v] of this._environmentVariableService.collections.entries()) {\n\t\t\tenvVariableCollections.push([k, serializeEnvironmentVariableCollection(v.map)]);\n\t\t}\n\n\t\tconst resolverResult = await this._remoteAuthorityResolverService.resolveAuthority(this._remoteAuthority);\n\t\tconst resolverEnv = resolverResult.options && resolverResult.options.extensionHostEnv;\n\n\t\tconst workspace = this._workspaceContextService.getWorkspace();\n\t\tconst workspaceFolders = workspace.folders;\n\t\tconst activeWorkspaceFolder = activeWorkspaceRootUri ? this._workspaceContextService.getWorkspaceFolder(activeWorkspaceRootUri) : null;\n\n\t\tconst activeFileResource = EditorResourceAccessor.getOriginalUri(this._editorService.activeEditor, {\n\t\t\tsupportSideBySide: SideBySideEditor.PRIMARY,\n\t\t\tfilterByScheme: [Schemas.file, Schemas.userData, Schemas.vscodeRemote]\n\t\t});\n\n\t\tconst args: ICreateTerminalProcessArguments = {\n\t\t\tconfiguration,\n\t\t\tresolvedVariables,\n\t\t\tenvVariableCollections,\n\t\t\tshellLaunchConfig,\n\t\t\tworkspaceId: workspace.id,\n\t\t\tworkspaceName: this._labelService.getWorkspaceLabel(workspace),\n\t\t\tworkspaceFolders,\n\t\t\tactiveWorkspaceFolder,\n\t\t\tactiveFileResource,\n\t\t\tshouldPersistTerminal,\n\t\t\tcols,\n\t\t\trows,\n\t\t\tisWorkspaceShellAllowed,\n\t\t\tresolverEnv\n\t\t};\n\t\treturn await this._channel.call<ICreateTerminalProcessResult>('$createTerminalProcess', args);\n\t}\n\n\tpublic async startTerminalProcess(terminalId: number): Promise<ITerminalLaunchError | void> {\n\t\tconst args: IStartTerminalProcessArguments = {\n\t\t\tid: terminalId\n\t\t};\n\t\treturn this._channel.call<ITerminalLaunchError | void>('$startTerminalProcess', args);\n\t}\n\n\tpublic onTerminalProcessEvent(terminalId: number): Event<IRemoteTerminalProcessEvent> {\n\t\tconst args: IOnTerminalProcessEventArguments = {\n\t\t\tid: terminalId\n\t\t};\n\t\treturn this._channel.listen<IRemoteTerminalProcessEvent>('$onTerminalProcessEvent', args);\n\t}\n\n\tpublic sendInputToTerminalProcess(id: number, data: string): Promise<void> {\n\t\tconst args: ISendInputToTerminalProcessArguments = {\n\t\t\tid, data\n\t\t};\n\t\treturn this._channel.call<void>('$sendInputToTerminalProcess', args);\n\t}\n\n\tpublic shutdownTerminalProcess(id: number, immediate: boolean): Promise<void> {\n\t\tconst args: IShutdownTerminalProcessArguments = {\n\t\t\tid, immediate\n\t\t};\n\t\treturn this._channel.call<void>('$shutdownTerminalProcess', args);\n\t}\n\n\tpublic resizeTerminalProcess(id: number, cols: number, rows: number): Promise<void> {\n\t\tconst args: IResizeTerminalProcessArguments = {\n\t\t\tid, cols, rows\n\t\t};\n\t\treturn this._channel.call<void>('$resizeTerminalProcess', args);\n\t}\n\n\tpublic getTerminalInitialCwd(id: number): Promise<string> {\n\t\tconst args: IGetTerminalInitialCwdArguments = {\n\t\t\tid\n\t\t};\n\t\treturn this._channel.call<string>('$getTerminalInitialCwd', args);\n\t}\n\n\tpublic getTerminalCwd(id: number): Promise<string> {\n\t\tconst args: IGetTerminalCwdArguments = {\n\t\t\tid\n\t\t};\n\t\treturn this._channel.call<string>('$getTerminalCwd', args);\n\t}\n\n\tpublic sendCommandResultToTerminalProcess(id: number, reqId: number, isError: boolean, payload: any): Promise<void> {\n\t\tconst args: ISendCommandResultToTerminalProcessArguments = {\n\t\t\tid,\n\t\t\treqId,\n\t\t\tisError,\n\t\t\tpayload\n\t\t};\n\t\treturn this._channel.call<void>('$sendCommandResultToTerminalProcess', args);\n\t}\n\n\tpublic orphanQuestionReply(id: number): Promise<void> {\n\t\tconst args: IOrphanQuestionReplyArgs = {\n\t\t\tid\n\t\t};\n\t\treturn this._channel.call<void>('$orphanQuestionReply', args);\n\t}\n\n\tpublic listTerminals(isInitialization: boolean): Promise<IRemoteTerminalDescriptionDto[]> {\n\t\tconst args: IListTerminalsArgs = {\n\t\t\tisInitialization\n\t\t};\n\t\treturn this._channel.call<IRemoteTerminalDescriptionDto[]>('$listTerminals', args);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Severity } from 'vs/platform/notification/common/notification';\n\nexport interface Translations {\n\t[id: string]: string;\n}\n\nexport namespace Translations {\n\texport function equals(a: Translations, b: Translations): boolean {\n\t\tif (a === b) {\n\t\t\treturn true;\n\t\t}\n\t\tlet aKeys = Object.keys(a);\n\t\tlet bKeys: Set<string> = new Set<string>();\n\t\tfor (let key of Object.keys(b)) {\n\t\t\tbKeys.add(key);\n\t\t}\n\t\tif (aKeys.length !== bKeys.size) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (let key of aKeys) {\n\t\t\tif (a[key] !== b[key]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tbKeys.delete(key);\n\t\t}\n\t\treturn bKeys.size === 0;\n\t}\n}\n\nexport interface ILog {\n\terror(source: string, message: string): void;\n\twarn(source: string, message: string): void;\n\tinfo(source: string, message: string): void;\n}\n\nexport class Logger implements ILog {\n\n\tprivate readonly _messageHandler: (severity: Severity, source: string, message: string) => void;\n\n\tconstructor(\n\t\tmessageHandler: (severity: Severity, source: string, message: string) => void\n\t) {\n\t\tthis._messageHandler = messageHandler;\n\t}\n\n\tpublic error(source: string, message: string): void {\n\t\tthis._messageHandler(Severity.Error, source, message);\n\t}\n\n\tpublic warn(source: string, message: string): void {\n\t\tthis._messageHandler(Severity.Warning, source, message);\n\t}\n\n\tpublic info(source: string, message: string): void {\n\t\tthis._messageHandler(Severity.Info, source, message);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as path from 'vs/base/common/path';\nimport * as semver from 'vs/base/common/semver/semver';\nimport * as json from 'vs/base/common/json';\nimport * as arrays from 'vs/base/common/arrays';\nimport { getParseErrorMessage } from 'vs/base/common/jsonErrorMessages';\nimport * as types from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport * as pfs from 'vs/base/node/pfs';\nimport { getGalleryExtensionId, groupByExtension, ExtensionIdentifierWithVersion } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { isValidExtensionVersion } from 'vs/platform/extensions/common/extensionValidator';\nimport { ExtensionIdentifier, IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { Translations, ILog } from 'vs/workbench/services/extensions/common/extensionPoints';\n\nconst MANIFEST_FILE = 'package.json';\n\nexport interface NlsConfiguration {\n\treadonly devMode: boolean;\n\treadonly locale: string | undefined;\n\treadonly pseudo: boolean;\n\treadonly translations: Translations;\n}\n\nabstract class ExtensionManifestHandler {\n\n\tprotected readonly _ourVersion: string;\n\tprotected readonly _log: ILog;\n\tprotected readonly _absoluteFolderPath: string;\n\tprotected readonly _isBuiltin: boolean;\n\tprotected readonly _isUnderDevelopment: boolean;\n\tprotected readonly _absoluteManifestPath: string;\n\n\tconstructor(ourVersion: string, log: ILog, absoluteFolderPath: string, isBuiltin: boolean, isUnderDevelopment: boolean) {\n\t\tthis._ourVersion = ourVersion;\n\t\tthis._log = log;\n\t\tthis._absoluteFolderPath = absoluteFolderPath;\n\t\tthis._isBuiltin = isBuiltin;\n\t\tthis._isUnderDevelopment = isUnderDevelopment;\n\t\tthis._absoluteManifestPath = path.join(absoluteFolderPath, MANIFEST_FILE);\n\t}\n}\n\nclass ExtensionManifestParser extends ExtensionManifestHandler {\n\n\tpublic parse(): Promise<IExtensionDescription> {\n\t\treturn pfs.readFile(this._absoluteManifestPath).then((manifestContents) => {\n\t\t\tconst errors: json.ParseError[] = [];\n\t\t\tconst manifest = json.parse(manifestContents.toString(), errors);\n\t\t\tif (json.getNodeType(manifest) !== 'object') {\n\t\t\t\tthis._log.error(this._absoluteFolderPath, nls.localize('jsonParseInvalidType', \"Invalid manifest file {0}: Not an JSON object.\", this._absoluteManifestPath));\n\t\t\t} else if (errors.length === 0) {\n\t\t\t\tif (manifest.__metadata) {\n\t\t\t\t\tmanifest.uuid = manifest.__metadata.id;\n\t\t\t\t}\n\t\t\t\tmanifest.isUserBuiltin = !!manifest.__metadata?.isBuiltin;\n\t\t\t\tdelete manifest.__metadata;\n\t\t\t\treturn manifest;\n\t\t\t} else {\n\t\t\t\terrors.forEach(e => {\n\t\t\t\t\tthis._log.error(this._absoluteFolderPath, nls.localize('jsonParseFail', \"Failed to parse {0}: [{1}, {2}] {3}.\", this._absoluteManifestPath, e.offset, e.length, getParseErrorMessage(e.error)));\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn null;\n\t\t}, (err) => {\n\t\t\tif (err.code === 'ENOENT') {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tthis._log.error(this._absoluteFolderPath, nls.localize('fileReadFail', \"Cannot read file {0}: {1}.\", this._absoluteManifestPath, err.message));\n\t\t\treturn null;\n\t\t});\n\t}\n}\n\nclass ExtensionManifestNLSReplacer extends ExtensionManifestHandler {\n\n\tprivate readonly _nlsConfig: NlsConfiguration;\n\n\tconstructor(ourVersion: string, log: ILog, absoluteFolderPath: string, isBuiltin: boolean, isUnderDevelopment: boolean, nlsConfig: NlsConfiguration) {\n\t\tsuper(ourVersion, log, absoluteFolderPath, isBuiltin, isUnderDevelopment);\n\t\tthis._nlsConfig = nlsConfig;\n\t}\n\n\tpublic replaceNLS(extensionDescription: IExtensionDescription): Promise<IExtensionDescription> {\n\t\tinterface MessageBag {\n\t\t\t[key: string]: string;\n\t\t}\n\n\t\tinterface TranslationBundle {\n\t\t\tcontents: {\n\t\t\t\tpackage: MessageBag;\n\t\t\t};\n\t\t}\n\n\t\tinterface LocalizedMessages {\n\t\t\tvalues: MessageBag | undefined;\n\t\t\tdefault: string | null;\n\t\t}\n\n\t\tconst reportErrors = (localized: string | null, errors: json.ParseError[]): void => {\n\t\t\terrors.forEach((error) => {\n\t\t\t\tthis._log.error(this._absoluteFolderPath, nls.localize('jsonsParseReportErrors', \"Failed to parse {0}: {1}.\", localized, getParseErrorMessage(error.error)));\n\t\t\t});\n\t\t};\n\t\tconst reportInvalidFormat = (localized: string | null): void => {\n\t\t\tthis._log.error(this._absoluteFolderPath, nls.localize('jsonInvalidFormat', \"Invalid format {0}: JSON object expected.\", localized));\n\t\t};\n\n\t\tlet extension = path.extname(this._absoluteManifestPath);\n\t\tlet basename = this._absoluteManifestPath.substr(0, this._absoluteManifestPath.length - extension.length);\n\n\t\tconst translationId = `${extensionDescription.publisher}.${extensionDescription.name}`;\n\t\tlet translationPath = this._nlsConfig.translations[translationId];\n\t\tlet localizedMessages: Promise<LocalizedMessages | undefined>;\n\t\tif (translationPath) {\n\t\t\tlocalizedMessages = pfs.readFile(translationPath, 'utf8').then<LocalizedMessages, LocalizedMessages>((content) => {\n\t\t\t\tlet errors: json.ParseError[] = [];\n\t\t\t\tlet translationBundle: TranslationBundle = json.parse(content, errors);\n\t\t\t\tif (errors.length > 0) {\n\t\t\t\t\treportErrors(translationPath, errors);\n\t\t\t\t\treturn { values: undefined, default: `${basename}.nls.json` };\n\t\t\t\t} else if (json.getNodeType(translationBundle) !== 'object') {\n\t\t\t\t\treportInvalidFormat(translationPath);\n\t\t\t\t\treturn { values: undefined, default: `${basename}.nls.json` };\n\t\t\t\t} else {\n\t\t\t\t\tlet values = translationBundle.contents ? translationBundle.contents.package : undefined;\n\t\t\t\t\treturn { values: values, default: `${basename}.nls.json` };\n\t\t\t\t}\n\t\t\t}, (error) => {\n\t\t\t\treturn { values: undefined, default: `${basename}.nls.json` };\n\t\t\t});\n\t\t} else {\n\t\t\tlocalizedMessages = pfs.fileExists(basename + '.nls' + extension).then<LocalizedMessages | undefined, LocalizedMessages | undefined>(exists => {\n\t\t\t\tif (!exists) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\treturn ExtensionManifestNLSReplacer.findMessageBundles(this._nlsConfig, basename).then((messageBundle) => {\n\t\t\t\t\tif (!messageBundle.localized) {\n\t\t\t\t\t\treturn { values: undefined, default: messageBundle.original };\n\t\t\t\t\t}\n\t\t\t\t\treturn pfs.readFile(messageBundle.localized, 'utf8').then(messageBundleContent => {\n\t\t\t\t\t\tlet errors: json.ParseError[] = [];\n\t\t\t\t\t\tlet messages: MessageBag = json.parse(messageBundleContent, errors);\n\t\t\t\t\t\tif (errors.length > 0) {\n\t\t\t\t\t\t\treportErrors(messageBundle.localized, errors);\n\t\t\t\t\t\t\treturn { values: undefined, default: messageBundle.original };\n\t\t\t\t\t\t} else if (json.getNodeType(messages) !== 'object') {\n\t\t\t\t\t\t\treportInvalidFormat(messageBundle.localized);\n\t\t\t\t\t\t\treturn { values: undefined, default: messageBundle.original };\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn { values: messages, default: messageBundle.original };\n\t\t\t\t\t}, (err) => {\n\t\t\t\t\t\treturn { values: undefined, default: messageBundle.original };\n\t\t\t\t\t});\n\t\t\t\t}, (err) => {\n\t\t\t\t\treturn undefined;\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\treturn localizedMessages.then((localizedMessages) => {\n\t\t\tif (localizedMessages === undefined) {\n\t\t\t\treturn extensionDescription;\n\t\t\t}\n\t\t\tlet errors: json.ParseError[] = [];\n\t\t\t// resolveOriginalMessageBundle returns null if localizedMessages.default === undefined;\n\t\t\treturn ExtensionManifestNLSReplacer.resolveOriginalMessageBundle(localizedMessages.default, errors).then((defaults) => {\n\t\t\t\tif (errors.length > 0) {\n\t\t\t\t\treportErrors(localizedMessages.default, errors);\n\t\t\t\t\treturn extensionDescription;\n\t\t\t\t} else if (json.getNodeType(localizedMessages) !== 'object') {\n\t\t\t\t\treportInvalidFormat(localizedMessages.default);\n\t\t\t\t\treturn extensionDescription;\n\t\t\t\t}\n\t\t\t\tconst localized = localizedMessages.values || Object.create(null);\n\t\t\t\tExtensionManifestNLSReplacer._replaceNLStrings(this._nlsConfig, extensionDescription, localized, defaults, this._log, this._absoluteFolderPath);\n\t\t\t\treturn extensionDescription;\n\t\t\t});\n\t\t}, (err) => {\n\t\t\treturn extensionDescription;\n\t\t});\n\t}\n\n\t/**\n\t * Parses original message bundle, returns null if the original message bundle is null.\n\t */\n\tprivate static resolveOriginalMessageBundle(originalMessageBundle: string | null, errors: json.ParseError[]) {\n\t\treturn new Promise<{ [key: string]: string; } | null>((c, e) => {\n\t\t\tif (originalMessageBundle) {\n\t\t\t\tpfs.readFile(originalMessageBundle).then(originalBundleContent => {\n\t\t\t\t\tc(json.parse(originalBundleContent.toString(), errors));\n\t\t\t\t}, (err) => {\n\t\t\t\t\tc(null);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tc(null);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Finds localized message bundle and the original (unlocalized) one.\n\t * If the localized file is not present, returns null for the original and marks original as localized.\n\t */\n\tprivate static findMessageBundles(nlsConfig: NlsConfiguration, basename: string): Promise<{ localized: string; original: string | null; }> {\n\t\treturn new Promise<{ localized: string; original: string | null; }>((c, e) => {\n\t\t\tfunction loop(basename: string, locale: string): void {\n\t\t\t\tlet toCheck = `${basename}.nls.${locale}.json`;\n\t\t\t\tpfs.fileExists(toCheck).then(exists => {\n\t\t\t\t\tif (exists) {\n\t\t\t\t\t\tc({ localized: toCheck, original: `${basename}.nls.json` });\n\t\t\t\t\t}\n\t\t\t\t\tlet index = locale.lastIndexOf('-');\n\t\t\t\t\tif (index === -1) {\n\t\t\t\t\t\tc({ localized: `${basename}.nls.json`, original: null });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlocale = locale.substring(0, index);\n\t\t\t\t\t\tloop(basename, locale);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (nlsConfig.devMode || nlsConfig.pseudo || !nlsConfig.locale) {\n\t\t\t\treturn c({ localized: basename + '.nls.json', original: null });\n\t\t\t}\n\t\t\tloop(basename, nlsConfig.locale);\n\t\t});\n\t}\n\n\t/**\n\t * This routine makes the following assumptions:\n\t * The root element is an object literal\n\t */\n\tprivate static _replaceNLStrings<T extends object>(nlsConfig: NlsConfiguration, literal: T, messages: { [key: string]: string; }, originalMessages: { [key: string]: string } | null, log: ILog, messageScope: string): void {\n\t\tfunction processEntry(obj: any, key: string | number, command?: boolean) {\n\t\t\tlet value = obj[key];\n\t\t\tif (types.isString(value)) {\n\t\t\t\tlet str = <string>value;\n\t\t\t\tlet length = str.length;\n\t\t\t\tif (length > 1 && str[0] === '%' && str[length - 1] === '%') {\n\t\t\t\t\tlet messageKey = str.substr(1, length - 2);\n\t\t\t\t\tlet message = messages[messageKey];\n\t\t\t\t\t// If the messages come from a language pack they might miss some keys\n\t\t\t\t\t// Fill them from the original messages.\n\t\t\t\t\tif (message === undefined && originalMessages) {\n\t\t\t\t\t\tmessage = originalMessages[messageKey];\n\t\t\t\t\t}\n\t\t\t\t\tif (message) {\n\t\t\t\t\t\tif (nlsConfig.pseudo) {\n\t\t\t\t\t\t\t// FF3B and FF3D is the Unicode zenkaku representation for [ and ]\n\t\t\t\t\t\t\tmessage = '\\uFF3B' + message.replace(/[aouei]/g, '$&$&') + '\\uFF3D';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tobj[key] = command && (key === 'title' || key === 'category') && originalMessages ? { value: message, original: originalMessages[messageKey] } : message;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlog.warn(messageScope, nls.localize('missingNLSKey', \"Couldn't find message for key {0}.\", messageKey));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (types.isObject(value)) {\n\t\t\t\tfor (let k in value) {\n\t\t\t\t\tif (value.hasOwnProperty(k)) {\n\t\t\t\t\t\tk === 'commands' ? processEntry(value, k, true) : processEntry(value, k, command);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (types.isArray(value)) {\n\t\t\t\tfor (let i = 0; i < value.length; i++) {\n\t\t\t\t\tprocessEntry(value, i, command);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (let key in literal) {\n\t\t\tif (literal.hasOwnProperty(key)) {\n\t\t\t\tprocessEntry(literal, key);\n\t\t\t}\n\t\t}\n\t}\n}\n\n// Relax the readonly properties here, it is the one place where we check and normalize values\nexport interface IRelaxedExtensionDescription {\n\tid: string;\n\tuuid?: string;\n\tidentifier: ExtensionIdentifier;\n\tname: string;\n\tversion: string;\n\tpublisher: string;\n\tisBuiltin: boolean;\n\tisUserBuiltin: boolean;\n\tisUnderDevelopment: boolean;\n\textensionLocation: URI;\n\tengines: {\n\t\tvscode: string;\n\t};\n\tmain?: string;\n\tenableProposedApi?: boolean;\n}\n\nclass ExtensionManifestValidator extends ExtensionManifestHandler {\n\tvalidate(_extensionDescription: IExtensionDescription): IExtensionDescription | null {\n\t\tlet extensionDescription = <IRelaxedExtensionDescription>_extensionDescription;\n\t\textensionDescription.isBuiltin = this._isBuiltin;\n\t\textensionDescription.isUserBuiltin = !this._isBuiltin && !!extensionDescription.isUserBuiltin;\n\t\textensionDescription.isUnderDevelopment = this._isUnderDevelopment;\n\n\t\tlet notices: string[] = [];\n\t\tif (!ExtensionManifestValidator.isValidExtensionDescription(this._ourVersion, this._absoluteFolderPath, extensionDescription, notices)) {\n\t\t\tnotices.forEach((error) => {\n\t\t\t\tthis._log.error(this._absoluteFolderPath, error);\n\t\t\t});\n\t\t\treturn null;\n\t\t}\n\n\t\t// in this case the notices are warnings\n\t\tnotices.forEach((error) => {\n\t\t\tthis._log.warn(this._absoluteFolderPath, error);\n\t\t});\n\n\t\t// allow publisher to be undefined to make the initial extension authoring experience smoother\n\t\tif (!extensionDescription.publisher) {\n\t\t\textensionDescription.publisher = 'undefined_publisher';\n\t\t}\n\n\t\t// id := `publisher.name`\n\t\textensionDescription.id = `${extensionDescription.publisher}.${extensionDescription.name}`;\n\t\textensionDescription.identifier = new ExtensionIdentifier(extensionDescription.id);\n\n\t\textensionDescription.extensionLocation = URI.file(this._absoluteFolderPath);\n\n\t\treturn extensionDescription;\n\t}\n\n\tprivate static isValidExtensionDescription(version: string, extensionFolderPath: string, extensionDescription: IExtensionDescription, notices: string[]): boolean {\n\n\t\tif (!ExtensionManifestValidator.baseIsValidExtensionDescription(extensionFolderPath, extensionDescription, notices)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!semver.valid(extensionDescription.version)) {\n\t\t\tnotices.push(nls.localize('notSemver', \"Extension version is not semver compatible.\"));\n\t\t\treturn false;\n\t\t}\n\n\t\treturn isValidExtensionVersion(version, extensionDescription, notices);\n\t}\n\n\tprivate static baseIsValidExtensionDescription(extensionFolderPath: string, extensionDescription: IExtensionDescription, notices: string[]): boolean {\n\t\tif (!extensionDescription) {\n\t\t\tnotices.push(nls.localize('extensionDescription.empty', \"Got empty extension description\"));\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof extensionDescription.publisher !== 'undefined' && typeof extensionDescription.publisher !== 'string') {\n\t\t\tnotices.push(nls.localize('extensionDescription.publisher', \"property publisher must be of type `string`.\"));\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof extensionDescription.name !== 'string') {\n\t\t\tnotices.push(nls.localize('extensionDescription.name', \"property `{0}` is mandatory and must be of type `string`\", 'name'));\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof extensionDescription.version !== 'string') {\n\t\t\tnotices.push(nls.localize('extensionDescription.version', \"property `{0}` is mandatory and must be of type `string`\", 'version'));\n\t\t\treturn false;\n\t\t}\n\t\tif (!extensionDescription.engines) {\n\t\t\tnotices.push(nls.localize('extensionDescription.engines', \"property `{0}` is mandatory and must be of type `object`\", 'engines'));\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof extensionDescription.engines.vscode !== 'string') {\n\t\t\tnotices.push(nls.localize('extensionDescription.engines.vscode', \"property `{0}` is mandatory and must be of type `string`\", 'engines.vscode'));\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof extensionDescription.extensionDependencies !== 'undefined') {\n\t\t\tif (!ExtensionManifestValidator._isStringArray(extensionDescription.extensionDependencies)) {\n\t\t\t\tnotices.push(nls.localize('extensionDescription.extensionDependencies', \"property `{0}` can be omitted or must be of type `string[]`\", 'extensionDependencies'));\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tif (typeof extensionDescription.activationEvents !== 'undefined') {\n\t\t\tif (!ExtensionManifestValidator._isStringArray(extensionDescription.activationEvents)) {\n\t\t\t\tnotices.push(nls.localize('extensionDescription.activationEvents1', \"property `{0}` can be omitted or must be of type `string[]`\", 'activationEvents'));\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (typeof extensionDescription.main === 'undefined' && typeof extensionDescription.browser === 'undefined') {\n\t\t\t\tnotices.push(nls.localize('extensionDescription.activationEvents2', \"properties `{0}` and `{1}` must both be specified or must both be omitted\", 'activationEvents', 'main'));\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tif (typeof extensionDescription.main !== 'undefined') {\n\t\t\tif (typeof extensionDescription.main !== 'string') {\n\t\t\t\tnotices.push(nls.localize('extensionDescription.main1', \"property `{0}` can be omitted or must be of type `string`\", 'main'));\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\tconst normalizedAbsolutePath = path.join(extensionFolderPath, extensionDescription.main);\n\t\t\t\tif (!normalizedAbsolutePath.startsWith(extensionFolderPath)) {\n\t\t\t\t\tnotices.push(nls.localize('extensionDescription.main2', \"Expected `main` ({0}) to be included inside extension's folder ({1}). This might make the extension non-portable.\", normalizedAbsolutePath, extensionFolderPath));\n\t\t\t\t\t// not a failure case\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (typeof extensionDescription.activationEvents === 'undefined') {\n\t\t\t\tnotices.push(nls.localize('extensionDescription.main3', \"properties `{0}` and `{1}` must both be specified or must both be omitted\", 'activationEvents', 'main'));\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tif (typeof extensionDescription.browser !== 'undefined') {\n\t\t\tif (typeof extensionDescription.browser !== 'string') {\n\t\t\t\tnotices.push(nls.localize('extensionDescription.browser1', \"property `{0}` can be omitted or must be of type `string`\", 'browser'));\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\tconst normalizedAbsolutePath = path.join(extensionFolderPath, extensionDescription.browser);\n\t\t\t\tif (!normalizedAbsolutePath.startsWith(extensionFolderPath)) {\n\t\t\t\t\tnotices.push(nls.localize('extensionDescription.browser2', \"Expected `browser` ({0}) to be included inside extension's folder ({1}). This might make the extension non-portable.\", normalizedAbsolutePath, extensionFolderPath));\n\t\t\t\t\t// not a failure case\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (typeof extensionDescription.activationEvents === 'undefined') {\n\t\t\t\tnotices.push(nls.localize('extensionDescription.browser3', \"properties `{0}` and `{1}` must both be specified or must both be omitted\", 'activationEvents', 'browser'));\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate static _isStringArray(arr: string[]): boolean {\n\t\tif (!Array.isArray(arr)) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (let i = 0, len = arr.length; i < len; i++) {\n\t\t\tif (typeof arr[i] !== 'string') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n}\n\nexport class ExtensionScannerInput {\n\n\tpublic mtime: number | undefined;\n\n\tconstructor(\n\t\tpublic readonly ourVersion: string,\n\t\tpublic readonly commit: string | undefined,\n\t\tpublic readonly locale: string | undefined,\n\t\tpublic readonly devMode: boolean,\n\t\tpublic readonly absoluteFolderPath: string,\n\t\tpublic readonly isBuiltin: boolean,\n\t\tpublic readonly isUnderDevelopment: boolean,\n\t\tpublic readonly translations: Translations\n\t) {\n\t\t// Keep empty!! (JSON.parse)\n\t}\n\n\tpublic static createNLSConfig(input: ExtensionScannerInput): NlsConfiguration {\n\t\treturn {\n\t\t\tdevMode: input.devMode,\n\t\t\tlocale: input.locale,\n\t\t\tpseudo: input.locale === 'pseudo',\n\t\t\ttranslations: input.translations\n\t\t};\n\t}\n\n\tpublic static equals(a: ExtensionScannerInput, b: ExtensionScannerInput): boolean {\n\t\treturn (\n\t\t\ta.ourVersion === b.ourVersion\n\t\t\t&& a.commit === b.commit\n\t\t\t&& a.locale === b.locale\n\t\t\t&& a.devMode === b.devMode\n\t\t\t&& a.absoluteFolderPath === b.absoluteFolderPath\n\t\t\t&& a.isBuiltin === b.isBuiltin\n\t\t\t&& a.isUnderDevelopment === b.isUnderDevelopment\n\t\t\t&& a.mtime === b.mtime\n\t\t\t&& Translations.equals(a.translations, b.translations)\n\t\t);\n\t}\n}\n\nexport interface IExtensionReference {\n\tname: string;\n\tpath: string;\n}\n\nexport interface IExtensionResolver {\n\tresolveExtensions(): Promise<IExtensionReference[]>;\n}\n\nclass DefaultExtensionResolver implements IExtensionResolver {\n\n\tconstructor(private root: string) { }\n\n\tresolveExtensions(): Promise<IExtensionReference[]> {\n\t\treturn pfs.readDirsInDir(this.root)\n\t\t\t.then(folders => folders.map(name => ({ name, path: path.join(this.root, name) })));\n\t}\n}\n\nexport class ExtensionScanner {\n\n\t/**\n\t * Read the extension defined in `absoluteFolderPath`\n\t */\n\tprivate static scanExtension(version: string, log: ILog, absoluteFolderPath: string, isBuiltin: boolean, isUnderDevelopment: boolean, nlsConfig: NlsConfiguration): Promise<IExtensionDescription | null> {\n\t\tabsoluteFolderPath = path.normalize(absoluteFolderPath);\n\n\t\tlet parser = new ExtensionManifestParser(version, log, absoluteFolderPath, isBuiltin, isUnderDevelopment);\n\t\treturn parser.parse().then<IExtensionDescription | null>((extensionDescription) => {\n\t\t\tif (extensionDescription === null) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tlet nlsReplacer = new ExtensionManifestNLSReplacer(version, log, absoluteFolderPath, isBuiltin, isUnderDevelopment, nlsConfig);\n\t\t\treturn nlsReplacer.replaceNLS(extensionDescription);\n\t\t}).then((extensionDescription) => {\n\t\t\tif (extensionDescription === null) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tlet validator = new ExtensionManifestValidator(version, log, absoluteFolderPath, isBuiltin, isUnderDevelopment);\n\t\t\treturn validator.validate(extensionDescription);\n\t\t});\n\t}\n\n\t/**\n\t * Scan a list of extensions defined in `absoluteFolderPath`\n\t */\n\tpublic static async scanExtensions(input: ExtensionScannerInput, log: ILog, resolver: IExtensionResolver | null = null): Promise<IExtensionDescription[]> {\n\t\tconst absoluteFolderPath = input.absoluteFolderPath;\n\t\tconst isBuiltin = input.isBuiltin;\n\t\tconst isUnderDevelopment = input.isUnderDevelopment;\n\n\t\tif (!resolver) {\n\t\t\tresolver = new DefaultExtensionResolver(absoluteFolderPath);\n\t\t}\n\n\t\ttry {\n\t\t\tlet obsolete: { [folderName: string]: boolean; } = {};\n\t\t\tif (!isBuiltin) {\n\t\t\t\ttry {\n\t\t\t\t\tconst obsoleteFileContents = await pfs.readFile(path.join(absoluteFolderPath, '.obsolete'), 'utf8');\n\t\t\t\t\tobsolete = JSON.parse(obsoleteFileContents);\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// Don't care\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet refs = await resolver.resolveExtensions();\n\n\t\t\t// Ensure the same extension order\n\t\t\trefs.sort((a, b) => a.name < b.name ? -1 : 1);\n\n\t\t\tif (!isBuiltin) {\n\t\t\t\trefs = refs.filter(ref => ref.name.indexOf('.') !== 0); // Do not consider user extension folder starting with `.`\n\t\t\t}\n\n\t\t\tconst nlsConfig = ExtensionScannerInput.createNLSConfig(input);\n\t\t\tlet _extensionDescriptions = await Promise.all(refs.map(r => this.scanExtension(input.ourVersion, log, r.path, isBuiltin, isUnderDevelopment, nlsConfig)));\n\t\t\tlet extensionDescriptions = arrays.coalesce(_extensionDescriptions);\n\t\t\textensionDescriptions = extensionDescriptions.filter(item => item !== null && !obsolete[new ExtensionIdentifierWithVersion({ id: getGalleryExtensionId(item.publisher, item.name) }, item.version).key()]);\n\n\t\t\tif (!isBuiltin) {\n\t\t\t\t// Filter out outdated extensions\n\t\t\t\tconst byExtension: IExtensionDescription[][] = groupByExtension(extensionDescriptions, e => ({ id: e.identifier.value, uuid: e.uuid }));\n\t\t\t\textensionDescriptions = byExtension.map(p => p.sort((a, b) => semver.rcompare(a.version, b.version))[0]);\n\t\t\t}\n\n\t\t\textensionDescriptions.sort((a, b) => {\n\t\t\t\tif (a.extensionLocation.fsPath < b.extensionLocation.fsPath) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\treturn 1;\n\t\t\t});\n\t\t\treturn extensionDescriptions;\n\t\t} catch (err) {\n\t\t\tlog.error(absoluteFolderPath, err);\n\t\t\treturn [];\n\t\t}\n\t}\n\n\t/**\n\t * Combination of scanExtension and scanExtensions: If an extension manifest is found at root, we load just this extension,\n\t * otherwise we assume the folder contains multiple extensions.\n\t */\n\tpublic static scanOneOrMultipleExtensions(input: ExtensionScannerInput, log: ILog): Promise<IExtensionDescription[]> {\n\t\tconst absoluteFolderPath = input.absoluteFolderPath;\n\t\tconst isBuiltin = input.isBuiltin;\n\t\tconst isUnderDevelopment = input.isUnderDevelopment;\n\n\t\treturn pfs.fileExists(path.join(absoluteFolderPath, MANIFEST_FILE)).then((exists) => {\n\t\t\tif (exists) {\n\t\t\t\tconst nlsConfig = ExtensionScannerInput.createNLSConfig(input);\n\t\t\t\treturn this.scanExtension(input.ourVersion, log, absoluteFolderPath, isBuiltin, isUnderDevelopment, nlsConfig).then((extensionDescription) => {\n\t\t\t\t\tif (extensionDescription === null) {\n\t\t\t\t\t\treturn [];\n\t\t\t\t\t}\n\t\t\t\t\treturn [extensionDescription];\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn this.scanExtensions(input, log);\n\t\t}, (err) => {\n\t\t\tlog.error(absoluteFolderPath, err);\n\t\t\treturn [];\n\t\t});\n\t}\n\n\tpublic static scanSingleExtension(input: ExtensionScannerInput, log: ILog): Promise<IExtensionDescription | null> {\n\t\tconst absoluteFolderPath = input.absoluteFolderPath;\n\t\tconst isBuiltin = input.isBuiltin;\n\t\tconst isUnderDevelopment = input.isUnderDevelopment;\n\t\tconst nlsConfig = ExtensionScannerInput.createNLSConfig(input);\n\t\treturn this.scanExtension(input.ourVersion, log, absoluteFolderPath, isBuiltin, isUnderDevelopment, nlsConfig);\n\t}\n\n\tpublic static mergeBuiltinExtensions(builtinExtensions: Promise<IExtensionDescription[]>, extraBuiltinExtensions: Promise<IExtensionDescription[]>): Promise<IExtensionDescription[]> {\n\t\treturn Promise.all([builtinExtensions, extraBuiltinExtensions]).then(([builtinExtensions, extraBuiltinExtensions]) => {\n\t\t\tlet resultMap: { [id: string]: IExtensionDescription; } = Object.create(null);\n\t\t\tfor (let i = 0, len = builtinExtensions.length; i < len; i++) {\n\t\t\t\tresultMap[ExtensionIdentifier.toKey(builtinExtensions[i].identifier)] = builtinExtensions[i];\n\t\t\t}\n\t\t\t// Overwrite with extensions found in extra\n\t\t\tfor (let i = 0, len = extraBuiltinExtensions.length; i < len; i++) {\n\t\t\t\tresultMap[ExtensionIdentifier.toKey(extraBuiltinExtensions[i].identifier)] = extraBuiltinExtensions[i];\n\t\t\t}\n\n\t\t\tlet resultArr = Object.keys(resultMap).map((id) => resultMap[id]);\n\t\t\tresultArr.sort((a, b) => {\n\t\t\t\tconst aLastSegment = path.basename(a.extensionLocation.fsPath);\n\t\t\t\tconst bLastSegment = path.basename(b.extensionLocation.fsPath);\n\t\t\t\tif (aLastSegment < bLastSegment) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\tif (aLastSegment > bLastSegment) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t});\n\t\t\treturn resultArr;\n\t\t});\n\t}\n}\n","import { field, logger } from '@coder/logger';\nimport { Server } from '@coder/node-browser';\nimport * as os from 'os';\nimport * as path from 'path';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport * as platform from 'vs/base/common/platform';\nimport * as resources from 'vs/base/common/resources';\nimport { ReadableStreamEventPayload } from 'vs/base/common/stream';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { transformOutgoingURIs } from 'vs/base/common/uriIpc';\nimport { IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IDiagnosticInfo } from 'vs/platform/diagnostics/common/diagnostics';\nimport { INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { ExtensionIdentifier, IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { FileDeleteOptions, FileOpenOptions, FileOverwriteOptions, FileReadStreamOptions, FileType, FileWriteOptions, IStat, IWatchOptions } from 'vs/platform/files/common/files';\nimport { DiskFileSystemProvider } from 'vs/platform/files/node/diskFileSystemProvider';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport product from 'vs/platform/product/common/product';\nimport { IRemoteAgentEnvironment, RemoteAgentConnectionContext } from 'vs/platform/remote/common/remoteAgentEnvironment';\nimport { ITelemetryData, ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { INodeProxyService } from 'vs/server/common/nodeProxy';\nimport { getTranslations } from 'vs/server/node/nls';\nimport { getUriTransformer } from 'vs/server/node/util';\nimport { IFileChangeDto } from 'vs/workbench/api/common/extHost.protocol';\nimport { IEnvironmentVariableCollection } from 'vs/workbench/contrib/terminal/common/environmentVariable';\nimport { MergedEnvironmentVariableCollection } from 'vs/workbench/contrib/terminal/common/environmentVariableCollection';\nimport { deserializeEnvironmentVariableCollection } from 'vs/workbench/contrib/terminal/common/environmentVariableShared';\nimport * as terminal from 'vs/workbench/contrib/terminal/common/remoteTerminalChannel';\nimport { IShellLaunchConfig, ITerminalEnvironment, ITerminalLaunchError } from 'vs/workbench/contrib/terminal/common/terminal';\nimport { TerminalDataBufferer } from 'vs/workbench/contrib/terminal/common/terminalDataBuffering';\nimport * as terminalEnvironment from 'vs/workbench/contrib/terminal/common/terminalEnvironment';\nimport { getSystemShell } from 'vs/workbench/contrib/terminal/node/terminal';\nimport { getMainProcessParentEnv } from 'vs/workbench/contrib/terminal/node/terminalEnvironment';\nimport { TerminalProcess } from 'vs/workbench/contrib/terminal/node/terminalProcess';\nimport { AbstractVariableResolverService } from 'vs/workbench/services/configurationResolver/common/variableResolver';\nimport { ExtensionScanner, ExtensionScannerInput } from 'vs/workbench/services/extensions/node/extensionPoints';\n\n/**\n * Extend the file provider to allow unwatching.\n */\nclass Watcher extends DiskFileSystemProvider {\n\tpublic readonly watches = new Map<number, IDisposable>();\n\n\tpublic dispose(): void {\n\t\tthis.watches.forEach((w) => w.dispose());\n\t\tthis.watches.clear();\n\t\tsuper.dispose();\n\t}\n\n\tpublic _watch(req: number, resource: URI, opts: IWatchOptions): void {\n\t\tthis.watches.set(req, this.watch(resource, opts));\n\t}\n\n\tpublic unwatch(req: number): void {\n\t\tthis.watches.get(req)!.dispose();\n\t\tthis.watches.delete(req);\n\t}\n}\n\nexport class FileProviderChannel implements IServerChannel<RemoteAgentConnectionContext>, IDisposable {\n\tprivate readonly provider: DiskFileSystemProvider;\n\tprivate readonly watchers = new Map<string, Watcher>();\n\n\tpublic constructor(\n\t\tprivate readonly environmentService: INativeEnvironmentService,\n\t\tprivate readonly logService: ILogService,\n\t) {\n\t\tthis.provider = new DiskFileSystemProvider(this.logService);\n\t}\n\n\tpublic listen(context: RemoteAgentConnectionContext, event: string, args?: any): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase 'filechange': return this.filechange(context, args[0]);\n\t\t\tcase 'readFileStream': return this.readFileStream(args[0], args[1]);\n\t\t}\n\n\t\tthrow new Error(`Invalid listen '${event}'`);\n\t}\n\n\tprivate filechange(context: RemoteAgentConnectionContext, session: string): Event<IFileChangeDto[]> {\n\t\tconst emitter = new Emitter<IFileChangeDto[]>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tconst provider = new Watcher(this.logService);\n\t\t\t\tthis.watchers.set(session, provider);\n\t\t\t\tconst transformer = getUriTransformer(context.remoteAuthority);\n\t\t\t\tprovider.onDidChangeFile((events) => {\n\t\t\t\t\temitter.fire(events.map((event) => ({\n\t\t\t\t\t\t...event,\n\t\t\t\t\t\tresource: transformer.transformOutgoing(event.resource),\n\t\t\t\t\t})));\n\t\t\t\t});\n\t\t\t\tprovider.onDidErrorOccur((event) => this.logService.error(event));\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tthis.watchers.get(session)!.dispose();\n\t\t\t\tthis.watchers.delete(session);\n\t\t\t},\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\tprivate readFileStream(resource: UriComponents, opts: FileReadStreamOptions): Event<ReadableStreamEventPayload<VSBuffer>> {\n\t\tconst cts = new CancellationTokenSource();\n\t\tconst fileStream = this.provider.readFileStream(this.transform(resource), opts, cts.token);\n\t\tconst emitter = new Emitter<ReadableStreamEventPayload<VSBuffer>>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tfileStream.on('data', (data) => emitter.fire(VSBuffer.wrap(data)));\n\t\t\t\tfileStream.on('error', (error) => emitter.fire(error));\n\t\t\t\tfileStream.on('end', () => emitter.fire('end'));\n\t\t\t},\n\t\t\tonLastListenerRemove: () => cts.cancel(),\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\tpublic call(_: unknown, command: string, args?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'stat': return this.stat(args[0]);\n\t\t\tcase 'open': return this.open(args[0], args[1]);\n\t\t\tcase 'close': return this.close(args[0]);\n\t\t\tcase 'read': return this.read(args[0], args[1], args[2]);\n\t\t\tcase 'readFile': return this.readFile(args[0]);\n\t\t\tcase 'write': return this.write(args[0], args[1], args[2], args[3], args[4]);\n\t\t\tcase 'writeFile': return this.writeFile(args[0], args[1], args[2]);\n\t\t\tcase 'delete': return this.delete(args[0], args[1]);\n\t\t\tcase 'mkdir': return this.mkdir(args[0]);\n\t\t\tcase 'readdir': return this.readdir(args[0]);\n\t\t\tcase 'rename': return this.rename(args[0], args[1], args[2]);\n\t\t\tcase 'copy': return this.copy(args[0], args[1], args[2]);\n\t\t\tcase 'watch': return this.watch(args[0], args[1], args[2], args[3]);\n\t\t\tcase 'unwatch': return this.unwatch(args[0], args[1]);\n\t\t}\n\n\t\tthrow new Error(`Invalid call '${command}'`);\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.watchers.forEach((w) => w.dispose());\n\t\tthis.watchers.clear();\n\t}\n\n\tprivate async stat(resource: UriComponents): Promise<IStat> {\n\t\treturn this.provider.stat(this.transform(resource));\n\t}\n\n\tprivate async open(resource: UriComponents, opts: FileOpenOptions): Promise<number> {\n\t\treturn this.provider.open(this.transform(resource), opts);\n\t}\n\n\tprivate async close(fd: number): Promise<void> {\n\t\treturn this.provider.close(fd);\n\t}\n\n\tprivate async read(fd: number, pos: number, length: number): Promise<[VSBuffer, number]> {\n\t\tconst buffer = VSBuffer.alloc(length);\n\t\tconst bytesRead = await this.provider.read(fd, pos, buffer.buffer, 0, length);\n\t\treturn [buffer, bytesRead];\n\t}\n\n\tprivate async readFile(resource: UriComponents): Promise<VSBuffer> {\n\t\treturn VSBuffer.wrap(await this.provider.readFile(this.transform(resource)));\n\t}\n\n\tprivate write(fd: number, pos: number, buffer: VSBuffer, offset: number, length: number): Promise<number> {\n\t\treturn this.provider.write(fd, pos, buffer.buffer, offset, length);\n\t}\n\n\tprivate writeFile(resource: UriComponents, buffer: VSBuffer, opts: FileWriteOptions): Promise<void> {\n\t\treturn this.provider.writeFile(this.transform(resource), buffer.buffer, opts);\n\t}\n\n\tprivate async delete(resource: UriComponents, opts: FileDeleteOptions): Promise<void> {\n\t\treturn this.provider.delete(this.transform(resource), opts);\n\t}\n\n\tprivate async mkdir(resource: UriComponents): Promise<void> {\n\t\treturn this.provider.mkdir(this.transform(resource));\n\t}\n\n\tprivate async readdir(resource: UriComponents): Promise<[string, FileType][]> {\n\t\treturn this.provider.readdir(this.transform(resource));\n\t}\n\n\tprivate async rename(resource: UriComponents, target: UriComponents, opts: FileOverwriteOptions): Promise<void> {\n\t\treturn this.provider.rename(this.transform(resource), URI.from(target), opts);\n\t}\n\n\tprivate copy(resource: UriComponents, target: UriComponents, opts: FileOverwriteOptions): Promise<void> {\n\t\treturn this.provider.copy(this.transform(resource), URI.from(target), opts);\n\t}\n\n\tprivate async watch(session: string, req: number, resource: UriComponents, opts: IWatchOptions): Promise<void> {\n\t\tthis.watchers.get(session)!._watch(req, this.transform(resource), opts);\n\t}\n\n\tprivate async unwatch(session: string, req: number): Promise<void> {\n\t\tthis.watchers.get(session)!.unwatch(req);\n\t}\n\n\tprivate transform(resource: UriComponents): URI {\n\t\t// Used for walkthrough content.\n\t\tif (/^\\/static[^/]*\\//.test(resource.path)) {\n\t\t\treturn URI.file(this.environmentService.appRoot + resource.path.replace(/^\\/static[^/]*\\//, '/'));\n\t\t// Used by the webview service worker to load resources.\n\t\t} else if (resource.path === '/vscode-resource' && resource.query) {\n\t\t\ttry {\n\t\t\t\tconst query = JSON.parse(resource.query);\n\t\t\t\tif (query.requestResourcePath) {\n\t\t\t\t\treturn URI.file(query.requestResourcePath);\n\t\t\t\t}\n\t\t\t} catch (error) { /* Carry on. */ }\n\t\t}\n\t\treturn URI.from(resource);\n\t}\n}\n\n// See ../../workbench/services/remote/common/remoteAgentEnvironmentChannel.ts\nexport class ExtensionEnvironmentChannel implements IServerChannel {\n\tpublic constructor(\n\t\tprivate readonly environment: INativeEnvironmentService,\n\t\tprivate readonly log: ILogService,\n\t\tprivate readonly telemetry: ITelemetryService,\n\t\tprivate readonly connectionToken: string,\n\t) {}\n\n\tpublic listen(_: unknown, event: string): Event<any> {\n\t\tthrow new Error(`Invalid listen '${event}'`);\n\t}\n\n\tpublic async call(context: any, command: string, args: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'getEnvironmentData':\n\t\t\t\treturn transformOutgoingURIs(\n\t\t\t\t\tawait this.getEnvironmentData(),\n\t\t\t\t\tgetUriTransformer(context.remoteAuthority),\n\t\t\t\t);\n\t\t\tcase 'scanExtensions':\n\t\t\t\treturn transformOutgoingURIs(\n\t\t\t\t\tawait this.scanExtensions(args.language),\n\t\t\t\t\tgetUriTransformer(context.remoteAuthority),\n\t\t\t\t);\n\t\t\tcase 'getDiagnosticInfo': return this.getDiagnosticInfo();\n\t\t\tcase 'disableTelemetry': return this.disableTelemetry();\n\t\t\tcase 'logTelemetry': return this.logTelemetry(args[0], args[1]);\n\t\t\tcase 'flushTelemetry': return this.flushTelemetry();\n\t\t}\n\t\tthrow new Error(`Invalid call '${command}'`);\n\t}\n\n\tprivate async getEnvironmentData(): Promise<IRemoteAgentEnvironment> {\n\t\treturn {\n\t\t\tpid: process.pid,\n\t\t\tconnectionToken: this.connectionToken,\n\t\t\tappRoot: URI.file(this.environment.appRoot),\n\t\t\tsettingsPath: this.environment.settingsResource,\n\t\t\tlogsPath: URI.file(this.environment.logsPath),\n\t\t\textensionsPath: URI.file(this.environment.extensionsPath!),\n\t\t\textensionHostLogsPath: URI.file(path.join(this.environment.logsPath, 'extension-host')),\n\t\t\tglobalStorageHome: this.environment.globalStorageHome,\n\t\t\tworkspaceStorageHome: this.environment.workspaceStorageHome,\n\t\t\tuserHome: this.environment.userHome,\n\t\t\tos: platform.OS,\n\t\t};\n\t}\n\n\tprivate async scanExtensions(language: string): Promise<IExtensionDescription[]> {\n\t\tconst translations = await getTranslations(language, this.environment.userDataPath);\n\n\t\tconst scanMultiple = (isBuiltin: boolean, isUnderDevelopment: boolean, paths: string[]): Promise<IExtensionDescription[][]> => {\n\t\t\treturn Promise.all(paths.map((path) => {\n\t\t\t\treturn ExtensionScanner.scanExtensions(new ExtensionScannerInput(\n\t\t\t\t\tproduct.version,\n\t\t\t\t\tproduct.commit,\n\t\t\t\t\tlanguage,\n\t\t\t\t\t!!process.env.VSCODE_DEV,\n\t\t\t\t\tpath,\n\t\t\t\t\tisBuiltin,\n\t\t\t\t\tisUnderDevelopment,\n\t\t\t\t\ttranslations,\n\t\t\t\t), this.log);\n\t\t\t}));\n\t\t};\n\n\t\tconst scanBuiltin = async (): Promise<IExtensionDescription[][]> => {\n\t\t\treturn scanMultiple(true, false, [this.environment.builtinExtensionsPath, ...this.environment.extraBuiltinExtensionPaths]);\n\t\t};\n\n\t\tconst scanInstalled = async (): Promise<IExtensionDescription[][]> => {\n\t\t\treturn scanMultiple(false, true, [this.environment.extensionsPath!, ...this.environment.extraExtensionPaths]);\n\t\t};\n\n\t\treturn Promise.all([scanBuiltin(), scanInstalled()]).then((allExtensions) => {\n\t\t\tconst uniqueExtensions = new Map<string, IExtensionDescription>();\n\t\t\tallExtensions.forEach((multipleExtensions) => {\n\t\t\t\tmultipleExtensions.forEach((extensions) => {\n\t\t\t\t\textensions.forEach((extension) => {\n\t\t\t\t\t\tconst id = ExtensionIdentifier.toKey(extension.identifier);\n\t\t\t\t\t\tif (uniqueExtensions.has(id)) {\n\t\t\t\t\t\t\tconst oldPath = uniqueExtensions.get(id)!.extensionLocation.fsPath;\n\t\t\t\t\t\t\tconst newPath = extension.extensionLocation.fsPath;\n\t\t\t\t\t\t\tthis.log.warn(`${oldPath} has been overridden ${newPath}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tuniqueExtensions.set(id, {\n\t\t\t\t\t\t\t...extension,\n\t\t\t\t\t\t\t// Force extensions that should run on the client due to latency\n\t\t\t\t\t\t\t// issues.\n\t\t\t\t\t\t\textensionKind: extension.identifier.value === 'vscodevim.vim'\n\t\t\t\t\t\t\t\t? [ 'web' ]\n\t\t\t\t\t\t\t\t: extension.extensionKind,\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t\treturn Array.from(uniqueExtensions.values());\n\t\t});\n\t}\n\n\tprivate getDiagnosticInfo(): Promise<IDiagnosticInfo> {\n\t\tthrow new Error('not implemented');\n\t}\n\n\tprivate async disableTelemetry(): Promise<void> {\n\t\tthis.telemetry.setEnabled(false);\n\t}\n\n\tprivate async logTelemetry(eventName: string, data: ITelemetryData): Promise<void> {\n\t\tthis.telemetry.publicLog(eventName, data);\n\t}\n\n\tprivate async flushTelemetry(): Promise<void> {\n\t\t// We always send immediately at the moment.\n\t}\n}\n\nexport class NodeProxyService implements INodeProxyService {\n\tpublic _serviceBrand = undefined;\n\n\tpublic readonly server: Server;\n\n\tprivate readonly _onMessage = new Emitter<string>();\n\tpublic readonly onMessage = this._onMessage.event;\n\tprivate readonly _$onMessage = new Emitter<string>();\n\tpublic readonly $onMessage = this._$onMessage.event;\n\tpublic readonly _onDown = new Emitter<void>();\n\tpublic readonly onDown = this._onDown.event;\n\tpublic readonly _onUp = new Emitter<void>();\n\tpublic readonly onUp = this._onUp.event;\n\n\t// Unused because the server connection will never permanently close.\n\tprivate readonly _onClose = new Emitter<void>();\n\tpublic readonly onClose = this._onClose.event;\n\n\tpublic constructor() {\n\t\t// TODO: down/up\n\t\tthis.server = new Server({\n\t\t\tonMessage: this.$onMessage,\n\t\t\tonClose: this.onClose,\n\t\t\tonDown: this.onDown,\n\t\t\tonUp: this.onUp,\n\t\t\tsend: (message: string): void => {\n\t\t\t\tthis._onMessage.fire(message);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic send(message: string): void {\n\t\tthis._$onMessage.fire(message);\n\t}\n}\n\nclass VariableResolverService extends AbstractVariableResolverService {\n\tconstructor(\n\t\tremoteAuthority: string,\n\t\targs: terminal.ICreateTerminalProcessArguments,\n\t\tenv: platform.IProcessEnvironment,\n\t) {\n\t\tsuper({\n\t\t\tgetFolderUri: (name: string): URI | undefined => {\n\t\t\t\tconst folder = args.workspaceFolders.find((f) => f.name === name);\n\t\t\t\treturn folder && URI.revive(folder.uri);\n\t\t\t},\n\t\t\tgetWorkspaceFolderCount: (): number => {\n\t\t\t\treturn args.workspaceFolders.length;\n\t\t\t},\n\t\t\t// In ../../workbench/contrib/terminal/common/remoteTerminalChannel.ts it\n\t\t\t// looks like there are `config:` entries which must be for this? Not sure\n\t\t\t// how/if the URI comes into play though.\n\t\t\tgetConfigurationValue: (_: URI, section: string): string | undefined => {\n\t\t\t\treturn args.resolvedVariables[`config:${section}`];\n\t\t\t},\n\t\t\tgetExecPath: (): string | undefined => {\n\t\t\t\t// Assuming that resolverEnv is just for use in the resolver and not for\n\t\t\t\t// the terminal itself.\n\t\t\t\treturn (args.resolverEnv && args.resolverEnv['VSCODE_EXEC_PATH']) || env['VSCODE_EXEC_PATH'];\n\t\t\t},\n\t\t\t// This is just a guess; this is the only file-related thing we're sent\n\t\t\t// and none of these resolver methods seem to get called so I don't know\n\t\t\t// how to test.\n\t\t\tgetFilePath: (): string | undefined => {\n\t\t\t\tconst resource = transformIncoming(remoteAuthority, args.activeFileResource);\n\t\t\t\tif (!resource) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\t// See ../../editor/standalone/browser/simpleServices.ts;\n\t\t\t\t// `BaseConfigurationResolverService` calls `getUriLabel` from there.\n\t\t\t\tif (resource.scheme === 'file') {\n\t\t\t\t\treturn resource.fsPath;\n\t\t\t\t}\n\t\t\t\treturn resource.path;\n\t\t\t},\n\t\t\t// It looks like these are set here although they aren't on the types:\n\t\t\t// ../../workbench/contrib/terminal/common/remoteTerminalChannel.ts\n\t\t\tgetSelectedText: (): string | undefined => {\n\t\t\t\treturn args.resolvedVariables.selectedText;\n\t\t\t},\n\t\t\tgetLineNumber: (): string | undefined => {\n\t\t\t\treturn args.resolvedVariables.selectedText;\n\t\t\t},\n\t\t}, undefined, env);\n\t}\n}\n\nclass Terminal {\n\tprivate readonly process: TerminalProcess;\n\tprivate _pid: number = -1;\n\tprivate _title: string = '';\n\tpublic readonly workspaceId: string;\n\tpublic readonly workspaceName: string;\n\tprivate readonly persist: boolean;\n\n\tprivate readonly _onDispose = new Emitter<void>();\n\tpublic get onDispose(): Event<void> { return this._onDispose.event; }\n\n\tprivate _isOrphan = true;\n\tpublic get isOrphan(): boolean { return this._isOrphan; }\n\n\t// These are replayed when a client reconnects.\n\tprivate cols: number;\n\tprivate rows: number;\n\tprivate replayData: string[] = [];\n\t// This is based on string length and is pretty arbitrary.\n\tprivate readonly maxReplayData = 10000;\n\tprivate totalReplayData = 0;\n\n\t// According to the release notes the terminals are supposed to dispose after\n\t// a short timeout; in our case we'll use 48 hours so you can get them back\n\t// the next day or over the weekend.\n\tprivate disposeTimeout: NodeJS.Timeout | undefined;\n\tprivate disposeDelay = 48 * 60 * 60 * 1000;\n\n\tprivate buffering = false;\n\tprivate readonly _onEvent = new Emitter<terminal.IRemoteTerminalProcessEvent>({\n\t\t// Don't bind to data until something is listening.\n\t\tonFirstListenerAdd: () => {\n\t\t\tlogger.debug('Terminal bound', field('id', this.id));\n\t\t\tthis._isOrphan = false;\n\t\t\tif (!this.buffering) {\n\t\t\t\tthis.buffering = true;\n\t\t\t\tthis.bufferer.startBuffering(this.id, this.process.onProcessData);\n\t\t\t}\n\t\t},\n\n\t\t// Replay stored events.\n\t\tonFirstListenerDidAdd: () => {\n\t\t\t// We only need to replay if the terminal is being reconnected which is\n\t\t\t// true if there is a dispose timeout.\n\t\t\tif (typeof this.disposeTimeout !== 'undefined') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tclearTimeout(this.disposeTimeout);\n\t\t\tthis.disposeTimeout = undefined;\n\n\t\t\tlogger.debug('Terminal replaying', field('id', this.id));\n\t\t\tthis._onEvent.fire({\n\t\t\t\ttype: 'replay',\n\t\t\t\tevents: [{\n\t\t\t\t\tcols: this.cols,\n\t\t\t\t\trows: this.rows,\n\t\t\t\t\tdata: this.replayData.join(''),\n\t\t\t\t}]\n\t\t\t});\n\t\t},\n\n\t\tonLastListenerRemove: () => {\n\t\t\tlogger.debug('Terminal unbound', field('id', this.id));\n\t\t\tthis._isOrphan = true;\n\t\t\tif (!this.persist) { // Used by debug consoles.\n\t\t\t\tthis.dispose();\n\t\t\t} else {\n\t\t\t\tthis.disposeTimeout = setTimeout(() => {\n\t\t\t\t\tthis.dispose();\n\t\t\t\t}, this.disposeDelay);\n\t\t\t}\n\t\t}\n\t});\n\n\tpublic get onEvent(): Event<terminal.IRemoteTerminalProcessEvent> { return this._onEvent.event; }\n\n\t// Buffer to reduce the number of messages going to the renderer.\n\tprivate readonly bufferer = new TerminalDataBufferer((_, data) => {\n\t\tthis._onEvent.fire({\n\t\t\ttype: 'data',\n\t\t\tdata,\n\t\t});\n\n\t\t// No need to store data if we aren't persisting.\n\t\tif (!this.persist) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.replayData.push(data);\n\t\tthis.totalReplayData += data.length;\n\n\t\tlet overflow = this.totalReplayData - this.maxReplayData;\n\t\tif (overflow <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Drop events until doing so would put us under budget.\n\t\tlet deleteCount = 0;\n\t\tfor (; deleteCount < this.replayData.length\n\t\t\t&& this.replayData[deleteCount].length <= overflow; ++deleteCount) {\n\t\t\toverflow -= this.replayData[deleteCount].length;\n\t\t}\n\n\t\tif (deleteCount > 0) {\n\t\t\tthis.replayData.splice(0, deleteCount);\n\t\t}\n\n\t\t// Dropping any more events would put us under budget; trim the first event\n\t\t// instead if still over budget.\n\t\tif (overflow > 0 && this.replayData.length > 0) {\n\t\t\tthis.replayData[0] = this.replayData[0].substring(overflow);\n\t\t}\n\n\t\tthis.totalReplayData = this.replayData.reduce((p, c) => p + c.length, 0);\n\t});\n\n\tpublic get pid(): number {\n\t\treturn this._pid;\n\t}\n\n\tpublic get title(): string {\n\t\treturn this._title;\n\t}\n\n\tpublic constructor(\n\t\tpublic readonly id: number,\n\t\tconfig: IShellLaunchConfig & { cwd: string },\n\t\targs: terminal.ICreateTerminalProcessArguments,\n\t\tenv: platform.IProcessEnvironment,\n\t\tlogService: ILogService,\n\t) {\n\t\tthis.workspaceId = args.workspaceId;\n\t\tthis.workspaceName = args.workspaceName;\n\n\t\tthis.cols = args.cols;\n\t\tthis.rows = args.rows;\n\n\t\t// TODO: Don't persist terminals until we make it work with things like\n\t\t// htop, vim, etc.\n\t\t// this.persist = args.shouldPersistTerminal;\n\t\tthis.persist = false;\n\n\t\tthis.process = new TerminalProcess(\n\t\t\tconfig,\n\t\t\tconfig.cwd,\n\t\t\tthis.cols,\n\t\t\tthis.rows,\n\t\t\tenv,\n\t\t\tprocess.env as platform.IProcessEnvironment, // Environment used for `findExecutable`.\n\t\t\tfalse, // windowsEnableConpty: boolean,\n\t\t\tlogService,\n\t\t);\n\n\t\t// The current pid and title aren't exposed so they have to be tracked.\n\t\tthis.process.onProcessReady((event) => {\n\t\t\tthis._pid = event.pid;\n\t\t\tthis._onEvent.fire({\n\t\t\t\ttype: 'ready',\n\t\t\t\tpid: event.pid,\n\t\t\t\tcwd: event.cwd,\n\t\t\t});\n\t\t});\n\n\t\tthis.process.onProcessTitleChanged((title) => {\n\t\t\tthis._title = title;\n\t\t\tthis._onEvent.fire({\n\t\t\t\ttype: 'titleChanged',\n\t\t\t\ttitle,\n\t\t\t});\n\t\t});\n\n\t\tthis.process.onProcessExit((exitCode) => {\n\t\t\tlogger.debug('Terminal exited', field('id', this.id), field('code', exitCode));\n\t\t\tthis._onEvent.fire({\n\t\t\t\ttype: 'exit',\n\t\t\t\texitCode,\n\t\t\t});\n\t\t\tthis.dispose();\n\t\t});\n\n\t\t// TODO: I think `execCommand` must have something to do with running\n\t\t// commands on the terminal that will do things in VS Code but we already\n\t\t// have that functionality via a socket so I'm not sure what this is for.\n\t\t// type: 'execCommand';\n\t\t// reqId: number;\n\t\t// commandId: string;\n\t\t// commandArgs: any[];\n\n\t\t// TODO: Maybe this is to ask if the terminal is currently attached to\n\t\t// anything? But we already know that on account of whether anything is\n\t\t// listening to our event emitter.\n\t\t// type: 'orphan?';\n\t}\n\n\tpublic dispose() {\n\t\tlogger.debug('Terminal disposing', field('id', this.id));\n\t\tthis._onEvent.dispose();\n\t\tthis.bufferer.dispose();\n\t\tthis.process.dispose();\n\t\tthis.process.shutdown(true);\n\t\tthis._onDispose.fire();\n\t\tthis._onDispose.dispose();\n\t}\n\n\tpublic shutdown(immediate: boolean): void {\n\t\treturn this.process.shutdown(immediate);\n\t}\n\n\tpublic getCwd(): Promise<string> {\n\t\treturn this.process.getCwd();\n\t}\n\n\tpublic getInitialCwd(): Promise<string> {\n\t\treturn this.process.getInitialCwd();\n\t}\n\n\tpublic start(): Promise<ITerminalLaunchError | undefined> {\n\t\treturn this.process.start();\n\t}\n\n\tpublic input(data: string): void {\n\t\treturn this.process.input(data);\n\t}\n\n\tpublic resize(cols: number, rows: number): void {\n\t\tthis.cols = cols;\n\t\tthis.rows = rows;\n\t\treturn this.process.resize(cols, rows);\n\t}\n}\n\n// References: - ../../workbench/api/node/extHostTerminalService.ts\n//             - ../../workbench/contrib/terminal/browser/terminalProcessManager.ts\nexport class TerminalProviderChannel implements IServerChannel<RemoteAgentConnectionContext>, IDisposable {\n\tprivate readonly terminals = new Map<number, Terminal>();\n\tprivate id = 0;\n\n\tpublic constructor (private readonly logService: ILogService) {\n\n\t}\n\n\tpublic listen(_: RemoteAgentConnectionContext, event: string, args?: any): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase '$onTerminalProcessEvent': return this.onTerminalProcessEvent(args);\n\t\t}\n\n\t\tthrow new Error(`Invalid listen '${event}'`);\n\t}\n\n\tprivate onTerminalProcessEvent(args: terminal.IOnTerminalProcessEventArguments): Event<terminal.IRemoteTerminalProcessEvent> {\n\t\treturn this.getTerminal(args.id).onEvent;\n\t}\n\n\tpublic call(context: RemoteAgentConnectionContext, command: string, args?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase '$createTerminalProcess': return this.createTerminalProcess(context.remoteAuthority, args);\n\t\t\tcase '$startTerminalProcess': return this.startTerminalProcess(args);\n\t\t\tcase '$sendInputToTerminalProcess': return this.sendInputToTerminalProcess(args);\n\t\t\tcase '$shutdownTerminalProcess': return this.shutdownTerminalProcess(args);\n\t\t\tcase '$resizeTerminalProcess': return this.resizeTerminalProcess(args);\n\t\t\tcase '$getTerminalInitialCwd': return this.getTerminalInitialCwd(args);\n\t\t\tcase '$getTerminalCwd': return this.getTerminalCwd(args);\n\t\t\tcase '$sendCommandResultToTerminalProcess': return this.sendCommandResultToTerminalProcess(args);\n\t\t\tcase '$orphanQuestionReply': return this.orphanQuestionReply(args[0]);\n\t\t\tcase '$listTerminals': return this.listTerminals(args[0]);\n\t\t}\n\n\t\tthrow new Error(`Invalid call '${command}'`);\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.terminals.forEach((t) => t.dispose());\n\t}\n\n\tprivate async createTerminalProcess(remoteAuthority: string, args: terminal.ICreateTerminalProcessArguments): Promise<terminal.ICreateTerminalProcessResult> {\n\t\tconst terminalId = this.id++;\n\t\tlogger.debug('Creating terminal', field('id', terminalId), field('terminals', this.terminals.size));\n\n\t\tconst shellLaunchConfig: IShellLaunchConfig = {\n\t\t\tname: args.shellLaunchConfig.name,\n\t\t\texecutable: args.shellLaunchConfig.executable,\n\t\t\targs: args.shellLaunchConfig.args,\n\t\t\t// TODO: Should we transform if it's a string as well? The incoming\n\t\t\t// transform only takes `UriComponents` so I suspect it's not necessary.\n\t\t\tcwd: typeof args.shellLaunchConfig.cwd !== 'string'\n\t\t\t\t? transformIncoming(remoteAuthority, args.shellLaunchConfig.cwd)\n\t\t\t\t: args.shellLaunchConfig.cwd,\n\t\t\tenv: args.shellLaunchConfig.env,\n\t\t};\n\n\t\tconst activeWorkspaceUri = transformIncoming(remoteAuthority, args.activeWorkspaceFolder?.uri);\n\t\tconst activeWorkspace = activeWorkspaceUri && args.activeWorkspaceFolder ? {\n\t\t\t...args.activeWorkspaceFolder,\n\t\t\turi: activeWorkspaceUri,\n\t\t\ttoResource: (relativePath: string) => resources.joinPath(activeWorkspaceUri, relativePath),\n\t\t} : undefined;\n\n\t\tconst resolverService = new VariableResolverService(remoteAuthority, args, process.env as platform.IProcessEnvironment);\n\t\tconst resolver = terminalEnvironment.createVariableResolver(activeWorkspace, resolverService);\n\n\t\tconst getDefaultShellAndArgs = (): { executable: string; args: string[] | string } => {\n\t\t\tif (shellLaunchConfig.executable) {\n\t\t\t\tconst executable = resolverService.resolve(activeWorkspace, shellLaunchConfig.executable);\n\t\t\t\tlet resolvedArgs: string[] | string = [];\n\t\t\t\tif (shellLaunchConfig.args && Array.isArray(shellLaunchConfig.args)) {\n\t\t\t\t\tfor (const arg of shellLaunchConfig.args) {\n\t\t\t\t\t\tresolvedArgs.push(resolverService.resolve(activeWorkspace, arg));\n\t\t\t\t\t}\n\t\t\t\t} else if (shellLaunchConfig.args) {\n\t\t\t\t\tresolvedArgs = resolverService.resolve(activeWorkspace, shellLaunchConfig.args);\n\t\t\t\t}\n\t\t\t\treturn { executable, args: resolvedArgs };\n\t\t\t}\n\n\t\t\tconst executable = terminalEnvironment.getDefaultShell(\n\t\t\t\t(key) => args.configuration[key],\n\t\t\t\targs.isWorkspaceShellAllowed,\n\t\t\t\tgetSystemShell(platform.platform),\n\t\t\t\tprocess.env.hasOwnProperty('PROCESSOR_ARCHITEW6432'),\n\t\t\t\tprocess.env.windir,\n\t\t\t\tresolver,\n\t\t\t\tthis.logService,\n\t\t\t\tfalse, // useAutomationShell\n\t\t\t);\n\n\t\t\tconst resolvedArgs = terminalEnvironment.getDefaultShellArgs(\n\t\t\t\t(key) => args.configuration[key],\n\t\t\t\targs.isWorkspaceShellAllowed,\n\t\t\t\tfalse, // useAutomationShell\n\t\t\t\tresolver,\n\t\t\t\tthis.logService,\n\t\t\t);\n\n\t\t\treturn { executable, args: resolvedArgs };\n\t\t};\n\n\t\tconst getInitialCwd = (): string => {\n\t\t\treturn terminalEnvironment.getCwd(\n\t\t\t\tshellLaunchConfig,\n\t\t\t\tos.homedir(),\n\t\t\t\tresolver,\n\t\t\t\tactiveWorkspaceUri,\n\t\t\t\targs.configuration['terminal.integrated.cwd'],\n\t\t\t\tthis.logService,\n\t\t\t);\n\t\t};\n\n\t\t// Use a separate var so Typescript recognizes these properties are no\n\t\t// longer undefined.\n\t\tconst resolvedShellLaunchConfig = {\n\t\t\t...shellLaunchConfig,\n\t\t\t...getDefaultShellAndArgs(),\n\t\t\tcwd: getInitialCwd(),\n\t\t};\n\n\t\tlogger.debug('Resolved shell launch configuration', field('id', terminalId));\n\n\t\t// Use instead of `terminal.integrated.env.${platform}` to make types work.\n\t\tconst getEnvFromConfig = (): terminal.ISingleTerminalConfiguration<ITerminalEnvironment> => {\n\t\t\tif (platform.isWindows) {\n\t\t\t\treturn args.configuration['terminal.integrated.env.windows'];\n\t\t\t} else if (platform.isMacintosh) {\n\t\t\t\treturn args.configuration['terminal.integrated.env.osx'];\n\t\t\t}\n\t\t\treturn args.configuration['terminal.integrated.env.linux'];\n\t\t};\n\n\t\tconst getNonInheritedEnv = async (): Promise<platform.IProcessEnvironment> => {\n\t\t\tconst env = await getMainProcessParentEnv();\n\t\t\tenv.VSCODE_IPC_HOOK_CLI = process.env['VSCODE_IPC_HOOK_CLI']!;\n\t\t\treturn env;\n\t\t};\n\n\t\tconst env = terminalEnvironment.createTerminalEnvironment(\n\t\t\tshellLaunchConfig,\n\t\t\tgetEnvFromConfig(),\n\t\t\tresolver,\n\t\t\targs.isWorkspaceShellAllowed,\n\t\t\tproduct.version,\n\t\t\targs.configuration['terminal.integrated.detectLocale'],\n\t\t\targs.configuration['terminal.integrated.inheritEnv'] !== false\n\t\t\t\t? process.env as platform.IProcessEnvironment\n\t\t\t\t: await getNonInheritedEnv()\n\t\t);\n\n\t\t// Apply extension environment variable collections to the environment.\n\t\tif (!shellLaunchConfig.strictEnv) {\n\t\t\t// They come in an array and in serialized format.\n\t\t\tconst envVariableCollections = new Map<string, IEnvironmentVariableCollection>();\n\t\t\tfor (const [k, v] of args.envVariableCollections) {\n\t\t\t\tenvVariableCollections.set(k, { map: deserializeEnvironmentVariableCollection(v) });\n\t\t\t}\n\t\t\tconst mergedCollection = new MergedEnvironmentVariableCollection(envVariableCollections);\n\t\t\tmergedCollection.applyToProcessEnvironment(env);\n\t\t}\n\n\t\tlogger.debug('Resolved terminal environment', field('id', terminalId));\n\n\t\tconst terminal = new Terminal(terminalId, resolvedShellLaunchConfig, args, env, this.logService);\n\t\tthis.terminals.set(terminalId, terminal);\n\t\tlogger.debug('Created terminal', field('id', terminalId));\n\t\tterminal.onDispose(() => this.terminals.delete(terminalId));\n\n\t\treturn {\n\t\t\tterminalId,\n\t\t\tresolvedShellLaunchConfig,\n\t\t};\n\t}\n\n\tprivate getTerminal(id: number): Terminal {\n\t\tconst terminal = this.terminals.get(id);\n\t\tif (!terminal) {\n\t\t\tthrow new Error(`terminal with id ${id} does not exist`);\n\t\t}\n\t\treturn terminal;\n\t}\n\n\tprivate async startTerminalProcess(args: terminal.IStartTerminalProcessArguments): Promise<ITerminalLaunchError | void> {\n\t\treturn this.getTerminal(args.id).start();\n\t}\n\n\tprivate async sendInputToTerminalProcess(args: terminal.ISendInputToTerminalProcessArguments): Promise<void> {\n\t\treturn this.getTerminal(args.id).input(args.data);\n\t}\n\n\tprivate async shutdownTerminalProcess(args: terminal.IShutdownTerminalProcessArguments): Promise<void> {\n\t\treturn this.getTerminal(args.id).shutdown(args.immediate);\n\t}\n\n\tprivate async resizeTerminalProcess(args: terminal.IResizeTerminalProcessArguments): Promise<void> {\n\t\treturn this.getTerminal(args.id).resize(args.cols, args.rows);\n\t}\n\n\tprivate async getTerminalInitialCwd(args: terminal.IGetTerminalInitialCwdArguments): Promise<string> {\n\t\treturn this.getTerminal(args.id).getInitialCwd();\n\t}\n\n\tprivate async getTerminalCwd(args: terminal.IGetTerminalCwdArguments): Promise<string> {\n\t\treturn this.getTerminal(args.id).getCwd();\n\t}\n\n\tprivate async sendCommandResultToTerminalProcess(_: terminal.ISendCommandResultToTerminalProcessArguments): Promise<void> {\n\t\t// NOTE: Not required unless we implement the `execCommand` event, see above.\n\t\tthrow new Error('not implemented');\n\t}\n\n\tprivate async orphanQuestionReply(_: terminal.IOrphanQuestionReplyArgs): Promise<void> {\n\t\t// NOTE: Not required unless we implement the `orphan?` event, see above.\n\t\tthrow new Error('not implemented');\n\t}\n\n\tprivate async listTerminals(_: terminal.IListTerminalsArgs): Promise<terminal.IRemoteTerminalDescriptionDto[]> {\n\t\t// TODO: args.isInitialization. Maybe this is to have slightly different\n\t\t// behavior when first listing terminals but I don't know what you'd want to\n\t\t// do differently. Maybe it's to reset the terminal dispose timeouts or\n\t\t// something like that, but why not do it each time you list?\n\t\tconst terminals = await Promise.all(Array.from(this.terminals).map(async ([id, terminal]) => {\n\t\t\tconst cwd = await terminal.getCwd();\n\t\t\treturn {\n\t\t\t\tid,\n\t\t\t\tpid: terminal.pid,\n\t\t\t\ttitle: terminal.title,\n\t\t\t\tcwd,\n\t\t\t\tworkspaceId: terminal.workspaceId,\n\t\t\t\tworkspaceName: terminal.workspaceName,\n\t\t\t\tisOrphan: terminal.isOrphan,\n\t\t\t};\n\t\t}));\n\t\t// Only returned orphaned terminals so we don't end up attaching to\n\t\t// terminals already attached elsewhere.\n\t\treturn terminals.filter((t) => t.isOrphan);\n\t}\n}\n\nfunction transformIncoming(remoteAuthority: string, uri: UriComponents | undefined): URI | undefined {\n\tconst transformer = getUriTransformer(remoteAuthority);\n\treturn uri ? URI.revive(transformer.transformIncoming(uri)) : uri;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter } from 'vs/base/common/event';\nimport { Disposable, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { IChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { FileChangeType, FileDeleteOptions, FileOverwriteOptions, FileSystemProviderCapabilities, FileType, IFileChange, IStat, IWatchOptions, FileOpenOptions, IFileSystemProviderWithFileReadWriteCapability, FileWriteOptions, IFileSystemProviderWithFileReadStreamCapability, IFileSystemProviderWithFileFolderCopyCapability, FileReadStreamOptions, IFileSystemProviderWithOpenReadWriteCloseCapability } from 'vs/platform/files/common/files';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { IRemoteAgentService } from 'vs/workbench/services/remote/common/remoteAgentService';\nimport { OperatingSystem } from 'vs/base/common/platform';\nimport { newWriteableStream, ReadableStreamEvents, ReadableStreamEventPayload } from 'vs/base/common/stream';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { canceled } from 'vs/base/common/errors';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\n\nexport const REMOTE_FILE_SYSTEM_CHANNEL_NAME = 'remotefilesystem';\n\nexport interface IFileChangeDto {\n\tresource: UriComponents;\n\ttype: FileChangeType;\n}\n\nexport class RemoteFileSystemProvider extends Disposable implements\n\tIFileSystemProviderWithFileReadWriteCapability,\n\tIFileSystemProviderWithOpenReadWriteCloseCapability,\n\tIFileSystemProviderWithFileReadStreamCapability,\n\tIFileSystemProviderWithFileFolderCopyCapability {\n\n\tprivate readonly session: string = generateUuid();\n\tprivate readonly channel: IChannel;\n\n\tprivate readonly _onDidChange = this._register(new Emitter<readonly IFileChange[]>());\n\treadonly onDidChangeFile = this._onDidChange.event;\n\n\tprivate _onDidWatchErrorOccur = this._register(new Emitter<string>());\n\treadonly onDidErrorOccur = this._onDidWatchErrorOccur.event;\n\n\tprivate readonly _onDidChangeCapabilities = this._register(new Emitter<void>());\n\treadonly onDidChangeCapabilities = this._onDidChangeCapabilities.event;\n\n\tprivate _capabilities!: FileSystemProviderCapabilities;\n\tget capabilities(): FileSystemProviderCapabilities { return this._capabilities; }\n\n\tconstructor(remoteAgentService: IRemoteAgentService) {\n\t\tsuper();\n\n\t\tconst connection = remoteAgentService.getConnection()!;\n\t\tthis.channel = connection.getChannel<IChannel>(REMOTE_FILE_SYSTEM_CHANNEL_NAME);\n\n\t\t// Initially assume case sensitivity until remote environment is resolved\n\t\tthis.setCaseSensitive(true);\n\t\t(async () => {\n\t\t\tconst remoteAgentEnvironment = await remoteAgentService.getEnvironment();\n\t\t\tthis.setCaseSensitive(remoteAgentEnvironment?.os === OperatingSystem.Linux);\n\t\t})();\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis._register(this.channel.listen<IFileChangeDto[] | string>('filechange', [this.session])(eventsOrError => {\n\t\t\tif (Array.isArray(eventsOrError)) {\n\t\t\t\tconst events = eventsOrError;\n\t\t\t\tthis._onDidChange.fire(events.map(event => ({ resource: URI.revive(event.resource), type: event.type })));\n\t\t\t} else {\n\t\t\t\tconst error = eventsOrError;\n\t\t\t\tthis._onDidWatchErrorOccur.fire(error);\n\t\t\t}\n\t\t}));\n\t}\n\n\tsetCaseSensitive(isCaseSensitive: boolean) {\n\t\tlet capabilities = (\n\t\t\tFileSystemProviderCapabilities.FileReadWrite\n\t\t\t| FileSystemProviderCapabilities.FileOpenReadWriteClose\n\t\t\t| FileSystemProviderCapabilities.FileReadStream\n\t\t\t| FileSystemProviderCapabilities.FileFolderCopy\n\t\t);\n\n\t\tif (isCaseSensitive) {\n\t\t\tcapabilities |= FileSystemProviderCapabilities.PathCaseSensitive;\n\t\t}\n\n\t\tthis._capabilities = capabilities;\n\t\tthis._onDidChangeCapabilities.fire(undefined);\n\t}\n\n\t// --- forwarding calls\n\n\tstat(resource: URI): Promise<IStat> {\n\t\treturn this.channel.call('stat', [resource]);\n\t}\n\n\topen(resource: URI, opts: FileOpenOptions): Promise<number> {\n\t\treturn this.channel.call('open', [resource, opts]);\n\t}\n\n\tclose(fd: number): Promise<void> {\n\t\treturn this.channel.call('close', [fd]);\n\t}\n\n\tasync read(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> {\n\t\tconst [bytes, bytesRead]: [VSBuffer, number] = await this.channel.call('read', [fd, pos, length]);\n\n\t\t// copy back the data that was written into the buffer on the remote\n\t\t// side. we need to do this because buffers are not referenced by\n\t\t// pointer, but only by value and as such cannot be directly written\n\t\t// to from the other process.\n\t\tdata.set(bytes.buffer.slice(0, bytesRead), offset);\n\n\t\treturn bytesRead;\n\t}\n\n\tasync readFile(resource: URI): Promise<Uint8Array> {\n\t\tconst buff = <VSBuffer>await this.channel.call('readFile', [resource]);\n\n\t\treturn buff.buffer;\n\t}\n\n\treadFileStream(resource: URI, opts: FileReadStreamOptions, token: CancellationToken): ReadableStreamEvents<Uint8Array> {\n\t\tconst stream = newWriteableStream<Uint8Array>(data => VSBuffer.concat(data.map(data => VSBuffer.wrap(data))).buffer);\n\n\t\t// Reading as file stream goes through an event to the remote side\n\t\tconst listener = this.channel.listen<ReadableStreamEventPayload<VSBuffer>>('readFileStream', [resource, opts])(dataOrErrorOrEnd => {\n\n\t\t\t// data\n\t\t\tif (dataOrErrorOrEnd instanceof VSBuffer) {\n\t\t\t\tstream.write(dataOrErrorOrEnd.buffer);\n\t\t\t}\n\n\t\t\t// end or error\n\t\t\telse {\n\t\t\t\tif (dataOrErrorOrEnd === 'end') {\n\t\t\t\t\tstream.end();\n\t\t\t\t} else {\n\n\t\t\t\t\t// Since we receive data through a IPC channel, it is likely\n\t\t\t\t\t// that the error was not serialized, or only partially. To\n\t\t\t\t\t// ensure our API use is correct, we convert the data to an\n\t\t\t\t\t// error here to forward it properly.\n\t\t\t\t\tlet error = dataOrErrorOrEnd;\n\t\t\t\t\tif (!(error instanceof Error)) {\n\t\t\t\t\t\terror = new Error(toErrorMessage(error));\n\t\t\t\t\t}\n\n\t\t\t\t\tstream.end(error);\n\t\t\t\t}\n\n\t\t\t\t// Signal to the remote side that we no longer listen\n\t\t\t\tlistener.dispose();\n\t\t\t}\n\t\t});\n\n\t\t// Support cancellation\n\t\ttoken.onCancellationRequested(() => {\n\n\t\t\t// Ensure to end the stream properly with an error\n\t\t\t// to indicate the cancellation.\n\t\t\tstream.end(canceled());\n\n\t\t\t// Ensure to dispose the listener upon cancellation. This will\n\t\t\t// bubble through the remote side as event and allows to stop\n\t\t\t// reading the file.\n\t\t\tlistener.dispose();\n\t\t});\n\n\t\treturn stream;\n\t}\n\n\twrite(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> {\n\t\treturn this.channel.call('write', [fd, pos, VSBuffer.wrap(data), offset, length]);\n\t}\n\n\twriteFile(resource: URI, content: Uint8Array, opts: FileWriteOptions): Promise<void> {\n\t\treturn this.channel.call('writeFile', [resource, VSBuffer.wrap(content), opts]);\n\t}\n\n\tdelete(resource: URI, opts: FileDeleteOptions): Promise<void> {\n\t\treturn this.channel.call('delete', [resource, opts]);\n\t}\n\n\tmkdir(resource: URI): Promise<void> {\n\t\treturn this.channel.call('mkdir', [resource]);\n\t}\n\n\treaddir(resource: URI): Promise<[string, FileType][]> {\n\t\treturn this.channel.call('readdir', [resource]);\n\t}\n\n\trename(resource: URI, target: URI, opts: FileOverwriteOptions): Promise<void> {\n\t\treturn this.channel.call('rename', [resource, target, opts]);\n\t}\n\n\tcopy(resource: URI, target: URI, opts: FileOverwriteOptions): Promise<void> {\n\t\treturn this.channel.call('copy', [resource, target, opts]);\n\t}\n\n\twatch(resource: URI, opts: IWatchOptions): IDisposable {\n\t\tconst req = Math.random();\n\t\tthis.channel.call('watch', [this.session, req, resource, opts]);\n\n\t\treturn toDisposable(() => this.channel.call('unwatch', [this.session, req]));\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { RemoteAgentConnectionContext, IRemoteAgentEnvironment } from 'vs/platform/remote/common/remoteAgentEnvironment';\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IDiagnosticInfoOptions, IDiagnosticInfo } from 'vs/platform/diagnostics/common/diagnostics';\nimport { Event } from 'vs/base/common/event';\nimport { PersistentConnectionEvent, ISocketFactory } from 'vs/platform/remote/common/remoteAgentConnection';\nimport { ITelemetryData } from 'vs/platform/telemetry/common/telemetry';\nimport { ExtensionIdentifier, IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { URI } from 'vs/base/common/uri';\n\nexport const RemoteExtensionLogFileName = 'remoteagent';\n\nexport const IRemoteAgentService = createDecorator<IRemoteAgentService>('remoteAgentService');\n\nexport interface IRemoteAgentService {\n\treadonly _serviceBrand: undefined;\n\n\treadonly socketFactory: ISocketFactory;\n\n\tgetConnection(): IRemoteAgentConnection | null;\n\t/**\n\t * Get the remote environment. In case of an error, returns `null`.\n\t */\n\tgetEnvironment(): Promise<IRemoteAgentEnvironment | null>;\n\t/**\n\t * Get the remote environment. Can return an error.\n\t */\n\tgetRawEnvironment(): Promise<IRemoteAgentEnvironment | null>;\n\t/**\n\t * Scan remote extensions.\n\t */\n\tscanExtensions(skipExtensions?: ExtensionIdentifier[]): Promise<IExtensionDescription[]>;\n\t/**\n\t * Scan a single remote extension.\n\t */\n\tscanSingleExtension(extensionLocation: URI, isBuiltin: boolean): Promise<IExtensionDescription | null>;\n\tgetDiagnosticInfo(options: IDiagnosticInfoOptions): Promise<IDiagnosticInfo | undefined>;\n\tdisableTelemetry(): Promise<void>;\n\tlogTelemetry(eventName: string, data?: ITelemetryData): Promise<void>;\n\tflushTelemetry(): Promise<void>;\n}\n\nexport interface IRemoteAgentConnection {\n\treadonly remoteAuthority: string;\n\n\treadonly onReconnecting: Event<void>;\n\treadonly onDidStateChange: Event<PersistentConnectionEvent>;\n\n\tgetChannel<T extends IChannel>(channelName: string): T;\n\twithChannel<T extends IChannel, R>(channelName: string, callback: (channel: T) => Promise<R>): Promise<R>;\n\tregisterChannel<T extends IServerChannel<RemoteAgentConnectionContext>>(channelName: string, channel: T): void;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as path from 'vs/base/common/path';\nimport { createWriteStream, WriteStream } from 'fs';\nimport { Readable } from 'stream';\nimport { Sequencer, createCancelablePromise } from 'vs/base/common/async';\nimport { mkdirp, rimraf } from 'vs/base/node/pfs';\nimport { open as _openZip, Entry, ZipFile } from 'yauzl';\nimport * as yazl from 'yazl';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { assertIsDefined } from 'vs/base/common/types';\n\nexport interface IExtractOptions {\n\toverwrite?: boolean;\n\n\t/**\n\t * Source path within the ZIP archive. Only the files contained in this\n\t * path will be extracted.\n\t */\n\tsourcePath?: string;\n}\n\ninterface IOptions {\n\tsourcePathRegex: RegExp;\n}\n\nexport type ExtractErrorType = 'CorruptZip' | 'Incomplete';\n\nexport class ExtractError extends Error {\n\n\treadonly type?: ExtractErrorType;\n\treadonly cause: Error;\n\n\tconstructor(type: ExtractErrorType | undefined, cause: Error) {\n\t\tlet message = cause.message;\n\n\t\tswitch (type) {\n\t\t\tcase 'CorruptZip': message = `Corrupt ZIP: ${message}`; break;\n\t\t}\n\n\t\tsuper(message);\n\t\tthis.type = type;\n\t\tthis.cause = cause;\n\t}\n}\n\nfunction modeFromEntry(entry: Entry) {\n\tconst attr = entry.externalFileAttributes >> 16 || 33188;\n\n\treturn [448 /* S_IRWXU */, 56 /* S_IRWXG */, 7 /* S_IRWXO */]\n\t\t.map(mask => attr & mask)\n\t\t.reduce((a, b) => a + b, attr & 61440 /* S_IFMT */);\n}\n\nfunction toExtractError(err: Error): ExtractError {\n\tif (err instanceof ExtractError) {\n\t\treturn err;\n\t}\n\n\tlet type: ExtractErrorType | undefined = undefined;\n\n\tif (/end of central directory record signature not found/.test(err.message)) {\n\t\ttype = 'CorruptZip';\n\t}\n\n\treturn new ExtractError(type, err);\n}\n\nfunction extractEntry(stream: Readable, fileName: string, mode: number, targetPath: string, options: IOptions, token: CancellationToken): Promise<void> {\n\tconst dirName = path.dirname(fileName);\n\tconst targetDirName = path.join(targetPath, dirName);\n\tif (!targetDirName.startsWith(targetPath)) {\n\t\treturn Promise.reject(new Error(nls.localize('invalid file', \"Error extracting {0}. Invalid file.\", fileName)));\n\t}\n\tconst targetFileName = path.join(targetPath, fileName);\n\n\tlet istream: WriteStream;\n\n\ttoken.onCancellationRequested(() => {\n\t\tif (istream) {\n\t\t\tistream.destroy();\n\t\t}\n\t});\n\n\treturn Promise.resolve(mkdirp(targetDirName)).then(() => new Promise<void>((c, e) => {\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tistream = createWriteStream(targetFileName, { mode });\n\t\t\tistream.once('close', () => c());\n\t\t\tistream.once('error', e);\n\t\t\tstream.once('error', e);\n\t\t\tstream.pipe(istream);\n\t\t} catch (error) {\n\t\t\te(error);\n\t\t}\n\t}));\n}\n\nfunction extractZip(zipfile: ZipFile, targetPath: string, options: IOptions, token: CancellationToken): Promise<void> {\n\tlet last = createCancelablePromise<void>(() => Promise.resolve());\n\tlet extractedEntriesCount = 0;\n\n\ttoken.onCancellationRequested(() => {\n\t\tlast.cancel();\n\t\tzipfile.close();\n\t});\n\n\treturn new Promise((c, e) => {\n\t\tconst throttler = new Sequencer();\n\n\t\tconst readNextEntry = (token: CancellationToken) => {\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\textractedEntriesCount++;\n\t\t\tzipfile.readEntry();\n\t\t};\n\n\t\tzipfile.once('error', e);\n\t\tzipfile.once('close', () => last.then(() => {\n\t\t\tif (token.isCancellationRequested || zipfile.entryCount === extractedEntriesCount) {\n\t\t\t\tc();\n\t\t\t} else {\n\t\t\t\te(new ExtractError('Incomplete', new Error(nls.localize('incompleteExtract', \"Incomplete. Found {0} of {1} entries\", extractedEntriesCount, zipfile.entryCount))));\n\t\t\t}\n\t\t}, e));\n\t\tzipfile.readEntry();\n\t\tzipfile.on('entry', (entry: Entry) => {\n\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!options.sourcePathRegex.test(entry.fileName)) {\n\t\t\t\treadNextEntry(token);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst fileName = entry.fileName.replace(options.sourcePathRegex, '');\n\n\t\t\t// directory file names end with '/'\n\t\t\tif (/\\/$/.test(fileName)) {\n\t\t\t\tconst targetFileName = path.join(targetPath, fileName);\n\t\t\t\tlast = createCancelablePromise(token => mkdirp(targetFileName).then(() => readNextEntry(token)).then(undefined, e));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst stream = openZipStream(zipfile, entry);\n\t\t\tconst mode = modeFromEntry(entry);\n\n\t\t\tlast = createCancelablePromise(token => throttler.queue(() => stream.then(stream => extractEntry(stream, fileName, mode, targetPath, options, token).then(() => readNextEntry(token)))).then(null, e));\n\t\t});\n\t});\n}\n\nfunction openZip(zipFile: string, lazy: boolean = false): Promise<ZipFile> {\n\treturn new Promise<ZipFile>((resolve, reject) => {\n\t\t_openZip(zipFile, lazy ? { lazyEntries: true } : undefined!, (error?: Error, zipfile?: ZipFile) => {\n\t\t\tif (error) {\n\t\t\t\treject(toExtractError(error));\n\t\t\t} else {\n\t\t\t\tresolve(assertIsDefined(zipfile));\n\t\t\t}\n\t\t});\n\t});\n}\n\nfunction openZipStream(zipFile: ZipFile, entry: Entry): Promise<Readable> {\n\treturn new Promise<Readable>((resolve, reject) => {\n\t\tzipFile.openReadStream(entry, (error?: Error, stream?: Readable) => {\n\t\t\tif (error) {\n\t\t\t\treject(toExtractError(error));\n\t\t\t} else {\n\t\t\t\tresolve(assertIsDefined(stream));\n\t\t\t}\n\t\t});\n\t});\n}\n\nexport interface IFile {\n\tpath: string;\n\tcontents?: Buffer | string;\n\tlocalPath?: string;\n}\n\nexport function zip(zipPath: string, files: IFile[]): Promise<string> {\n\treturn new Promise<string>((c, e) => {\n\t\tconst zip = new yazl.ZipFile();\n\t\tfiles.forEach(f => {\n\t\t\tif (f.contents) {\n\t\t\t\tzip.addBuffer(typeof f.contents === 'string' ? Buffer.from(f.contents, 'utf8') : f.contents, f.path);\n\t\t\t} else if (f.localPath) {\n\t\t\t\tzip.addFile(f.localPath, f.path);\n\t\t\t}\n\t\t});\n\t\tzip.end();\n\n\t\tconst zipStream = createWriteStream(zipPath);\n\t\tzip.outputStream.pipe(zipStream);\n\n\t\tzip.outputStream.once('error', e);\n\t\tzipStream.once('error', e);\n\t\tzipStream.once('finish', () => c(zipPath));\n\t});\n}\n\nexport function extract(zipPath: string, targetPath: string, options: IExtractOptions = {}, token: CancellationToken): Promise<void> {\n\tconst sourcePathRegex = new RegExp(options.sourcePath ? `^${options.sourcePath}` : '');\n\n\tlet promise = openZip(zipPath, true);\n\n\tif (options.overwrite) {\n\t\tpromise = promise.then(zipfile => rimraf(targetPath).then(() => zipfile));\n\t}\n\n\treturn promise.then(zipfile => extractZip(zipfile, targetPath, { sourcePathRegex }, token));\n}\n\nfunction read(zipPath: string, filePath: string): Promise<Readable> {\n\treturn openZip(zipPath).then(zipfile => {\n\t\treturn new Promise<Readable>((c, e) => {\n\t\t\tzipfile.on('entry', (entry: Entry) => {\n\t\t\t\tif (entry.fileName === filePath) {\n\t\t\t\t\topenZipStream(zipfile, entry).then(stream => c(stream), err => e(err));\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tzipfile.once('close', () => e(new Error(nls.localize('notFound', \"{0} not found inside zip.\", filePath))));\n\t\t});\n\t});\n}\n\nexport function buffer(zipPath: string, filePath: string): Promise<Buffer> {\n\treturn read(zipPath, filePath).then(stream => {\n\t\treturn new Promise<Buffer>((c, e) => {\n\t\t\tconst buffers: Buffer[] = [];\n\t\t\tstream.once('error', e);\n\t\t\tstream.on('data', (b: Buffer) => buffers.push(b));\n\t\t\tstream.on('end', () => c(Buffer.concat(buffers)));\n\t\t});\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { buffer } from 'vs/base/node/zip';\nimport { localize } from 'vs/nls';\nimport { IExtensionManifest } from 'vs/platform/extensions/common/extensions';\n\nexport function getManifest(vsix: string): Promise<IExtensionManifest> {\n\treturn buffer(vsix, 'extension/package.json')\n\t\t.then(buffer => {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(buffer.toString('utf8'));\n\t\t\t} catch (err) {\n\t\t\t\tthrow new Error(localize('invalidManifest', \"VSIX invalid: package.json is not a JSON file.\"));\n\t\t\t}\n\t\t});\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as semver from 'vs/base/common/semver/semver';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport * as pfs from 'vs/base/node/pfs';\nimport * as path from 'vs/base/common/path';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { ILocalExtension, IGalleryMetadata, ExtensionManagementError } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { ExtensionType, IExtensionManifest, IExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\nimport { areSameExtensions, ExtensionIdentifierWithVersion, groupByExtension, getGalleryExtensionId } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { Limiter, Queue } from 'vs/base/common/async';\nimport { URI } from 'vs/base/common/uri';\nimport { INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { localizeManifest } from 'vs/platform/extensionManagement/common/extensionNls';\nimport { localize } from 'vs/nls';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { CancellationToken } from 'vscode';\nimport { extract, ExtractError } from 'vs/base/node/zip';\nimport { isWindows } from 'vs/base/common/platform';\nimport { flatten } from 'vs/base/common/arrays';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport { FileAccess } from 'vs/base/common/network';\n\nconst ERROR_SCANNING_SYS_EXTENSIONS = 'scanningSystem';\nconst ERROR_SCANNING_USER_EXTENSIONS = 'scanningUser';\nconst INSTALL_ERROR_EXTRACTING = 'extracting';\nconst INSTALL_ERROR_DELETING = 'deleting';\nconst INSTALL_ERROR_RENAMING = 'renaming';\n\nexport type IMetadata = Partial<IGalleryMetadata & { isMachineScoped: boolean; isBuiltin: boolean }>;\nexport type ILocalExtensionManifest = IExtensionManifest & { __metadata?: IMetadata };\ntype IRelaxedLocalExtension = Omit<ILocalExtension, 'isBuiltin'> & { isBuiltin: boolean };\n\nexport class ExtensionsScanner extends Disposable {\n\n\tprivate readonly systemExtensionsPath: string;\n\tprivate readonly extensionsPath: string;\n\tprivate readonly uninstalledPath: string;\n\tprivate readonly uninstalledFileLimiter: Queue<any>;\n\n\tconstructor(\n\t\tprivate readonly beforeRemovingExtension: (e: ILocalExtension) => Promise<void>,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@INativeEnvironmentService private readonly environmentService: INativeEnvironmentService,\n\t\t@IProductService private readonly productService: IProductService,\n\t) {\n\t\tsuper();\n\t\tthis.systemExtensionsPath = environmentService.builtinExtensionsPath;\n\t\tthis.extensionsPath = environmentService.extensionsPath!;\n\t\tthis.uninstalledPath = path.join(this.extensionsPath, '.obsolete');\n\t\tthis.uninstalledFileLimiter = new Queue();\n\t}\n\n\tasync cleanUp(): Promise<void> {\n\t\tawait this.removeUninstalledExtensions();\n\t\tawait this.removeOutdatedExtensions();\n\t}\n\n\tasync scanExtensions(type: ExtensionType | null): Promise<ILocalExtension[]> {\n\t\tconst promises: Promise<ILocalExtension[]>[] = [];\n\n\t\tif (type === null || type === ExtensionType.System) {\n\t\t\tpromises.push(this.scanSystemExtensions().then(null, e => Promise.reject(new ExtensionManagementError(this.joinErrors(e).message, ERROR_SCANNING_SYS_EXTENSIONS))));\n\t\t}\n\n\t\tif (type === null || type === ExtensionType.User) {\n\t\t\tpromises.push(this.scanUserExtensions(true).then(null, e => Promise.reject(new ExtensionManagementError(this.joinErrors(e).message, ERROR_SCANNING_USER_EXTENSIONS))));\n\t\t}\n\n\t\ttry {\n\t\t\tconst result = await Promise.all(promises);\n\t\t\treturn flatten(result);\n\t\t} catch (error) {\n\t\t\tthrow this.joinErrors(error);\n\t\t}\n\t}\n\n\tasync scanUserExtensions(excludeOutdated: boolean): Promise<ILocalExtension[]> {\n\t\tthis.logService.trace('Started scanning user extensions');\n\t\tlet [uninstalled, extensions] = await Promise.all([this.getUninstalledExtensions(), this.scanAllUserExtensions()]);\n\t\textensions = extensions.filter(e => !uninstalled[new ExtensionIdentifierWithVersion(e.identifier, e.manifest.version).key()]);\n\t\tif (excludeOutdated) {\n\t\t\tconst byExtension: ILocalExtension[][] = groupByExtension(extensions, e => e.identifier);\n\t\t\textensions = byExtension.map(p => p.sort((a, b) => semver.rcompare(a.manifest.version, b.manifest.version))[0]);\n\t\t}\n\t\tthis.logService.trace('Scanned user extensions:', extensions.length);\n\t\treturn extensions;\n\t}\n\n\tasync scanAllUserExtensions(): Promise<ILocalExtension[]> {\n\t\treturn this.scanExtensionsInDirs(this.extensionsPath, this.environmentService.extraExtensionPaths, ExtensionType.User);\n\t}\n\n\tasync extractUserExtension(identifierWithVersion: ExtensionIdentifierWithVersion, zipPath: string, token: CancellationToken): Promise<ILocalExtension> {\n\t\tconst folderName = identifierWithVersion.key();\n\t\tconst tempPath = path.join(this.extensionsPath, `.${folderName}`);\n\t\tconst extensionPath = path.join(this.extensionsPath, folderName);\n\n\t\ttry {\n\t\t\tawait pfs.rimraf(extensionPath);\n\t\t} catch (error) {\n\t\t\ttry {\n\t\t\t\tawait pfs.rimraf(extensionPath);\n\t\t\t} catch (e) { /* ignore */ }\n\t\t\tthrow new ExtensionManagementError(localize('errorDeleting', \"Unable to delete the existing folder '{0}' while installing the extension '{1}'. Please delete the folder manually and try again\", extensionPath, identifierWithVersion.id), INSTALL_ERROR_DELETING);\n\t\t}\n\n\t\tawait this.extractAtLocation(identifierWithVersion, zipPath, tempPath, token);\n\t\ttry {\n\t\t\tawait this.rename(identifierWithVersion, tempPath, extensionPath, Date.now() + (2 * 60 * 1000) /* Retry for 2 minutes */);\n\t\t\tthis.logService.info('Renamed to', extensionPath);\n\t\t} catch (error) {\n\t\t\tthis.logService.info('Rename failed. Deleting from extracted location', tempPath);\n\t\t\ttry {\n\t\t\t\tpfs.rimraf(tempPath);\n\t\t\t} catch (e) { /* ignore */ }\n\t\t\tthrow error;\n\t\t}\n\n\t\tlet local: ILocalExtension | null = null;\n\t\ttry {\n\t\t\tlocal = await this.scanExtension(folderName, this.extensionsPath, ExtensionType.User);\n\t\t} catch (e) { /*ignore */ }\n\n\t\tif (local) {\n\t\t\treturn local;\n\t\t}\n\t\tthrow new Error(localize('cannot read', \"Cannot read the extension from {0}\", this.extensionsPath));\n\t}\n\n\tasync saveMetadataForLocalExtension(local: ILocalExtension, metadata: IMetadata): Promise<ILocalExtension> {\n\t\tthis.setMetadata(local, metadata);\n\n\t\t// unset if false\n\t\tmetadata.isMachineScoped = metadata.isMachineScoped || undefined;\n\t\tmetadata.isBuiltin = metadata.isBuiltin || undefined;\n\t\tconst manifestPath = path.join(local.location.fsPath, 'package.json');\n\t\tconst raw = await pfs.readFile(manifestPath, 'utf8');\n\t\tconst { manifest } = await this.parseManifest(raw);\n\t\t(manifest as ILocalExtensionManifest).__metadata = metadata;\n\t\tawait pfs.writeFile(manifestPath, JSON.stringify(manifest, null, '\\t'));\n\t\treturn local;\n\t}\n\n\tgetUninstalledExtensions(): Promise<{ [id: string]: boolean; }> {\n\t\treturn this.withUninstalledExtensions(uninstalled => uninstalled);\n\t}\n\n\tasync withUninstalledExtensions<T>(fn: (uninstalled: IStringDictionary<boolean>) => T): Promise<T> {\n\t\treturn this.uninstalledFileLimiter.queue(async () => {\n\t\t\tlet raw: string | undefined;\n\t\t\ttry {\n\t\t\t\traw = await pfs.readFile(this.uninstalledPath, 'utf8');\n\t\t\t} catch (err) {\n\t\t\t\tif (err.code !== 'ENOENT') {\n\t\t\t\t\tthrow err;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet uninstalled = {};\n\t\t\tif (raw) {\n\t\t\t\ttry {\n\t\t\t\t\tuninstalled = JSON.parse(raw);\n\t\t\t\t} catch (e) { /* ignore */ }\n\t\t\t}\n\n\t\t\tconst result = fn(uninstalled);\n\n\t\t\tif (Object.keys(uninstalled).length) {\n\t\t\t\tawait pfs.writeFile(this.uninstalledPath, JSON.stringify(uninstalled));\n\t\t\t} else {\n\t\t\t\tawait pfs.rimraf(this.uninstalledPath);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t});\n\t}\n\n\tasync removeExtension(extension: ILocalExtension, type: string): Promise<void> {\n\t\tthis.logService.trace(`Deleting ${type} extension from disk`, extension.identifier.id, extension.location.fsPath);\n\t\tawait pfs.rimraf(extension.location.fsPath);\n\t\tthis.logService.info('Deleted from disk', extension.identifier.id, extension.location.fsPath);\n\t}\n\n\tasync removeUninstalledExtension(extension: ILocalExtension): Promise<void> {\n\t\tawait this.removeExtension(extension, 'uninstalled');\n\t\tawait this.withUninstalledExtensions(uninstalled => delete uninstalled[new ExtensionIdentifierWithVersion(extension.identifier, extension.manifest.version).key()]);\n\t}\n\n\tprivate async extractAtLocation(identifier: IExtensionIdentifier, zipPath: string, location: string, token: CancellationToken): Promise<void> {\n\t\tthis.logService.trace(`Started extracting the extension from ${zipPath} to ${location}`);\n\n\t\t// Clean the location\n\t\ttry {\n\t\t\tawait pfs.rimraf(location);\n\t\t} catch (e) {\n\t\t\tthrow new ExtensionManagementError(this.joinErrors(e).message, INSTALL_ERROR_DELETING);\n\t\t}\n\n\t\ttry {\n\t\t\tawait extract(zipPath, location, { sourcePath: 'extension', overwrite: true }, token);\n\t\t\tthis.logService.info(`Extracted extension to ${location}:`, identifier.id);\n\t\t} catch (e) {\n\t\t\ttry { await pfs.rimraf(location); } catch (e) { /* Ignore */ }\n\t\t\tthrow new ExtensionManagementError(e.message, e instanceof ExtractError && e.type ? e.type : INSTALL_ERROR_EXTRACTING);\n\t\t}\n\t}\n\n\tprivate async rename(identifier: IExtensionIdentifier, extractPath: string, renamePath: string, retryUntil: number): Promise<void> {\n\t\ttry {\n\t\t\tawait pfs.rename(extractPath, renamePath);\n\t\t} catch (error) {\n\t\t\tif (isWindows && error && error.code === 'EPERM' && Date.now() < retryUntil) {\n\t\t\t\tthis.logService.info(`Failed renaming ${extractPath} to ${renamePath} with 'EPERM' error. Trying again...`, identifier.id);\n\t\t\t\treturn this.rename(identifier, extractPath, renamePath, retryUntil);\n\t\t\t}\n\t\t\tthrow new ExtensionManagementError(error.message || localize('renameError', \"Unknown error while renaming {0} to {1}\", extractPath, renamePath), error.code || INSTALL_ERROR_RENAMING);\n\t\t}\n\t}\n\n\tprivate async scanSystemExtensions(): Promise<ILocalExtension[]> {\n\t\tthis.logService.trace('Started scanning system extensions');\n\t\tconst systemExtensionsPromise = this.scanDefaultSystemExtensions();\n\t\tif (this.environmentService.isBuilt) {\n\t\t\treturn systemExtensionsPromise;\n\t\t}\n\n\t\t// Scan other system extensions during development\n\t\tconst devSystemExtensionsPromise = this.scanDevSystemExtensions();\n\t\tconst [systemExtensions, devSystemExtensions] = await Promise.all([systemExtensionsPromise, devSystemExtensionsPromise]);\n\t\treturn [...systemExtensions, ...devSystemExtensions];\n\t}\n\n\tprivate async scanExtensionsInDir(dir: string, type: ExtensionType): Promise<ILocalExtension[]> {\n\t\tconst limiter = new Limiter<any>(10);\n\t\tconst extensionsFolders = await pfs.readdir(dir)\n\t\t\t.catch((error) => {\n\t\t\t\tif (error.code !== 'ENOENT') {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t\treturn <string[]>[];\n\t\t\t});\n\t\tconst extensions = await Promise.all<ILocalExtension>(extensionsFolders.map(extensionFolder => limiter.queue(() => this.scanExtension(extensionFolder, dir, type))));\n\t\treturn extensions.filter(e => e && e.identifier);\n\t}\n\n\tprivate async scanExtension(folderName: string, root: string, type: ExtensionType): Promise<ILocalExtension | null> {\n\t\tif (type === ExtensionType.User && folderName.indexOf('.') === 0) { // Do not consider user extension folder starting with `.`\n\t\t\treturn null;\n\t\t}\n\t\tconst extensionPath = path.join(root, folderName);\n\t\ttry {\n\t\t\tconst children = await pfs.readdir(extensionPath);\n\t\t\tconst { manifest, metadata } = await this.readManifest(extensionPath);\n\t\t\tconst readme = children.filter(child => /^readme(\\.txt|\\.md|)$/i.test(child))[0];\n\t\t\tconst readmeUrl = readme ? URI.file(path.join(extensionPath, readme)) : undefined;\n\t\t\tconst changelog = children.filter(child => /^changelog(\\.txt|\\.md|)$/i.test(child))[0];\n\t\t\tconst changelogUrl = changelog ? URI.file(path.join(extensionPath, changelog)) : undefined;\n\t\t\tconst identifier = { id: getGalleryExtensionId(manifest.publisher, manifest.name) };\n\t\t\tconst local = <ILocalExtension>{ type, identifier, manifest, location: URI.file(extensionPath), readmeUrl, changelogUrl, publisherDisplayName: null, publisherId: null, isMachineScoped: false, isBuiltin: type === ExtensionType.System };\n\t\t\tif (metadata) {\n\t\t\t\tthis.setMetadata(local, metadata);\n\t\t\t}\n\t\t\treturn local;\n\t\t} catch (e) {\n\t\t\tthis.logService.trace(e);\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tprivate async scanDefaultSystemExtensions(): Promise<ILocalExtension[]> {\n\t\tconst result = await this.scanExtensionsInDirs(this.systemExtensionsPath, this.environmentService.extraBuiltinExtensionPaths, ExtensionType.System);\n\t\tthis.logService.trace('Scanned system extensions:', result.length);\n\t\treturn result;\n\t}\n\n\tprivate async scanDevSystemExtensions(): Promise<ILocalExtension[]> {\n\t\tconst devSystemExtensionsList = this.getDevSystemExtensionsList();\n\t\tif (devSystemExtensionsList.length) {\n\t\t\tconst result = await this.scanExtensionsInDir(this.devSystemExtensionsPath, ExtensionType.System);\n\t\t\tthis.logService.trace('Scanned dev system extensions:', result.length);\n\t\t\treturn result.filter(r => devSystemExtensionsList.some(id => areSameExtensions(r.identifier, { id })));\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tprivate setMetadata(local: IRelaxedLocalExtension, metadata: IMetadata): void {\n\t\tlocal.publisherDisplayName = metadata.publisherDisplayName || null;\n\t\tlocal.publisherId = metadata.publisherId || null;\n\t\tlocal.identifier.uuid = metadata.id;\n\t\tlocal.isMachineScoped = !!metadata.isMachineScoped;\n\t\tlocal.isBuiltin = local.type === ExtensionType.System || !!metadata.isBuiltin;\n\t}\n\n\tprivate async removeUninstalledExtensions(): Promise<void> {\n\t\tconst uninstalled = await this.getUninstalledExtensions();\n\t\tconst extensions = await this.scanAllUserExtensions(); // All user extensions\n\t\tconst installed: Set<string> = new Set<string>();\n\t\tfor (const e of extensions) {\n\t\t\tif (!uninstalled[new ExtensionIdentifierWithVersion(e.identifier, e.manifest.version).key()]) {\n\t\t\t\tinstalled.add(e.identifier.id.toLowerCase());\n\t\t\t}\n\t\t}\n\t\tconst byExtension: ILocalExtension[][] = groupByExtension(extensions, e => e.identifier);\n\t\tawait Promise.all(byExtension.map(async e => {\n\t\t\tconst latest = e.sort((a, b) => semver.rcompare(a.manifest.version, b.manifest.version))[0];\n\t\t\tif (!installed.has(latest.identifier.id.toLowerCase())) {\n\t\t\t\tawait this.beforeRemovingExtension(latest);\n\t\t\t}\n\t\t}));\n\t\tconst toRemove: ILocalExtension[] = extensions.filter(e => uninstalled[new ExtensionIdentifierWithVersion(e.identifier, e.manifest.version).key()]);\n\t\tawait Promise.all(toRemove.map(e => this.removeUninstalledExtension(e)));\n\t}\n\n\tprivate async removeOutdatedExtensions(): Promise<void> {\n\t\tconst extensions = await this.scanAllUserExtensions();\n\t\tconst toRemove: ILocalExtension[] = [];\n\n\t\t// Outdated extensions\n\t\tconst byExtension: ILocalExtension[][] = groupByExtension(extensions, e => e.identifier);\n\t\ttoRemove.push(...flatten(byExtension.map(p => p.sort((a, b) => semver.rcompare(a.manifest.version, b.manifest.version)).slice(1))));\n\n\t\tawait Promise.all(toRemove.map(extension => this.removeExtension(extension, 'outdated')));\n\t}\n\n\tprivate getDevSystemExtensionsList(): string[] {\n\t\treturn (this.productService.builtInExtensions || []).map(e => e.name);\n\t}\n\n\tprivate joinErrors(errorOrErrors: (Error | string) | (Array<Error | string>)): Error {\n\t\tconst errors = Array.isArray(errorOrErrors) ? errorOrErrors : [errorOrErrors];\n\t\tif (errors.length === 1) {\n\t\t\treturn errors[0] instanceof Error ? <Error>errors[0] : new Error(<string>errors[0]);\n\t\t}\n\t\treturn errors.reduce<Error>((previousValue: Error, currentValue: Error | string) => {\n\t\t\treturn new Error(`${previousValue.message}${previousValue.message ? ',' : ''}${currentValue instanceof Error ? currentValue.message : currentValue}`);\n\t\t}, new Error(''));\n\t}\n\n\tprivate _devSystemExtensionsPath: string | null = null;\n\tprivate get devSystemExtensionsPath(): string {\n\t\tif (!this._devSystemExtensionsPath) {\n\t\t\tthis._devSystemExtensionsPath = path.normalize(path.join(FileAccess.asFileUri('', require).fsPath, '..', '.build', 'builtInExtensions'));\n\t\t}\n\t\treturn this._devSystemExtensionsPath;\n\t}\n\n\tprivate async readManifest(extensionPath: string): Promise<{ manifest: IExtensionManifest; metadata: IMetadata | null; }> {\n\t\tconst promises = [\n\t\t\tpfs.readFile(path.join(extensionPath, 'package.json'), 'utf8')\n\t\t\t\t.then(raw => this.parseManifest(raw)),\n\t\t\tpfs.readFile(path.join(extensionPath, 'package.nls.json'), 'utf8')\n\t\t\t\t.then(undefined, err => err.code !== 'ENOENT' ? Promise.reject<string>(err) : '{}')\n\t\t\t\t.then(raw => JSON.parse(raw))\n\t\t];\n\n\t\tconst [{ manifest, metadata }, translations] = await Promise.all(promises);\n\t\treturn {\n\t\t\tmanifest: localizeManifest(manifest, translations),\n\t\t\tmetadata\n\t\t};\n\t}\n\n\tprivate parseManifest(raw: string): Promise<{ manifest: IExtensionManifest; metadata: IMetadata | null; }> {\n\t\treturn new Promise((c, e) => {\n\t\t\ttry {\n\t\t\t\tconst manifest = JSON.parse(raw);\n\t\t\t\tconst metadata = manifest.__metadata || null;\n\t\t\t\tc({ manifest, metadata });\n\t\t\t} catch (err) {\n\t\t\t\te(new Error(localize('invalidManifest', \"Extension invalid: package.json is not a JSON file.\")));\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate async scanExtensionsInDirs(dir: string, dirs: string[], type: ExtensionType): Promise<ILocalExtension[]>{\n\t\tconst results = await Promise.all([dir, ...dirs].map((path) => this.scanExtensionsInDir(path, type)));\n\t\treturn results.reduce((flat, current) => flat.concat(current), []);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as path from 'vs/base/common/path';\nimport * as pfs from 'vs/base/node/pfs';\nimport { toDisposable, Disposable } from 'vs/base/common/lifecycle';\nimport { isNonEmptyArray } from 'vs/base/common/arrays';\nimport { zip, IFile } from 'vs/base/node/zip';\nimport {\n\tIExtensionManagementService, IExtensionGalleryService, ILocalExtension,\n\tIGalleryExtension, IGalleryMetadata,\n\tInstallExtensionEvent, DidInstallExtensionEvent, DidUninstallExtensionEvent,\n\tStatisticType,\n\tIExtensionIdentifier,\n\tIReportedExtension,\n\tInstallOperation,\n\tINSTALL_ERROR_MALICIOUS,\n\tINSTALL_ERROR_INCOMPATIBLE,\n\tExtensionManagementError,\n\tInstallOptions\n} from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { areSameExtensions, getGalleryExtensionId, getMaliciousExtensionsSet, getGalleryExtensionTelemetryData, getLocalExtensionTelemetryData, ExtensionIdentifierWithVersion } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { createCancelablePromise, CancelablePromise } from 'vs/base/common/async';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport * as semver from 'vs/base/common/semver/semver';\nimport { URI } from 'vs/base/common/uri';\nimport product from 'vs/platform/product/common/product';\nimport { isMacintosh } from 'vs/base/common/platform';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { ExtensionsManifestCache } from 'vs/platform/extensionManagement/node/extensionsManifestCache';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { isEngineValid } from 'vs/platform/extensions/common/extensionValidator';\nimport { joinPath } from 'vs/base/common/resources';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { IDownloadService } from 'vs/platform/download/common/download';\nimport { optional, IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { Schemas } from 'vs/base/common/network';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { getManifest } from 'vs/platform/extensionManagement/node/extensionManagementUtil';\nimport { IExtensionManifest, ExtensionType } from 'vs/platform/extensions/common/extensions';\nimport { ExtensionsDownloader } from 'vs/platform/extensionManagement/node/extensionDownloader';\nimport { ExtensionsScanner, ILocalExtensionManifest, IMetadata } from 'vs/platform/extensionManagement/node/extensionsScanner';\nimport { ExtensionsLifecycle } from 'vs/platform/extensionManagement/node/extensionLifecycle';\n\nconst INSTALL_ERROR_UNSET_UNINSTALLED = 'unsetUninstalled';\nconst INSTALL_ERROR_DOWNLOADING = 'downloading';\nconst INSTALL_ERROR_VALIDATING = 'validating';\nconst INSTALL_ERROR_LOCAL = 'local';\nconst ERROR_UNKNOWN = 'unknown';\n\ninterface InstallableExtension {\n\tzipPath: string;\n\tidentifierWithVersion: ExtensionIdentifierWithVersion;\n\tmetadata?: IMetadata;\n}\n\nexport class ExtensionManagementService extends Disposable implements IExtensionManagementService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly extensionsScanner: ExtensionsScanner;\n\tprivate reportedExtensions: Promise<IReportedExtension[]> | undefined;\n\tprivate lastReportTimestamp = 0;\n\tprivate readonly installingExtensions = new Map<string, CancelablePromise<ILocalExtension>>();\n\tprivate readonly uninstallingExtensions: Map<string, CancelablePromise<void>> = new Map<string, CancelablePromise<void>>();\n\tprivate readonly manifestCache: ExtensionsManifestCache;\n\tprivate readonly extensionsDownloader: ExtensionsDownloader;\n\n\tprivate readonly _onInstallExtension = this._register(new Emitter<InstallExtensionEvent>());\n\treadonly onInstallExtension: Event<InstallExtensionEvent> = this._onInstallExtension.event;\n\n\tprivate readonly _onDidInstallExtension = this._register(new Emitter<DidInstallExtensionEvent>());\n\treadonly onDidInstallExtension: Event<DidInstallExtensionEvent> = this._onDidInstallExtension.event;\n\n\tprivate readonly _onUninstallExtension = this._register(new Emitter<IExtensionIdentifier>());\n\treadonly onUninstallExtension: Event<IExtensionIdentifier> = this._onUninstallExtension.event;\n\n\tprivate _onDidUninstallExtension = this._register(new Emitter<DidUninstallExtensionEvent>());\n\tonDidUninstallExtension: Event<DidUninstallExtensionEvent> = this._onDidUninstallExtension.event;\n\n\tconstructor(\n\t\t@INativeEnvironmentService private readonly environmentService: INativeEnvironmentService,\n\t\t@IExtensionGalleryService private readonly galleryService: IExtensionGalleryService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@optional(IDownloadService) private downloadService: IDownloadService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\t\tconst extensionLifecycle = this._register(instantiationService.createInstance(ExtensionsLifecycle));\n\t\tthis.extensionsScanner = this._register(instantiationService.createInstance(ExtensionsScanner, extension => extensionLifecycle.postUninstall(extension)));\n\t\tthis.manifestCache = this._register(new ExtensionsManifestCache(environmentService, this));\n\t\tthis.extensionsDownloader = this._register(instantiationService.createInstance(ExtensionsDownloader));\n\n\t\tthis._register(toDisposable(() => {\n\t\t\tthis.installingExtensions.forEach(promise => promise.cancel());\n\t\t\tthis.uninstallingExtensions.forEach(promise => promise.cancel());\n\t\t\tthis.installingExtensions.clear();\n\t\t\tthis.uninstallingExtensions.clear();\n\t\t}));\n\t}\n\n\tasync zip(extension: ILocalExtension): Promise<URI> {\n\t\tthis.logService.trace('ExtensionManagementService#zip', extension.identifier.id);\n\t\tconst files = await this.collectFiles(extension);\n\t\tconst location = await zip(joinPath(this.environmentService.tmpDir, generateUuid()).fsPath, files);\n\t\treturn URI.file(location);\n\t}\n\n\tasync unzip(zipLocation: URI): Promise<IExtensionIdentifier> {\n\t\tthis.logService.trace('ExtensionManagementService#unzip', zipLocation.toString());\n\t\tconst local = await this.install(zipLocation);\n\t\treturn local.identifier;\n\t}\n\n\tasync getManifest(vsix: URI): Promise<IExtensionManifest> {\n\t\tconst downloadLocation = await this.downloadVsix(vsix);\n\t\tconst zipPath = path.resolve(downloadLocation.fsPath);\n\t\treturn getManifest(zipPath);\n\t}\n\n\tprivate async collectFiles(extension: ILocalExtension): Promise<IFile[]> {\n\n\t\tconst collectFilesFromDirectory = async (dir: string): Promise<string[]> => {\n\t\t\tlet entries = await pfs.readdir(dir);\n\t\t\tentries = entries.map(e => path.join(dir, e));\n\t\t\tconst stats = await Promise.all(entries.map(e => pfs.stat(e)));\n\t\t\tlet promise: Promise<string[]> = Promise.resolve([]);\n\t\t\tstats.forEach((stat, index) => {\n\t\t\t\tconst entry = entries[index];\n\t\t\t\tif (stat.isFile()) {\n\t\t\t\t\tpromise = promise.then(result => ([...result, entry]));\n\t\t\t\t}\n\t\t\t\tif (stat.isDirectory()) {\n\t\t\t\t\tpromise = promise\n\t\t\t\t\t\t.then(result => collectFilesFromDirectory(entry)\n\t\t\t\t\t\t\t.then(files => ([...result, ...files])));\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn promise;\n\t\t};\n\n\t\tconst files = await collectFilesFromDirectory(extension.location.fsPath);\n\t\treturn files.map(f => (<IFile>{ path: `extension/${path.relative(extension.location.fsPath, f)}`, localPath: f }));\n\t}\n\n\tasync install(vsix: URI, options: InstallOptions = {}): Promise<ILocalExtension> {\n\t\tthis.logService.trace('ExtensionManagementService#install', vsix.toString());\n\t\treturn createCancelablePromise(async token => {\n\n\t\t\tconst downloadLocation = await this.downloadVsix(vsix);\n\t\t\tconst zipPath = path.resolve(downloadLocation.fsPath);\n\n\t\t\tconst manifest = await getManifest(zipPath);\n\t\t\tconst identifier = { id: getGalleryExtensionId(manifest.publisher, manifest.name) };\n\t\t\tlet operation: InstallOperation = InstallOperation.Install;\n\t\t\tif (manifest.engines && manifest.engines.vscode && !isEngineValid(manifest.engines.vscode, product.version)) {\n\t\t\t\tthrow new Error(nls.localize('incompatible', \"Unable to install extension '{0}' as it is not compatible with VS Code '{1}'.\", identifier.id, product.version));\n\t\t\t}\n\n\t\t\tconst identifierWithVersion = new ExtensionIdentifierWithVersion(identifier, manifest.version);\n\t\t\tconst installedExtensions = await this.getInstalled(ExtensionType.User);\n\t\t\tconst existing = installedExtensions.find(i => areSameExtensions(identifier, i.identifier));\n\t\t\tif (existing) {\n\t\t\t\toptions.isMachineScoped = options.isMachineScoped || existing.isMachineScoped;\n\t\t\t\toptions.isBuiltin = options.isBuiltin || existing.isBuiltin;\n\t\t\t\toperation = InstallOperation.Update;\n\t\t\t\tif (identifierWithVersion.equals(new ExtensionIdentifierWithVersion(existing.identifier, existing.manifest.version))) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait this.extensionsScanner.removeExtension(existing, 'existing');\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tthrow new Error(nls.localize('restartCode', \"Please restart VS Code before reinstalling {0}.\", manifest.displayName || manifest.name));\n\t\t\t\t\t}\n\t\t\t\t} else if (semver.gt(existing.manifest.version, manifest.version)) {\n\t\t\t\t\tawait this.uninstallExtension(existing);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Remove the extension with same version if it is already uninstalled.\n\t\t\t\t// Installing a VSIX extension shall replace the existing extension always.\n\t\t\t\tconst existing = await this.unsetUninstalledAndGetLocal(identifierWithVersion);\n\t\t\t\tif (existing) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait this.extensionsScanner.removeExtension(existing, 'existing');\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tthrow new Error(nls.localize('restartCode', \"Please restart VS Code before reinstalling {0}.\", manifest.displayName || manifest.name));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.logService.info('Installing the extension:', identifier.id);\n\t\t\tthis._onInstallExtension.fire({ identifier, zipPath });\n\n\t\t\tlet metadata: IGalleryMetadata | undefined;\n\t\t\ttry {\n\t\t\t\tmetadata = await this.getGalleryMetadata(getGalleryExtensionId(manifest.publisher, manifest.name));\n\t\t\t} catch (e) { /* Ignore */ }\n\n\t\t\ttry {\n\t\t\t\tconst local = await this.installFromZipPath(identifierWithVersion, zipPath, { ...(metadata || {}), ...options }, options, operation, token);\n\t\t\t\tthis.logService.info('Successfully installed the extension:', identifier.id);\n\t\t\t\treturn local;\n\t\t\t} catch (e) {\n\t\t\t\tthis.logService.error('Failed to install the extension:', identifier.id, e.message);\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate async downloadVsix(vsix: URI): Promise<URI> {\n\t\tif (vsix.scheme === Schemas.file) {\n\t\t\treturn vsix;\n\t\t}\n\t\tif (!this.downloadService) {\n\t\t\tthrow new Error('Download service is not available');\n\t\t}\n\n\t\tconst downloadedLocation = joinPath(this.environmentService.tmpDir, generateUuid());\n\t\tawait this.downloadService.download(vsix, downloadedLocation);\n\t\treturn downloadedLocation;\n\t}\n\n\tprivate async installFromZipPath(identifierWithVersion: ExtensionIdentifierWithVersion, zipPath: string, metadata: IMetadata | undefined, options: InstallOptions, operation: InstallOperation, token: CancellationToken): Promise<ILocalExtension> {\n\t\ttry {\n\t\t\tconst local = await this.installExtension({ zipPath, identifierWithVersion, metadata }, token);\n\t\t\ttry {\n\t\t\t\tawait this.installDependenciesAndPackExtensions(local, undefined, options);\n\t\t\t} catch (error) {\n\t\t\t\tif (isNonEmptyArray(local.manifest.extensionDependencies)) {\n\t\t\t\t\tthis.logService.warn(`Cannot install dependencies of extension:`, local.identifier.id, error.message);\n\t\t\t\t}\n\t\t\t\tif (isNonEmptyArray(local.manifest.extensionPack)) {\n\t\t\t\t\tthis.logService.warn(`Cannot install packed extensions of extension:`, local.identifier.id, error.message);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._onDidInstallExtension.fire({ identifier: identifierWithVersion, zipPath, local, operation });\n\t\t\treturn local;\n\t\t} catch (error) {\n\t\t\tthis._onDidInstallExtension.fire({ identifier: identifierWithVersion, zipPath, operation, error });\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tasync canInstall(extension: IGalleryExtension): Promise<boolean> {\n\t\treturn true;\n\t}\n\n\tasync installFromGallery(extension: IGalleryExtension, options: InstallOptions = {}): Promise<ILocalExtension> {\n\t\tif (!this.galleryService.isEnabled()) {\n\t\t\tthrow new Error(nls.localize('MarketPlaceDisabled', \"Marketplace is not enabled\"));\n\t\t}\n\n\t\ttry {\n\t\t\textension = await this.checkAndGetCompatibleVersion(extension);\n\t\t} catch (error) {\n\t\t\tconst errorCode = error && (<ExtensionManagementError>error).code ? (<ExtensionManagementError>error).code : ERROR_UNKNOWN;\n\t\t\tthis.logService.error(`Failed to install extension:`, extension.identifier.id, error ? error.message : errorCode);\n\t\t\tthis.reportTelemetry(this.getTelemetryEvent(InstallOperation.Install), getGalleryExtensionTelemetryData(extension), undefined, error);\n\t\t\tif (error instanceof Error) {\n\t\t\t\terror.name = errorCode;\n\t\t\t}\n\t\t\tthrow error;\n\t\t}\n\n\t\tconst key = new ExtensionIdentifierWithVersion(extension.identifier, extension.version).key();\n\t\tlet cancellablePromise = this.installingExtensions.get(key);\n\t\tif (!cancellablePromise) {\n\t\t\tcancellablePromise = createCancelablePromise(token => this.doInstallFromGallery(extension, options, token));\n\t\t\tthis.installingExtensions.set(key, cancellablePromise);\n\t\t\tcancellablePromise.finally(() => this.installingExtensions.delete(key));\n\t\t}\n\n\t\treturn cancellablePromise;\n\t}\n\n\tprivate async doInstallFromGallery(extension: IGalleryExtension, options: InstallOptions, token: CancellationToken): Promise<ILocalExtension> {\n\t\tconst startTime = new Date().getTime();\n\t\tlet operation: InstallOperation = InstallOperation.Install;\n\t\tthis.logService.info('Installing extension:', extension.identifier.id);\n\t\tthis._onInstallExtension.fire({ identifier: extension.identifier, gallery: extension });\n\n\t\ttry {\n\t\t\tconst installed = await this.getInstalled(ExtensionType.User);\n\t\t\tconst existingExtension = installed.find(i => areSameExtensions(i.identifier, extension.identifier));\n\t\t\tif (existingExtension) {\n\t\t\t\toperation = InstallOperation.Update;\n\t\t\t}\n\n\t\t\tconst installableExtension = await this.downloadInstallableExtension(extension, operation);\n\t\t\tinstallableExtension.metadata.isMachineScoped = options.isMachineScoped || existingExtension?.isMachineScoped;\n\t\t\tinstallableExtension.metadata.isBuiltin = options.isBuiltin || existingExtension?.isBuiltin;\n\t\t\tconst local = await this.installExtension(installableExtension, token);\n\n\t\t\ttry { await this.extensionsDownloader.delete(URI.file(installableExtension.zipPath)); } catch (error) { /* Ignore */ }\n\n\t\t\ttry {\n\t\t\t\tawait this.installDependenciesAndPackExtensions(local, existingExtension, options);\n\t\t\t} catch (error) {\n\t\t\t\ttry { await this.uninstall(local); } catch (error) { /* Ignore */ }\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\tif (existingExtension && semver.neq(existingExtension.manifest.version, extension.version)) {\n\t\t\t\tawait this.setUninstalled(existingExtension);\n\t\t\t}\n\n\t\t\tthis.logService.info(`Extensions installed successfully:`, extension.identifier.id);\n\t\t\tthis._onDidInstallExtension.fire({ identifier: extension.identifier, gallery: extension, local, operation });\n\t\t\tthis.reportTelemetry(this.getTelemetryEvent(operation), getGalleryExtensionTelemetryData(extension), new Date().getTime() - startTime, undefined);\n\t\t\treturn local;\n\n\t\t} catch (error) {\n\t\t\tconst errorCode = error && (<ExtensionManagementError>error).code ? (<ExtensionManagementError>error).code : ERROR_UNKNOWN;\n\t\t\tthis.logService.error(`Failed to install extension:`, extension.identifier.id, error ? error.message : errorCode);\n\t\t\tthis._onDidInstallExtension.fire({ identifier: extension.identifier, gallery: extension, operation, error: errorCode });\n\t\t\tthis.reportTelemetry(this.getTelemetryEvent(operation), getGalleryExtensionTelemetryData(extension), new Date().getTime() - startTime, error);\n\t\t\tif (error instanceof Error) {\n\t\t\t\terror.name = errorCode;\n\t\t\t}\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tprivate async checkAndGetCompatibleVersion(extension: IGalleryExtension): Promise<IGalleryExtension> {\n\t\tif (await this.isMalicious(extension)) {\n\t\t\tthrow new ExtensionManagementError(nls.localize('malicious extension', \"Can't install extension since it was reported to be problematic.\"), INSTALL_ERROR_MALICIOUS);\n\t\t}\n\n\t\tconst compatibleExtension = await this.galleryService.getCompatibleExtension(extension);\n\t\tif (!compatibleExtension) {\n\t\t\tthrow new ExtensionManagementError(nls.localize('notFoundCompatibleDependency', \"Unable to install '{0}' extension because it is not compatible with the current version of VS Code (version {1}).\", extension.identifier.id, product.version), INSTALL_ERROR_INCOMPATIBLE);\n\t\t}\n\n\t\treturn compatibleExtension;\n\t}\n\n\tasync reinstallFromGallery(extension: ILocalExtension): Promise<void> {\n\t\tthis.logService.trace('ExtensionManagementService#reinstallFromGallery', extension.identifier.id);\n\t\tif (!this.galleryService.isEnabled()) {\n\t\t\tthrow new Error(nls.localize('MarketPlaceDisabled', \"Marketplace is not enabled\"));\n\t\t}\n\n\t\tconst galleryExtension = await this.findGalleryExtension(extension);\n\t\tif (!galleryExtension) {\n\t\t\tthrow new Error(nls.localize('Not a Marketplace extension', \"Only Marketplace Extensions can be reinstalled\"));\n\t\t}\n\n\t\tawait this.setUninstalled(extension);\n\t\ttry {\n\t\t\tawait this.extensionsScanner.removeUninstalledExtension(extension);\n\t\t} catch (e) {\n\t\t\tthrow new Error(nls.localize('removeError', \"Error while removing the extension: {0}. Please Quit and Start VS Code before trying again.\", toErrorMessage(e)));\n\t\t}\n\n\t\tawait this.installFromGallery(galleryExtension);\n\t}\n\n\tprivate getTelemetryEvent(operation: InstallOperation): string {\n\t\treturn operation === InstallOperation.Update ? 'extensionGallery:update' : 'extensionGallery:install';\n\t}\n\n\tprivate async isMalicious(extension: IGalleryExtension): Promise<boolean> {\n\t\tconst report = await this.getExtensionsReport();\n\t\treturn getMaliciousExtensionsSet(report).has(extension.identifier.id);\n\t}\n\n\tprivate async downloadInstallableExtension(extension: IGalleryExtension, operation: InstallOperation): Promise<Required<InstallableExtension>> {\n\t\tconst metadata = <IGalleryMetadata>{\n\t\t\tid: extension.identifier.uuid,\n\t\t\tpublisherId: extension.publisherId,\n\t\t\tpublisherDisplayName: extension.publisherDisplayName,\n\t\t};\n\n\t\tlet zipPath;\n\t\ttry {\n\t\t\tthis.logService.trace('Started downloading extension:', extension.identifier.id);\n\t\t\tconst zip = await this.extensionsDownloader.downloadExtension(extension, operation);\n\t\t\tthis.logService.info('Downloaded extension:', extension.identifier.id, zipPath);\n\t\t\tzipPath = zip.fsPath;\n\t\t} catch (error) {\n\t\t\tthrow new ExtensionManagementError(this.joinErrors(error).message, INSTALL_ERROR_DOWNLOADING);\n\t\t}\n\n\t\ttry {\n\t\t\tconst manifest = await getManifest(zipPath);\n\t\t\treturn (<Required<InstallableExtension>>{ zipPath, identifierWithVersion: new ExtensionIdentifierWithVersion(extension.identifier, manifest.version), metadata });\n\t\t} catch (error) {\n\t\t\tthrow new ExtensionManagementError(this.joinErrors(error).message, INSTALL_ERROR_VALIDATING);\n\t\t}\n\t}\n\n\tprivate async installExtension(installableExtension: InstallableExtension, token: CancellationToken): Promise<ILocalExtension> {\n\t\ttry {\n\t\t\tconst local = await this.unsetUninstalledAndGetLocal(installableExtension.identifierWithVersion);\n\t\t\tif (local) {\n\t\t\t\treturn installableExtension.metadata ? this.extensionsScanner.saveMetadataForLocalExtension(local, installableExtension.metadata) : local;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tif (isMacintosh) {\n\t\t\t\tthrow new ExtensionManagementError(nls.localize('quitCode', \"Unable to install the extension. Please Quit and Start VS Code before reinstalling.\"), INSTALL_ERROR_UNSET_UNINSTALLED);\n\t\t\t} else {\n\t\t\t\tthrow new ExtensionManagementError(nls.localize('exitCode', \"Unable to install the extension. Please Exit and Start VS Code before reinstalling.\"), INSTALL_ERROR_UNSET_UNINSTALLED);\n\t\t\t}\n\t\t}\n\t\treturn this.extractAndInstall(installableExtension, token);\n\t}\n\n\tprivate async unsetUninstalledAndGetLocal(identifierWithVersion: ExtensionIdentifierWithVersion): Promise<ILocalExtension | null> {\n\t\tconst isUninstalled = await this.isUninstalled(identifierWithVersion);\n\t\tif (!isUninstalled) {\n\t\t\treturn null;\n\t\t}\n\n\t\tthis.logService.trace('Removing the extension from uninstalled list:', identifierWithVersion.id);\n\t\t// If the same version of extension is marked as uninstalled, remove it from there and return the local.\n\t\tawait this.unsetUninstalled(identifierWithVersion);\n\t\tthis.logService.info('Removed the extension from uninstalled list:', identifierWithVersion.id);\n\n\t\tconst installed = await this.getInstalled(ExtensionType.User);\n\t\treturn installed.find(i => new ExtensionIdentifierWithVersion(i.identifier, i.manifest.version).equals(identifierWithVersion)) || null;\n\t}\n\n\tprivate async extractAndInstall({ zipPath, identifierWithVersion, metadata }: InstallableExtension, token: CancellationToken): Promise<ILocalExtension> {\n\t\tlet local = await this.extensionsScanner.extractUserExtension(identifierWithVersion, zipPath, token);\n\t\tthis.logService.info('Installation completed.', identifierWithVersion.id);\n\t\tif (metadata) {\n\t\t\tlocal = await this.extensionsScanner.saveMetadataForLocalExtension(local, metadata);\n\t\t}\n\t\treturn local;\n\t}\n\n\tprivate async installDependenciesAndPackExtensions(installed: ILocalExtension, existing: ILocalExtension | undefined, options: InstallOptions): Promise<void> {\n\t\tif (!this.galleryService.isEnabled()) {\n\t\t\treturn;\n\t\t}\n\t\tconst dependenciesAndPackExtensions: string[] = installed.manifest.extensionDependencies || [];\n\t\tif (installed.manifest.extensionPack) {\n\t\t\tfor (const extension of installed.manifest.extensionPack) {\n\t\t\t\t// add only those extensions which are new in currently installed extension\n\t\t\t\tif (!(existing && existing.manifest.extensionPack && existing.manifest.extensionPack.some(old => areSameExtensions({ id: old }, { id: extension })))) {\n\t\t\t\t\tif (dependenciesAndPackExtensions.every(e => !areSameExtensions({ id: e }, { id: extension }))) {\n\t\t\t\t\t\tdependenciesAndPackExtensions.push(extension);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (dependenciesAndPackExtensions.length) {\n\t\t\tconst installed = await this.getInstalled();\n\t\t\t// filter out installed extensions\n\t\t\tconst names = dependenciesAndPackExtensions.filter(id => installed.every(({ identifier: galleryIdentifier }) => !areSameExtensions(galleryIdentifier, { id })));\n\t\t\tif (names.length) {\n\t\t\t\tconst galleryResult = await this.galleryService.query({ names, pageSize: dependenciesAndPackExtensions.length }, CancellationToken.None);\n\t\t\t\tconst extensionsToInstall = galleryResult.firstPage;\n\t\t\t\ttry {\n\t\t\t\t\tawait Promise.all(extensionsToInstall.map(e => this.installFromGallery(e, options)));\n\t\t\t\t} catch (error) {\n\t\t\t\t\ttry { await this.rollback(extensionsToInstall); } catch (e) { /* ignore */ }\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async rollback(extensions: IGalleryExtension[]): Promise<void> {\n\t\tconst installed = await this.getInstalled(ExtensionType.User);\n\t\tconst extensionsToUninstall = installed.filter(local => extensions.some(galleryExtension => new ExtensionIdentifierWithVersion(local.identifier, local.manifest.version).equals(new ExtensionIdentifierWithVersion(galleryExtension.identifier, galleryExtension.version)))); // Check with version because we want to rollback the exact version\n\t\tawait Promise.all(extensionsToUninstall.map(local => this.uninstall(local)));\n\t}\n\n\tasync uninstall(extension: ILocalExtension): Promise<void> {\n\t\tthis.logService.trace('ExtensionManagementService#uninstall', extension.identifier.id);\n\t\tconst installed = await this.getInstalled(ExtensionType.User);\n\t\tconst extensionToUninstall = installed.find(e => areSameExtensions(e.identifier, extension.identifier));\n\t\tif (!extensionToUninstall) {\n\t\t\tthrow new Error(nls.localize('notInstalled', \"Extension '{0}' is not installed.\", extension.manifest.displayName || extension.manifest.name));\n\t\t}\n\n\t\ttry {\n\t\t\tawait this.checkForDependenciesAndUninstall(extensionToUninstall, installed);\n\t\t} catch (error) {\n\t\t\tthrow this.joinErrors(error);\n\t\t}\n\t}\n\n\tasync updateMetadata(local: ILocalExtension, metadata: IGalleryMetadata): Promise<ILocalExtension> {\n\t\tthis.logService.trace('ExtensionManagementService#updateMetadata', local.identifier.id);\n\t\tlocal = await this.extensionsScanner.saveMetadataForLocalExtension(local, { ...((<ILocalExtensionManifest>local.manifest).__metadata || {}), ...metadata });\n\t\tthis.manifestCache.invalidate();\n\t\treturn local;\n\t}\n\n\tasync updateExtensionScope(local: ILocalExtension, isMachineScoped: boolean): Promise<ILocalExtension> {\n\t\tthis.logService.trace('ExtensionManagementService#updateExtensionScope', local.identifier.id);\n\t\tlocal = await this.extensionsScanner.saveMetadataForLocalExtension(local, { ...((<ILocalExtensionManifest>local.manifest).__metadata || {}), isMachineScoped });\n\t\tthis.manifestCache.invalidate();\n\t\treturn local;\n\t}\n\n\tprivate async getGalleryMetadata(extensionName: string): Promise<IGalleryMetadata | undefined> {\n\t\tconst galleryExtension = await this.findGalleryExtensionByName(extensionName);\n\t\treturn galleryExtension ? <IGalleryMetadata>{ id: galleryExtension.identifier.uuid, publisherDisplayName: galleryExtension.publisherDisplayName, publisherId: galleryExtension.publisherId } : undefined;\n\t}\n\n\tprivate async findGalleryExtension(local: ILocalExtension): Promise<IGalleryExtension> {\n\t\tif (local.identifier.uuid) {\n\t\t\tconst galleryExtension = await this.findGalleryExtensionById(local.identifier.uuid);\n\t\t\treturn galleryExtension ? galleryExtension : this.findGalleryExtensionByName(local.identifier.id);\n\t\t}\n\t\treturn this.findGalleryExtensionByName(local.identifier.id);\n\t}\n\n\tprivate async findGalleryExtensionById(uuid: string): Promise<IGalleryExtension> {\n\t\tconst galleryResult = await this.galleryService.query({ ids: [uuid], pageSize: 1 }, CancellationToken.None);\n\t\treturn galleryResult.firstPage[0];\n\t}\n\n\tprivate async findGalleryExtensionByName(name: string): Promise<IGalleryExtension> {\n\t\tconst galleryResult = await this.galleryService.query({ names: [name], pageSize: 1 }, CancellationToken.None);\n\t\treturn galleryResult.firstPage[0];\n\t}\n\n\tprivate joinErrors(errorOrErrors: (Error | string) | (Array<Error | string>)): Error {\n\t\tconst errors = Array.isArray(errorOrErrors) ? errorOrErrors : [errorOrErrors];\n\t\tif (errors.length === 1) {\n\t\t\treturn errors[0] instanceof Error ? <Error>errors[0] : new Error(<string>errors[0]);\n\t\t}\n\t\treturn errors.reduce<Error>((previousValue: Error, currentValue: Error | string) => {\n\t\t\treturn new Error(`${previousValue.message}${previousValue.message ? ',' : ''}${currentValue instanceof Error ? currentValue.message : currentValue}`);\n\t\t}, new Error(''));\n\t}\n\n\tprivate async checkForDependenciesAndUninstall(extension: ILocalExtension, installed: ILocalExtension[]): Promise<void> {\n\t\ttry {\n\t\t\tawait this.preUninstallExtension(extension);\n\t\t\tconst packedExtensions = this.getAllPackExtensionsToUninstall(extension, installed);\n\t\t\tif (packedExtensions.length) {\n\t\t\t\tawait this.uninstallExtensions(extension, packedExtensions, installed);\n\t\t\t} else {\n\t\t\t\tawait this.uninstallExtensions(extension, [], installed);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tawait this.postUninstallExtension(extension, new ExtensionManagementError(error instanceof Error ? error.message : error, INSTALL_ERROR_LOCAL));\n\t\t\tthrow error;\n\t\t}\n\t\tawait this.postUninstallExtension(extension);\n\t}\n\n\tprivate async uninstallExtensions(extension: ILocalExtension, otherExtensionsToUninstall: ILocalExtension[], installed: ILocalExtension[]): Promise<void> {\n\t\tconst extensionsToUninstall = [extension, ...otherExtensionsToUninstall];\n\t\tfor (const e of extensionsToUninstall) {\n\t\t\tthis.checkForDependents(e, extensionsToUninstall, installed, extension);\n\t\t}\n\t\tawait Promise.all([this.uninstallExtension(extension), ...otherExtensionsToUninstall.map(d => this.doUninstall(d))]);\n\t}\n\n\tprivate checkForDependents(extension: ILocalExtension, extensionsToUninstall: ILocalExtension[], installed: ILocalExtension[], extensionToUninstall: ILocalExtension): void {\n\t\tconst dependents = this.getDependents(extension, installed);\n\t\tif (dependents.length) {\n\t\t\tconst remainingDependents = dependents.filter(dependent => extensionsToUninstall.indexOf(dependent) === -1);\n\t\t\tif (remainingDependents.length) {\n\t\t\t\tthrow new Error(this.getDependentsErrorMessage(extension, remainingDependents, extensionToUninstall));\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate getDependentsErrorMessage(dependingExtension: ILocalExtension, dependents: ILocalExtension[], extensionToUninstall: ILocalExtension): string {\n\t\tif (extensionToUninstall === dependingExtension) {\n\t\t\tif (dependents.length === 1) {\n\t\t\t\treturn nls.localize('singleDependentError', \"Cannot uninstall '{0}' extension. '{1}' extension depends on this.\",\n\t\t\t\t\textensionToUninstall.manifest.displayName || extensionToUninstall.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name);\n\t\t\t}\n\t\t\tif (dependents.length === 2) {\n\t\t\t\treturn nls.localize('twoDependentsError', \"Cannot uninstall '{0}' extension. '{1}' and '{2}' extensions depend on this.\",\n\t\t\t\t\textensionToUninstall.manifest.displayName || extensionToUninstall.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name, dependents[1].manifest.displayName || dependents[1].manifest.name);\n\t\t\t}\n\t\t\treturn nls.localize('multipleDependentsError', \"Cannot uninstall '{0}' extension. '{1}', '{2}' and other extension depend on this.\",\n\t\t\t\textensionToUninstall.manifest.displayName || extensionToUninstall.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name, dependents[1].manifest.displayName || dependents[1].manifest.name);\n\t\t}\n\t\tif (dependents.length === 1) {\n\t\t\treturn nls.localize('singleIndirectDependentError', \"Cannot uninstall '{0}' extension . It includes uninstalling '{1}' extension and '{2}' extension depends on this.\",\n\t\t\t\textensionToUninstall.manifest.displayName || extensionToUninstall.manifest.name, dependingExtension.manifest.displayName\n\t\t\t|| dependingExtension.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name);\n\t\t}\n\t\tif (dependents.length === 2) {\n\t\t\treturn nls.localize('twoIndirectDependentsError', \"Cannot uninstall '{0}' extension. It includes uninstalling '{1}' extension and '{2}' and '{3}' extensions depend on this.\",\n\t\t\t\textensionToUninstall.manifest.displayName || extensionToUninstall.manifest.name, dependingExtension.manifest.displayName\n\t\t\t|| dependingExtension.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name, dependents[1].manifest.displayName || dependents[1].manifest.name);\n\t\t}\n\t\treturn nls.localize('multipleIndirectDependentsError', \"Cannot uninstall '{0}' extension. It includes uninstalling '{1}' extension and '{2}', '{3}' and other extensions depend on this.\",\n\t\t\textensionToUninstall.manifest.displayName || extensionToUninstall.manifest.name, dependingExtension.manifest.displayName\n\t\t|| dependingExtension.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name, dependents[1].manifest.displayName || dependents[1].manifest.name);\n\n\t}\n\n\tprivate getAllPackExtensionsToUninstall(extension: ILocalExtension, installed: ILocalExtension[], checked: ILocalExtension[] = []): ILocalExtension[] {\n\t\tif (checked.indexOf(extension) !== -1) {\n\t\t\treturn [];\n\t\t}\n\t\tchecked.push(extension);\n\t\tconst extensionsPack = extension.manifest.extensionPack ? extension.manifest.extensionPack : [];\n\t\tif (extensionsPack.length) {\n\t\t\tconst packedExtensions = installed.filter(i => !i.isBuiltin && extensionsPack.some(id => areSameExtensions({ id }, i.identifier)));\n\t\t\tconst packOfPackedExtensions: ILocalExtension[] = [];\n\t\t\tfor (const packedExtension of packedExtensions) {\n\t\t\t\tpackOfPackedExtensions.push(...this.getAllPackExtensionsToUninstall(packedExtension, installed, checked));\n\t\t\t}\n\t\t\treturn [...packedExtensions, ...packOfPackedExtensions];\n\t\t}\n\t\treturn [];\n\t}\n\n\tprivate getDependents(extension: ILocalExtension, installed: ILocalExtension[]): ILocalExtension[] {\n\t\treturn installed.filter(e => e.manifest.extensionDependencies && e.manifest.extensionDependencies.some(id => areSameExtensions({ id }, extension.identifier)));\n\t}\n\n\tprivate async doUninstall(extension: ILocalExtension): Promise<void> {\n\t\ttry {\n\t\t\tawait this.preUninstallExtension(extension);\n\t\t\tawait this.uninstallExtension(extension);\n\t\t} catch (error) {\n\t\t\tawait this.postUninstallExtension(extension, new ExtensionManagementError(error instanceof Error ? error.message : error, INSTALL_ERROR_LOCAL));\n\t\t\tthrow error;\n\t\t}\n\t\tawait this.postUninstallExtension(extension);\n\t}\n\n\tprivate async preUninstallExtension(extension: ILocalExtension): Promise<void> {\n\t\tconst exists = await pfs.exists(extension.location.fsPath);\n\t\tif (!exists) {\n\t\t\tthrow new Error(nls.localize('notExists', \"Could not find extension\"));\n\t\t}\n\t\tthis.logService.info('Uninstalling extension:', extension.identifier.id);\n\t\tthis._onUninstallExtension.fire(extension.identifier);\n\t}\n\n\tprivate async uninstallExtension(local: ILocalExtension): Promise<void> {\n\t\tlet promise = this.uninstallingExtensions.get(local.identifier.id);\n\t\tif (!promise) {\n\t\t\t// Set all versions of the extension as uninstalled\n\t\t\tpromise = createCancelablePromise(async () => {\n\t\t\t\tconst userExtensions = await this.extensionsScanner.scanUserExtensions(false);\n\t\t\t\tawait this.setUninstalled(...userExtensions.filter(u => areSameExtensions(u.identifier, local.identifier)));\n\t\t\t});\n\t\t\tthis.uninstallingExtensions.set(local.identifier.id, promise);\n\t\t\tpromise.finally(() => this.uninstallingExtensions.delete(local.identifier.id));\n\t\t}\n\t\treturn promise;\n\t}\n\n\tprivate async postUninstallExtension(extension: ILocalExtension, error?: Error): Promise<void> {\n\t\tif (error) {\n\t\t\tthis.logService.error('Failed to uninstall extension:', extension.identifier.id, error.message);\n\t\t} else {\n\t\t\tthis.logService.info('Successfully uninstalled extension:', extension.identifier.id);\n\t\t\t// only report if extension has a mapped gallery extension. UUID identifies the gallery extension.\n\t\t\tif (extension.identifier.uuid) {\n\t\t\t\ttry {\n\t\t\t\t\tawait this.galleryService.reportStatistic(extension.manifest.publisher, extension.manifest.name, extension.manifest.version, StatisticType.Uninstall);\n\t\t\t\t} catch (error) { /* ignore */ }\n\t\t\t}\n\t\t}\n\t\tthis.reportTelemetry('extensionGallery:uninstall', getLocalExtensionTelemetryData(extension), undefined, error);\n\t\tconst errorcode = error ? error instanceof ExtensionManagementError ? error.code : ERROR_UNKNOWN : undefined;\n\t\tthis._onDidUninstallExtension.fire({ identifier: extension.identifier, error: errorcode });\n\t}\n\n\tgetInstalled(type: ExtensionType | null = null): Promise<ILocalExtension[]> {\n\t\treturn this.extensionsScanner.scanExtensions(type);\n\t}\n\n\tremoveDeprecatedExtensions(): Promise<void> {\n\t\treturn this.extensionsScanner.cleanUp();\n\t}\n\n\tprivate async isUninstalled(identifier: ExtensionIdentifierWithVersion): Promise<boolean> {\n\t\tconst uninstalled = await this.filterUninstalled(identifier);\n\t\treturn uninstalled.length === 1;\n\t}\n\n\tprivate filterUninstalled(...identifiers: ExtensionIdentifierWithVersion[]): Promise<string[]> {\n\t\treturn this.extensionsScanner.withUninstalledExtensions(allUninstalled => {\n\t\t\tconst uninstalled: string[] = [];\n\t\t\tfor (const identifier of identifiers) {\n\t\t\t\tif (!!allUninstalled[identifier.key()]) {\n\t\t\t\t\tuninstalled.push(identifier.key());\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn uninstalled;\n\t\t});\n\t}\n\n\tprivate setUninstalled(...extensions: ILocalExtension[]): Promise<{ [id: string]: boolean }> {\n\t\tconst ids: ExtensionIdentifierWithVersion[] = extensions.map(e => new ExtensionIdentifierWithVersion(e.identifier, e.manifest.version));\n\t\treturn this.extensionsScanner.withUninstalledExtensions(uninstalled => {\n\t\t\tids.forEach(id => uninstalled[id.key()] = true);\n\t\t\treturn uninstalled;\n\t\t});\n\t}\n\n\tprivate unsetUninstalled(extensionIdentifier: ExtensionIdentifierWithVersion): Promise<void> {\n\t\treturn this.extensionsScanner.withUninstalledExtensions<void>(uninstalled => delete uninstalled[extensionIdentifier.key()]);\n\t}\n\n\tgetExtensionsReport(): Promise<IReportedExtension[]> {\n\t\tconst now = new Date().getTime();\n\n\t\tif (!this.reportedExtensions || now - this.lastReportTimestamp > 1000 * 60 * 5) { // 5 minute cache freshness\n\t\t\tthis.reportedExtensions = this.updateReportCache();\n\t\t\tthis.lastReportTimestamp = now;\n\t\t}\n\n\t\treturn this.reportedExtensions;\n\t}\n\n\tprivate async updateReportCache(): Promise<IReportedExtension[]> {\n\t\ttry {\n\t\t\tthis.logService.trace('ExtensionManagementService.refreshReportedCache');\n\t\t\tconst result = await this.galleryService.getExtensionsReport();\n\t\t\tthis.logService.trace(`ExtensionManagementService.refreshReportedCache - got ${result.length} reported extensions from service`);\n\t\t\treturn result;\n\t\t} catch (err) {\n\t\t\tthis.logService.trace('ExtensionManagementService.refreshReportedCache - failed to get extension report');\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tprivate reportTelemetry(eventName: string, extensionData: any, duration?: number, error?: Error): void {\n\t\tconst errorcode = error ? error instanceof ExtensionManagementError ? error.code : ERROR_UNKNOWN : undefined;\n\t\t/* __GDPR__\n\t\t\t\"extensionGallery:install\" : {\n\t\t\t\t\"success\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"duration\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"errorcode\": { \"classification\": \"CallstackOrException\", \"purpose\": \"PerformanceAndHealth\" },\n\t\t\t\t\"recommendationReason\": { \"retiredFromVersion\": \"1.23.0\", \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n\t\t\t\t\"${include}\": [\n\t\t\t\t\t\"${GalleryExtensionTelemetryData}\"\n\t\t\t\t]\n\t\t\t}\n\t\t*/\n\t\t/* __GDPR__\n\t\t\t\"extensionGallery:uninstall\" : {\n\t\t\t\t\"success\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"duration\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"errorcode\": { \"classification\": \"CallstackOrException\", \"purpose\": \"PerformanceAndHealth\" },\n\t\t\t\t\"${include}\": [\n\t\t\t\t\t\"${GalleryExtensionTelemetryData}\"\n\t\t\t\t]\n\t\t\t}\n\t\t*/\n\t\t/* __GDPR__\n\t\t\t\"extensionGallery:update\" : {\n\t\t\t\t\"success\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"duration\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"errorcode\": { \"classification\": \"CallstackOrException\", \"purpose\": \"PerformanceAndHealth\" },\n\t\t\t\t\"${include}\": [\n\t\t\t\t\t\"${GalleryExtensionTelemetryData}\"\n\t\t\t\t]\n\t\t\t}\n\t\t*/\n\t\tthis.telemetryService.publicLogError(eventName, { ...extensionData, success: !error, duration, errorcode });\n\t}\n}\n","import * as fs from 'fs';\nimport * as path from 'path';\nimport * as tarStream from 'tar-stream';\nimport * as util from 'util';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { mkdirp } from 'vs/base/node/pfs';\nimport * as vszip from 'vs/base/node/zip';\nimport * as nls from 'vs/nls';\nimport product from 'vs/platform/product/common/product';\n\n// We will be overriding these, so keep a reference to the original.\nconst vszipExtract = vszip.extract;\nconst vszipBuffer = vszip.buffer;\n\nexport interface IExtractOptions {\n\toverwrite?: boolean;\n\t/**\n\t * Source path within the TAR/ZIP archive. Only the files\n\t * contained in this path will be extracted.\n\t */\n\tsourcePath?: string;\n}\n\nexport interface IFile {\n\tpath: string;\n\tcontents?: Buffer | string;\n\tlocalPath?: string;\n}\n\nexport const tar = async (tarPath: string, files: IFile[]): Promise<string> => {\n\tconst pack = tarStream.pack();\n\tconst chunks: Buffer[] = [];\n\tconst ended = new Promise<Buffer>((resolve) => {\n\t\tpack.on('end', () => resolve(Buffer.concat(chunks)));\n\t});\n\tpack.on('data', (chunk: Buffer) => chunks.push(chunk));\n\tfor (let i = 0; i < files.length; i++) {\n\t\tconst file = files[i];\n\t\tpack.entry({ name: file.path }, file.contents);\n\t}\n\tpack.finalize();\n\tawait util.promisify(fs.writeFile)(tarPath, await ended);\n\treturn tarPath;\n};\n\nexport const extract = async (archivePath: string, extractPath: string, options: IExtractOptions = {}, token: CancellationToken): Promise<void> => {\n\ttry {\n\t\tawait extractTar(archivePath, extractPath, options, token);\n\t} catch (error) {\n\t\tif (error.toString().includes('Invalid tar header')) {\n\t\t\tawait vszipExtract(archivePath, extractPath, options, token);\n\t\t}\n\t}\n};\n\nexport const buffer = (targetPath: string, filePath: string): Promise<Buffer> => {\n\treturn new Promise<Buffer>(async (resolve, reject) => {\n\t\ttry {\n\t\t\tlet done: boolean = false;\n\t\t\tawait extractAssets(targetPath, new RegExp(filePath), (assetPath: string, data: Buffer) => {\n\t\t\t\tif (path.normalize(assetPath) === path.normalize(filePath)) {\n\t\t\t\t\tdone = true;\n\t\t\t\t\tresolve(data);\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (!done) {\n\t\t\t\tthrow new Error('couldn\\'t find asset ' + filePath);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tif (error.toString().includes('Invalid tar header')) {\n\t\t\t\tvszipBuffer(targetPath, filePath).then(resolve).catch(reject);\n\t\t\t} else {\n\t\t\t\treject(error);\n\t\t\t}\n\t\t}\n\t});\n};\n\nconst extractAssets = async (tarPath: string, match: RegExp, callback: (path: string, data: Buffer) => void): Promise<void> => {\n\treturn new Promise<void>((resolve, reject): void => {\n\t\tconst extractor = tarStream.extract();\n\t\tconst fail = (error: Error) => {\n\t\t\textractor.destroy();\n\t\t\treject(error);\n\t\t};\n\t\textractor.once('error', fail);\n\t\textractor.on('entry', async (header, stream, next) => {\n\t\t\tconst name = header.name;\n\t\t\tif (match.test(name)) {\n\t\t\t\textractData(stream).then((data) => {\n\t\t\t\t\tcallback(name, data);\n\t\t\t\t\tnext();\n\t\t\t\t}).catch(fail);\n\t\t\t} else {\n\t\t\t\tstream.on('end', () => next());\n\t\t\t\tstream.resume(); // Just drain it.\n\t\t\t}\n\t\t});\n\t\textractor.on('finish', resolve);\n\t\tfs.createReadStream(tarPath).pipe(extractor);\n\t});\n};\n\nconst extractData = (stream: NodeJS.ReadableStream): Promise<Buffer> => {\n\treturn new Promise((resolve, reject): void => {\n\t\tconst fileData: Buffer[] = [];\n\t\tstream.on('error', reject);\n\t\tstream.on('end', () => resolve(Buffer.concat(fileData)));\n\t\tstream.on('data', (data) => fileData.push(data));\n\t});\n};\n\nconst extractTar = async (tarPath: string, targetPath: string, options: IExtractOptions = {}, token: CancellationToken): Promise<void> => {\n\treturn new Promise<void>((resolve, reject): void => {\n\t\tconst sourcePathRegex = new RegExp(options.sourcePath ? `^${options.sourcePath}` : '');\n\t\tconst extractor = tarStream.extract();\n\t\tconst fail = (error: Error) => {\n\t\t\textractor.destroy();\n\t\t\treject(error);\n\t\t};\n\t\textractor.once('error', fail);\n\t\textractor.on('entry', async (header, stream, next) => {\n\t\t\tconst nextEntry = (): void => {\n\t\t\t\tstream.on('end', () => next());\n\t\t\t\tstream.resume();\n\t\t\t};\n\n\t\t\tconst rawName = path.normalize(header.name);\n\t\t\tif (token.isCancellationRequested || !sourcePathRegex.test(rawName)) {\n\t\t\t\treturn nextEntry();\n\t\t\t}\n\n\t\t\tconst fileName = rawName.replace(sourcePathRegex, '');\n\t\t\tconst targetFileName = path.join(targetPath, fileName);\n\t\t\tif (/\\/$/.test(fileName)) {\n\t\t\t\treturn mkdirp(targetFileName).then(nextEntry);\n\t\t\t}\n\n\t\t\tconst dirName = path.dirname(fileName);\n\t\t\tconst targetDirName = path.join(targetPath, dirName);\n\t\t\tif (targetDirName.indexOf(targetPath) !== 0) {\n\t\t\t\treturn fail(new Error(nls.localize('invalid file', 'Error extracting {0}. Invalid file.', fileName)));\n\t\t\t}\n\n\t\t\tawait mkdirp(targetDirName, undefined);\n\n\t\t\tconst fstream = fs.createWriteStream(targetFileName, { mode: header.mode });\n\t\t\tfstream.once('close', () => next());\n\t\t\tfstream.once('error', fail);\n\t\t\tstream.pipe(fstream);\n\t\t});\n\t\textractor.once('finish', resolve);\n\t\tfs.createReadStream(tarPath).pipe(extractor);\n\t});\n};\n\n/**\n * Override original functionality so we can use a custom marketplace with\n * either tars or zips.\n */\nexport const enableCustomMarketplace = (): void => {\n\t(<any>product).extensionsGallery = { // Use `any` to override readonly.\n\t\tserviceUrl: process.env.SERVICE_URL || 'https://extensions.coder.com/api',\n\t\titemUrl: process.env.ITEM_URL || '',\n\t\tcontrolUrl: '',\n\t\trecommendationsUrl: '',\n\t\t...(product.extensionsGallery || {}),\n\t};\n\n\tconst target = vszip as typeof vszip;\n\ttarget.zip = tar;\n\ttarget.extract = extract;\n\ttarget.buffer = buffer;\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as https from 'https';\nimport * as http from 'http';\nimport * as streams from 'vs/base/common/stream';\nimport { createGunzip } from 'zlib';\nimport { parse as parseUrl } from 'url';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { isBoolean, isNumber } from 'vs/base/common/types';\nimport { canceled } from 'vs/base/common/errors';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IRequestService, IHTTPConfiguration } from 'vs/platform/request/common/request';\nimport { IRequestOptions, IRequestContext } from 'vs/base/parts/request/common/request';\nimport { getProxyAgent, Agent } from 'vs/platform/request/node/proxy';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { streamToBufferReadableStream } from 'vs/base/common/buffer';\n\nexport interface IRawRequestFunction {\n\t(options: http.RequestOptions, callback?: (res: http.IncomingMessage) => void): http.ClientRequest;\n}\n\nexport interface NodeRequestOptions extends IRequestOptions {\n\tagent?: Agent;\n\tstrictSSL?: boolean;\n\tgetRawRequest?(options: IRequestOptions): IRawRequestFunction;\n}\n\n/**\n * This service exposes the `request` API, while using the global\n * or configured proxy settings.\n */\nexport class RequestService extends Disposable implements IRequestService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate proxyUrl?: string;\n\tprivate strictSSL: boolean | undefined;\n\tprivate authorization?: string;\n\n\tconstructor(\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper();\n\t\tthis.configure(configurationService.getValue<IHTTPConfiguration>());\n\t\tthis._register(configurationService.onDidChangeConfiguration(() => this.configure(configurationService.getValue()), this));\n\t}\n\n\tprivate configure(config: IHTTPConfiguration) {\n\t\tthis.proxyUrl = config.http && config.http.proxy;\n\t\tthis.strictSSL = !!(config.http && config.http.proxyStrictSSL);\n\t\tthis.authorization = config.http && config.http.proxyAuthorization;\n\t}\n\n\tasync request(options: NodeRequestOptions, token: CancellationToken): Promise<IRequestContext> {\n\t\tthis.logService.trace('RequestService#request', options.url);\n\n\t\tconst { proxyUrl, strictSSL } = this;\n\t\tconst agent = options.agent ? options.agent : await getProxyAgent(options.url || '', { proxyUrl, strictSSL });\n\n\t\toptions.agent = agent;\n\t\toptions.strictSSL = strictSSL;\n\n\t\tif (this.authorization) {\n\t\t\toptions.headers = {\n\t\t\t\t...(options.headers || {}),\n\t\t\t\t'Proxy-Authorization': this.authorization\n\t\t\t};\n\t\t}\n\n\t\treturn this._request(options, token);\n\t}\n\n\tprivate async getNodeRequest(options: IRequestOptions): Promise<IRawRequestFunction> {\n\t\tconst endpoint = parseUrl(options.url!);\n\t\tconst module = endpoint.protocol === 'https:' ? await import('https') : await import('http');\n\t\treturn module.request;\n\t}\n\n\tprivate _request(options: NodeRequestOptions, token: CancellationToken): Promise<IRequestContext> {\n\n\t\treturn new Promise<IRequestContext>(async (c, e) => {\n\t\t\tlet req: http.ClientRequest;\n\n\t\t\tconst endpoint = parseUrl(options.url!);\n\t\t\tconst rawRequest = options.getRawRequest\n\t\t\t\t? options.getRawRequest(options)\n\t\t\t\t: await this.getNodeRequest(options);\n\n\t\t\tconst opts: https.RequestOptions = {\n\t\t\t\thostname: endpoint.hostname,\n\t\t\t\tport: endpoint.port ? parseInt(endpoint.port) : (endpoint.protocol === 'https:' ? 443 : 80),\n\t\t\t\tprotocol: endpoint.protocol,\n\t\t\t\tpath: endpoint.path,\n\t\t\t\tmethod: options.type || 'GET',\n\t\t\t\theaders: options.headers,\n\t\t\t\tagent: options.agent,\n\t\t\t\trejectUnauthorized: isBoolean(options.strictSSL) ? options.strictSSL : true\n\t\t\t};\n\n\t\t\tif (options.user && options.password) {\n\t\t\t\topts.auth = options.user + ':' + options.password;\n\t\t\t}\n\n\t\t\treq = rawRequest(opts, (res: http.IncomingMessage) => {\n\t\t\t\tconst followRedirects: number = isNumber(options.followRedirects) ? options.followRedirects : 3;\n\t\t\t\tif (res.statusCode && res.statusCode >= 300 && res.statusCode < 400 && followRedirects > 0 && res.headers['location']) {\n\t\t\t\t\tthis._request({\n\t\t\t\t\t\t...options,\n\t\t\t\t\t\turl: res.headers['location'],\n\t\t\t\t\t\tfollowRedirects: followRedirects - 1\n\t\t\t\t\t}, token).then(c, e);\n\t\t\t\t} else {\n\t\t\t\t\tlet stream: streams.ReadableStreamEvents<Uint8Array> = res;\n\n\t\t\t\t\tif (res.headers['content-encoding'] === 'gzip') {\n\t\t\t\t\t\tstream = res.pipe(createGunzip());\n\t\t\t\t\t}\n\n\t\t\t\t\tc({ res, stream: streamToBufferReadableStream(stream) } as IRequestContext);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treq.on('error', e);\n\n\t\t\tif (options.timeout) {\n\t\t\t\treq.setTimeout(options.timeout);\n\t\t\t}\n\n\t\t\tif (options.data) {\n\t\t\t\tif (typeof options.data === 'string') {\n\t\t\t\t\treq.write(options.data);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treq.end();\n\n\t\t\ttoken.onCancellationRequested(() => {\n\t\t\t\treq.abort();\n\t\t\t\te(canceled());\n\t\t\t});\n\t\t});\n\t}\n\n\tasync resolveProxy(url: string): Promise<string | undefined> {\n\t\treturn undefined; // currently not implemented in node\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { raceTimeout } from 'vs/base/common/async';\nimport * as semver from 'vs/base/common/semver/semver';\nimport product from 'vs/platform/product/common/product';\nimport * as path from 'vs/base/common/path';\nimport { ServiceCollection } from 'vs/platform/instantiation/common/serviceCollection';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { InstantiationService } from 'vs/platform/instantiation/common/instantiationService';\nimport { IEnvironmentService, INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { NativeParsedArgs } from 'vs/platform/environment/common/argv';\nimport { NativeEnvironmentService } from 'vs/platform/environment/node/environmentService';\nimport { IExtensionManagementService, IExtensionGalleryService, IGalleryExtension, ILocalExtension, InstallOptions } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { ExtensionManagementService } from 'vs/platform/extensionManagement/node/extensionManagementService';\nimport { ExtensionGalleryService } from 'vs/platform/extensionManagement/common/extensionGalleryService';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { combinedAppender, NullTelemetryService } from 'vs/platform/telemetry/common/telemetryUtils';\nimport { TelemetryService, ITelemetryServiceConfig } from 'vs/platform/telemetry/common/telemetryService';\nimport { resolveCommonProperties } from 'vs/platform/telemetry/node/commonProperties';\nimport { IRequestService } from 'vs/platform/request/common/request';\nimport { RequestService } from 'vs/platform/request/node/requestService';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ConfigurationService } from 'vs/platform/configuration/common/configurationService';\nimport { AppInsightsAppender } from 'vs/platform/telemetry/node/appInsightsAppender';\nimport { mkdirp, writeFile } from 'vs/base/node/pfs';\nimport { getBaseLabel } from 'vs/base/common/labels';\nimport { IStateService } from 'vs/platform/state/node/state';\nimport { StateService } from 'vs/platform/state/node/stateService';\nimport { ILogService, getLogLevel } from 'vs/platform/log/common/log';\nimport { isPromiseCanceledError } from 'vs/base/common/errors';\nimport { areSameExtensions, adoptToGalleryExtensionId, getGalleryExtensionId } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { URI } from 'vs/base/common/uri';\nimport { getManifest } from 'vs/platform/extensionManagement/node/extensionManagementUtil';\nimport { IExtensionManifest, ExtensionType, isLanguagePackExtension, EXTENSION_CATEGORIES } from 'vs/platform/extensions/common/extensions';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { LocalizationsService } from 'vs/platform/localizations/node/localizations';\nimport { Schemas } from 'vs/base/common/network';\nimport { SpdLogService } from 'vs/platform/log/node/spdlogService';\nimport { buildTelemetryMessage } from 'vs/platform/telemetry/node/telemetry';\nimport { FileService } from 'vs/platform/files/common/fileService';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { DiskFileSystemProvider } from 'vs/platform/files/node/diskFileSystemProvider';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { IProductService } from 'vs/platform/product/common/productService';\n\nconst notFound = (id: string) => localize('notFound', \"Extension '{0}' not found.\", id);\nconst notInstalled = (id: string) => localize('notInstalled', \"Extension '{0}' is not installed.\", id);\nconst useId = localize('useId', \"Make sure you use the full extension ID, including the publisher, e.g.: {0}\", 'ms-dotnettools.csharp');\n\nfunction getId(manifest: IExtensionManifest, withVersion?: boolean): string {\n\tif (withVersion) {\n\t\treturn `${manifest.publisher}.${manifest.name}@${manifest.version}`;\n\t} else {\n\t\treturn `${manifest.publisher}.${manifest.name}`;\n\t}\n}\n\nconst EXTENSION_ID_REGEX = /^([^.]+\\..+)@(\\d+\\.\\d+\\.\\d+(-.*)?)$/;\n\nexport function getIdAndVersion(id: string): [string, string | undefined] {\n\tconst matches = EXTENSION_ID_REGEX.exec(id);\n\tif (matches && matches[1]) {\n\t\treturn [adoptToGalleryExtensionId(matches[1]), matches[2]];\n\t}\n\treturn [adoptToGalleryExtensionId(id), undefined];\n}\n\ntype InstallExtensionInfo = { id: string, version?: string, installOptions: InstallOptions };\n\nexport class Main {\n\n\tconstructor(\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@INativeEnvironmentService private readonly environmentService: INativeEnvironmentService,\n\t\t@IExtensionManagementService private readonly extensionManagementService: IExtensionManagementService,\n\t\t@IExtensionGalleryService private readonly extensionGalleryService: IExtensionGalleryService\n\t) { }\n\n\tasync run(argv: NativeParsedArgs): Promise<void> {\n\t\tif (argv['install-source']) {\n\t\t\tawait this.setInstallSource(argv['install-source']);\n\t\t} else if (argv['list-extensions']) {\n\t\t\tawait this.listExtensions(!!argv['show-versions'], argv['category']);\n\t\t} else if (argv['install-extension'] || argv['install-builtin-extension']) {\n\t\t\tawait this.installExtensions(argv['install-extension'] || [], argv['install-builtin-extension'] || [], !!argv['do-not-sync'], !!argv['force']);\n\t\t} else if (argv['uninstall-extension']) {\n\t\t\tawait this.uninstallExtension(argv['uninstall-extension'], !!argv['force']);\n\t\t} else if (argv['locate-extension']) {\n\t\t\tawait this.locateExtension(argv['locate-extension']);\n\t\t} else if (argv['telemetry']) {\n\t\t\tconsole.log(buildTelemetryMessage(this.environmentService.appRoot, this.environmentService.extensionsPath ? this.environmentService.extensionsPath : undefined));\n\t\t}\n\t}\n\n\tprivate setInstallSource(installSource: string): Promise<void> {\n\t\treturn writeFile(this.environmentService.installSourcePath, installSource.slice(0, 30));\n\t}\n\n\tprivate async listExtensions(showVersions: boolean, category?: string): Promise<void> {\n\t\tlet extensions = await this.extensionManagementService.getInstalled(ExtensionType.User);\n\t\tconst categories = EXTENSION_CATEGORIES.map(c => c.toLowerCase());\n\t\tif (category && category !== '') {\n\t\t\tif (categories.indexOf(category.toLowerCase()) < 0) {\n\t\t\t\tconsole.log('Invalid category please enter a valid category. To list valid categories run --category without a category specified');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\textensions = extensions.filter(e => {\n\t\t\t\tif (e.manifest.categories) {\n\t\t\t\t\tconst lowerCaseCategories: string[] = e.manifest.categories.map(c => c.toLowerCase());\n\t\t\t\t\treturn lowerCaseCategories.indexOf(category.toLowerCase()) > -1;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t});\n\t\t} else if (category === '') {\n\t\t\tconsole.log('Possible Categories: ');\n\t\t\tcategories.forEach(category => {\n\t\t\t\tconsole.log(category);\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\textensions.forEach(e => console.log(getId(e.manifest, showVersions)));\n\t}\n\n\tprivate async installExtensions(extensions: string[], builtinExtensionIds: string[], isMachineScoped: boolean, force: boolean): Promise<void> {\n\t\tconst failed: string[] = [];\n\t\tconst installedExtensionsManifests: IExtensionManifest[] = [];\n\t\tif (extensions.length) {\n\t\t\tconsole.log(localize('installingExtensions', \"Installing extensions...\"));\n\t\t}\n\n\t\tconst vsixs: string[] = [];\n\t\tconst installExtensionInfos: InstallExtensionInfo[] = [];\n\t\tfor (const extension of extensions) {\n\t\t\tif (/\\.vsix$/i.test(extension)) {\n\t\t\t\tvsixs.push(extension);\n\t\t\t} else {\n\t\t\t\tconst [id, version] = getIdAndVersion(extension);\n\t\t\t\tinstallExtensionInfos.push({ id, version, installOptions: { isBuiltin: false, isMachineScoped } });\n\t\t\t}\n\t\t}\n\t\tfor (const extension of builtinExtensionIds) {\n\t\t\tconst [id, version] = getIdAndVersion(extension);\n\t\t\tinstallExtensionInfos.push({ id, version, installOptions: { isBuiltin: true, isMachineScoped: false } });\n\t\t}\n\n\t\tif (vsixs.length) {\n\t\t\tawait Promise.all(vsixs.map(async vsix => {\n\t\t\t\ttry {\n\t\t\t\t\tconst manifest = await this.installVSIX(vsix, force);\n\t\t\t\t\tif (manifest) {\n\t\t\t\t\t\tinstalledExtensionsManifests.push(manifest);\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\tconsole.error(err.message || err.stack || err);\n\t\t\t\t\tfailed.push(vsix);\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\n\t\tconst [galleryExtensions, installed] = await Promise.all([\n\t\t\tthis.getGalleryExtensions(installExtensionInfos),\n\t\t\tthis.extensionManagementService.getInstalled(ExtensionType.User)\n\t\t]);\n\n\t\tawait Promise.all(installExtensionInfos.map(async extensionInfo => {\n\t\t\tconst gallery = galleryExtensions.get(extensionInfo.id.toLowerCase());\n\t\t\tif (gallery) {\n\t\t\t\ttry {\n\t\t\t\t\tconst manifest = await this.installFromGallery(extensionInfo, gallery, installed, force);\n\t\t\t\t\tif (manifest) {\n\t\t\t\t\t\tinstalledExtensionsManifests.push(manifest);\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\tconsole.error(err.message || err.stack || err);\n\t\t\t\t\tfailed.push(extensionInfo.id);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconsole.error(`${notFound(extensionInfo.version ? `${extensionInfo.id}@${extensionInfo.version}` : extensionInfo.id)}\\n${useId}`);\n\t\t\t\tfailed.push(extensionInfo.id);\n\t\t\t}\n\t\t}));\n\n\t\tif (installedExtensionsManifests.some(manifest => isLanguagePackExtension(manifest))) {\n\t\t\tawait this.updateLocalizationsCache();\n\t\t}\n\n\t\tif (failed.length) {\n\t\t\tthrow new Error(localize('installation failed', \"Failed Installing Extensions: {0}\", failed.join(', ')));\n\t\t}\n\t}\n\n\tprivate async installVSIX(vsix: string, force: boolean): Promise<IExtensionManifest | null> {\n\t\tvsix = path.isAbsolute(vsix) ? vsix : path.join(process.cwd(), vsix);\n\t\tconst manifest = await getManifest(vsix);\n\t\tconst valid = await this.validate(manifest, force);\n\t\tif (valid) {\n\t\t\ttry {\n\t\t\t\tawait this.extensionManagementService.install(URI.file(vsix));\n\t\t\t\tconsole.log(localize('successVsixInstall', \"Extension '{0}' was successfully installed.\", getBaseLabel(vsix)));\n\t\t\t\treturn manifest;\n\t\t\t} catch (error) {\n\t\t\t\tif (isPromiseCanceledError(error)) {\n\t\t\t\t\tconsole.log(localize('cancelVsixInstall', \"Cancelled installing extension '{0}'.\", getBaseLabel(vsix)));\n\t\t\t\t\treturn null;\n\t\t\t\t} else {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate async getGalleryExtensions(extensions: InstallExtensionInfo[]): Promise<Map<string, IGalleryExtension>> {\n\t\tconst extensionIds = extensions.filter(({ version }) => version === undefined).map(({ id }) => id);\n\t\tconst extensionsWithIdAndVersion = extensions.filter(({ version }) => version !== undefined);\n\n\t\tconst galleryExtensions = new Map<string, IGalleryExtension>();\n\t\tawait Promise.all([\n\t\t\t(async () => {\n\t\t\t\tconst result = await this.extensionGalleryService.getExtensions(extensionIds, CancellationToken.None);\n\t\t\t\tresult.forEach(extension => galleryExtensions.set(extension.identifier.id.toLowerCase(), extension));\n\t\t\t})(),\n\t\t\tPromise.all(extensionsWithIdAndVersion.map(async ({ id, version }) => {\n\t\t\t\tconst extension = await this.extensionGalleryService.getCompatibleExtension({ id }, version);\n\t\t\t\tif (extension) {\n\t\t\t\t\tgalleryExtensions.set(extension.identifier.id.toLowerCase(), extension);\n\t\t\t\t}\n\t\t\t}))\n\t\t]);\n\n\t\treturn galleryExtensions;\n\t}\n\n\tprivate async installFromGallery({ id, version, installOptions }: InstallExtensionInfo, galleryExtension: IGalleryExtension, installed: ILocalExtension[], force: boolean): Promise<IExtensionManifest | null> {\n\t\tconst manifest = await this.extensionGalleryService.getManifest(galleryExtension, CancellationToken.None);\n\t\tconst installedExtension = installed.find(e => areSameExtensions(e.identifier, galleryExtension.identifier));\n\t\tif (installedExtension) {\n\t\t\tif (galleryExtension.version === installedExtension.manifest.version) {\n\t\t\t\tconsole.log(localize('alreadyInstalled', \"Extension '{0}' is already installed.\", version ? `${id}@${version}` : id));\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (!version && !force) {\n\t\t\t\tconsole.log(localize('forceUpdate', \"Extension '{0}' v{1} is already installed, but a newer version {2} is available in the marketplace. Use '--force' option to update to newer version.\", id, installedExtension.manifest.version, galleryExtension.version));\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tconsole.log(localize('updateMessage', \"Updating the extension '{0}' to the version {1}\", id, galleryExtension.version));\n\t\t}\n\n\t\ttry {\n\t\t\tif (installOptions.isBuiltin) {\n\t\t\t\tconsole.log(localize('installing builtin ', \"Installing builtin extension '{0}' v{1}...\", id, galleryExtension.version));\n\t\t\t} else {\n\t\t\t\tconsole.log(localize('installing', \"Installing extension '{0}' v{1}...\", id, galleryExtension.version));\n\t\t\t}\n\t\t\tawait this.extensionManagementService.installFromGallery(galleryExtension, installOptions);\n\t\t\tconsole.log(localize('successInstall', \"Extension '{0}' v{1} was successfully installed.\", id, galleryExtension.version));\n\t\t\treturn manifest;\n\t\t} catch (error) {\n\t\t\tif (isPromiseCanceledError(error)) {\n\t\t\t\tconsole.log(localize('cancelInstall', \"Cancelled installing extension '{0}'.\", id));\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async validate(manifest: IExtensionManifest, force: boolean): Promise<boolean> {\n\t\tif (!manifest) {\n\t\t\tthrow new Error('Invalid vsix');\n\t\t}\n\n\t\tconst extensionIdentifier = { id: getGalleryExtensionId(manifest.publisher, manifest.name) };\n\t\tconst installedExtensions = await this.extensionManagementService.getInstalled(ExtensionType.User);\n\t\tconst newer = installedExtensions.find(local => areSameExtensions(extensionIdentifier, local.identifier) && semver.gt(local.manifest.version, manifest.version));\n\n\t\tif (newer && !force) {\n\t\t\tconsole.log(localize('forceDowngrade', \"A newer version of extension '{0}' v{1} is already installed. Use '--force' option to downgrade to older version.\", newer.identifier.id, newer.manifest.version, manifest.version));\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate async uninstallExtension(extensions: string[], force: boolean): Promise<void> {\n\t\tasync function getExtensionId(extensionDescription: string): Promise<string> {\n\t\t\tif (!/\\.vsix$/i.test(extensionDescription)) {\n\t\t\t\treturn extensionDescription;\n\t\t\t}\n\n\t\t\tconst zipPath = path.isAbsolute(extensionDescription) ? extensionDescription : path.join(process.cwd(), extensionDescription);\n\t\t\tconst manifest = await getManifest(zipPath);\n\t\t\treturn getId(manifest);\n\t\t}\n\n\t\tconst uninstalledExtensions: ILocalExtension[] = [];\n\t\tfor (const extension of extensions) {\n\t\t\tconst id = await getExtensionId(extension);\n\t\t\tconst installed = await this.extensionManagementService.getInstalled();\n\t\t\tconst extensionToUninstall = installed.find(e => areSameExtensions(e.identifier, { id }));\n\t\t\tif (!extensionToUninstall) {\n\t\t\t\tthrow new Error(`${notInstalled(id)}\\n${useId}`);\n\t\t\t}\n\t\t\tif (extensionToUninstall.type === ExtensionType.System) {\n\t\t\t\tconsole.log(localize('builtin', \"Extension '{0}' is a Built-in extension and cannot be installed\", id));\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (extensionToUninstall.isBuiltin && !force) {\n\t\t\t\tconsole.log(localize('forceUninstall', \"Extension '{0}' is marked as a Built-in extension by user. Please use '--force' option to uninstall it.\", id));\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconsole.log(localize('uninstalling', \"Uninstalling {0}...\", id));\n\t\t\tawait this.extensionManagementService.uninstall(extensionToUninstall, true);\n\t\t\tuninstalledExtensions.push(extensionToUninstall);\n\t\t\tconsole.log(localize('successUninstall', \"Extension '{0}' was successfully uninstalled!\", id));\n\t\t}\n\n\t\tif (uninstalledExtensions.some(e => isLanguagePackExtension(e.manifest))) {\n\t\t\tawait this.updateLocalizationsCache();\n\t\t}\n\t}\n\n\tprivate async locateExtension(extensions: string[]): Promise<void> {\n\t\tconst installed = await this.extensionManagementService.getInstalled();\n\t\textensions.forEach(e => {\n\t\t\tinstalled.forEach(i => {\n\t\t\t\tif (i.identifier.id === e) {\n\t\t\t\t\tif (i.location.scheme === Schemas.file) {\n\t\t\t\t\t\tconsole.log(i.location.fsPath);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate async updateLocalizationsCache(): Promise<void> {\n\t\tconst localizationService = this.instantiationService.createInstance(LocalizationsService);\n\t\tawait localizationService.update();\n\t\tlocalizationService.dispose();\n\t}\n}\n\nconst eventPrefix = 'monacoworkbench';\n\nexport async function main(argv: NativeParsedArgs): Promise<void> {\n\tconst services = new ServiceCollection();\n\tconst disposables = new DisposableStore();\n\n\tconst environmentService = new NativeEnvironmentService(argv);\n\tconst logService: ILogService = new SpdLogService('cli', environmentService.logsPath, getLogLevel(environmentService));\n\tprocess.once('exit', () => logService.dispose());\n\tlogService.info('main', argv);\n\n\tawait Promise.all<void | undefined>([environmentService.appSettingsHome.fsPath, environmentService.extensionsPath]\n\t\t.map((path): undefined | Promise<void> => path ? mkdirp(path) : undefined));\n\n\t// Files\n\tconst fileService = new FileService(logService);\n\tdisposables.add(fileService);\n\tservices.set(IFileService, fileService);\n\n\tconst diskFileSystemProvider = new DiskFileSystemProvider(logService);\n\tdisposables.add(diskFileSystemProvider);\n\tfileService.registerProvider(Schemas.file, diskFileSystemProvider);\n\n\tconst configurationService = new ConfigurationService(environmentService.settingsResource, fileService);\n\tdisposables.add(configurationService);\n\tawait configurationService.initialize();\n\n\tservices.set(IEnvironmentService, environmentService);\n\tservices.set(INativeEnvironmentService, environmentService);\n\n\tservices.set(ILogService, logService);\n\tservices.set(IConfigurationService, configurationService);\n\tservices.set(IStateService, new SyncDescriptor(StateService));\n\tservices.set(IProductService, { _serviceBrand: undefined, ...product });\n\n\tconst instantiationService: IInstantiationService = new InstantiationService(services);\n\n\treturn instantiationService.invokeFunction(async accessor => {\n\t\tconst stateService = accessor.get(IStateService);\n\n\t\tconst { appRoot, extensionsPath, extensionDevelopmentLocationURI, isBuilt, installSourcePath } = environmentService;\n\n\t\tconst services = new ServiceCollection();\n\t\tservices.set(IRequestService, new SyncDescriptor(RequestService));\n\t\tservices.set(IExtensionManagementService, new SyncDescriptor(ExtensionManagementService));\n\t\tservices.set(IExtensionGalleryService, new SyncDescriptor(ExtensionGalleryService));\n\n\t\tconst appenders: AppInsightsAppender[] = [];\n\t\tif (isBuilt && !extensionDevelopmentLocationURI && !environmentService.disableTelemetry && product.enableTelemetry) {\n\t\t\tif (product.aiConfig && product.aiConfig.asimovKey) {\n\t\t\t\tappenders.push(new AppInsightsAppender(eventPrefix, null, product.aiConfig.asimovKey));\n\t\t\t}\n\n\t\t\tconst config: ITelemetryServiceConfig = {\n\t\t\t\tappender: combinedAppender(...appenders),\n\t\t\t\tsendErrorTelemetry: false,\n\t\t\t\tcommonProperties: resolveCommonProperties(product.commit, product.version, stateService.getItem('telemetry.machineId'), product.msftInternalDomains, installSourcePath),\n\t\t\t\tpiiPaths: extensionsPath ? [appRoot, extensionsPath] : [appRoot]\n\t\t\t};\n\n\t\t\tservices.set(ITelemetryService, new SyncDescriptor(TelemetryService, [config]));\n\n\t\t} else {\n\t\t\tservices.set(ITelemetryService, NullTelemetryService);\n\t\t}\n\n\t\tconst instantiationService2 = instantiationService.createChild(services);\n\t\tconst main = instantiationService2.createInstance(Main);\n\n\t\ttry {\n\t\t\tawait main.run(argv);\n\n\t\t\t// Flush the remaining data in AI adapter.\n\t\t\t// If it does not complete in 1 second, exit the process.\n\t\t\tawait raceTimeout(combinedAppender(...appenders).flush(), 1000);\n\t\t} finally {\n\t\t\tdisposables.dispose();\n\t\t}\n\t});\n}\n","import { field } from '@coder/logger';\nimport * as fs from 'fs';\nimport * as net from 'net';\nimport * as path from 'path';\nimport { Emitter } from 'vs/base/common/event';\nimport { Schemas } from 'vs/base/common/network';\nimport { URI } from 'vs/base/common/uri';\nimport { getMachineId } from 'vs/base/node/id';\nimport { ClientConnectionEvent, createChannelReceiver, IPCServer, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { LogsDataCleaner } from 'vs/code/electron-browser/sharedProcess/contrib/logsDataCleaner';\nimport { main } from 'vs/code/node/cliProcessMain';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ConfigurationService } from 'vs/platform/configuration/common/configurationService';\nimport { ExtensionHostDebugBroadcastChannel } from 'vs/platform/debug/common/extensionHostDebugIpc';\nimport { NativeParsedArgs } from 'vs/platform/environment/common/argv';\nimport { IEnvironmentService, INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { NativeEnvironmentService } from 'vs/platform/environment/node/environmentService';\nimport { ExtensionGalleryService } from 'vs/platform/extensionManagement/common/extensionGalleryService';\nimport { IExtensionGalleryService, IExtensionManagementService } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { ExtensionManagementChannel } from 'vs/platform/extensionManagement/common/extensionManagementIpc';\nimport { ExtensionManagementService } from 'vs/platform/extensionManagement/node/extensionManagementService';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { FileService } from 'vs/platform/files/common/fileService';\nimport { DiskFileSystemProvider } from 'vs/platform/files/node/diskFileSystemProvider';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { InstantiationService } from 'vs/platform/instantiation/common/instantiationService';\nimport { ServiceCollection } from 'vs/platform/instantiation/common/serviceCollection';\nimport { ILocalizationsService } from 'vs/platform/localizations/common/localizations';\nimport { LocalizationsService } from 'vs/platform/localizations/node/localizations';\nimport { getLogLevel, ILoggerService, ILogService } from 'vs/platform/log/common/log';\nimport { LoggerChannel } from 'vs/platform/log/common/logIpc';\nimport { LoggerService } from 'vs/platform/log/node/loggerService';\nimport { SpdLogService } from 'vs/platform/log/node/spdlogService';\nimport product from 'vs/platform/product/common/product';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { ConnectionType, ConnectionTypeRequest } from 'vs/platform/remote/common/remoteAgentConnection';\nimport { RemoteAgentConnectionContext } from 'vs/platform/remote/common/remoteAgentEnvironment';\nimport { IRequestService } from 'vs/platform/request/common/request';\nimport { RequestChannel } from 'vs/platform/request/common/requestIpc';\nimport { RequestService } from 'vs/platform/request/node/requestService';\nimport ErrorTelemetry from 'vs/platform/telemetry/browser/errorTelemetry';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { TelemetryLogAppender } from 'vs/platform/telemetry/common/telemetryLogAppender';\nimport { TelemetryService } from 'vs/platform/telemetry/common/telemetryService';\nimport { combinedAppender, NullTelemetryService } from 'vs/platform/telemetry/common/telemetryUtils';\nimport { AppInsightsAppender } from 'vs/platform/telemetry/node/appInsightsAppender';\nimport { resolveCommonProperties } from 'vs/platform/telemetry/node/commonProperties';\nimport { INodeProxyService, NodeProxyChannel } from 'vs/server/common/nodeProxy';\nimport { TelemetryChannel } from 'vs/server/common/telemetry';\nimport { Query, VscodeOptions, WorkbenchOptions } from 'vs/server/ipc';\nimport { ExtensionEnvironmentChannel, FileProviderChannel, NodeProxyService, TerminalProviderChannel } from 'vs/server/node/channel';\nimport { Connection, ExtensionHostConnection, ManagementConnection } from 'vs/server/node/connection';\nimport { TelemetryClient } from 'vs/server/node/insights';\nimport { logger } from 'vs/server/node/logger';\nimport { getLocaleFromConfig, getNlsConfiguration } from 'vs/server/node/nls';\nimport { Protocol } from 'vs/server/node/protocol';\nimport { getUriTransformer } from 'vs/server/node/util';\nimport { REMOTE_TERMINAL_CHANNEL_NAME } from 'vs/workbench/contrib/terminal/common/remoteTerminalChannel';\nimport { REMOTE_FILE_SYSTEM_CHANNEL_NAME } from 'vs/workbench/services/remote/common/remoteAgentFileSystemChannel';\nimport { RemoteExtensionLogFileName } from 'vs/workbench/services/remote/common/remoteAgentService';\nimport { localize } from 'vs/nls';\n\nexport class Vscode {\n\tpublic readonly _onDidClientConnect = new Emitter<ClientConnectionEvent>();\n\tpublic readonly onDidClientConnect = this._onDidClientConnect.event;\n\tprivate readonly ipc = new IPCServer<RemoteAgentConnectionContext>(this.onDidClientConnect);\n\n\tprivate readonly maxExtraOfflineConnections = 0;\n\tprivate readonly connections = new Map<ConnectionType, Map<string, Connection>>();\n\n\tprivate readonly services = new ServiceCollection();\n\tprivate servicesPromise?: Promise<void>;\n\n\tpublic async cli(args: NativeParsedArgs): Promise<void> {\n\t\treturn main(args);\n\t}\n\n\tpublic async initialize(options: VscodeOptions): Promise<WorkbenchOptions> {\n\t\tconst transformer = getUriTransformer(options.remoteAuthority);\n\t\tif (!this.servicesPromise) {\n\t\t\tthis.servicesPromise = this.initializeServices(options.args);\n\t\t}\n\t\tawait this.servicesPromise;\n\t\tconst environment = this.services.get(IEnvironmentService) as INativeEnvironmentService;\n\t\tconst startPath = options.startPath;\n\t\tconst parseUrl = (url: string): URI => {\n\t\t\t// This might be a fully-specified URL or just a path.\n\t\t\ttry {\n\t\t\t\treturn URI.parse(url, true);\n\t\t\t} catch (error) {\n\t\t\t\treturn URI.from({\n\t\t\t\t\tscheme: Schemas.vscodeRemote,\n\t\t\t\t\tauthority: options.remoteAuthority,\n\t\t\t\t\tpath: url,\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t\treturn {\n\t\t\tworkbenchWebConfiguration: {\n\t\t\t\tworkspaceUri: startPath && startPath.workspace ? parseUrl(startPath.url) : undefined,\n\t\t\t\tfolderUri: startPath && !startPath.workspace ? parseUrl(startPath.url) : undefined,\n\t\t\t\tremoteAuthority: options.remoteAuthority,\n\t\t\t\tlogLevel: getLogLevel(environment),\n\t\t\t\tworkspaceProvider: {\n\t\t\t\t\tpayload: [\n\t\t\t\t\t\t['userDataPath', environment.userDataPath],\n\t\t\t\t\t\t['enableProposedApi', JSON.stringify(options.args['enable-proposed-api'] || [])]\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\thomeIndicator: {\n\t\t\t\t\thref: options.args.home || 'https://github.com/cdr/code-server',\n\t\t\t\t\ticon: 'code',\n\t\t\t\t\ttitle: localize('home', \"Home\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tremoteUserDataUri: transformer.transformOutgoing(URI.file(environment.userDataPath)),\n\t\t\tproductConfiguration: product,\n\t\t\tnlsConfiguration: await getNlsConfiguration(environment.args.locale || await getLocaleFromConfig(environment.userDataPath), environment.userDataPath),\n\t\t\tcommit: product.commit || 'development',\n\t\t};\n\t}\n\n\tpublic async handleWebSocket(socket: net.Socket, query: Query): Promise<true> {\n\t\tif (!query.reconnectionToken) {\n\t\t\tthrow new Error('Reconnection token is missing from query parameters');\n\t\t}\n\t\tconst protocol = new Protocol(socket, {\n\t\t\treconnectionToken: <string>query.reconnectionToken,\n\t\t\treconnection: query.reconnection === 'true',\n\t\t\tskipWebSocketFrames: query.skipWebSocketFrames === 'true',\n\t\t});\n\t\ttry {\n\t\t\tawait this.connect(await protocol.handshake(), protocol);\n\t\t} catch (error) {\n\t\t\tprotocol.sendMessage({ type: 'error', reason: error.message });\n\t\t\tprotocol.dispose();\n\t\t\tprotocol.getSocket().dispose();\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate async connect(message: ConnectionTypeRequest, protocol: Protocol): Promise<void> {\n\t\tif (product.commit && message.commit !== product.commit) {\n\t\t\tlogger.warn(`Version mismatch (${message.commit} instead of ${product.commit})`);\n\t\t}\n\n\t\tswitch (message.desiredConnectionType) {\n\t\t\tcase ConnectionType.ExtensionHost:\n\t\t\tcase ConnectionType.Management:\n\t\t\t\tif (!this.connections.has(message.desiredConnectionType)) {\n\t\t\t\t\tthis.connections.set(message.desiredConnectionType, new Map());\n\t\t\t\t}\n\t\t\t\tconst connections = this.connections.get(message.desiredConnectionType)!;\n\n\t\t\t\tconst ok = async () => {\n\t\t\t\t\treturn message.desiredConnectionType === ConnectionType.ExtensionHost\n\t\t\t\t\t\t? { debugPort: await this.getDebugPort() }\n\t\t\t\t\t\t: { type: 'ok' };\n\t\t\t\t};\n\n\t\t\t\tconst token = protocol.options.reconnectionToken;\n\t\t\t\tif (protocol.options.reconnection && connections.has(token)) {\n\t\t\t\t\tprotocol.sendMessage(await ok());\n\t\t\t\t\tconst buffer = protocol.readEntireBuffer();\n\t\t\t\t\tprotocol.dispose();\n\t\t\t\t\treturn connections.get(token)!.reconnect(protocol.getSocket(), buffer);\n\t\t\t\t} else if (protocol.options.reconnection || connections.has(token)) {\n\t\t\t\t\tthrow new Error(protocol.options.reconnection\n\t\t\t\t\t\t? 'Unrecognized reconnection token'\n\t\t\t\t\t\t: 'Duplicate reconnection token'\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tlogger.debug('New connection', field('token', token));\n\t\t\t\tprotocol.sendMessage(await ok());\n\n\t\t\t\tlet connection: Connection;\n\t\t\t\tif (message.desiredConnectionType === ConnectionType.Management) {\n\t\t\t\t\tconnection = new ManagementConnection(protocol, token);\n\t\t\t\t\tthis._onDidClientConnect.fire({\n\t\t\t\t\t\tprotocol, onDidClientDisconnect: connection.onClose,\n\t\t\t\t\t});\n\t\t\t\t\t// TODO: Need a way to match clients with a connection. For now\n\t\t\t\t\t// dispose everything which only works because no extensions currently\n\t\t\t\t\t// utilize long-running proxies.\n\t\t\t\t\t(this.services.get(INodeProxyService) as NodeProxyService)._onUp.fire();\n\t\t\t\t\tconnection.onClose(() => (this.services.get(INodeProxyService) as NodeProxyService)._onDown.fire());\n\t\t\t\t} else {\n\t\t\t\t\tconst buffer = protocol.readEntireBuffer();\n\t\t\t\t\tconnection = new ExtensionHostConnection(\n\t\t\t\t\t\tmessage.args ? message.args.language : 'en',\n\t\t\t\t\t\tprotocol, buffer, token,\n\t\t\t\t\t\tthis.services.get(IEnvironmentService) as INativeEnvironmentService,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tconnections.set(token, connection);\n\t\t\t\tconnection.onClose(() => {\n\t\t\t\t\tlogger.debug('Connection closed', field('token', token));\n\t\t\t\t\tconnections.delete(token);\n\t\t\t\t});\n\t\t\t\tthis.disposeOldOfflineConnections(connections);\n\t\t\t\tbreak;\n\t\t\tcase ConnectionType.Tunnel: return protocol.tunnel();\n\t\t\tdefault: throw new Error('Unrecognized connection type');\n\t\t}\n\t}\n\n\tprivate disposeOldOfflineConnections(connections: Map<string, Connection>): void {\n\t\tconst offline = Array.from(connections.values())\n\t\t\t.filter((connection) => typeof connection.offline !== 'undefined');\n\t\tfor (let i = 0, max = offline.length - this.maxExtraOfflineConnections; i < max; ++i) {\n\t\t\tlogger.debug('Disposing offline connection', field('token', offline[i].token));\n\t\t\toffline[i].dispose();\n\t\t}\n\t}\n\n\tprivate async initializeServices(args: NativeParsedArgs): Promise<void> {\n\t\tconst environmentService = new NativeEnvironmentService(args);\n\t\t// https://github.com/cdr/code-server/issues/1693\n\t\tfs.mkdirSync(environmentService.globalStorageHome.fsPath, { recursive: true });\n\n\t\tconst logService = new SpdLogService(RemoteExtensionLogFileName, environmentService.logsPath, getLogLevel(environmentService));\n\t\tconst fileService = new FileService(logService);\n\t\tfileService.registerProvider(Schemas.file, new DiskFileSystemProvider(logService));\n\n\t\tconst piiPaths = [\n\t\t\tpath.join(environmentService.userDataPath, 'clp'), // Language packs.\n\t\t\tenvironmentService.appRoot,\n\t\t\tenvironmentService.extensionsPath,\n\t\t\tenvironmentService.builtinExtensionsPath,\n\t\t\t...environmentService.extraExtensionPaths,\n\t\t\t...environmentService.extraBuiltinExtensionPaths,\n\t\t];\n\n\t\tthis.ipc.registerChannel('logger', new LoggerChannel(logService));\n\t\tthis.ipc.registerChannel(ExtensionHostDebugBroadcastChannel.ChannelName, new ExtensionHostDebugBroadcastChannel());\n\n\t\tthis.services.set(ILogService, logService);\n\t\tthis.services.set(IEnvironmentService, environmentService);\n\t\tthis.services.set(INativeEnvironmentService, environmentService);\n\t\tthis.services.set(ILoggerService, new SyncDescriptor(LoggerService));\n\n\t\tconst configurationService = new ConfigurationService(environmentService.settingsResource, fileService);\n\t\tawait configurationService.initialize();\n\t\tthis.services.set(IConfigurationService, configurationService);\n\n\t\tthis.services.set(IRequestService, new SyncDescriptor(RequestService));\n\t\tthis.services.set(IFileService, fileService);\n\t\tthis.services.set(IProductService, { _serviceBrand: undefined, ...product });\n\n\t\tconst machineId = await getMachineId();\n\n\t\tawait new Promise((resolve) => {\n\t\t\tconst instantiationService = new InstantiationService(this.services);\n\n\t\t\tinstantiationService.invokeFunction((accessor) => {\n\t\t\t\tinstantiationService.createInstance(LogsDataCleaner);\n\n\t\t\t\tlet telemetryService: ITelemetryService;\n\t\t\t\tif (!environmentService.disableTelemetry) {\n\t\t\t\t\ttelemetryService = new TelemetryService({\n\t\t\t\t\t\tappender: combinedAppender(\n\t\t\t\t\t\t\tnew AppInsightsAppender('code-server', null, () => new TelemetryClient() as any),\n\t\t\t\t\t\t\tnew TelemetryLogAppender(accessor.get(ILoggerService), environmentService)\n\t\t\t\t\t\t),\n\t\t\t\t\t\tsendErrorTelemetry: true,\n\t\t\t\t\t\tcommonProperties: resolveCommonProperties(\n\t\t\t\t\t\t\tproduct.commit, product.version, machineId,\n\t\t\t\t\t\t\t[], environmentService.installSourcePath, 'code-server',\n\t\t\t\t\t\t),\n\t\t\t\t\t\tpiiPaths,\n\t\t\t\t\t}, configurationService);\n\t\t\t\t} else {\n\t\t\t\t\ttelemetryService = NullTelemetryService;\n\t\t\t\t}\n\n\t\t\t\tthis.services.set(ITelemetryService, telemetryService);\n\n\t\t\t\tthis.services.set(IExtensionManagementService, new SyncDescriptor(ExtensionManagementService));\n\t\t\t\tthis.services.set(IExtensionGalleryService, new SyncDescriptor(ExtensionGalleryService));\n\t\t\t\tthis.services.set(ILocalizationsService, new SyncDescriptor(LocalizationsService));\n\t\t\t\tthis.services.set(INodeProxyService, new SyncDescriptor(NodeProxyService));\n\n\t\t\t\tthis.ipc.registerChannel('extensions', new ExtensionManagementChannel(\n\t\t\t\t\taccessor.get(IExtensionManagementService),\n\t\t\t\t\t(context) => getUriTransformer(context.remoteAuthority),\n\t\t\t\t));\n\t\t\t\tthis.ipc.registerChannel('remoteextensionsenvironment', new ExtensionEnvironmentChannel(\n\t\t\t\t\tenvironmentService, logService, telemetryService, '',\n\t\t\t\t));\n\t\t\t\tthis.ipc.registerChannel('request', new RequestChannel(accessor.get(IRequestService)));\n\t\t\t\tthis.ipc.registerChannel('telemetry', new TelemetryChannel(telemetryService));\n\t\t\t\tthis.ipc.registerChannel('nodeProxy', new NodeProxyChannel(accessor.get(INodeProxyService)));\n\t\t\t\tthis.ipc.registerChannel('localizations', <IServerChannel<any>>createChannelReceiver(accessor.get(ILocalizationsService)));\n\t\t\t\tthis.ipc.registerChannel(REMOTE_FILE_SYSTEM_CHANNEL_NAME, new FileProviderChannel(environmentService, logService));\n\t\t\t\tthis.ipc.registerChannel(REMOTE_TERMINAL_CHANNEL_NAME, new TerminalProviderChannel(logService));\n\t\t\t\tresolve(new ErrorTelemetry(telemetryService));\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * TODO: implement.\n\t */\n\tprivate async getDebugPort(): Promise<number | undefined> {\n\t\treturn undefined;\n\t}\n}\n","import { field } from '@coder/logger';\nimport { setUnexpectedErrorHandler } from 'vs/base/common/errors';\nimport { CodeServerMessage, VscodeMessage } from 'vs/server/ipc';\nimport { logger } from 'vs/server/node/logger';\nimport { enableCustomMarketplace } from 'vs/server/node/marketplace';\nimport { Vscode } from 'vs/server/node/server';\nimport * as proxyAgent from 'vs/base/node/proxy_agent';\n\nsetUnexpectedErrorHandler((error) => logger.warn(error instanceof Error ? error.message : error));\nenableCustomMarketplace();\nproxyAgent.monkeyPatch(true);\n\n/**\n * Ensure we control when the process exits.\n */\nconst exit = process.exit;\nprocess.exit = function(code?: number) {\n\tlogger.warn(`process.exit() was prevented: ${code || 'unknown code'}.`);\n} as (code?: number) => never;\n\n// Kill VS Code if the parent process dies.\nif (typeof process.env.CODE_SERVER_PARENT_PID !== 'undefined') {\n\tconst parentPid = parseInt(process.env.CODE_SERVER_PARENT_PID, 10);\n\tsetInterval(() => {\n\t\ttry {\n\t\t\tprocess.kill(parentPid, 0); // Throws an exception if the process doesn't exist anymore.\n\t\t} catch (e) {\n\t\t\texit();\n\t\t}\n\t}, 5000);\n} else {\n\tlogger.error('no parent process');\n\texit(1);\n}\n\nconst vscode = new Vscode();\nconst send = (message: VscodeMessage): void => {\n\tif (!process.send) {\n\t\tthrow new Error('not spawned with IPC');\n\t}\n\tprocess.send(message);\n};\n\n// Wait for the init message then start up VS Code. Subsequent messages will\n// return new workbench options without starting a new instance.\nprocess.on('message', async (message: CodeServerMessage, socket) => {\n\tlogger.debug('got message from code-server', field('type', message.type));\n\tlogger.trace('code-server message content', field('message', message));\n\tswitch (message.type) {\n\t\tcase 'init':\n\t\t\ttry {\n\t\t\t\tconst options = await vscode.initialize(message.options);\n\t\t\t\tsend({ type: 'options', id: message.id, options });\n\t\t\t} catch (error) {\n\t\t\t\tlogger.error(error.message);\n\t\t\t\tlogger.error(error.stack);\n\t\t\t\texit(1);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'cli':\n\t\t\ttry {\n\t\t\t\tawait vscode.cli(message.args);\n\t\t\t\texit(0);\n\t\t\t} catch (error) {\n\t\t\t\tlogger.error(error.message);\n\t\t\t\tlogger.error(error.stack);\n\t\t\t\texit(1);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'socket':\n\t\t\tvscode.handleWebSocket(socket, message.query);\n\t\t\tbreak;\n\t}\n});\nif (!process.send) {\n\tlogger.error('not spawned with IPC');\n\texit(1);\n} else {\n\t// This lets the parent know the child is ready to receive messages.\n\tsend({ type: 'ready' });\n}\n"]}